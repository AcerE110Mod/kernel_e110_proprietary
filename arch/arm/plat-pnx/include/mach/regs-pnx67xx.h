/*
 * linux/arch/arm/plat-u6/include/mach/regs-pnx67xx.h
 *
 *  Author:     Philippe Langlais
 *  Created:    Mar, 6 2010
 *  Copyright (C) 2010 ST-Ericsson
 *
 * Registers definition for PNX67XX CPU
 *
 * File auto generated from file "sc_prism2_hw_auto.h"
 *
 * This program is free software; you can redistribute it and/or modify
 * it under the terms of the GNU General Public License version 2 as
 * published by the Free Software Foundation.
 */

#if ! defined(__REGS_PNX67XX_H__)
#define __REGS_PNX67XX_H__

#define	IOA		IO_ADDRESS


/*****************************************************************************
* Definitions for
*- SC device base address table
****************************************************************************/

#define BSG_BASE_ADDR                  0xC2103000
#define CAE_BASE_ADDR                  0xC3009000
#define CAM_BASE_ADDR                  0xC2800000
#define CGU_BASE_ADDR                  0xC3200000
#define DMAU_BASE_ADDR                 0xC1000000
#define EBI_BASE_ADDR                  0xC3001000
#define EXTINT_BASE_ADDR               0xC3105000
#define FCI_BASE_ADDR                  0xC3008000
#define FRU2_BASE_ADDR                 0xC3206000
#define GPIOA_BASE_ADDR                0xC3104000
#define GPIOB_BASE_ADDR                0xC3104200
#define GPIOC_BASE_ADDR                0xC3104400
#define GPIOD_BASE_ADDR                0xC3104600
#define GPIOE_BASE_ADDR                0xC3104800
#define GPIOF_BASE_ADDR                0xC3104A00
#define I2C1_BASE_ADDR                 0xC310C000
#define I2C2_BASE_ADDR                 0xC310D000
#define INTC_BASE_ADDR                 0xC1100000
#define IPP2_BASE_ADDR                 0xC2200000
#define JDU_BASE_ADDR                  0xC2300000
#define KBS_BASE_ADDR                  0xC3106000
#define ME_BASE_ADDR                   0xC2101034
#define MTU_BASE_ADDR                  0xC3101000
#define NFI_BASE_ADDR                  0xC1300000
#define PAK_BASE_ADDR                  0xC2100000
#define PDCU_BASE_ADDR                 0xC3202000
#define PWM1_BASE_ADDR                 0xC3108000
#define PWM2_BASE_ADDR                 0xC3109000
#define PWM3_BASE_ADDR                 0xC310A000
#define SCON_BASE_ADDR                 0xC3204000
#define SCTU1_BASE_ADDR                0xC3102000
#define SCTU2_BASE_ADDR                0xC3103000
#define SDI_BASE_ADDR                  0xC1200000
#define SPI1_BASE_ADDR                 0xC3002000
#define SPI2_BASE_ADDR                 0xC3003000
#define TBU_BASE_ADDR                  0xC3201000
#define TC_BASE_ADDR                   0xC2102000
#define TVO_BASE_ADDR                  0xC2400000
#define UART1_BASE_ADDR                0xC310E000
#define UART2_BASE_ADDR                0xC310F000
#define USB_BASE_ADDR                  0xC1400000
#define VDC_BASE_ADDR                  0xC2000000
#define VDE_BASE_ADDR                  0xC1500000
#define VEC_BASE_ADDR                  0xC2100000
#define WDRU_BASE_ADDR                 0xC3203000
#define DPRAM2_BASE_ADDR               0xC4300000




/*****************************************************************************
* Definitions for: BSG
*****************************************************************************/

/* Pointer on base address */
#define BSG_BASE                       IOA(BSG_BASE_ADDR)

/* BSG SOFT_RESET Register (32 bits) */
#define BSG_SOFT_RESET_OFFSET          0x0
#define BSG_SOFT_RESET_REG             IOA(BSG_BASE_ADDR + BSG_SOFT_RESET_OFFSET)

/* BSG MV_NB_PTR Register (32 bits) */
#define BSG_MV_NB_PTR_OFFSET           0x8
#define BSG_MV_NB_PTR_REG              IOA(BSG_BASE_ADDR + BSG_MV_NB_PTR_OFFSET)

/* BSG MV_CURR_PTR Register (32 bits) */
#define BSG_MV_CURR_PTR_OFFSET         0x10
#define BSG_MV_CURR_PTR_REG            IOA(BSG_BASE_ADDR + BSG_MV_CURR_PTR_OFFSET)

/* BSG MV_BASE Register (32 bits) */
#define BSG_MV_BASE_OFFSET             0x18
#define BSG_MV_BASE_REG                IOA(BSG_BASE_ADDR + BSG_MV_BASE_OFFSET)

/* BSG MV_END Register (32 bits) */
#define BSG_MV_END_OFFSET              0x20
#define BSG_MV_END_REG                 IOA(BSG_BASE_ADDR + BSG_MV_END_OFFSET)

/* BSG FB1_PTR Register (32 bits) */
#define BSG_FB1_PTR_OFFSET             0x28
#define BSG_FB1_PTR_REG                IOA(BSG_BASE_ADDR + BSG_FB1_PTR_OFFSET)

/* BSG FB2_PTR Register (32 bits) */
#define BSG_FB2_PTR_OFFSET             0x30
#define BSG_FB2_PTR_REG                IOA(BSG_BASE_ADDR + BSG_FB2_PTR_OFFSET)

/* BSG FB3_PTR Register (32 bits) */
#define BSG_FB3_PTR_OFFSET             0x38
#define BSG_FB3_PTR_REG                IOA(BSG_BASE_ADDR + BSG_FB3_PTR_OFFSET)

/* BSG FB4_PTR Register (32 bits) */
#define BSG_FB4_PTR_OFFSET             0x40
#define BSG_FB4_PTR_REG                IOA(BSG_BASE_ADDR + BSG_FB4_PTR_OFFSET)

/* BSG SEGM_POS_START_HOR Register (32 bits) */
#define BSG_SEGM_POS_START_HOR_OFFSET  0x80
#define BSG_SEGM_POS_START_HOR_REG     IOA(BSG_BASE_ADDR + BSG_SEGM_POS_START_HOR_OFFSET)

/* BSG SEGM_POS_START_VER Register (32 bits) */
#define BSG_SEGM_POS_START_VER_OFFSET  0x88
#define BSG_SEGM_POS_START_VER_REG     IOA(BSG_BASE_ADDR + BSG_SEGM_POS_START_VER_OFFSET)

/* BSG SEGM_MB_SIZE Register (32 bits) */
#define BSG_SEGM_MB_SIZE_OFFSET        0x90
#define BSG_SEGM_MB_SIZE_REG           IOA(BSG_BASE_ADDR + BSG_SEGM_MB_SIZE_OFFSET)

/* BSG FRAME_MB_WIDTH Register (32 bits) */
#define BSG_FRAME_MB_WIDTH_OFFSET      0x98
#define BSG_FRAME_MB_WIDTH_REG         IOA(BSG_BASE_ADDR + BSG_FRAME_MB_WIDTH_OFFSET)

/* BSG PACKET_POS_START_HOR Register (32 bits) */
#define BSG_PACKET_POS_START_HOR_OFFSET            0xA0
#define BSG_PACKET_POS_START_HOR_REG   IOA(BSG_BASE_ADDR + BSG_PACKET_POS_START_HOR_OFFSET)

/* BSG PACKET_POS_START_VER Register (32 bits) */
#define BSG_PACKET_POS_START_VER_OFFSET            0xA8
#define BSG_PACKET_POS_START_VER_REG   IOA(BSG_BASE_ADDR + BSG_PACKET_POS_START_VER_OFFSET)

/* BSG MAX_BITS_SEGM Register (32 bits) */
#define BSG_MAX_BITS_SEGM_OFFSET       0xB0
#define BSG_MAX_BITS_SEGM_REG          IOA(BSG_BASE_ADDR + BSG_MAX_BITS_SEGM_OFFSET)

/* BSG MAX_BITS_PACKET Register (32 bits) */
#define BSG_MAX_BITS_PACKET_OFFSET     0xB8
#define BSG_MAX_BITS_PACKET_REG        IOA(BSG_BASE_ADDR + BSG_MAX_BITS_PACKET_OFFSET)

/* BSG VOP_FCODE_FWD Register (32 bits) */
#define BSG_VOP_FCODE_FWD_OFFSET       0xC0
#define BSG_VOP_FCODE_FWD_REG          IOA(BSG_BASE_ADDR + BSG_VOP_FCODE_FWD_OFFSET)

/* BSG SHORT_HEADER Register (32 bits) */
#define BSG_SHORT_HEADER_OFFSET        0xC8
#define BSG_SHORT_HEADER_REG           IOA(BSG_BASE_ADDR + BSG_SHORT_HEADER_OFFSET)

/* BSG DATA_PARTITIONING Register (32 bits) */
#define BSG_DATA_PARTITIONING_OFFSET   0xD0
#define BSG_DATA_PARTITIONING_REG      IOA(BSG_BASE_ADDR + BSG_DATA_PARTITIONING_OFFSET)

/* BSG INTRA_DC_VLC_THRESH Register (32 bits) */
#define BSG_INTRA_DC_VLC_THRESH_OFFSET 0xD8
#define BSG_INTRA_DC_VLC_THRESH_REG    IOA(BSG_BASE_ADDR + BSG_INTRA_DC_VLC_THRESH_OFFSET)

/* BSG VOP_TYPE Register (32 bits) */
#define BSG_VOP_TYPE_OFFSET            0xE0
#define BSG_VOP_TYPE_REG               IOA(BSG_BASE_ADDR + BSG_VOP_TYPE_OFFSET)

/* BSG NO_BITS_HDR Register (32 bits) */
#define BSG_NO_BITS_HDR_OFFSET         0xE8
#define BSG_NO_BITS_HDR_REG            IOA(BSG_BASE_ADDR + BSG_NO_BITS_HDR_OFFSET)

/* BSG NO_BITS_COEFF Register (32 bits) */
#define BSG_NO_BITS_COEFF_OFFSET       0xF0
#define BSG_NO_BITS_COEFF_REG          IOA(BSG_BASE_ADDR + BSG_NO_BITS_COEFF_OFFSET)

/* BSG NO_BITS_PACKET Register (32 bits) */
#define BSG_NO_BITS_PACKET_OFFSET      0xF8
#define BSG_NO_BITS_PACKET_REG         IOA(BSG_BASE_ADDR + BSG_NO_BITS_PACKET_OFFSET)

/* BSG START Register (32 bits) */
#define BSG_START_OFFSET               0x100
#define BSG_START_REG                  IOA(BSG_BASE_ADDR + BSG_START_OFFSET)

/* BSG FORCE_SHADOW Register (32 bits) */
#define BSG_FORCE_SHADOW_OFFSET        0x108
#define BSG_FORCE_SHADOW_REG           IOA(BSG_BASE_ADDR + BSG_FORCE_SHADOW_OFFSET)

/* BSG RUNNING Register (32 bits) */
#define BSG_RUNNING_OFFSET             0x110
#define BSG_RUNNING_REG                IOA(BSG_BASE_ADDR + BSG_RUNNING_OFFSET)

/* BSG CURR_MB_POS_HOR Register (32 bits) */
#define BSG_CURR_MB_POS_HOR_OFFSET     0x118
#define BSG_CURR_MB_POS_HOR_REG        IOA(BSG_BASE_ADDR + BSG_CURR_MB_POS_HOR_OFFSET)

/* BSG CURR_MB_POS_VER Register (32 bits) */
#define BSG_CURR_MB_POS_VER_OFFSET     0x120
#define BSG_CURR_MB_POS_VER_REG        IOA(BSG_BASE_ADDR + BSG_CURR_MB_POS_VER_OFFSET)

/* BSG VOP_FCODE_BWD Register (32 bits) */
#define BSG_VOP_FCODE_BWD_OFFSET       0x128
#define BSG_VOP_FCODE_BWD_REG          IOA(BSG_BASE_ADDR + BSG_VOP_FCODE_BWD_OFFSET)

/* BSG DISABLE_SWITCH_TAB0 Register (32 bits) */
#define BSG_DISABLE_SWITCH_TAB0_OFFSET 0x140
#define BSG_DISABLE_SWITCH_TAB0_REG    IOA(BSG_BASE_ADDR + BSG_DISABLE_SWITCH_TAB0_OFFSET)

/* BSG FIXED_PACKET_SIZE Register (32 bits) */
#define BSG_FIXED_PACKET_SIZE_OFFSET   0x148
#define BSG_FIXED_PACKET_SIZE_REG      IOA(BSG_BASE_ADDR + BSG_FIXED_PACKET_SIZE_OFFSET)

/* BSG ENABLE_CLR Register (32 bits) */
#define BSG_ENABLE_CLR_OFFSET          0xFD8
#define BSG_ENABLE_CLR_REG             IOA(BSG_BASE_ADDR + BSG_ENABLE_CLR_OFFSET)

/* BSG ENABLE_SET Register (32 bits) */
#define BSG_ENABLE_SET_OFFSET          0xFDC
#define BSG_ENABLE_SET_REG             IOA(BSG_BASE_ADDR + BSG_ENABLE_SET_OFFSET)

/* BSG ENABLE Register (32 bits) */
#define BSG_ENABLE_OFFSET              0xFE0
#define BSG_ENABLE_REG                 IOA(BSG_BASE_ADDR + BSG_ENABLE_OFFSET)

/* BSG STATUS Register (32 bits) */
#define BSG_STATUS_OFFSET              0xFE4
#define BSG_STATUS_REG                 IOA(BSG_BASE_ADDR + BSG_STATUS_OFFSET)

/* BSG STATUS_CLR Register (32 bits) */
#define BSG_STATUS_CLR_OFFSET          0xFE8
#define BSG_STATUS_CLR_REG             IOA(BSG_BASE_ADDR + BSG_STATUS_CLR_OFFSET)

/* BSG STATUS_SET Register (32 bits) */
#define BSG_STATUS_SET_OFFSET          0xFEC
#define BSG_STATUS_SET_REG             IOA(BSG_BASE_ADDR + BSG_STATUS_SET_OFFSET)

/* BSG MODULE_ID Register (32 bits) */
#define BSG_MODULE_ID_OFFSET           0xFFC
#define BSG_MODULE_ID_REG              IOA(BSG_BASE_ADDR + BSG_MODULE_ID_OFFSET)

/* Register description for START */

/* Reset value of register BSG_START */
#define BSG_START_VALUE                0x0

/* Bits definition for register BSG_START */
#define BSG_BSG_START_SHIFT            0
#define BSG_BSG_START_FIELD            (0xFFFFFFFF - (0x1UL<<BSG_BSG_START_SHIFT))
#define BSG_BSG_START_0                (0x0UL<<BSG_BSG_START_SHIFT)
#define BSG_BSG_START_1                (0x1UL<<BSG_BSG_START_SHIFT)
#define BSG_BSG_START                  (0x1UL<<BSG_BSG_START_SHIFT)

/*****************************************************************************/
/* Register description for SOFT_RESET */

/* Reset value of register BSG_SOFT_RESET */
#define BSG_SOFT_RESET_VALUE           0x0

/* Bits definition for register BSG_SOFT_RESET */
#define BSG_BSG_SOFT_RESET_SHIFT       0
#define BSG_BSG_SOFT_RESET_FIELD       (0xFFFFFFFF - (0x1UL<<BSG_BSG_SOFT_RESET_SHIFT))
#define BSG_BSG_SOFT_RESET_0           (0x0UL<<BSG_BSG_SOFT_RESET_SHIFT)
#define BSG_BSG_SOFT_RESET_1           (0x1UL<<BSG_BSG_SOFT_RESET_SHIFT)
#define BSG_BSG_SOFT_RESET             (0x1UL<<BSG_BSG_SOFT_RESET_SHIFT)

/*****************************************************************************/
/* Register description for FORCE_SHADOW */

/* Reset value of register BSG_FORCE_SHADOW */
#define BSG_FORCE_SHADOW_VALUE         0x0

/* Bits definition for register BSG_FORCE_SHADOW */
#define BSG_BSG_FORCE_SHADOW_SHIFT     0
#define BSG_BSG_FORCE_SHADOW_FIELD     (0xFFFFFFFF - (0x1UL<<BSG_BSG_FORCE_SHADOW_SHIFT))
#define BSG_BSG_FORCE_SHADOW_0         (0x0UL<<BSG_BSG_FORCE_SHADOW_SHIFT)
#define BSG_BSG_FORCE_SHADOW_1         (0x1UL<<BSG_BSG_FORCE_SHADOW_SHIFT)
#define BSG_BSG_FORCE_SHADOW           (0x1UL<<BSG_BSG_FORCE_SHADOW_SHIFT)

/*****************************************************************************/
/* Register description for RUNNING */

/* Reset value of register BSG_RUNNING */
#define BSG_RUNNING_VALUE              0x0

/* Bits definition for register BSG_RUNNING */
#define BSG_BSG_RUNNING_SHIFT          0
#define BSG_BSG_RUNNING_FIELD          (0xFFFFFFFF - (0x1UL<<BSG_BSG_RUNNING_SHIFT))
#define BSG_BSG_RUNNING_1              (0x1UL<<BSG_BSG_RUNNING_SHIFT)
#define BSG_BSG_RUNNING_0              (0x0UL<<BSG_BSG_RUNNING_SHIFT)
#define BSG_BSG_RUNNING                (0x1UL<<BSG_BSG_RUNNING_SHIFT)

/*****************************************************************************/
/* Register description for MV_BASE */

/* Reset value of register BSG_MV_BASE */
#define BSG_MV_BASE_VALUE              0x0

/* Bits definition for register BSG_MV_BASE */
#define BSG_BSG_MV_BASE_SHIFT          4
#define BSG_BSG_MV_BASE_FIELD          (0xFFFFFFFF - (0xFFFFFFFUL<<BSG_BSG_MV_BASE_SHIFT))

/*****************************************************************************/
/* Register description for MV_END */

/* Reset value of register BSG_MV_END */
#define BSG_MV_END_VALUE               0x0

/* Bits definition for register BSG_MV_END */
#define BSG_BSG_MV_END_SHIFT           4
#define BSG_BSG_MV_END_FIELD           (0xFFFFFFFF - (0xFFFFFFFUL<<BSG_BSG_MV_END_SHIFT))

/*****************************************************************************/
/* Register description for MV_CURR_PTR */

/* Reset value of register BSG_MV_CURR_PTR */
#define BSG_MV_CURR_PTR_VALUE          0x0

/* Bits definition for register BSG_MV_CURR_PTR */
#define BSG_BSG_MV_CURR_PTR_SHIFT      4
#define BSG_BSG_MV_CURR_PTR_FIELD      (0xFFFFFFFF - (0xFFFFFFFUL<<BSG_BSG_MV_CURR_PTR_SHIFT))

/*****************************************************************************/
/* Register description for MV_NB_PTR */

/* Reset value of register BSG_MV_NB_PTR */
#define BSG_MV_NB_PTR_VALUE            0x0

/* Bits definition for register BSG_MV_NB_PTR */
#define BSG_BSG_MV_NB_PTR_SHIFT        4
#define BSG_BSG_MV_NB_PTR_FIELD        (0xFFFFFFFF - (0xFFFFFFFUL<<BSG_BSG_MV_NB_PTR_SHIFT))

/*****************************************************************************/
/* Register description for FB1_PTR */

/* Reset value of register BSG_FB1_PTR */
#define BSG_FB1_PTR_VALUE              0x0

/* Bits definition for register BSG_FB1_PTR */
#define BSG_BSG_FB1_PTR_SHIFT          4
#define BSG_BSG_FB1_PTR_FIELD          (0xFFFFFFFF - (0xFFFFFFFUL<<BSG_BSG_FB1_PTR_SHIFT))

/*****************************************************************************/
/* Register description for FB2_PTR */

/* Reset value of register BSG_FB2_PTR */
#define BSG_FB2_PTR_VALUE              0x0

/* Bits definition for register BSG_FB2_PTR */
#define BSG_BSG_FB2_PTR_SHIFT          4
#define BSG_BSG_FB2_PTR_FIELD          (0xFFFFFFFF - (0xFFFFFFFUL<<BSG_BSG_FB2_PTR_SHIFT))

/*****************************************************************************/
/* Register description for FB3_PTR */

/* Reset value of register BSG_FB3_PTR */
#define BSG_FB3_PTR_VALUE              0x0

/* Bits definition for register BSG_FB3_PTR */
#define BSG_BSG_FB3_PTR_SHIFT          4
#define BSG_BSG_FB3_PTR_FIELD          (0xFFFFFFFF - (0xFFFFFFFUL<<BSG_BSG_FB3_PTR_SHIFT))

/*****************************************************************************/
/* Register description for FB4_PTR */

/* Reset value of register BSG_FB4_PTR */
#define BSG_FB4_PTR_VALUE              0x0

/* Bits definition for register BSG_FB4_PTR */
#define BSG_BSG_FB4_PTR_SHIFT          4
#define BSG_BSG_FB4_PTR_FIELD          (0xFFFFFFFF - (0xFFFFFFFUL<<BSG_BSG_FB4_PTR_SHIFT))

/*****************************************************************************/
/* Register description for SEGM_POS_START_HOR */

/* Reset value of register BSG_SEGM_POS_START_HOR */
#define BSG_SEGM_POS_START_HOR_VALUE   0x0

/* Bits definition for register BSG_SEGM_POS_START_HOR */
#define BSG_BSG_SEGM_POS_START_HOR_SHIFT           0
#define BSG_BSG_SEGM_POS_START_HOR_FIELD           (0xFFFFFFFF - (0x3FUL<<BSG_BSG_SEGM_POS_START_HOR_SHIFT))
#define BSG_BSG_SEGM_POS_START_HOR_0   (0x0UL<<BSG_BSG_SEGM_POS_START_HOR_SHIFT)

/*****************************************************************************/
/* Register description for SEGM_POS_START_VER */

/* Reset value of register BSG_SEGM_POS_START_VER */
#define BSG_SEGM_POS_START_VER_VALUE   0x0

/* Bits definition for register BSG_SEGM_POS_START_VER */
#define BSG_BSG_SEGM_POS_START_VER_SHIFT           0
#define BSG_BSG_SEGM_POS_START_VER_FIELD           (0xFFFFFFFF - (0x3FUL<<BSG_BSG_SEGM_POS_START_VER_SHIFT))
#define BSG_BSG_SEGM_POS_START_VER_0   (0x0UL<<BSG_BSG_SEGM_POS_START_VER_SHIFT)

/*****************************************************************************/
/* Register description for SEGM_MB_SIZE */

/* Reset value of register BSG_SEGM_MB_SIZE */
#define BSG_SEGM_MB_SIZE_VALUE         0x0

/* Bits definition for register BSG_SEGM_MB_SIZE */
#define BSG_BSG_SEGM_MB_SIZE_SHIFT     0
#define BSG_BSG_SEGM_MB_SIZE_FIELD     (0xFFFFFFFF - (0x7FFUL<<BSG_BSG_SEGM_MB_SIZE_SHIFT))
#define BSG_BSG_SEGM_MB_SIZE_0         (0x0UL<<BSG_BSG_SEGM_MB_SIZE_SHIFT)

/*****************************************************************************/
/* Register description for FRAME_MB_WIDTH */

/* Reset value of register BSG_FRAME_MB_WIDTH */
#define BSG_FRAME_MB_WIDTH_VALUE       0x0

/* Bits definition for register BSG_FRAME_MB_WIDTH */
#define BSG_BSG_FRAME_MB_WIDTH_SHIFT   0
#define BSG_BSG_FRAME_MB_WIDTH_FIELD   (0xFFFFFFFF - (0x3FUL<<BSG_BSG_FRAME_MB_WIDTH_SHIFT))
#define BSG_BSG_FRAME_MB_WIDTH_0       (0x0UL<<BSG_BSG_FRAME_MB_WIDTH_SHIFT)

/*****************************************************************************/
/* Register description for CURR_MB_POS_HOR */

/* Reset value of register BSG_CURR_MB_POS_HOR */
#define BSG_CURR_MB_POS_HOR_VALUE      0x0

/* Bits definition for register BSG_CURR_MB_POS_HOR */
#define BSG_BSG_CURR_MB_POS_HOR_SHIFT  0
#define BSG_BSG_CURR_MB_POS_HOR_FIELD  (0xFFFFFFFF - (0x3FUL<<BSG_BSG_CURR_MB_POS_HOR_SHIFT))
#define BSG_BSG_CURR_MB_POS_HOR_0      (0x0UL<<BSG_BSG_CURR_MB_POS_HOR_SHIFT)

/*****************************************************************************/
/* Register description for CURR_MB_POS_VER */

/* Reset value of register BSG_CURR_MB_POS_VER */
#define BSG_CURR_MB_POS_VER_VALUE      0x0

/* Bits definition for register BSG_CURR_MB_POS_VER */
#define BSG_BSG_CURR_MB_POS_VER_SHIFT  0
#define BSG_BSG_CURR_MB_POS_VER_FIELD  (0xFFFFFFFF - (0x3FUL<<BSG_BSG_CURR_MB_POS_VER_SHIFT))
#define BSG_BSG_CURR_MB_POS_VER_0      (0x0UL<<BSG_BSG_CURR_MB_POS_VER_SHIFT)

/*****************************************************************************/
/* Register description for PACKET_POS_START_HOR */

/* Reset value of register BSG_PACKET_POS_START_HOR */
#define BSG_PACKET_POS_START_HOR_VALUE 0x0

/* Bits definition for register BSG_PACKET_POS_START_HOR */
#define BSG_BSG_PACKET_POS_START_HOR_SHIFT         0
#define BSG_BSG_PACKET_POS_START_HOR_FIELD         (0xFFFFFFFF - (0x3FUL<<BSG_BSG_PACKET_POS_START_HOR_SHIFT))
#define BSG_BSG_PACKET_POS_START_HOR_0 (0x0UL<<BSG_BSG_PACKET_POS_START_HOR_SHIFT)

/*****************************************************************************/
/* Register description for PACKET_POS_START_VER */

/* Reset value of register BSG_PACKET_POS_START_VER */
#define BSG_PACKET_POS_START_VER_VALUE 0x0

/* Bits definition for register BSG_PACKET_POS_START_VER */
#define BSG_BSG_PACKET_POS_START_VER_SHIFT         0
#define BSG_BSG_PACKET_POS_START_VER_FIELD         (0xFFFFFFFF - (0x3FUL<<BSG_BSG_PACKET_POS_START_VER_SHIFT))
#define BSG_BSG_PACKET_POS_START_VER_0 (0x0UL<<BSG_BSG_PACKET_POS_START_VER_SHIFT)

/*****************************************************************************/
/* Register description for MAX_BITS_SEGM */

/* Reset value of register BSG_MAX_BITS_SEGM */
#define BSG_MAX_BITS_SEGM_VALUE        0x0

/* Bits definition for register BSG_MAX_BITS_SEGM */
#define BSG_BSG_MAX_BITS_SEGM_SHIFT    0
#define BSG_BSG_MAX_BITS_SEGM_FIELD    (0xFFFFFFFF - (0xFFFFFFUL<<BSG_BSG_MAX_BITS_SEGM_SHIFT))
#define BSG_BSG_MAX_BITS_SEGM_0        (0x0UL<<BSG_BSG_MAX_BITS_SEGM_SHIFT)

/*****************************************************************************/
/* Register description for MAX_BITS_PACKET */

/* Reset value of register BSG_MAX_BITS_PACKET */
#define BSG_MAX_BITS_PACKET_VALUE      0x0

/* Bits definition for register BSG_MAX_BITS_PACKET */
#define BSG_BSG_MAX_BITS_PACKET_SHIFT  0
#define BSG_BSG_MAX_BITS_PACKET_FIELD  (0xFFFFFFFF - (0x7FFFUL<<BSG_BSG_MAX_BITS_PACKET_SHIFT))
#define BSG_BSG_MAX_BITS_PACKET_0      (0x0UL<<BSG_BSG_MAX_BITS_PACKET_SHIFT)

/*****************************************************************************/
/* Register description for VOP_FCODE_FWD */

/* Reset value of register BSG_VOP_FCODE_FWD */
#define BSG_VOP_FCODE_FWD_VALUE        0x0

/* Bits definition for register BSG_VOP_FCODE_FWD */
#define BSG_BSG_VOP_FCODE_FWD_SHIFT    0
#define BSG_BSG_VOP_FCODE_FWD_FIELD    (0xFFFFFFFF - (0x7UL<<BSG_BSG_VOP_FCODE_FWD_SHIFT))
#define BSG_BSG_VOP_FCODE_FWD_0        (0x0UL<<BSG_BSG_VOP_FCODE_FWD_SHIFT)

/*****************************************************************************/
/* Register description for VOP_FCODE_BWD */

/* Reset value of register BSG_VOP_FCODE_BWD */
#define BSG_VOP_FCODE_BWD_VALUE        0x0

/* Bits definition for register BSG_VOP_FCODE_BWD */
#define BSG_BSG_VOP_FCODE_BWD_SHIFT    0
#define BSG_BSG_VOP_FCODE_BWD_FIELD    (0xFFFFFFFF - (0x7UL<<BSG_BSG_VOP_FCODE_BWD_SHIFT))

/*****************************************************************************/
/* Register description for SHORT_HEADER */

/* Reset value of register BSG_SHORT_HEADER */
#define BSG_SHORT_HEADER_VALUE         0x0

/* Bits definition for register BSG_SHORT_HEADER */
#define BSG_BSG_SHORT_HEADER_SHIFT     0
#define BSG_BSG_SHORT_HEADER_FIELD     (0xFFFFFFFF - (0x1UL<<BSG_BSG_SHORT_HEADER_SHIFT))
#define BSG_BSG_SHORT_HEADER_0         (0x0UL<<BSG_BSG_SHORT_HEADER_SHIFT)
#define BSG_BSG_SHORT_HEADER_1         (0x1UL<<BSG_BSG_SHORT_HEADER_SHIFT)
#define BSG_BSG_SHORT_HEADER           (0x1UL<<BSG_BSG_SHORT_HEADER_SHIFT)

/*****************************************************************************/
/* Register description for DATA_PARTITIONING */

/* Reset value of register BSG_DATA_PARTITIONING */
#define BSG_DATA_PARTITIONING_VALUE    0x0

/* Bits definition for register BSG_DATA_PARTITIONING */
#define BSG_BSG_DATA_PARTITIONING_SHIFT            0
#define BSG_BSG_DATA_PARTITIONING_FIELD            (0xFFFFFFFF - (0x1UL<<BSG_BSG_DATA_PARTITIONING_SHIFT))
#define BSG_BSG_DATA_PARTITIONING_0    (0x0UL<<BSG_BSG_DATA_PARTITIONING_SHIFT)
#define BSG_BSG_DATA_PARTITIONING_1    (0x1UL<<BSG_BSG_DATA_PARTITIONING_SHIFT)
#define BSG_BSG_DATA_PARTITIONING      (0x1UL<<BSG_BSG_DATA_PARTITIONING_SHIFT)

/*****************************************************************************/
/* Register description for DISABLE_SWITCH_TAB0 */

/* Reset value of register BSG_DISABLE_SWITCH_TAB0 */
#define BSG_DISABLE_SWITCH_TAB0_VALUE  0x0

/* Bits definition for register BSG_DISABLE_SWITCH_TAB0 */
#define BSG_BSG_DISABLE_SWITCH_TAB0_SHIFT          0
#define BSG_BSG_DISABLE_SWITCH_TAB0_FIELD          (0xFFFFFFFF - (0x1UL<<BSG_BSG_DISABLE_SWITCH_TAB0_SHIFT))
#define BSG_BSG_DISABLE_SWITCH_TAB0_0  (0x0UL<<BSG_BSG_DISABLE_SWITCH_TAB0_SHIFT)
#define BSG_BSG_DISABLE_SWITCH_TAB0_1  (0x1UL<<BSG_BSG_DISABLE_SWITCH_TAB0_SHIFT)
#define BSG_BSG_DISABLE_SWITCH_TAB0    (0x1UL<<BSG_BSG_DISABLE_SWITCH_TAB0_SHIFT)

/*****************************************************************************/
/* Register description for FIXED_PACKET_SIZE */

/* Reset value of register BSG_FIXED_PACKET_SIZE */
#define BSG_FIXED_PACKET_SIZE_VALUE    0x0

/* Bits definition for register BSG_FIXED_PACKET_SIZE */
#define BSG_BSG_FIXED_PACKET_SIZE_SHIFT            0
#define BSG_BSG_FIXED_PACKET_SIZE_FIELD            (0xFFFFFFFF - (0x1UL<<BSG_BSG_FIXED_PACKET_SIZE_SHIFT))
#define BSG_BSG_FIXED_PACKET_SIZE_0    (0x0UL<<BSG_BSG_FIXED_PACKET_SIZE_SHIFT)
#define BSG_BSG_FIXED_PACKET_SIZE_1    (0x1UL<<BSG_BSG_FIXED_PACKET_SIZE_SHIFT)
#define BSG_BSG_FIXED_PACKET_SIZE      (0x1UL<<BSG_BSG_FIXED_PACKET_SIZE_SHIFT)

/*****************************************************************************/
/* Register description for INTRA_DC_VLC_THRESH */

/* Reset value of register BSG_INTRA_DC_VLC_THRESH */
#define BSG_INTRA_DC_VLC_THRESH_VALUE  0x0

/* Bits definition for register BSG_INTRA_DC_VLC_THRESH */
#define BSG_BSG_INTRA_DC_VLC_THRESH_SHIFT          0
#define BSG_BSG_INTRA_DC_VLC_THRESH_FIELD          (0xFFFFFFFF - (0x7UL<<BSG_BSG_INTRA_DC_VLC_THRESH_SHIFT))
#define BSG_BSG_INTRA_DC_VLC_THRESH_INTRA_DC_VLC_THRESH (0x0UL<<BSG_BSG_INTRA_DC_VLC_THRESH_SHIFT)

/*****************************************************************************/
/* Register description for VOP_TYPE */

/* Reset value of register BSG_VOP_TYPE */
#define BSG_VOP_TYPE_VALUE             0x0

/* Bits definition for register BSG_VOP_TYPE */
#define BSG_BSG_VOP_TYPE_SHIFT         0
#define BSG_BSG_VOP_TYPE_FIELD         (0xFFFFFFFF - (0x1UL<<BSG_BSG_VOP_TYPE_SHIFT))
#define BSG_BSG_VOP_TYPE_0             (0x0UL<<BSG_BSG_VOP_TYPE_SHIFT)
#define BSG_BSG_VOP_TYPE_1             (0x1UL<<BSG_BSG_VOP_TYPE_SHIFT)
#define BSG_BSG_VOP_TYPE               (0x1UL<<BSG_BSG_VOP_TYPE_SHIFT)

/*****************************************************************************/
/* Register description for NO_BITS_HDR */

/* Reset value of register BSG_NO_BITS_HDR */
#define BSG_NO_BITS_HDR_VALUE          0x0

/* Bits definition for register BSG_NO_BITS_HDR */
#define BSG_BSG_NO_BITS_HDR_SHIFT      0
#define BSG_BSG_NO_BITS_HDR_FIELD      (0xFFFFFFFF - (0xFFFFFFUL<<BSG_BSG_NO_BITS_HDR_SHIFT))

/*****************************************************************************/
/* Register description for NO_BITS_COEFF */

/* Reset value of register BSG_NO_BITS_COEFF */
#define BSG_NO_BITS_COEFF_VALUE        0x0

/* Bits definition for register BSG_NO_BITS_COEFF */
#define BSG_BSG_NO_BITS_COEFF_SHIFT    0
#define BSG_BSG_NO_BITS_COEFF_FIELD    (0xFFFFFFFF - (0xFFFFFFUL<<BSG_BSG_NO_BITS_COEFF_SHIFT))

/*****************************************************************************/
/* Register description for NO_BITS_PACKET */

/* Reset value of register BSG_NO_BITS_PACKET */
#define BSG_NO_BITS_PACKET_VALUE       0x0

/* Bits definition for register BSG_NO_BITS_PACKET */
#define BSG_BSG_NO_BITS_PACKET_SHIFT   0
#define BSG_BSG_NO_BITS_PACKET_FIELD   (0xFFFFFFFF - (0xFFFFUL<<BSG_BSG_NO_BITS_PACKET_SHIFT))

/*****************************************************************************/
/* Register description for STATUS_SET */

/* Reset value of register BSG_STATUS_SET */
#define BSG_STATUS_SET_VALUE           0x0

/* Bits definition for register BSG_STATUS_SET */
#define BSG_BSG_STATUS_SET_SHIFT       0
#define BSG_BSG_STATUS_SET_FIELD       (0xFFFFFFFF - (0x3FUL<<BSG_BSG_STATUS_SET_SHIFT))
#define BSG_BSG_STATUS_SET_0           (0x0UL<<BSG_BSG_STATUS_SET_SHIFT)

/*****************************************************************************/
/* Register description for STATUS */

/* Reset value of register BSG_STATUS */
#define BSG_STATUS_VALUE               0x0

/* Bits definition for register BSG_STATUS */
#define BSG_BSG_STATUS_SHIFT           0
#define BSG_BSG_STATUS_FIELD           (0xFFFFFFFF - (0x3FUL<<BSG_BSG_STATUS_SHIFT))
#define BSG_BSG_STATUS_0               (0x0UL<<BSG_BSG_STATUS_SHIFT)

/*****************************************************************************/
/* Register description for STATUS_CLR */

/* Reset value of register BSG_STATUS_CLR */
#define BSG_STATUS_CLR_VALUE           0x0

/* Bits definition for register BSG_STATUS_CLR */
#define BSG_BSG_STATUS_CLR_SHIFT       0
#define BSG_BSG_STATUS_CLR_FIELD       (0xFFFFFFFF - (0x3FUL<<BSG_BSG_STATUS_CLR_SHIFT))
#define BSG_BSG_STATUS_CLR_0           (0x0UL<<BSG_BSG_STATUS_CLR_SHIFT)

/*****************************************************************************/
/* Register description for ENABLE_SET */

/* Reset value of register BSG_ENABLE_SET */
#define BSG_ENABLE_SET_VALUE           0x0

/* Bits definition for register BSG_ENABLE_SET */
#define BSG_BSG_ENABLE_SET_SHIFT       0
#define BSG_BSG_ENABLE_SET_FIELD       (0xFFFFFFFF - (0x3FUL<<BSG_BSG_ENABLE_SET_SHIFT))
#define BSG_BSG_ENABLE_SET_0           (0x0UL<<BSG_BSG_ENABLE_SET_SHIFT)

/*****************************************************************************/
/* Register description for ENABLE */

/* Reset value of register BSG_ENABLE */
#define BSG_ENABLE_VALUE               0x0

/* Bits definition for register BSG_ENABLE */
#define BSG_BSG_ENABLE_SHIFT           0
#define BSG_BSG_ENABLE_FIELD           (0xFFFFFFFF - (0x3FUL<<BSG_BSG_ENABLE_SHIFT))
#define BSG_BSG_ENABLE_0               (0x0UL<<BSG_BSG_ENABLE_SHIFT)

/*****************************************************************************/
/* Register description for ENABLE_CLR */

/* Reset value of register BSG_ENABLE_CLR */
#define BSG_ENABLE_CLR_VALUE           0x0

/* Bits definition for register BSG_ENABLE_CLR */
#define BSG_BSG_ENABLE_CLR_SHIFT       0
#define BSG_BSG_ENABLE_CLR_FIELD       (0xFFFFFFFF - (0x3FUL<<BSG_BSG_ENABLE_CLR_SHIFT))
#define BSG_BSG_ENABLE_CLR_0           (0x0UL<<BSG_BSG_ENABLE_CLR_SHIFT)

/*****************************************************************************/
/* Register description for MODULE_ID */

/* Reset value of register BSG_MODULE_ID */
#define BSG_MODULE_ID_VALUE            0xA0722100

/* Bits definition for register BSG_MODULE_ID */
#define BSG_BSG_MODULE_ID_SHIFT        0
#define BSG_BSG_MODULE_ID_FIELD        (0xFFFFFFFF - (0x7FFFFFFFUL<<BSG_BSG_MODULE_ID_SHIFT))
#define BSG_BSG_MODULE_ID_A0722100     (0xA0722100UL<<BSG_BSG_MODULE_ID_SHIFT)

/*****************************************************************************/

/*****************************************************************************
* Definitions for: CAE
*****************************************************************************/

/* Pointer on base address */
#define CAE_BASE                       IOA(CAE_BASE_ADDR)

/* CAE PKI_R0B_0 Register (32 bits) */
#define CAE_PKI_R0B_0_OFFSET           0x0
#define CAE_PKI_R0B_0_REG              IOA(CAE_BASE_ADDR + CAE_PKI_R0B_0_OFFSET)

/* CAE PKI_R0B_1 Register (32 bits) */
#define CAE_PKI_R0B_1_OFFSET           0x4
#define CAE_PKI_R0B_1_REG              IOA(CAE_BASE_ADDR + CAE_PKI_R0B_1_OFFSET)

/* CAE PKI_R0B_2 Register (32 bits) */
#define CAE_PKI_R0B_2_OFFSET           0x8
#define CAE_PKI_R0B_2_REG              IOA(CAE_BASE_ADDR + CAE_PKI_R0B_2_OFFSET)

/* CAE PKI_R0B_3 Register (32 bits) */
#define CAE_PKI_R0B_3_OFFSET           0xC
#define CAE_PKI_R0B_3_REG              IOA(CAE_BASE_ADDR + CAE_PKI_R0B_3_OFFSET)

/* CAE PKI_R0B_4 Register (32 bits) */
#define CAE_PKI_R0B_4_OFFSET           0x10
#define CAE_PKI_R0B_4_REG              IOA(CAE_BASE_ADDR + CAE_PKI_R0B_4_OFFSET)

/* CAE PKI_R0B_5 Register (32 bits) */
#define CAE_PKI_R0B_5_OFFSET           0x14
#define CAE_PKI_R0B_5_REG              IOA(CAE_BASE_ADDR + CAE_PKI_R0B_5_OFFSET)

/* CAE PKI_R0B_6 Register (32 bits) */
#define CAE_PKI_R0B_6_OFFSET           0x18
#define CAE_PKI_R0B_6_REG              IOA(CAE_BASE_ADDR + CAE_PKI_R0B_6_OFFSET)

/* CAE PKI_R0B_7 Register (32 bits) */
#define CAE_PKI_R0B_7_OFFSET           0x1C
#define CAE_PKI_R0B_7_REG              IOA(CAE_BASE_ADDR + CAE_PKI_R0B_7_OFFSET)

/* CAE PKI_R0B_8 Register (32 bits) */
#define CAE_PKI_R0B_8_OFFSET           0x20
#define CAE_PKI_R0B_8_REG              IOA(CAE_BASE_ADDR + CAE_PKI_R0B_8_OFFSET)

/* CAE PKI_R2B_0 Register (32 bits) */
#define CAE_PKI_R2B_0_OFFSET           0x80
#define CAE_PKI_R2B_0_REG              IOA(CAE_BASE_ADDR + CAE_PKI_R2B_0_OFFSET)

/* CAE PKI_R2B_1 Register (32 bits) */
#define CAE_PKI_R2B_1_OFFSET           0x84
#define CAE_PKI_R2B_1_REG              IOA(CAE_BASE_ADDR + CAE_PKI_R2B_1_OFFSET)

/* CAE PKI_R2B_2 Register (32 bits) */
#define CAE_PKI_R2B_2_OFFSET           0x88
#define CAE_PKI_R2B_2_REG              IOA(CAE_BASE_ADDR + CAE_PKI_R2B_2_OFFSET)

/* CAE PKI_R2B_3 Register (32 bits) */
#define CAE_PKI_R2B_3_OFFSET           0x8C
#define CAE_PKI_R2B_3_REG              IOA(CAE_BASE_ADDR + CAE_PKI_R2B_3_OFFSET)

/* CAE PKI_R2B_4 Register (32 bits) */
#define CAE_PKI_R2B_4_OFFSET           0x90
#define CAE_PKI_R2B_4_REG              IOA(CAE_BASE_ADDR + CAE_PKI_R2B_4_OFFSET)

/* CAE PKI_R2B_5 Register (32 bits) */
#define CAE_PKI_R2B_5_OFFSET           0x94
#define CAE_PKI_R2B_5_REG              IOA(CAE_BASE_ADDR + CAE_PKI_R2B_5_OFFSET)

/* CAE PKI_R2B_6 Register (32 bits) */
#define CAE_PKI_R2B_6_OFFSET           0x98
#define CAE_PKI_R2B_6_REG              IOA(CAE_BASE_ADDR + CAE_PKI_R2B_6_OFFSET)

/* CAE PKI_R2B_7 Register (32 bits) */
#define CAE_PKI_R2B_7_OFFSET           0x9C
#define CAE_PKI_R2B_7_REG              IOA(CAE_BASE_ADDR + CAE_PKI_R2B_7_OFFSET)

/* CAE PKI_R2B_8 Register (32 bits) */
#define CAE_PKI_R2B_8_OFFSET           0xA0
#define CAE_PKI_R2B_8_REG              IOA(CAE_BASE_ADDR + CAE_PKI_R2B_8_OFFSET)

/* CAE PKI_R3B Register (32 bits) */
#define CAE_PKI_R3B_OFFSET             0xC0
#define CAE_PKI_R3B_REG                IOA(CAE_BASE_ADDR + CAE_PKI_R3B_OFFSET)

/* CAE PKI_R4B Register (32 bits) */
#define CAE_PKI_R4B_OFFSET             0x100
#define CAE_PKI_R4B_REG                IOA(CAE_BASE_ADDR + CAE_PKI_R4B_OFFSET)

/* CAE PKI_CSA_0 Register (32 bits) */
#define CAE_PKI_CSA_0_OFFSET           0x140
#define CAE_PKI_CSA_0_REG              IOA(CAE_BASE_ADDR + CAE_PKI_CSA_0_OFFSET)

/* CAE PKI_CSA_1 Register (32 bits) */
#define CAE_PKI_CSA_1_OFFSET           0x144
#define CAE_PKI_CSA_1_REG              IOA(CAE_BASE_ADDR + CAE_PKI_CSA_1_OFFSET)

/* CAE PKI_CSA_2 Register (32 bits) */
#define CAE_PKI_CSA_2_OFFSET           0x148
#define CAE_PKI_CSA_2_REG              IOA(CAE_BASE_ADDR + CAE_PKI_CSA_2_OFFSET)

/* CAE PKI_CSA_3 Register (32 bits) */
#define CAE_PKI_CSA_3_OFFSET           0x14C
#define CAE_PKI_CSA_3_REG              IOA(CAE_BASE_ADDR + CAE_PKI_CSA_3_OFFSET)

/* CAE PKI_CSA_4 Register (32 bits) */
#define CAE_PKI_CSA_4_OFFSET           0x150
#define CAE_PKI_CSA_4_REG              IOA(CAE_BASE_ADDR + CAE_PKI_CSA_4_OFFSET)

/* CAE PKI_CSA_5 Register (32 bits) */
#define CAE_PKI_CSA_5_OFFSET           0x154
#define CAE_PKI_CSA_5_REG              IOA(CAE_BASE_ADDR + CAE_PKI_CSA_5_OFFSET)

/* CAE PKI_CSA_6 Register (32 bits) */
#define CAE_PKI_CSA_6_OFFSET           0x158
#define CAE_PKI_CSA_6_REG              IOA(CAE_BASE_ADDR + CAE_PKI_CSA_6_OFFSET)

/* CAE PKI_CSA_7 Register (32 bits) */
#define CAE_PKI_CSA_7_OFFSET           0x15C
#define CAE_PKI_CSA_7_REG              IOA(CAE_BASE_ADDR + CAE_PKI_CSA_7_OFFSET)

/* CAE PKI_CSA_8 Register (32 bits) */
#define CAE_PKI_CSA_8_OFFSET           0x160
#define CAE_PKI_CSA_8_REG              IOA(CAE_BASE_ADDR + CAE_PKI_CSA_8_OFFSET)

/* CAE PKI_SIN Register (32 bits) */
#define CAE_PKI_SIN_OFFSET             0x180
#define CAE_PKI_SIN_REG                IOA(CAE_BASE_ADDR + CAE_PKI_SIN_OFFSET)

/* CAE PKI_SOUT Register (32 bits) */
#define CAE_PKI_SOUT_OFFSET            0x184
#define CAE_PKI_SOUT_REG               IOA(CAE_BASE_ADDR + CAE_PKI_SOUT_OFFSET)

/* CAE PKI_CONTROL Register (32 bits) */
#define CAE_PKI_CONTROL_OFFSET         0x1C0
#define CAE_PKI_CONTROL_REG            IOA(CAE_BASE_ADDR + CAE_PKI_CONTROL_OFFSET)

/* CAE PKI_STATUS Register (32 bits) */
#define CAE_PKI_STATUS_OFFSET          0x1C4
#define CAE_PKI_STATUS_REG             IOA(CAE_BASE_ADDR + CAE_PKI_STATUS_OFFSET)

/* CAE PKI_BUSY Register (32 bits) */
#define CAE_PKI_BUSY_OFFSET            0x1C8
#define CAE_PKI_BUSY_REG               IOA(CAE_BASE_ADDR + CAE_PKI_BUSY_OFFSET)

/* CAE PKI_A_1025 Register (32 bits) */
#define CAE_PKI_A_1025_OFFSET          0x1CC
#define CAE_PKI_A_1025_REG             IOA(CAE_BASE_ADDR + CAE_PKI_A_1025_OFFSET)

/* CAE DES_KEY_0 Register (32 bits) */
#define CAE_DES_KEY_0_OFFSET           0x208
#define CAE_DES_KEY_0_REG              IOA(CAE_BASE_ADDR + CAE_DES_KEY_0_OFFSET)

/* CAE DES_KEY_1 Register (32 bits) */
#define CAE_DES_KEY_1_OFFSET           0x20C
#define CAE_DES_KEY_1_REG              IOA(CAE_BASE_ADDR + CAE_DES_KEY_1_OFFSET)

/* CAE DES_KEY_2 Register (32 bits) */
#define CAE_DES_KEY_2_OFFSET           0x210
#define CAE_DES_KEY_2_REG              IOA(CAE_BASE_ADDR + CAE_DES_KEY_2_OFFSET)

/* CAE DES_KEY_3 Register (32 bits) */
#define CAE_DES_KEY_3_OFFSET           0x214
#define CAE_DES_KEY_3_REG              IOA(CAE_BASE_ADDR + CAE_DES_KEY_3_OFFSET)

/* CAE DES_KEY_4 Register (32 bits) */
#define CAE_DES_KEY_4_OFFSET           0x218
#define CAE_DES_KEY_4_REG              IOA(CAE_BASE_ADDR + CAE_DES_KEY_4_OFFSET)

/* CAE DES_KEY_5 Register (32 bits) */
#define CAE_DES_KEY_5_OFFSET           0x21C
#define CAE_DES_KEY_5_REG              IOA(CAE_BASE_ADDR + CAE_DES_KEY_5_OFFSET)

/* CAE DES_CONTROL_0 Register (32 bits) */
#define CAE_DES_CONTROL_0_OFFSET       0x220
#define CAE_DES_CONTROL_0_REG          IOA(CAE_BASE_ADDR + CAE_DES_CONTROL_0_OFFSET)

/* CAE DES_CONTROL_1 Register (32 bits) */
#define CAE_DES_CONTROL_1_OFFSET       0x224
#define CAE_DES_CONTROL_1_REG          IOA(CAE_BASE_ADDR + CAE_DES_CONTROL_1_OFFSET)

/* CAE DES_IV_0 Register (32 bits) */
#define CAE_DES_IV_0_OFFSET            0x228
#define CAE_DES_IV_0_REG               IOA(CAE_BASE_ADDR + CAE_DES_IV_0_OFFSET)

/* CAE DES_IV_1 Register (32 bits) */
#define CAE_DES_IV_1_OFFSET            0x22C
#define CAE_DES_IV_1_REG               IOA(CAE_BASE_ADDR + CAE_DES_IV_1_OFFSET)

/* CAE AES_KEY_0 Register (32 bits) */
#define CAE_AES_KEY_0_OFFSET           0x410
#define CAE_AES_KEY_0_REG              IOA(CAE_BASE_ADDR + CAE_AES_KEY_0_OFFSET)

/* CAE AES_KEY_1 Register (32 bits) */
#define CAE_AES_KEY_1_OFFSET           0x414
#define CAE_AES_KEY_1_REG              IOA(CAE_BASE_ADDR + CAE_AES_KEY_1_OFFSET)

/* CAE AES_KEY_2 Register (32 bits) */
#define CAE_AES_KEY_2_OFFSET           0x418
#define CAE_AES_KEY_2_REG              IOA(CAE_BASE_ADDR + CAE_AES_KEY_2_OFFSET)

/* CAE AES_KEY_3 Register (32 bits) */
#define CAE_AES_KEY_3_OFFSET           0x41C
#define CAE_AES_KEY_3_REG              IOA(CAE_BASE_ADDR + CAE_AES_KEY_3_OFFSET)

/* CAE AES_KEY_4 Register (32 bits) */
#define CAE_AES_KEY_4_OFFSET           0x420
#define CAE_AES_KEY_4_REG              IOA(CAE_BASE_ADDR + CAE_AES_KEY_4_OFFSET)

/* CAE AES_KEY_5 Register (32 bits) */
#define CAE_AES_KEY_5_OFFSET           0x424
#define CAE_AES_KEY_5_REG              IOA(CAE_BASE_ADDR + CAE_AES_KEY_5_OFFSET)

/* CAE AES_KEY_6 Register (32 bits) */
#define CAE_AES_KEY_6_OFFSET           0x428
#define CAE_AES_KEY_6_REG              IOA(CAE_BASE_ADDR + CAE_AES_KEY_6_OFFSET)

/* CAE AES_KEY_7 Register (32 bits) */
#define CAE_AES_KEY_7_OFFSET           0x42C
#define CAE_AES_KEY_7_REG              IOA(CAE_BASE_ADDR + CAE_AES_KEY_7_OFFSET)

/* CAE AES_SK Register (32 bits) */
#define CAE_AES_SK_OFFSET              0x434
#define CAE_AES_SK_REG                 IOA(CAE_BASE_ADDR + CAE_AES_SK_OFFSET)

/* CAE AES_IV_0 Register (32 bits) */
#define CAE_AES_IV_0_OFFSET            0x438
#define CAE_AES_IV_0_REG               IOA(CAE_BASE_ADDR + CAE_AES_IV_0_OFFSET)

/* CAE AES_IV_1 Register (32 bits) */
#define CAE_AES_IV_1_OFFSET            0x43C
#define CAE_AES_IV_1_REG               IOA(CAE_BASE_ADDR + CAE_AES_IV_1_OFFSET)

/* CAE AES_IV_2 Register (32 bits) */
#define CAE_AES_IV_2_OFFSET            0x440
#define CAE_AES_IV_2_REG               IOA(CAE_BASE_ADDR + CAE_AES_IV_2_OFFSET)

/* CAE AES_IV_3 Register (32 bits) */
#define CAE_AES_IV_3_OFFSET            0x444
#define CAE_AES_IV_3_REG               IOA(CAE_BASE_ADDR + CAE_AES_IV_3_OFFSET)

/* CAE AES_CONTROL Register (32 bits) */
#define CAE_AES_CONTROL_OFFSET         0x5C0
#define CAE_AES_CONTROL_REG            IOA(CAE_BASE_ADDR + CAE_AES_CONTROL_OFFSET)

/* CAE HASH_H_4 Register (32 bits) */
#define CAE_HASH_H_4_OFFSET            0x640
#define CAE_HASH_H_4_REG               IOA(CAE_BASE_ADDR + CAE_HASH_H_4_OFFSET)

/* CAE HASH_H_3 Register (32 bits) */
#define CAE_HASH_H_3_OFFSET            0x644
#define CAE_HASH_H_3_REG               IOA(CAE_BASE_ADDR + CAE_HASH_H_3_OFFSET)

/* CAE HASH_H_2 Register (32 bits) */
#define CAE_HASH_H_2_OFFSET            0x648
#define CAE_HASH_H_2_REG               IOA(CAE_BASE_ADDR + CAE_HASH_H_2_OFFSET)

/* CAE HASH_H_1 Register (32 bits) */
#define CAE_HASH_H_1_OFFSET            0x64C
#define CAE_HASH_H_1_REG               IOA(CAE_BASE_ADDR + CAE_HASH_H_1_OFFSET)

/* CAE HASH_H_0 Register (32 bits) */
#define CAE_HASH_H_0_OFFSET            0x650
#define CAE_HASH_H_0_REG               IOA(CAE_BASE_ADDR + CAE_HASH_H_0_OFFSET)

/* CAE HASH_CONTROL Register (32 bits) */
#define CAE_HASH_CONTROL_OFFSET        0x7C0
#define CAE_HASH_CONTROL_REG           IOA(CAE_BASE_ADDR + CAE_HASH_CONTROL_OFFSET)

/* CAE DRNG_CONTROL Register (32 bits) */
#define CAE_DRNG_CONTROL_OFFSET        0x800
#define CAE_DRNG_CONTROL_REG           IOA(CAE_BASE_ADDR + CAE_DRNG_CONTROL_OFFSET)

/* CAE DRNG_VALID Register (32 bits) */
#define CAE_DRNG_VALID_OFFSET          0x804
#define CAE_DRNG_VALID_REG             IOA(CAE_BASE_ADDR + CAE_DRNG_VALID_OFFSET)

/* CAE DRNG_DATA Register (32 bits) */
#define CAE_DRNG_DATA_OFFSET           0x808
#define CAE_DRNG_DATA_REG              IOA(CAE_BASE_ADDR + CAE_DRNG_DATA_OFFSET)

/* CAE DRNG_CLK_EN Register (32 bits) */
#define CAE_DRNG_CLK_EN_OFFSET         0x80C
#define CAE_DRNG_CLK_EN_REG            IOA(CAE_BASE_ADDR + CAE_DRNG_CLK_EN_OFFSET)

/* CAE MISC_CLK_ENABLE Register (32 bits) */
#define CAE_MISC_CLK_ENABLE_OFFSET     0x9D0
#define CAE_MISC_CLK_ENABLE_REG        IOA(CAE_BASE_ADDR + CAE_MISC_CLK_ENABLE_OFFSET)

/* CAE CONTROL_CRYPTO_CTL Register (32 bits) */
#define CAE_CONTROL_CRYPTO_CTL_OFFSET  0xA00
#define CAE_CONTROL_CRYPTO_CTL_REG     IOA(CAE_BASE_ADDR + CAE_CONTROL_CRYPTO_CTL_OFFSET)

/* CAE CONTROL_DIN_FULL Register (32 bits) */
#define CAE_CONTROL_DIN_FULL_OFFSET    0xA04
#define CAE_CONTROL_DIN_FULL_REG       IOA(CAE_BASE_ADDR + CAE_CONTROL_DIN_FULL_OFFSET)

/* CAE CONTROL_DOUT_FULL Register (32 bits) */
#define CAE_CONTROL_DOUT_FULL_OFFSET   0xA08
#define CAE_CONTROL_DOUT_FULL_REG      IOA(CAE_BASE_ADDR + CAE_CONTROL_DOUT_FULL_OFFSET)

/* CAE CONTROL_CRYPTO_STATUS Register (32 bits) */
#define CAE_CONTROL_CRYPTO_STATUS_OFFSET           0xA0C
#define CAE_CONTROL_CRYPTO_STATUS_REG  IOA(CAE_BASE_ADDR + CAE_CONTROL_CRYPTO_STATUS_OFFSET)

/* CAE CONTROL_CRYPTO_BUSY Register (32 bits) */
#define CAE_CONTROL_CRYPTO_BUSY_OFFSET 0xA10
#define CAE_CONTROL_CRYPTO_BUSY_REG    IOA(CAE_BASE_ADDR + CAE_CONTROL_CRYPTO_BUSY_OFFSET)

/* CAE CONTROL_AES_BUSY Register (32 bits) */
#define CAE_CONTROL_AES_BUSY_OFFSET    0xA14
#define CAE_CONTROL_AES_BUSY_REG       IOA(CAE_BASE_ADDR + CAE_CONTROL_AES_BUSY_OFFSET)

/* CAE CONTROL_DES_BUSY Register (32 bits) */
#define CAE_CONTROL_DES_BUSY_OFFSET    0xA18
#define CAE_CONTROL_DES_BUSY_REG       IOA(CAE_BASE_ADDR + CAE_CONTROL_DES_BUSY_OFFSET)

/* CAE CONTROL_HASH_BUSY Register (32 bits) */
#define CAE_CONTROL_HASH_BUSY_OFFSET   0xA1C
#define CAE_CONTROL_HASH_BUSY_REG      IOA(CAE_BASE_ADDR + CAE_CONTROL_HASH_BUSY_OFFSET)

/* CAE CONTROL_CONTENT Register (32 bits) */
#define CAE_CONTROL_CONTENT_OFFSET     0xA24
#define CAE_CONTROL_CONTENT_REG        IOA(CAE_BASE_ADDR + CAE_CONTROL_CONTENT_OFFSET)

/* CAE CONTROL_VERSION Register (32 bits) */
#define CAE_CONTROL_VERSION_OFFSET     0xA28
#define CAE_CONTROL_VERSION_REG        IOA(CAE_BASE_ADDR + CAE_CONTROL_VERSION_OFFSET)

/* CAE CONTROL_SW_RESET Register (32 bits) */
#define CAE_CONTROL_SW_RESET_OFFSET    0xA2C
#define CAE_CONTROL_SW_RESET_REG       IOA(CAE_BASE_ADDR + CAE_CONTROL_SW_RESET_OFFSET)

/* CAE CONTROL_CONTEXT_ID Register (32 bits) */
#define CAE_CONTROL_CONTEXT_ID_OFFSET  0xA30
#define CAE_CONTROL_CONTEXT_ID_REG     IOA(CAE_BASE_ADDR + CAE_CONTROL_CONTEXT_ID_OFFSET)

/* CAE DIN_DATA Register (32 bits) */
#define CAE_DIN_DATA_OFFSET            0xC00
#define CAE_DIN_DATA_REG               IOA(CAE_BASE_ADDR + CAE_DIN_DATA_OFFSET)

/* CAE DOUT_DATA Register (32 bits) */
#define CAE_DOUT_DATA_OFFSET           0xC00
#define CAE_DOUT_DATA_REG              IOA(CAE_BASE_ADDR + CAE_DOUT_DATA_OFFSET)

/* CAE DIN_DATA1 Register (32 bits) */
#define CAE_DIN_DATA1_OFFSET           0xC04
#define CAE_DIN_DATA1_REG              IOA(CAE_BASE_ADDR + CAE_DIN_DATA1_OFFSET)

/* CAE DOUT_DATA1 Register (32 bits) */
#define CAE_DOUT_DATA1_OFFSET          0xC04
#define CAE_DOUT_DATA1_REG             IOA(CAE_BASE_ADDR + CAE_DOUT_DATA1_OFFSET)

/* CAE DIN_DATA2 Register (32 bits) */
#define CAE_DIN_DATA2_OFFSET           0xC08
#define CAE_DIN_DATA2_REG              IOA(CAE_BASE_ADDR + CAE_DIN_DATA2_OFFSET)

/* CAE DOUT_DATA2 Register (32 bits) */
#define CAE_DOUT_DATA2_OFFSET          0xC08
#define CAE_DOUT_DATA2_REG             IOA(CAE_BASE_ADDR + CAE_DOUT_DATA2_OFFSET)

/* CAE DIN_DATA3 Register (32 bits) */
#define CAE_DIN_DATA3_OFFSET           0xC0C
#define CAE_DIN_DATA3_REG              IOA(CAE_BASE_ADDR + CAE_DIN_DATA3_OFFSET)

/* CAE DOUT_DATA3 Register (32 bits) */
#define CAE_DOUT_DATA3_OFFSET          0xC0C
#define CAE_DOUT_DATA3_REG             IOA(CAE_BASE_ADDR + CAE_DOUT_DATA3_OFFSET)

/* CAE DIN_DATA4 Register (32 bits) */
#define CAE_DIN_DATA4_OFFSET           0xC10
#define CAE_DIN_DATA4_REG              IOA(CAE_BASE_ADDR + CAE_DIN_DATA4_OFFSET)

/* CAE DOUT_DATA4 Register (32 bits) */
#define CAE_DOUT_DATA4_OFFSET          0xC10
#define CAE_DOUT_DATA4_REG             IOA(CAE_BASE_ADDR + CAE_DOUT_DATA4_OFFSET)

/* CAE DIN_DATA5 Register (32 bits) */
#define CAE_DIN_DATA5_OFFSET           0xC14
#define CAE_DIN_DATA5_REG              IOA(CAE_BASE_ADDR + CAE_DIN_DATA5_OFFSET)

/* CAE DOUT_DATA5 Register (32 bits) */
#define CAE_DOUT_DATA5_OFFSET          0xC14
#define CAE_DOUT_DATA5_REG             IOA(CAE_BASE_ADDR + CAE_DOUT_DATA5_OFFSET)

/* CAE DIN_DATA6 Register (32 bits) */
#define CAE_DIN_DATA6_OFFSET           0xC18
#define CAE_DIN_DATA6_REG              IOA(CAE_BASE_ADDR + CAE_DIN_DATA6_OFFSET)

/* CAE DOUT_DATA6 Register (32 bits) */
#define CAE_DOUT_DATA6_OFFSET          0xC18
#define CAE_DOUT_DATA6_REG             IOA(CAE_BASE_ADDR + CAE_DOUT_DATA6_OFFSET)

/* CAE DIN_DATA7 Register (32 bits) */
#define CAE_DIN_DATA7_OFFSET           0xC1C
#define CAE_DIN_DATA7_REG              IOA(CAE_BASE_ADDR + CAE_DIN_DATA7_OFFSET)

/* CAE DOUT_DATA7 Register (32 bits) */
#define CAE_DOUT_DATA7_OFFSET          0xC1C
#define CAE_DOUT_DATA7_REG             IOA(CAE_BASE_ADDR + CAE_DOUT_DATA7_OFFSET)

/* CAE ALIGN_CONTROL Register (32 bits) */
#define CAE_ALIGN_CONTROL_OFFSET       0xE04
#define CAE_ALIGN_CONTROL_REG          IOA(CAE_BASE_ADDR + CAE_ALIGN_CONTROL_OFFSET)

/* CAE READ_LAST_DATA Register (32 bits) */
#define CAE_READ_LAST_DATA_OFFSET      0xE08
#define CAE_READ_LAST_DATA_REG         IOA(CAE_BASE_ADDR + CAE_READ_LAST_DATA_OFFSET)

/*****************************************************************************
* Definitions for: CAM
*****************************************************************************/

/* Pointer on base address */
#define CAM_BASE                       IOA(CAM_BASE_ADDR)

/* CAM VI_CCL Register (32 bits) */
#define CAM_VI_CCL_OFFSET              0x0
#define CAM_VI_CCL_REG                 IOA(CAM_BASE_ADDR + CAM_VI_CCL_OFFSET)

/* CAM VI_ID Register (32 bits) */
#define CAM_VI_ID_OFFSET               0x8
#define CAM_VI_ID_REG                  IOA(CAM_BASE_ADDR + CAM_VI_ID_OFFSET)

/* CAM VI_ICCL Register (32 bits) */
#define CAM_VI_ICCL_OFFSET             0x10
#define CAM_VI_ICCL_REG                IOA(CAM_BASE_ADDR + CAM_VI_ICCL_OFFSET)

/* CAM VI_IRCL Register (32 bits) */
#define CAM_VI_IRCL_OFFSET             0x14
#define CAM_VI_IRCL_REG                IOA(CAM_BASE_ADDR + CAM_VI_IRCL_OFFSET)

/* CAM VI_DPCL Register (32 bits) */
#define CAM_VI_DPCL_OFFSET             0x18
#define CAM_VI_DPCL_REG                IOA(CAM_BASE_ADDR + CAM_VI_DPCL_OFFSET)

/* CAM IE_CTRL Register (32 bits) */
#define CAM_IE_CTRL_OFFSET             0x200
#define CAM_IE_CTRL_REG                IOA(CAM_BASE_ADDR + CAM_IE_CTRL_OFFSET)

/* CAM IE_COLOR_SEL Register (32 bits) */
#define CAM_IE_COLOR_SEL_OFFSET        0x204
#define CAM_IE_COLOR_SEL_REG           IOA(CAM_BASE_ADDR + CAM_IE_COLOR_SEL_OFFSET)

/* CAM IE_EFF_MAT_1 Register (32 bits) */
#define CAM_IE_EFF_MAT_1_OFFSET        0x208
#define CAM_IE_EFF_MAT_1_REG           IOA(CAM_BASE_ADDR + CAM_IE_EFF_MAT_1_OFFSET)

/* CAM IE_EFF_MAT_2 Register (32 bits) */
#define CAM_IE_EFF_MAT_2_OFFSET        0x20C
#define CAM_IE_EFF_MAT_2_REG           IOA(CAM_BASE_ADDR + CAM_IE_EFF_MAT_2_OFFSET)

/* CAM IE_EFF_MAT_3 Register (32 bits) */
#define CAM_IE_EFF_MAT_3_OFFSET        0x210
#define CAM_IE_EFF_MAT_3_REG           IOA(CAM_BASE_ADDR + CAM_IE_EFF_MAT_3_OFFSET)

/* CAM IE_EFF_MAT_4 Register (32 bits) */
#define CAM_IE_EFF_MAT_4_OFFSET        0x214
#define CAM_IE_EFF_MAT_4_REG           IOA(CAM_BASE_ADDR + CAM_IE_EFF_MAT_4_OFFSET)

/* CAM IE_EFF_MAT_5 Register (32 bits) */
#define CAM_IE_EFF_MAT_5_OFFSET        0x218
#define CAM_IE_EFF_MAT_5_REG           IOA(CAM_BASE_ADDR + CAM_IE_EFF_MAT_5_OFFSET)

/* CAM IE_EFF_TINT Register (32 bits) */
#define CAM_IE_EFF_TINT_OFFSET         0x21C
#define CAM_IE_EFF_TINT_REG            IOA(CAM_BASE_ADDR + CAM_IE_EFF_TINT_OFFSET)

/* CAM IE_CTRL_SHD Register (32 bits) */
#define CAM_IE_CTRL_SHD_OFFSET         0x220
#define CAM_IE_CTRL_SHD_REG            IOA(CAM_BASE_ADDR + CAM_IE_CTRL_SHD_OFFSET)

/* CAM SUPER_IMP_CTRL Register (32 bits) */
#define CAM_SUPER_IMP_CTRL_OFFSET      0x300
#define CAM_SUPER_IMP_CTRL_REG         IOA(CAM_BASE_ADDR + CAM_SUPER_IMP_CTRL_OFFSET)

/* CAM SUPER_IMP_OFFSET_X Register (32 bits) */
#define CAM_SUPER_IMP_OFFSET_X_OFFSET  0x304
#define CAM_SUPER_IMP_OFFSET_X_REG     IOA(CAM_BASE_ADDR + CAM_SUPER_IMP_OFFSET_X_OFFSET)

/* CAM SUPER_IMP_OFFSET_Y Register (32 bits) */
#define CAM_SUPER_IMP_OFFSET_Y_OFFSET  0x308
#define CAM_SUPER_IMP_OFFSET_Y_REG     IOA(CAM_BASE_ADDR + CAM_SUPER_IMP_OFFSET_Y_OFFSET)

/* CAM SUPER_IMP_COLOR_Y Register (32 bits) */
#define CAM_SUPER_IMP_COLOR_Y_OFFSET   0x30C
#define CAM_SUPER_IMP_COLOR_Y_REG      IOA(CAM_BASE_ADDR + CAM_SUPER_IMP_COLOR_Y_OFFSET)

/* CAM SUPER_IMP_COLOR_CB Register (32 bits) */
#define CAM_SUPER_IMP_COLOR_CB_OFFSET  0x310
#define CAM_SUPER_IMP_COLOR_CB_REG     IOA(CAM_BASE_ADDR + CAM_SUPER_IMP_COLOR_CB_OFFSET)

/* CAM SUPER_IMP_COLOR_CR Register (32 bits) */
#define CAM_SUPER_IMP_COLOR_CR_OFFSET  0x314
#define CAM_SUPER_IMP_COLOR_CR_REG     IOA(CAM_BASE_ADDR + CAM_SUPER_IMP_COLOR_CR_OFFSET)

/* CAM ISP_CTRL Register (32 bits) */
#define CAM_ISP_CTRL_OFFSET            0x400
#define CAM_ISP_CTRL_REG               IOA(CAM_BASE_ADDR + CAM_ISP_CTRL_OFFSET)

/* CAM ISP_ACQ_PROP Register (32 bits) */
#define CAM_ISP_ACQ_PROP_OFFSET        0x404
#define CAM_ISP_ACQ_PROP_REG           IOA(CAM_BASE_ADDR + CAM_ISP_ACQ_PROP_OFFSET)

/* CAM ISP_ACQ_H_OFFS Register (32 bits) */
#define CAM_ISP_ACQ_H_OFFS_OFFSET      0x408
#define CAM_ISP_ACQ_H_OFFS_REG         IOA(CAM_BASE_ADDR + CAM_ISP_ACQ_H_OFFS_OFFSET)

/* CAM ISP_ACQ_V_OFFS Register (32 bits) */
#define CAM_ISP_ACQ_V_OFFS_OFFSET      0x40C
#define CAM_ISP_ACQ_V_OFFS_REG         IOA(CAM_BASE_ADDR + CAM_ISP_ACQ_V_OFFS_OFFSET)

/* CAM ISP_ACQ_H_SIZE Register (32 bits) */
#define CAM_ISP_ACQ_H_SIZE_OFFSET      0x410
#define CAM_ISP_ACQ_H_SIZE_REG         IOA(CAM_BASE_ADDR + CAM_ISP_ACQ_H_SIZE_OFFSET)

/* CAM ISP_ACQ_V_SIZE Register (32 bits) */
#define CAM_ISP_ACQ_V_SIZE_OFFSET      0x414
#define CAM_ISP_ACQ_V_SIZE_REG         IOA(CAM_BASE_ADDR + CAM_ISP_ACQ_V_SIZE_OFFSET)

/* CAM ISP_ACQ_NR_FRAMES Register (32 bits) */
#define CAM_ISP_ACQ_NR_FRAMES_OFFSET   0x418
#define CAM_ISP_ACQ_NR_FRAMES_REG      IOA(CAM_BASE_ADDR + CAM_ISP_ACQ_NR_FRAMES_OFFSET)

/* CAM ISP_GAMMA_DX0 Register (32 bits) */
#define CAM_ISP_GAMMA_DX0_OFFSET       0x41C
#define CAM_ISP_GAMMA_DX0_REG          IOA(CAM_BASE_ADDR + CAM_ISP_GAMMA_DX0_OFFSET)

/* CAM ISP_GAMMA_DX1 Register (32 bits) */
#define CAM_ISP_GAMMA_DX1_OFFSET       0x420
#define CAM_ISP_GAMMA_DX1_REG          IOA(CAM_BASE_ADDR + CAM_ISP_GAMMA_DX1_OFFSET)

/* CAM ISP_GAMMA_R_Y0 Register (32 bits) */
#define CAM_ISP_GAMMA_R_Y0_OFFSET      0x424
#define CAM_ISP_GAMMA_R_Y0_REG         IOA(CAM_BASE_ADDR + CAM_ISP_GAMMA_R_Y0_OFFSET)

/* CAM ISP_GAMMA_R_Y1 Register (32 bits) */
#define CAM_ISP_GAMMA_R_Y1_OFFSET      0x428
#define CAM_ISP_GAMMA_R_Y1_REG         IOA(CAM_BASE_ADDR + CAM_ISP_GAMMA_R_Y1_OFFSET)

/* CAM ISP_GAMMA_R_Y2 Register (32 bits) */
#define CAM_ISP_GAMMA_R_Y2_OFFSET      0x42C
#define CAM_ISP_GAMMA_R_Y2_REG         IOA(CAM_BASE_ADDR + CAM_ISP_GAMMA_R_Y2_OFFSET)

/* CAM ISP_GAMMA_R_Y3 Register (32 bits) */
#define CAM_ISP_GAMMA_R_Y3_OFFSET      0x430
#define CAM_ISP_GAMMA_R_Y3_REG         IOA(CAM_BASE_ADDR + CAM_ISP_GAMMA_R_Y3_OFFSET)

/* CAM ISP_GAMMA_R_Y4 Register (32 bits) */
#define CAM_ISP_GAMMA_R_Y4_OFFSET      0x434
#define CAM_ISP_GAMMA_R_Y4_REG         IOA(CAM_BASE_ADDR + CAM_ISP_GAMMA_R_Y4_OFFSET)

/* CAM ISP_GAMMA_R_Y5 Register (32 bits) */
#define CAM_ISP_GAMMA_R_Y5_OFFSET      0x438
#define CAM_ISP_GAMMA_R_Y5_REG         IOA(CAM_BASE_ADDR + CAM_ISP_GAMMA_R_Y5_OFFSET)

/* CAM ISP_GAMMA_R_Y6 Register (32 bits) */
#define CAM_ISP_GAMMA_R_Y6_OFFSET      0x43C
#define CAM_ISP_GAMMA_R_Y6_REG         IOA(CAM_BASE_ADDR + CAM_ISP_GAMMA_R_Y6_OFFSET)

/* CAM ISP_GAMMA_R_Y7 Register (32 bits) */
#define CAM_ISP_GAMMA_R_Y7_OFFSET      0x440
#define CAM_ISP_GAMMA_R_Y7_REG         IOA(CAM_BASE_ADDR + CAM_ISP_GAMMA_R_Y7_OFFSET)

/* CAM ISP_GAMMA_R_Y8 Register (32 bits) */
#define CAM_ISP_GAMMA_R_Y8_OFFSET      0x444
#define CAM_ISP_GAMMA_R_Y8_REG         IOA(CAM_BASE_ADDR + CAM_ISP_GAMMA_R_Y8_OFFSET)

/* CAM ISP_GAMMA_R_Y9 Register (32 bits) */
#define CAM_ISP_GAMMA_R_Y9_OFFSET      0x448
#define CAM_ISP_GAMMA_R_Y9_REG         IOA(CAM_BASE_ADDR + CAM_ISP_GAMMA_R_Y9_OFFSET)

/* CAM ISP_GAMMA_R_Y10 Register (32 bits) */
#define CAM_ISP_GAMMA_R_Y10_OFFSET     0x44C
#define CAM_ISP_GAMMA_R_Y10_REG        IOA(CAM_BASE_ADDR + CAM_ISP_GAMMA_R_Y10_OFFSET)

/* CAM ISP_GAMMA_R_Y11 Register (32 bits) */
#define CAM_ISP_GAMMA_R_Y11_OFFSET     0x450
#define CAM_ISP_GAMMA_R_Y11_REG        IOA(CAM_BASE_ADDR + CAM_ISP_GAMMA_R_Y11_OFFSET)

/* CAM ISP_GAMMA_R_Y12 Register (32 bits) */
#define CAM_ISP_GAMMA_R_Y12_OFFSET     0x454
#define CAM_ISP_GAMMA_R_Y12_REG        IOA(CAM_BASE_ADDR + CAM_ISP_GAMMA_R_Y12_OFFSET)

/* CAM ISP_GAMMA_R_Y13 Register (32 bits) */
#define CAM_ISP_GAMMA_R_Y13_OFFSET     0x458
#define CAM_ISP_GAMMA_R_Y13_REG        IOA(CAM_BASE_ADDR + CAM_ISP_GAMMA_R_Y13_OFFSET)

/* CAM ISP_GAMMA_R_Y14 Register (32 bits) */
#define CAM_ISP_GAMMA_R_Y14_OFFSET     0x45C
#define CAM_ISP_GAMMA_R_Y14_REG        IOA(CAM_BASE_ADDR + CAM_ISP_GAMMA_R_Y14_OFFSET)

/* CAM ISP_GAMMA_R_Y15 Register (32 bits) */
#define CAM_ISP_GAMMA_R_Y15_OFFSET     0x460
#define CAM_ISP_GAMMA_R_Y15_REG        IOA(CAM_BASE_ADDR + CAM_ISP_GAMMA_R_Y15_OFFSET)

/* CAM ISP_GAMMA_R_Y16 Register (32 bits) */
#define CAM_ISP_GAMMA_R_Y16_OFFSET     0x464
#define CAM_ISP_GAMMA_R_Y16_REG        IOA(CAM_BASE_ADDR + CAM_ISP_GAMMA_R_Y16_OFFSET)

/* CAM ISP_GAMMA_G_Y0 Register (32 bits) */
#define CAM_ISP_GAMMA_G_Y0_OFFSET      0x468
#define CAM_ISP_GAMMA_G_Y0_REG         IOA(CAM_BASE_ADDR + CAM_ISP_GAMMA_G_Y0_OFFSET)

/* CAM ISP_GAMMA_G_Y1 Register (32 bits) */
#define CAM_ISP_GAMMA_G_Y1_OFFSET      0x46C
#define CAM_ISP_GAMMA_G_Y1_REG         IOA(CAM_BASE_ADDR + CAM_ISP_GAMMA_G_Y1_OFFSET)

/* CAM ISP_GAMMA_G_Y2 Register (32 bits) */
#define CAM_ISP_GAMMA_G_Y2_OFFSET      0x470
#define CAM_ISP_GAMMA_G_Y2_REG         IOA(CAM_BASE_ADDR + CAM_ISP_GAMMA_G_Y2_OFFSET)

/* CAM ISP_GAMMA_G_Y3 Register (32 bits) */
#define CAM_ISP_GAMMA_G_Y3_OFFSET      0x474
#define CAM_ISP_GAMMA_G_Y3_REG         IOA(CAM_BASE_ADDR + CAM_ISP_GAMMA_G_Y3_OFFSET)

/* CAM ISP_GAMMA_G_Y4 Register (32 bits) */
#define CAM_ISP_GAMMA_G_Y4_OFFSET      0x478
#define CAM_ISP_GAMMA_G_Y4_REG         IOA(CAM_BASE_ADDR + CAM_ISP_GAMMA_G_Y4_OFFSET)

/* CAM ISP_GAMMA_G_Y5 Register (32 bits) */
#define CAM_ISP_GAMMA_G_Y5_OFFSET      0x47C
#define CAM_ISP_GAMMA_G_Y5_REG         IOA(CAM_BASE_ADDR + CAM_ISP_GAMMA_G_Y5_OFFSET)

/* CAM ISP_GAMMA_G_Y6 Register (32 bits) */
#define CAM_ISP_GAMMA_G_Y6_OFFSET      0x480
#define CAM_ISP_GAMMA_G_Y6_REG         IOA(CAM_BASE_ADDR + CAM_ISP_GAMMA_G_Y6_OFFSET)

/* CAM ISP_GAMMA_G_Y7 Register (32 bits) */
#define CAM_ISP_GAMMA_G_Y7_OFFSET      0x484
#define CAM_ISP_GAMMA_G_Y7_REG         IOA(CAM_BASE_ADDR + CAM_ISP_GAMMA_G_Y7_OFFSET)

/* CAM ISP_GAMMA_G_Y8 Register (32 bits) */
#define CAM_ISP_GAMMA_G_Y8_OFFSET      0x488
#define CAM_ISP_GAMMA_G_Y8_REG         IOA(CAM_BASE_ADDR + CAM_ISP_GAMMA_G_Y8_OFFSET)

/* CAM ISP_GAMMA_G_Y9 Register (32 bits) */
#define CAM_ISP_GAMMA_G_Y9_OFFSET      0x48C
#define CAM_ISP_GAMMA_G_Y9_REG         IOA(CAM_BASE_ADDR + CAM_ISP_GAMMA_G_Y9_OFFSET)

/* CAM ISP_GAMMA_G_Y10 Register (32 bits) */
#define CAM_ISP_GAMMA_G_Y10_OFFSET     0x490
#define CAM_ISP_GAMMA_G_Y10_REG        IOA(CAM_BASE_ADDR + CAM_ISP_GAMMA_G_Y10_OFFSET)

/* CAM ISP_GAMMA_G_Y11 Register (32 bits) */
#define CAM_ISP_GAMMA_G_Y11_OFFSET     0x494
#define CAM_ISP_GAMMA_G_Y11_REG        IOA(CAM_BASE_ADDR + CAM_ISP_GAMMA_G_Y11_OFFSET)

/* CAM ISP_GAMMA_G_Y12 Register (32 bits) */
#define CAM_ISP_GAMMA_G_Y12_OFFSET     0x498
#define CAM_ISP_GAMMA_G_Y12_REG        IOA(CAM_BASE_ADDR + CAM_ISP_GAMMA_G_Y12_OFFSET)

/* CAM ISP_GAMMA_G_Y13 Register (32 bits) */
#define CAM_ISP_GAMMA_G_Y13_OFFSET     0x49C
#define CAM_ISP_GAMMA_G_Y13_REG        IOA(CAM_BASE_ADDR + CAM_ISP_GAMMA_G_Y13_OFFSET)

/* CAM ISP_GAMMA_G_Y14 Register (32 bits) */
#define CAM_ISP_GAMMA_G_Y14_OFFSET     0x4A0
#define CAM_ISP_GAMMA_G_Y14_REG        IOA(CAM_BASE_ADDR + CAM_ISP_GAMMA_G_Y14_OFFSET)

/* CAM ISP_GAMMA_G_Y15 Register (32 bits) */
#define CAM_ISP_GAMMA_G_Y15_OFFSET     0x4A4
#define CAM_ISP_GAMMA_G_Y15_REG        IOA(CAM_BASE_ADDR + CAM_ISP_GAMMA_G_Y15_OFFSET)

/* CAM ISP_GAMMA_G_Y16 Register (32 bits) */
#define CAM_ISP_GAMMA_G_Y16_OFFSET     0x4A8
#define CAM_ISP_GAMMA_G_Y16_REG        IOA(CAM_BASE_ADDR + CAM_ISP_GAMMA_G_Y16_OFFSET)

/* CAM ISP_GAMMA_B_Y0 Register (32 bits) */
#define CAM_ISP_GAMMA_B_Y0_OFFSET      0x4AC
#define CAM_ISP_GAMMA_B_Y0_REG         IOA(CAM_BASE_ADDR + CAM_ISP_GAMMA_B_Y0_OFFSET)

/* CAM ISP_GAMMA_B_Y1 Register (32 bits) */
#define CAM_ISP_GAMMA_B_Y1_OFFSET      0x4B0
#define CAM_ISP_GAMMA_B_Y1_REG         IOA(CAM_BASE_ADDR + CAM_ISP_GAMMA_B_Y1_OFFSET)

/* CAM ISP_GAMMA_B_Y2 Register (32 bits) */
#define CAM_ISP_GAMMA_B_Y2_OFFSET      0x4B4
#define CAM_ISP_GAMMA_B_Y2_REG         IOA(CAM_BASE_ADDR + CAM_ISP_GAMMA_B_Y2_OFFSET)

/* CAM ISP_GAMMA_B_Y3 Register (32 bits) */
#define CAM_ISP_GAMMA_B_Y3_OFFSET      0x4B8
#define CAM_ISP_GAMMA_B_Y3_REG         IOA(CAM_BASE_ADDR + CAM_ISP_GAMMA_B_Y3_OFFSET)

/* CAM ISP_GAMMA_B_Y4 Register (32 bits) */
#define CAM_ISP_GAMMA_B_Y4_OFFSET      0x4BC
#define CAM_ISP_GAMMA_B_Y4_REG         IOA(CAM_BASE_ADDR + CAM_ISP_GAMMA_B_Y4_OFFSET)

/* CAM ISP_GAMMA_B_Y5 Register (32 bits) */
#define CAM_ISP_GAMMA_B_Y5_OFFSET      0x4C0
#define CAM_ISP_GAMMA_B_Y5_REG         IOA(CAM_BASE_ADDR + CAM_ISP_GAMMA_B_Y5_OFFSET)

/* CAM ISP_GAMMA_B_Y6 Register (32 bits) */
#define CAM_ISP_GAMMA_B_Y6_OFFSET      0x4C4
#define CAM_ISP_GAMMA_B_Y6_REG         IOA(CAM_BASE_ADDR + CAM_ISP_GAMMA_B_Y6_OFFSET)

/* CAM ISP_GAMMA_B_Y7 Register (32 bits) */
#define CAM_ISP_GAMMA_B_Y7_OFFSET      0x4C8
#define CAM_ISP_GAMMA_B_Y7_REG         IOA(CAM_BASE_ADDR + CAM_ISP_GAMMA_B_Y7_OFFSET)

/* CAM ISP_GAMMA_B_Y8 Register (32 bits) */
#define CAM_ISP_GAMMA_B_Y8_OFFSET      0x4CC
#define CAM_ISP_GAMMA_B_Y8_REG         IOA(CAM_BASE_ADDR + CAM_ISP_GAMMA_B_Y8_OFFSET)

/* CAM ISP_GAMMA_B_Y9 Register (32 bits) */
#define CAM_ISP_GAMMA_B_Y9_OFFSET      0x4D0
#define CAM_ISP_GAMMA_B_Y9_REG         IOA(CAM_BASE_ADDR + CAM_ISP_GAMMA_B_Y9_OFFSET)

/* CAM ISP_GAMMA_B_Y10 Register (32 bits) */
#define CAM_ISP_GAMMA_B_Y10_OFFSET     0x4D4
#define CAM_ISP_GAMMA_B_Y10_REG        IOA(CAM_BASE_ADDR + CAM_ISP_GAMMA_B_Y10_OFFSET)

/* CAM ISP_GAMMA_B_Y11 Register (32 bits) */
#define CAM_ISP_GAMMA_B_Y11_OFFSET     0x4D8
#define CAM_ISP_GAMMA_B_Y11_REG        IOA(CAM_BASE_ADDR + CAM_ISP_GAMMA_B_Y11_OFFSET)

/* CAM ISP_GAMMA_B_Y12 Register (32 bits) */
#define CAM_ISP_GAMMA_B_Y12_OFFSET     0x4DC
#define CAM_ISP_GAMMA_B_Y12_REG        IOA(CAM_BASE_ADDR + CAM_ISP_GAMMA_B_Y12_OFFSET)

/* CAM ISP_GAMMA_B_Y13 Register (32 bits) */
#define CAM_ISP_GAMMA_B_Y13_OFFSET     0x4E0
#define CAM_ISP_GAMMA_B_Y13_REG        IOA(CAM_BASE_ADDR + CAM_ISP_GAMMA_B_Y13_OFFSET)

/* CAM ISP_GAMMA_B_Y14 Register (32 bits) */
#define CAM_ISP_GAMMA_B_Y14_OFFSET     0x4E4
#define CAM_ISP_GAMMA_B_Y14_REG        IOA(CAM_BASE_ADDR + CAM_ISP_GAMMA_B_Y14_OFFSET)

/* CAM ISP_GAMMA_B_Y15 Register (32 bits) */
#define CAM_ISP_GAMMA_B_Y15_OFFSET     0x4E8
#define CAM_ISP_GAMMA_B_Y15_REG        IOA(CAM_BASE_ADDR + CAM_ISP_GAMMA_B_Y15_OFFSET)

/* CAM ISP_GAMMA_B_Y16 Register (32 bits) */
#define CAM_ISP_GAMMA_B_Y16_OFFSET     0x4EC
#define CAM_ISP_GAMMA_B_Y16_REG        IOA(CAM_BASE_ADDR + CAM_ISP_GAMMA_B_Y16_OFFSET)

/* CAM ISP_AWB_PROP Register (32 bits) */
#define CAM_ISP_AWB_PROP_OFFSET        0x510
#define CAM_ISP_AWB_PROP_REG           IOA(CAM_BASE_ADDR + CAM_ISP_AWB_PROP_OFFSET)

/* CAM ISP_AWB_H_OFFS Register (32 bits) */
#define CAM_ISP_AWB_H_OFFS_OFFSET      0x514
#define CAM_ISP_AWB_H_OFFS_REG         IOA(CAM_BASE_ADDR + CAM_ISP_AWB_H_OFFS_OFFSET)

/* CAM ISP_AWB_V_OFFS Register (32 bits) */
#define CAM_ISP_AWB_V_OFFS_OFFSET      0x518
#define CAM_ISP_AWB_V_OFFS_REG         IOA(CAM_BASE_ADDR + CAM_ISP_AWB_V_OFFS_OFFSET)

/* CAM ISP_AWB_H_SIZE Register (32 bits) */
#define CAM_ISP_AWB_H_SIZE_OFFSET      0x51C
#define CAM_ISP_AWB_H_SIZE_REG         IOA(CAM_BASE_ADDR + CAM_ISP_AWB_H_SIZE_OFFSET)

/* CAM ISP_AWB_V_SIZE Register (32 bits) */
#define CAM_ISP_AWB_V_SIZE_OFFSET      0x520
#define CAM_ISP_AWB_V_SIZE_REG         IOA(CAM_BASE_ADDR + CAM_ISP_AWB_V_SIZE_OFFSET)

/* CAM ISP_AWB_FRAMES Register (32 bits) */
#define CAM_ISP_AWB_FRAMES_OFFSET      0x524
#define CAM_ISP_AWB_FRAMES_REG         IOA(CAM_BASE_ADDR + CAM_ISP_AWB_FRAMES_OFFSET)

/* CAM ISP_AWB_REF Register (32 bits) */
#define CAM_ISP_AWB_REF_OFFSET         0x528
#define CAM_ISP_AWB_REF_REG            IOA(CAM_BASE_ADDR + CAM_ISP_AWB_REF_OFFSET)

/* CAM ISP_AWB_THRESH Register (32 bits) */
#define CAM_ISP_AWB_THRESH_OFFSET      0x52C
#define CAM_ISP_AWB_THRESH_REG         IOA(CAM_BASE_ADDR + CAM_ISP_AWB_THRESH_OFFSET)

/* CAM ISP_AWB_GAIN_G Register (32 bits) */
#define CAM_ISP_AWB_GAIN_G_OFFSET      0x538
#define CAM_ISP_AWB_GAIN_G_REG         IOA(CAM_BASE_ADDR + CAM_ISP_AWB_GAIN_G_OFFSET)

/* CAM ISP_AWB_GAIN_RB Register (32 bits) */
#define CAM_ISP_AWB_GAIN_RB_OFFSET     0x53C
#define CAM_ISP_AWB_GAIN_RB_REG        IOA(CAM_BASE_ADDR + CAM_ISP_AWB_GAIN_RB_OFFSET)

/* CAM ISP_AWB_WHITE_CNT Register (32 bits) */
#define CAM_ISP_AWB_WHITE_CNT_OFFSET   0x540
#define CAM_ISP_AWB_WHITE_CNT_REG      IOA(CAM_BASE_ADDR + CAM_ISP_AWB_WHITE_CNT_OFFSET)

/* CAM ISP_AWB_MEAN Register (32 bits) */
#define CAM_ISP_AWB_MEAN_OFFSET        0x544
#define CAM_ISP_AWB_MEAN_REG           IOA(CAM_BASE_ADDR + CAM_ISP_AWB_MEAN_OFFSET)

/* CAM ISP_CC_COEFF0 Register (32 bits) */
#define CAM_ISP_CC_COEFF0_OFFSET       0x570
#define CAM_ISP_CC_COEFF0_REG          IOA(CAM_BASE_ADDR + CAM_ISP_CC_COEFF0_OFFSET)

/* CAM ISP_CC_COEFF1 Register (32 bits) */
#define CAM_ISP_CC_COEFF1_OFFSET       0x574
#define CAM_ISP_CC_COEFF1_REG          IOA(CAM_BASE_ADDR + CAM_ISP_CC_COEFF1_OFFSET)

/* CAM ISP_CC_COEFF2 Register (32 bits) */
#define CAM_ISP_CC_COEFF2_OFFSET       0x578
#define CAM_ISP_CC_COEFF2_REG          IOA(CAM_BASE_ADDR + CAM_ISP_CC_COEFF2_OFFSET)

/* CAM ISP_CC_COEFF3 Register (32 bits) */
#define CAM_ISP_CC_COEFF3_OFFSET       0x57C
#define CAM_ISP_CC_COEFF3_REG          IOA(CAM_BASE_ADDR + CAM_ISP_CC_COEFF3_OFFSET)

/* CAM ISP_CC_COEFF4 Register (32 bits) */
#define CAM_ISP_CC_COEFF4_OFFSET       0x580
#define CAM_ISP_CC_COEFF4_REG          IOA(CAM_BASE_ADDR + CAM_ISP_CC_COEFF4_OFFSET)

/* CAM ISP_CC_COEFF5 Register (32 bits) */
#define CAM_ISP_CC_COEFF5_OFFSET       0x584
#define CAM_ISP_CC_COEFF5_REG          IOA(CAM_BASE_ADDR + CAM_ISP_CC_COEFF5_OFFSET)

/* CAM ISP_CC_COEFF6 Register (32 bits) */
#define CAM_ISP_CC_COEFF6_OFFSET       0x588
#define CAM_ISP_CC_COEFF6_REG          IOA(CAM_BASE_ADDR + CAM_ISP_CC_COEFF6_OFFSET)

/* CAM ISP_CC_COEFF7 Register (32 bits) */
#define CAM_ISP_CC_COEFF7_OFFSET       0x58C
#define CAM_ISP_CC_COEFF7_REG          IOA(CAM_BASE_ADDR + CAM_ISP_CC_COEFF7_OFFSET)

/* CAM ISP_CC_COEFF8 Register (32 bits) */
#define CAM_ISP_CC_COEFF8_OFFSET       0x590
#define CAM_ISP_CC_COEFF8_REG          IOA(CAM_BASE_ADDR + CAM_ISP_CC_COEFF8_OFFSET)

/* CAM ISP_OUT_H_OFFS Register (32 bits) */
#define CAM_ISP_OUT_H_OFFS_OFFSET      0x594
#define CAM_ISP_OUT_H_OFFS_REG         IOA(CAM_BASE_ADDR + CAM_ISP_OUT_H_OFFS_OFFSET)

/* CAM ISP_OUT_V_OFFS Register (32 bits) */
#define CAM_ISP_OUT_V_OFFS_OFFSET      0x598
#define CAM_ISP_OUT_V_OFFS_REG         IOA(CAM_BASE_ADDR + CAM_ISP_OUT_V_OFFS_OFFSET)

/* CAM ISP_OUT_H_SIZE Register (32 bits) */
#define CAM_ISP_OUT_H_SIZE_OFFSET      0x59C
#define CAM_ISP_OUT_H_SIZE_REG         IOA(CAM_BASE_ADDR + CAM_ISP_OUT_H_SIZE_OFFSET)

/* CAM ISP_OUT_V_SIZE Register (32 bits) */
#define CAM_ISP_OUT_V_SIZE_OFFSET      0x5A0
#define CAM_ISP_OUT_V_SIZE_REG         IOA(CAM_BASE_ADDR + CAM_ISP_OUT_V_SIZE_OFFSET)

/* CAM ISP_DEMOSAIC Register (32 bits) */
#define CAM_ISP_DEMOSAIC_OFFSET        0x5A4
#define CAM_ISP_DEMOSAIC_REG           IOA(CAM_BASE_ADDR + CAM_ISP_DEMOSAIC_OFFSET)

/* CAM ISP_FLAGS_SHD Register (32 bits) */
#define CAM_ISP_FLAGS_SHD_OFFSET       0x5A8
#define CAM_ISP_FLAGS_SHD_REG          IOA(CAM_BASE_ADDR + CAM_ISP_FLAGS_SHD_OFFSET)

/* CAM ISP_OUT_H_OFFS_SHD Register (32 bits) */
#define CAM_ISP_OUT_H_OFFS_SHD_OFFSET  0x5AC
#define CAM_ISP_OUT_H_OFFS_SHD_REG     IOA(CAM_BASE_ADDR + CAM_ISP_OUT_H_OFFS_SHD_OFFSET)

/* CAM ISP_OUT_V_OFFS_SHD Register (32 bits) */
#define CAM_ISP_OUT_V_OFFS_SHD_OFFSET  0x5B0
#define CAM_ISP_OUT_V_OFFS_SHD_REG     IOA(CAM_BASE_ADDR + CAM_ISP_OUT_V_OFFS_SHD_OFFSET)

/* CAM ISP_OUT_H_SIZE_SHD Register (32 bits) */
#define CAM_ISP_OUT_H_SIZE_SHD_OFFSET  0x5B4
#define CAM_ISP_OUT_H_SIZE_SHD_REG     IOA(CAM_BASE_ADDR + CAM_ISP_OUT_H_SIZE_SHD_OFFSET)

/* CAM ISP_OUT_V_SIZE_SHD Register (32 bits) */
#define CAM_ISP_OUT_V_SIZE_SHD_OFFSET  0x5B8
#define CAM_ISP_OUT_V_SIZE_SHD_REG     IOA(CAM_BASE_ADDR + CAM_ISP_OUT_V_SIZE_SHD_OFFSET)

/* CAM ISP_IMSC Register (32 bits) */
#define CAM_ISP_IMSC_OFFSET            0x5BC
#define CAM_ISP_IMSC_REG               IOA(CAM_BASE_ADDR + CAM_ISP_IMSC_OFFSET)

/* CAM ISP_RIS Register (32 bits) */
#define CAM_ISP_RIS_OFFSET             0x5C0
#define CAM_ISP_RIS_REG                IOA(CAM_BASE_ADDR + CAM_ISP_RIS_OFFSET)

/* CAM ISP_MIS Register (32 bits) */
#define CAM_ISP_MIS_OFFSET             0x5C4
#define CAM_ISP_MIS_REG                IOA(CAM_BASE_ADDR + CAM_ISP_MIS_OFFSET)

/* CAM ISP_ICR Register (32 bits) */
#define CAM_ISP_ICR_OFFSET             0x5C8
#define CAM_ISP_ICR_REG                IOA(CAM_BASE_ADDR + CAM_ISP_ICR_OFFSET)

/* CAM ISP_ISR Register (32 bits) */
#define CAM_ISP_ISR_OFFSET             0x5CC
#define CAM_ISP_ISR_REG                IOA(CAM_BASE_ADDR + CAM_ISP_ISR_OFFSET)

/* CAM ISP_CT_COEFF0 Register (32 bits) */
#define CAM_ISP_CT_COEFF0_OFFSET       0x5D0
#define CAM_ISP_CT_COEFF0_REG          IOA(CAM_BASE_ADDR + CAM_ISP_CT_COEFF0_OFFSET)

/* CAM ISP_CT_COEFF1 Register (32 bits) */
#define CAM_ISP_CT_COEFF1_OFFSET       0x5D4
#define CAM_ISP_CT_COEFF1_REG          IOA(CAM_BASE_ADDR + CAM_ISP_CT_COEFF1_OFFSET)

/* CAM ISP_CT_COEFF2 Register (32 bits) */
#define CAM_ISP_CT_COEFF2_OFFSET       0x5D8
#define CAM_ISP_CT_COEFF2_REG          IOA(CAM_BASE_ADDR + CAM_ISP_CT_COEFF2_OFFSET)

/* CAM ISP_CT_COEFF3 Register (32 bits) */
#define CAM_ISP_CT_COEFF3_OFFSET       0x5DC
#define CAM_ISP_CT_COEFF3_REG          IOA(CAM_BASE_ADDR + CAM_ISP_CT_COEFF3_OFFSET)

/* CAM ISP_CT_COEFF4 Register (32 bits) */
#define CAM_ISP_CT_COEFF4_OFFSET       0x5E0
#define CAM_ISP_CT_COEFF4_REG          IOA(CAM_BASE_ADDR + CAM_ISP_CT_COEFF4_OFFSET)

/* CAM ISP_CT_COEFF5 Register (32 bits) */
#define CAM_ISP_CT_COEFF5_OFFSET       0x5E4
#define CAM_ISP_CT_COEFF5_REG          IOA(CAM_BASE_ADDR + CAM_ISP_CT_COEFF5_OFFSET)

/* CAM ISP_CT_COEFF6 Register (32 bits) */
#define CAM_ISP_CT_COEFF6_OFFSET       0x5E8
#define CAM_ISP_CT_COEFF6_REG          IOA(CAM_BASE_ADDR + CAM_ISP_CT_COEFF6_OFFSET)

/* CAM ISP_CT_COEFF7 Register (32 bits) */
#define CAM_ISP_CT_COEFF7_OFFSET       0x5EC
#define CAM_ISP_CT_COEFF7_REG          IOA(CAM_BASE_ADDR + CAM_ISP_CT_COEFF7_OFFSET)

/* CAM ISP_CT_COEFF8 Register (32 bits) */
#define CAM_ISP_CT_COEFF8_OFFSET       0x5F0
#define CAM_ISP_CT_COEFF8_REG          IOA(CAM_BASE_ADDR + CAM_ISP_CT_COEFF8_OFFSET)

/* CAM ISP_GAMMA_OUT_MODE Register (32 bits) */
#define CAM_ISP_GAMMA_OUT_MODE_OFFSET  0x5F4
#define CAM_ISP_GAMMA_OUT_MODE_REG     IOA(CAM_BASE_ADDR + CAM_ISP_GAMMA_OUT_MODE_OFFSET)

/* CAM ISP_GAMMA_OUT_Y0 Register (32 bits) */
#define CAM_ISP_GAMMA_OUT_Y0_OFFSET    0x5F8
#define CAM_ISP_GAMMA_OUT_Y0_REG       IOA(CAM_BASE_ADDR + CAM_ISP_GAMMA_OUT_Y0_OFFSET)

/* CAM ISP_GAMMA_OUT_Y1 Register (32 bits) */
#define CAM_ISP_GAMMA_OUT_Y1_OFFSET    0x5FC
#define CAM_ISP_GAMMA_OUT_Y1_REG       IOA(CAM_BASE_ADDR + CAM_ISP_GAMMA_OUT_Y1_OFFSET)

/* CAM ISP_GAMMA_OUT_Y2 Register (32 bits) */
#define CAM_ISP_GAMMA_OUT_Y2_OFFSET    0x600
#define CAM_ISP_GAMMA_OUT_Y2_REG       IOA(CAM_BASE_ADDR + CAM_ISP_GAMMA_OUT_Y2_OFFSET)

/* CAM ISP_GAMMA_OUT_Y3 Register (32 bits) */
#define CAM_ISP_GAMMA_OUT_Y3_OFFSET    0x604
#define CAM_ISP_GAMMA_OUT_Y3_REG       IOA(CAM_BASE_ADDR + CAM_ISP_GAMMA_OUT_Y3_OFFSET)

/* CAM ISP_GAMMA_OUT_Y4 Register (32 bits) */
#define CAM_ISP_GAMMA_OUT_Y4_OFFSET    0x608
#define CAM_ISP_GAMMA_OUT_Y4_REG       IOA(CAM_BASE_ADDR + CAM_ISP_GAMMA_OUT_Y4_OFFSET)

/* CAM ISP_GAMMA_OUT_Y5 Register (32 bits) */
#define CAM_ISP_GAMMA_OUT_Y5_OFFSET    0x60C
#define CAM_ISP_GAMMA_OUT_Y5_REG       IOA(CAM_BASE_ADDR + CAM_ISP_GAMMA_OUT_Y5_OFFSET)

/* CAM ISP_GAMMA_OUT_Y6 Register (32 bits) */
#define CAM_ISP_GAMMA_OUT_Y6_OFFSET    0x610
#define CAM_ISP_GAMMA_OUT_Y6_REG       IOA(CAM_BASE_ADDR + CAM_ISP_GAMMA_OUT_Y6_OFFSET)

/* CAM ISP_GAMMA_OUT_Y7 Register (32 bits) */
#define CAM_ISP_GAMMA_OUT_Y7_OFFSET    0x614
#define CAM_ISP_GAMMA_OUT_Y7_REG       IOA(CAM_BASE_ADDR + CAM_ISP_GAMMA_OUT_Y7_OFFSET)

/* CAM ISP_GAMMA_OUT_Y8 Register (32 bits) */
#define CAM_ISP_GAMMA_OUT_Y8_OFFSET    0x618
#define CAM_ISP_GAMMA_OUT_Y8_REG       IOA(CAM_BASE_ADDR + CAM_ISP_GAMMA_OUT_Y8_OFFSET)

/* CAM ISP_GAMMA_OUT_Y9 Register (32 bits) */
#define CAM_ISP_GAMMA_OUT_Y9_OFFSET    0x61C
#define CAM_ISP_GAMMA_OUT_Y9_REG       IOA(CAM_BASE_ADDR + CAM_ISP_GAMMA_OUT_Y9_OFFSET)

/* CAM ISP_GAMMA_OUT_Y10 Register (32 bits) */
#define CAM_ISP_GAMMA_OUT_Y10_OFFSET   0x620
#define CAM_ISP_GAMMA_OUT_Y10_REG      IOA(CAM_BASE_ADDR + CAM_ISP_GAMMA_OUT_Y10_OFFSET)

/* CAM ISP_GAMMA_OUT_Y11 Register (32 bits) */
#define CAM_ISP_GAMMA_OUT_Y11_OFFSET   0x624
#define CAM_ISP_GAMMA_OUT_Y11_REG      IOA(CAM_BASE_ADDR + CAM_ISP_GAMMA_OUT_Y11_OFFSET)

/* CAM ISP_GAMMA_OUT_Y12 Register (32 bits) */
#define CAM_ISP_GAMMA_OUT_Y12_OFFSET   0x628
#define CAM_ISP_GAMMA_OUT_Y12_REG      IOA(CAM_BASE_ADDR + CAM_ISP_GAMMA_OUT_Y12_OFFSET)

/* CAM ISP_GAMMA_OUT_Y13 Register (32 bits) */
#define CAM_ISP_GAMMA_OUT_Y13_OFFSET   0x62C
#define CAM_ISP_GAMMA_OUT_Y13_REG      IOA(CAM_BASE_ADDR + CAM_ISP_GAMMA_OUT_Y13_OFFSET)

/* CAM ISP_GAMMA_OUT_Y14 Register (32 bits) */
#define CAM_ISP_GAMMA_OUT_Y14_OFFSET   0x630
#define CAM_ISP_GAMMA_OUT_Y14_REG      IOA(CAM_BASE_ADDR + CAM_ISP_GAMMA_OUT_Y14_OFFSET)

/* CAM ISP_GAMMA_OUT_Y15 Register (32 bits) */
#define CAM_ISP_GAMMA_OUT_Y15_OFFSET   0x634
#define CAM_ISP_GAMMA_OUT_Y15_REG      IOA(CAM_BASE_ADDR + CAM_ISP_GAMMA_OUT_Y15_OFFSET)

/* CAM ISP_GAMMA_OUT_Y16 Register (32 bits) */
#define CAM_ISP_GAMMA_OUT_Y16_OFFSET   0x638
#define CAM_ISP_GAMMA_OUT_Y16_REG      IOA(CAM_BASE_ADDR + CAM_ISP_GAMMA_OUT_Y16_OFFSET)

/* CAM ISP_ERR Register (32 bits) */
#define CAM_ISP_ERR_OFFSET             0x63C
#define CAM_ISP_ERR_REG                IOA(CAM_BASE_ADDR + CAM_ISP_ERR_OFFSET)

/* CAM ISP_ERR_CLR Register (32 bits) */
#define CAM_ISP_ERR_CLR_OFFSET         0x640
#define CAM_ISP_ERR_CLR_REG            IOA(CAM_BASE_ADDR + CAM_ISP_ERR_CLR_OFFSET)

/* CAM ISP_FRAME_COUNT Register (32 bits) */
#define CAM_ISP_FRAME_COUNT_OFFSET     0x644
#define CAM_ISP_FRAME_COUNT_REG        IOA(CAM_BASE_ADDR + CAM_ISP_FRAME_COUNT_OFFSET)

/* CAM ISP_CT_OFFSET_R Register (32 bits) */
#define CAM_ISP_CT_OFFSET_R_OFFSET     0x648
#define CAM_ISP_CT_OFFSET_R_REG        IOA(CAM_BASE_ADDR + CAM_ISP_CT_OFFSET_R_OFFSET)

/* CAM ISP_CT_OFFSET_G Register (32 bits) */
#define CAM_ISP_CT_OFFSET_G_OFFSET     0x64C
#define CAM_ISP_CT_OFFSET_G_REG        IOA(CAM_BASE_ADDR + CAM_ISP_CT_OFFSET_G_OFFSET)

/* CAM ISP_CT_OFFSET_B Register (32 bits) */
#define CAM_ISP_CT_OFFSET_B_OFFSET     0x650
#define CAM_ISP_CT_OFFSET_B_REG        IOA(CAM_BASE_ADDR + CAM_ISP_CT_OFFSET_B_OFFSET)

/* CAM ISP_FLASH_CMD Register (32 bits) */
#define CAM_ISP_FLASH_CMD_OFFSET       0x660
#define CAM_ISP_FLASH_CMD_REG          IOA(CAM_BASE_ADDR + CAM_ISP_FLASH_CMD_OFFSET)

/* CAM ISP_FLASH_CONFIG Register (32 bits) */
#define CAM_ISP_FLASH_CONFIG_OFFSET    0x664
#define CAM_ISP_FLASH_CONFIG_REG       IOA(CAM_BASE_ADDR + CAM_ISP_FLASH_CONFIG_OFFSET)

/* CAM ISP_FLASH_PREDIV Register (32 bits) */
#define CAM_ISP_FLASH_PREDIV_OFFSET    0x668
#define CAM_ISP_FLASH_PREDIV_REG       IOA(CAM_BASE_ADDR + CAM_ISP_FLASH_PREDIV_OFFSET)

/* CAM ISP_FLASH_DELAY Register (32 bits) */
#define CAM_ISP_FLASH_DELAY_OFFSET     0x66C
#define CAM_ISP_FLASH_DELAY_REG        IOA(CAM_BASE_ADDR + CAM_ISP_FLASH_DELAY_OFFSET)

/* CAM ISP_FLASH_TIME Register (32 bits) */
#define CAM_ISP_FLASH_TIME_OFFSET      0x670
#define CAM_ISP_FLASH_TIME_REG         IOA(CAM_BASE_ADDR + CAM_ISP_FLASH_TIME_OFFSET)

/* CAM ISP_FLASH_MAXP Register (32 bits) */
#define CAM_ISP_FLASH_MAXP_OFFSET      0x674
#define CAM_ISP_FLASH_MAXP_REG         IOA(CAM_BASE_ADDR + CAM_ISP_FLASH_MAXP_OFFSET)

/* CAM C_PROC_CTRL Register (32 bits) */
#define CAM_C_PROC_CTRL_OFFSET         0x800
#define CAM_C_PROC_CTRL_REG            IOA(CAM_BASE_ADDR + CAM_C_PROC_CTRL_OFFSET)

/* CAM C_PROC_CONTRAST Register (32 bits) */
#define CAM_C_PROC_CONTRAST_OFFSET     0x804
#define CAM_C_PROC_CONTRAST_REG        IOA(CAM_BASE_ADDR + CAM_C_PROC_CONTRAST_OFFSET)

/* CAM C_PROC_BRIGHTNESS Register (32 bits) */
#define CAM_C_PROC_BRIGHTNESS_OFFSET   0x808
#define CAM_C_PROC_BRIGHTNESS_REG      IOA(CAM_BASE_ADDR + CAM_C_PROC_BRIGHTNESS_OFFSET)

/* CAM C_PROC_SATURATION Register (32 bits) */
#define CAM_C_PROC_SATURATION_OFFSET   0x80C
#define CAM_C_PROC_SATURATION_REG      IOA(CAM_BASE_ADDR + CAM_C_PROC_SATURATION_OFFSET)

/* CAM C_PROC_HUE Register (32 bits) */
#define CAM_C_PROC_HUE_OFFSET          0x810
#define CAM_C_PROC_HUE_REG             IOA(CAM_BASE_ADDR + CAM_C_PROC_HUE_OFFSET)

/* CAM MRSZ_CTRL Register (32 bits) */
#define CAM_MRSZ_CTRL_OFFSET           0xC00
#define CAM_MRSZ_CTRL_REG              IOA(CAM_BASE_ADDR + CAM_MRSZ_CTRL_OFFSET)

/* CAM MRSZ_SCALE_HY Register (32 bits) */
#define CAM_MRSZ_SCALE_HY_OFFSET       0xC04
#define CAM_MRSZ_SCALE_HY_REG          IOA(CAM_BASE_ADDR + CAM_MRSZ_SCALE_HY_OFFSET)

/* CAM MRSZ_SCALE_HCB Register (32 bits) */
#define CAM_MRSZ_SCALE_HCB_OFFSET      0xC08
#define CAM_MRSZ_SCALE_HCB_REG         IOA(CAM_BASE_ADDR + CAM_MRSZ_SCALE_HCB_OFFSET)

/* CAM MRSZ_SCALE_HCR Register (32 bits) */
#define CAM_MRSZ_SCALE_HCR_OFFSET      0xC0C
#define CAM_MRSZ_SCALE_HCR_REG         IOA(CAM_BASE_ADDR + CAM_MRSZ_SCALE_HCR_OFFSET)

/* CAM MRSZ_SCALE_VY Register (32 bits) */
#define CAM_MRSZ_SCALE_VY_OFFSET       0xC10
#define CAM_MRSZ_SCALE_VY_REG          IOA(CAM_BASE_ADDR + CAM_MRSZ_SCALE_VY_OFFSET)

/* CAM MRSZ_SCALE_VC Register (32 bits) */
#define CAM_MRSZ_SCALE_VC_OFFSET       0xC14
#define CAM_MRSZ_SCALE_VC_REG          IOA(CAM_BASE_ADDR + CAM_MRSZ_SCALE_VC_OFFSET)

/* CAM MRSZ_PHASE_HY Register (32 bits) */
#define CAM_MRSZ_PHASE_HY_OFFSET       0xC18
#define CAM_MRSZ_PHASE_HY_REG          IOA(CAM_BASE_ADDR + CAM_MRSZ_PHASE_HY_OFFSET)

/* CAM MRSZ_PHASE_HC Register (32 bits) */
#define CAM_MRSZ_PHASE_HC_OFFSET       0xC1C
#define CAM_MRSZ_PHASE_HC_REG          IOA(CAM_BASE_ADDR + CAM_MRSZ_PHASE_HC_OFFSET)

/* CAM MRSZ_PHASE_VY Register (32 bits) */
#define CAM_MRSZ_PHASE_VY_OFFSET       0xC20
#define CAM_MRSZ_PHASE_VY_REG          IOA(CAM_BASE_ADDR + CAM_MRSZ_PHASE_VY_OFFSET)

/* CAM MRSZ_PHASE_VC Register (32 bits) */
#define CAM_MRSZ_PHASE_VC_OFFSET       0xC24
#define CAM_MRSZ_PHASE_VC_REG          IOA(CAM_BASE_ADDR + CAM_MRSZ_PHASE_VC_OFFSET)

/* CAM MRSZ_SCALE_LUT_ADDR Register (32 bits) */
#define CAM_MRSZ_SCALE_LUT_ADDR_OFFSET 0xC28
#define CAM_MRSZ_SCALE_LUT_ADDR_REG    IOA(CAM_BASE_ADDR + CAM_MRSZ_SCALE_LUT_ADDR_OFFSET)

/* CAM MRSZ_SCALE_LUT Register (32 bits) */
#define CAM_MRSZ_SCALE_LUT_OFFSET      0xC2C
#define CAM_MRSZ_SCALE_LUT_REG         IOA(CAM_BASE_ADDR + CAM_MRSZ_SCALE_LUT_OFFSET)

/* CAM MRSZ_CTRL_SHD Register (32 bits) */
#define CAM_MRSZ_CTRL_SHD_OFFSET       0xC30
#define CAM_MRSZ_CTRL_SHD_REG          IOA(CAM_BASE_ADDR + CAM_MRSZ_CTRL_SHD_OFFSET)

/* CAM MRSZ_SCALE_HY_SHD Register (32 bits) */
#define CAM_MRSZ_SCALE_HY_SHD_OFFSET   0xC34
#define CAM_MRSZ_SCALE_HY_SHD_REG      IOA(CAM_BASE_ADDR + CAM_MRSZ_SCALE_HY_SHD_OFFSET)

/* CAM MRSZ_SCALE_HCB_SHD Register (32 bits) */
#define CAM_MRSZ_SCALE_HCB_SHD_OFFSET  0xC38
#define CAM_MRSZ_SCALE_HCB_SHD_REG     IOA(CAM_BASE_ADDR + CAM_MRSZ_SCALE_HCB_SHD_OFFSET)

/* CAM MRSZ_SCALE_HCR_SHD Register (32 bits) */
#define CAM_MRSZ_SCALE_HCR_SHD_OFFSET  0xC3C
#define CAM_MRSZ_SCALE_HCR_SHD_REG     IOA(CAM_BASE_ADDR + CAM_MRSZ_SCALE_HCR_SHD_OFFSET)

/* CAM MRSZ_SCALE_VY_SHD Register (32 bits) */
#define CAM_MRSZ_SCALE_VY_SHD_OFFSET   0xC40
#define CAM_MRSZ_SCALE_VY_SHD_REG      IOA(CAM_BASE_ADDR + CAM_MRSZ_SCALE_VY_SHD_OFFSET)

/* CAM MRSZ_SCALE_VC_SHD Register (32 bits) */
#define CAM_MRSZ_SCALE_VC_SHD_OFFSET   0xC44
#define CAM_MRSZ_SCALE_VC_SHD_REG      IOA(CAM_BASE_ADDR + CAM_MRSZ_SCALE_VC_SHD_OFFSET)

/* CAM MRSZ_PHASE_HY_SHD Register (32 bits) */
#define CAM_MRSZ_PHASE_HY_SHD_OFFSET   0xC48
#define CAM_MRSZ_PHASE_HY_SHD_REG      IOA(CAM_BASE_ADDR + CAM_MRSZ_PHASE_HY_SHD_OFFSET)

/* CAM MRSZ_PHASE_HC_SHD Register (32 bits) */
#define CAM_MRSZ_PHASE_HC_SHD_OFFSET   0xC4C
#define CAM_MRSZ_PHASE_HC_SHD_REG      IOA(CAM_BASE_ADDR + CAM_MRSZ_PHASE_HC_SHD_OFFSET)

/* CAM MRSZ_PHASE_VY_SHD Register (32 bits) */
#define CAM_MRSZ_PHASE_VY_SHD_OFFSET   0xC50
#define CAM_MRSZ_PHASE_VY_SHD_REG      IOA(CAM_BASE_ADDR + CAM_MRSZ_PHASE_VY_SHD_OFFSET)

/* CAM MRSZ_PHASE_VC_SHD Register (32 bits) */
#define CAM_MRSZ_PHASE_VC_SHD_OFFSET   0xC54
#define CAM_MRSZ_PHASE_VC_SHD_REG      IOA(CAM_BASE_ADDR + CAM_MRSZ_PHASE_VC_SHD_OFFSET)

/* CAM SRSZ_CTRL Register (32 bits) */
#define CAM_SRSZ_CTRL_OFFSET           0x1000
#define CAM_SRSZ_CTRL_REG              IOA(CAM_BASE_ADDR + CAM_SRSZ_CTRL_OFFSET)

/* CAM SRSZ_SCALE_HY Register (32 bits) */
#define CAM_SRSZ_SCALE_HY_OFFSET       0x1004
#define CAM_SRSZ_SCALE_HY_REG          IOA(CAM_BASE_ADDR + CAM_SRSZ_SCALE_HY_OFFSET)

/* CAM SRSZ_SCALE_HCB Register (32 bits) */
#define CAM_SRSZ_SCALE_HCB_OFFSET      0x1008
#define CAM_SRSZ_SCALE_HCB_REG         IOA(CAM_BASE_ADDR + CAM_SRSZ_SCALE_HCB_OFFSET)

/* CAM SRSZ_SCALE_HCR Register (32 bits) */
#define CAM_SRSZ_SCALE_HCR_OFFSET      0x100C
#define CAM_SRSZ_SCALE_HCR_REG         IOA(CAM_BASE_ADDR + CAM_SRSZ_SCALE_HCR_OFFSET)

/* CAM SRSZ_SCALE_VY Register (32 bits) */
#define CAM_SRSZ_SCALE_VY_OFFSET       0x1010
#define CAM_SRSZ_SCALE_VY_REG          IOA(CAM_BASE_ADDR + CAM_SRSZ_SCALE_VY_OFFSET)

/* CAM SRSZ_SCALE_VC Register (32 bits) */
#define CAM_SRSZ_SCALE_VC_OFFSET       0x1014
#define CAM_SRSZ_SCALE_VC_REG          IOA(CAM_BASE_ADDR + CAM_SRSZ_SCALE_VC_OFFSET)

/* CAM SRSZ_PHASE_HY Register (32 bits) */
#define CAM_SRSZ_PHASE_HY_OFFSET       0x1018
#define CAM_SRSZ_PHASE_HY_REG          IOA(CAM_BASE_ADDR + CAM_SRSZ_PHASE_HY_OFFSET)

/* CAM SRSZ_PHASE_HC Register (32 bits) */
#define CAM_SRSZ_PHASE_HC_OFFSET       0x101C
#define CAM_SRSZ_PHASE_HC_REG          IOA(CAM_BASE_ADDR + CAM_SRSZ_PHASE_HC_OFFSET)

/* CAM SRSZ_PHASE_VY Register (32 bits) */
#define CAM_SRSZ_PHASE_VY_OFFSET       0x1020
#define CAM_SRSZ_PHASE_VY_REG          IOA(CAM_BASE_ADDR + CAM_SRSZ_PHASE_VY_OFFSET)

/* CAM SRSZ_PHASE_VC Register (32 bits) */
#define CAM_SRSZ_PHASE_VC_OFFSET       0x1024
#define CAM_SRSZ_PHASE_VC_REG          IOA(CAM_BASE_ADDR + CAM_SRSZ_PHASE_VC_OFFSET)

/* CAM SRSZ_SCALE_LUT_ADDR Register (32 bits) */
#define CAM_SRSZ_SCALE_LUT_ADDR_OFFSET 0x1028
#define CAM_SRSZ_SCALE_LUT_ADDR_REG    IOA(CAM_BASE_ADDR + CAM_SRSZ_SCALE_LUT_ADDR_OFFSET)

/* CAM SRSZ_SCALE_LUT Register (32 bits) */
#define CAM_SRSZ_SCALE_LUT_OFFSET      0x102C
#define CAM_SRSZ_SCALE_LUT_REG         IOA(CAM_BASE_ADDR + CAM_SRSZ_SCALE_LUT_OFFSET)

/* CAM SRSZ_CTRL_SHD Register (32 bits) */
#define CAM_SRSZ_CTRL_SHD_OFFSET       0x1030
#define CAM_SRSZ_CTRL_SHD_REG          IOA(CAM_BASE_ADDR + CAM_SRSZ_CTRL_SHD_OFFSET)

/* CAM SRSZ_SCALE_HY_SHD Register (32 bits) */
#define CAM_SRSZ_SCALE_HY_SHD_OFFSET   0x1034
#define CAM_SRSZ_SCALE_HY_SHD_REG      IOA(CAM_BASE_ADDR + CAM_SRSZ_SCALE_HY_SHD_OFFSET)

/* CAM SRSZ_SCALE_HCB_SHD Register (32 bits) */
#define CAM_SRSZ_SCALE_HCB_SHD_OFFSET  0x1038
#define CAM_SRSZ_SCALE_HCB_SHD_REG     IOA(CAM_BASE_ADDR + CAM_SRSZ_SCALE_HCB_SHD_OFFSET)

/* CAM SRSZ_SCALE_HCR_SHD Register (32 bits) */
#define CAM_SRSZ_SCALE_HCR_SHD_OFFSET  0x103C
#define CAM_SRSZ_SCALE_HCR_SHD_REG     IOA(CAM_BASE_ADDR + CAM_SRSZ_SCALE_HCR_SHD_OFFSET)

/* CAM SRSZ_SCALE_VY_SHD Register (32 bits) */
#define CAM_SRSZ_SCALE_VY_SHD_OFFSET   0x1040
#define CAM_SRSZ_SCALE_VY_SHD_REG      IOA(CAM_BASE_ADDR + CAM_SRSZ_SCALE_VY_SHD_OFFSET)

/* CAM SRSZ_SCALE_VC_SHD Register (32 bits) */
#define CAM_SRSZ_SCALE_VC_SHD_OFFSET   0x1044
#define CAM_SRSZ_SCALE_VC_SHD_REG      IOA(CAM_BASE_ADDR + CAM_SRSZ_SCALE_VC_SHD_OFFSET)

/* CAM SRSZ_PHASE_HY_SHD Register (32 bits) */
#define CAM_SRSZ_PHASE_HY_SHD_OFFSET   0x1048
#define CAM_SRSZ_PHASE_HY_SHD_REG      IOA(CAM_BASE_ADDR + CAM_SRSZ_PHASE_HY_SHD_OFFSET)

/* CAM SRSZ_PHASE_HC_SHD Register (32 bits) */
#define CAM_SRSZ_PHASE_HC_SHD_OFFSET   0x104C
#define CAM_SRSZ_PHASE_HC_SHD_REG      IOA(CAM_BASE_ADDR + CAM_SRSZ_PHASE_HC_SHD_OFFSET)

/* CAM SRSZ_PHASE_VY_SHD Register (32 bits) */
#define CAM_SRSZ_PHASE_VY_SHD_OFFSET   0x1050
#define CAM_SRSZ_PHASE_VY_SHD_REG      IOA(CAM_BASE_ADDR + CAM_SRSZ_PHASE_VY_SHD_OFFSET)

/* CAM SRSZ_PHASE_VC_SHD Register (32 bits) */
#define CAM_SRSZ_PHASE_VC_SHD_OFFSET   0x1054
#define CAM_SRSZ_PHASE_VC_SHD_REG      IOA(CAM_BASE_ADDR + CAM_SRSZ_PHASE_VC_SHD_OFFSET)

/* CAM MI_CTRL Register (32 bits) */
#define CAM_MI_CTRL_OFFSET             0x1400
#define CAM_MI_CTRL_REG                IOA(CAM_BASE_ADDR + CAM_MI_CTRL_OFFSET)

/* CAM MI_INIT Register (32 bits) */
#define CAM_MI_INIT_OFFSET             0x1404
#define CAM_MI_INIT_REG                IOA(CAM_BASE_ADDR + CAM_MI_INIT_OFFSET)

/* CAM MI_MP_Y_BASE_ADDR Register (32 bits) */

/* CAM MI_MP_Y_SIZE Register (32 bits) */
#define CAM_MI_MP_Y_SIZE_OFFSET        0x140C
#define CAM_MI_MP_Y_SIZE_REG           IOA(CAM_BASE_ADDR + CAM_MI_MP_Y_SIZE_OFFSET)

/* CAM MI_MP_Y_OFFS Register (32 bits) */
#define CAM_MI_MP_Y_OFFS_OFFSET        0x1410
#define CAM_MI_MP_Y_OFFS_REG           IOA(CAM_BASE_ADDR + CAM_MI_MP_Y_OFFS_OFFSET)

/* CAM MI_MP_Y_OFFS_START Register (32 bits) */
#define CAM_MI_MP_Y_OFFS_START_OFFSET  0x1414
#define CAM_MI_MP_Y_OFFS_START_REG     IOA(CAM_BASE_ADDR + CAM_MI_MP_Y_OFFS_START_OFFSET)

/* CAM MI_MP_Y_IRQ_OFFS Register (32 bits) */
#define CAM_MI_MP_Y_IRQ_OFFS_OFFSET    0x1418
#define CAM_MI_MP_Y_IRQ_OFFS_REG       IOA(CAM_BASE_ADDR + CAM_MI_MP_Y_IRQ_OFFS_OFFSET)

/* CAM MI_MP_CB_BASE_ADDR Register (32 bits) */

/* CAM MI_MP_CB_SIZE Register (32 bits) */
#define CAM_MI_MP_CB_SIZE_OFFSET       0x1420
#define CAM_MI_MP_CB_SIZE_REG          IOA(CAM_BASE_ADDR + CAM_MI_MP_CB_SIZE_OFFSET)

/* CAM MI_MP_CB_OFFS Register (32 bits) */
#define CAM_MI_MP_CB_OFFS_OFFSET       0x1424
#define CAM_MI_MP_CB_OFFS_REG          IOA(CAM_BASE_ADDR + CAM_MI_MP_CB_OFFS_OFFSET)

/* CAM MI_MP_CB_OFFS_START Register (32 bits) */
#define CAM_MI_MP_CB_OFFS_START_OFFSET 0x1428
#define CAM_MI_MP_CB_OFFS_START_REG    IOA(CAM_BASE_ADDR + CAM_MI_MP_CB_OFFS_START_OFFSET)

/* CAM MI_MP_CR_BASE_ADDR Register (32 bits) */

/* CAM MI_MP_CR_SIZE Register (32 bits) */
#define CAM_MI_MP_CR_SIZE_OFFSET       0x1430
#define CAM_MI_MP_CR_SIZE_REG          IOA(CAM_BASE_ADDR + CAM_MI_MP_CR_SIZE_OFFSET)

/* CAM MI_MP_CR_OFFS Register (32 bits) */
#define CAM_MI_MP_CR_OFFS_OFFSET       0x1434
#define CAM_MI_MP_CR_OFFS_REG          IOA(CAM_BASE_ADDR + CAM_MI_MP_CR_OFFS_OFFSET)

/* CAM MI_MP_CR_OFFS_START Register (32 bits) */
#define CAM_MI_MP_CR_OFFS_START_OFFSET 0x1438
#define CAM_MI_MP_CR_OFFS_START_REG    IOA(CAM_BASE_ADDR + CAM_MI_MP_CR_OFFS_START_OFFSET)

/* CAM MI_SP_Y_BASE_ADDR Register (32 bits) */

/* CAM MI_SP_Y_SIZE Register (32 bits) */
#define CAM_MI_SP_Y_SIZE_OFFSET        0x1440
#define CAM_MI_SP_Y_SIZE_REG           IOA(CAM_BASE_ADDR + CAM_MI_SP_Y_SIZE_OFFSET)

/* CAM MI_SP_Y_OFFS Register (32 bits) */
#define CAM_MI_SP_Y_OFFS_OFFSET        0x1444
#define CAM_MI_SP_Y_OFFS_REG           IOA(CAM_BASE_ADDR + CAM_MI_SP_Y_OFFS_OFFSET)

/* CAM MI_SP_Y_OFFS_START Register (32 bits) */
#define CAM_MI_SP_Y_OFFS_START_OFFSET  0x1448
#define CAM_MI_SP_Y_OFFS_START_REG     IOA(CAM_BASE_ADDR + CAM_MI_SP_Y_OFFS_START_OFFSET)

/* CAM MI_SP_Y_LLENGTH Register (32 bits) */
#define CAM_MI_SP_Y_LLENGTH_OFFSET     0x144C
#define CAM_MI_SP_Y_LLENGTH_REG        IOA(CAM_BASE_ADDR + CAM_MI_SP_Y_LLENGTH_OFFSET)

/* CAM MI_SP_CB_BASE_ADDR Register (32 bits) */

/* CAM MI_SP_CB_SIZE Register (32 bits) */
#define CAM_MI_SP_CB_SIZE_OFFSET       0x1454
#define CAM_MI_SP_CB_SIZE_REG          IOA(CAM_BASE_ADDR + CAM_MI_SP_CB_SIZE_OFFSET)

/* CAM MI_SP_CB_OFFS Register (32 bits) */
#define CAM_MI_SP_CB_OFFS_OFFSET       0x1458
#define CAM_MI_SP_CB_OFFS_REG          IOA(CAM_BASE_ADDR + CAM_MI_SP_CB_OFFS_OFFSET)

/* CAM MI_SP_CB_OFFS_START Register (32 bits) */
#define CAM_MI_SP_CB_OFFS_START_OFFSET 0x145C
#define CAM_MI_SP_CB_OFFS_START_REG    IOA(CAM_BASE_ADDR + CAM_MI_SP_CB_OFFS_START_OFFSET)

/* CAM MI_SP_CR_BASE_ADDR Register (32 bits) */

/* CAM MI_SP_CR_SIZE Register (32 bits) */
#define CAM_MI_SP_CR_SIZE_OFFSET       0x1464
#define CAM_MI_SP_CR_SIZE_REG          IOA(CAM_BASE_ADDR + CAM_MI_SP_CR_SIZE_OFFSET)

/* CAM MI_SP_CR_OFFS Register (32 bits) */
#define CAM_MI_SP_CR_OFFS_OFFSET       0x1468
#define CAM_MI_SP_CR_OFFS_REG          IOA(CAM_BASE_ADDR + CAM_MI_SP_CR_OFFS_OFFSET)

/* CAM MI_SP_CR_OFFS_START Register (32 bits) */
#define CAM_MI_SP_CR_OFFS_START_OFFSET 0x146C
#define CAM_MI_SP_CR_OFFS_START_REG    IOA(CAM_BASE_ADDR + CAM_MI_SP_CR_OFFS_START_OFFSET)

/* CAM MI_BYTE_CNT Register (32 bits) */
#define CAM_MI_BYTE_CNT_OFFSET         0x1470
#define CAM_MI_BYTE_CNT_REG            IOA(CAM_BASE_ADDR + CAM_MI_BYTE_CNT_OFFSET)

/* CAM MI_CTRL_SHD Register (32 bits) */
#define CAM_MI_CTRL_SHD_OFFSET         0x1474
#define CAM_MI_CTRL_SHD_REG            IOA(CAM_BASE_ADDR + CAM_MI_CTRL_SHD_OFFSET)

/* CAM MI_MP_Y_BASE_ADDR_SHD Register (32 bits) */

/* CAM MI_MP_Y_SIZE_SHD Register (32 bits) */
#define CAM_MI_MP_Y_SIZE_SHD_OFFSET    0x147C
#define CAM_MI_MP_Y_SIZE_SHD_REG       IOA(CAM_BASE_ADDR + CAM_MI_MP_Y_SIZE_SHD_OFFSET)

/* CAM MI_MP_Y_OFFS_SHD Register (32 bits) */
#define CAM_MI_MP_Y_OFFS_SHD_OFFSET    0x1480
#define CAM_MI_MP_Y_OFFS_SHD_REG       IOA(CAM_BASE_ADDR + CAM_MI_MP_Y_OFFS_SHD_OFFSET)

/* CAM MI_MP_Y_IRQ_OFFS_SHD Register (32 bits) */
#define CAM_MI_MP_Y_IRQ_OFFS_SHD_OFFSET            0x1484
#define CAM_MI_MP_Y_IRQ_OFFS_SHD_REG   IOA(CAM_BASE_ADDR + CAM_MI_MP_Y_IRQ_OFFS_SHD_OFFSET)

/* CAM MI_MP_CB_BASE_ADDR_SHD Register (32 bits) */

/* CAM MI_MP_CB_SIZE_SHD Register (32 bits) */
#define CAM_MI_MP_CB_SIZE_SHD_OFFSET   0x148C
#define CAM_MI_MP_CB_SIZE_SHD_REG      IOA(CAM_BASE_ADDR + CAM_MI_MP_CB_SIZE_SHD_OFFSET)

/* CAM MI_MP_CB_OFFS_SHD Register (32 bits) */
#define CAM_MI_MP_CB_OFFS_SHD_OFFSET   0x1490
#define CAM_MI_MP_CB_OFFS_SHD_REG      IOA(CAM_BASE_ADDR + CAM_MI_MP_CB_OFFS_SHD_OFFSET)

/* CAM MI_MP_CR_BASE_ADDR_SHD Register (32 bits) */

/* CAM MI_MP_CR_SIZE_SHD Register (32 bits) */
#define CAM_MI_MP_CR_SIZE_SHD_OFFSET   0x1498
#define CAM_MI_MP_CR_SIZE_SHD_REG      IOA(CAM_BASE_ADDR + CAM_MI_MP_CR_SIZE_SHD_OFFSET)

/* CAM MI_MP_CR_OFFS_SHD Register (32 bits) */
#define CAM_MI_MP_CR_OFFS_SHD_OFFSET   0x149C
#define CAM_MI_MP_CR_OFFS_SHD_REG      IOA(CAM_BASE_ADDR + CAM_MI_MP_CR_OFFS_SHD_OFFSET)

/* CAM MI_SP_Y_BASE_ADDR_SHD Register (32 bits) */

/* CAM MI_SP_Y_SIZE_SHD Register (32 bits) */
#define CAM_MI_SP_Y_SIZE_SHD_OFFSET    0x14A4
#define CAM_MI_SP_Y_SIZE_SHD_REG       IOA(CAM_BASE_ADDR + CAM_MI_SP_Y_SIZE_SHD_OFFSET)

/* CAM MI_SP_Y_OFFS_SHD Register (32 bits) */
#define CAM_MI_SP_Y_OFFS_SHD_OFFSET    0x14A8
#define CAM_MI_SP_Y_OFFS_SHD_REG       IOA(CAM_BASE_ADDR + CAM_MI_SP_Y_OFFS_SHD_OFFSET)

/* CAM MI_SP_CB_BASE_ADDR_SHD Register (32 bits) */

/* CAM MI_SP_CB_SIZE_SHD Register (32 bits) */
#define CAM_MI_SP_CB_SIZE_SHD_OFFSET   0x14B4
#define CAM_MI_SP_CB_SIZE_SHD_REG      IOA(CAM_BASE_ADDR + CAM_MI_SP_CB_SIZE_SHD_OFFSET)

/* CAM MI_SP_CB_OFFS_SHD Register (32 bits) */
#define CAM_MI_SP_CB_OFFS_SHD_OFFSET   0x14B8
#define CAM_MI_SP_CB_OFFS_SHD_REG      IOA(CAM_BASE_ADDR + CAM_MI_SP_CB_OFFS_SHD_OFFSET)

/* CAM MI_SP_CR_BASE_ADDR_SHD Register (32 bits) */

/* CAM MI_SP_CR_SIZE_SHD Register (32 bits) */
#define CAM_MI_SP_CR_SIZE_SHD_OFFSET   0x14C0
#define CAM_MI_SP_CR_SIZE_SHD_REG      IOA(CAM_BASE_ADDR + CAM_MI_SP_CR_SIZE_SHD_OFFSET)

/* CAM MI_SP_CR_OFFS_SHD Register (32 bits) */
#define CAM_MI_SP_CR_OFFS_SHD_OFFSET   0x14C4
#define CAM_MI_SP_CR_OFFS_SHD_REG      IOA(CAM_BASE_ADDR + CAM_MI_SP_CR_OFFS_SHD_OFFSET)

/* CAM MI_DMA_Y_PIC_START_ADDR Register (32 bits) */
#define CAM_MI_DMA_Y_PIC_START_ADDR_OFFSET         0x14C8
#define CAM_MI_DMA_Y_PIC_START_ADDR_REG            IOA(CAM_BASE_ADDR + CAM_MI_DMA_Y_PIC_START_ADDR_OFFSET)

/* CAM MI_DMA_Y_PIC_WIDTH Register (32 bits) */
#define CAM_MI_DMA_Y_PIC_WIDTH_OFFSET  0x14CC
#define CAM_MI_DMA_Y_PIC_WIDTH_REG     IOA(CAM_BASE_ADDR + CAM_MI_DMA_Y_PIC_WIDTH_OFFSET)

/* CAM MI_DMA_Y_LLENGTH Register (32 bits) */
#define CAM_MI_DMA_Y_LLENGTH_OFFSET    0x14D0
#define CAM_MI_DMA_Y_LLENGTH_REG       IOA(CAM_BASE_ADDR + CAM_MI_DMA_Y_LLENGTH_OFFSET)

/* CAM MI_DMA_Y_PIC_SIZE Register (32 bits) */
#define CAM_MI_DMA_Y_PIC_SIZE_OFFSET   0x14D4
#define CAM_MI_DMA_Y_PIC_SIZE_REG      IOA(CAM_BASE_ADDR + CAM_MI_DMA_Y_PIC_SIZE_OFFSET)

/* CAM MI_DMA_CB_PIC_START_ADDR Register (32 bits) */
#define CAM_MI_DMA_CB_PIC_START_ADDR_OFFSET        0x14D8
#define CAM_MI_DMA_CB_PIC_START_ADDR_REG           IOA(CAM_BASE_ADDR + CAM_MI_DMA_CB_PIC_START_ADDR_OFFSET)

/* CAM MI_DMA_CR_PIC_START_ADDR Register (32 bits) */
#define CAM_MI_DMA_CR_PIC_START_ADDR_OFFSET        0x14E8
#define CAM_MI_DMA_CR_PIC_START_ADDR_REG           IOA(CAM_BASE_ADDR + CAM_MI_DMA_CR_PIC_START_ADDR_OFFSET)

/* CAM MI_IMSC Register (32 bits) */
#define CAM_MI_IMSC_OFFSET             0x14F8
#define CAM_MI_IMSC_REG                IOA(CAM_BASE_ADDR + CAM_MI_IMSC_OFFSET)

/* CAM MI_RIS Register (32 bits) */
#define CAM_MI_RIS_OFFSET              0x14FC
#define CAM_MI_RIS_REG                 IOA(CAM_BASE_ADDR + CAM_MI_RIS_OFFSET)

/* CAM MI_MIS Register (32 bits) */
#define CAM_MI_MIS_OFFSET              0x1500
#define CAM_MI_MIS_REG                 IOA(CAM_BASE_ADDR + CAM_MI_MIS_OFFSET)

/* CAM MI_ICR Register (32 bits) */
#define CAM_MI_ICR_OFFSET              0x1504
#define CAM_MI_ICR_REG                 IOA(CAM_BASE_ADDR + CAM_MI_ICR_OFFSET)

/* CAM MI_ISR Register (32 bits) */
#define CAM_MI_ISR_OFFSET              0x1508
#define CAM_MI_ISR_REG                 IOA(CAM_BASE_ADDR + CAM_MI_ISR_OFFSET)

/* CAM MI_STATUS Register (32 bits) */
#define CAM_MI_STATUS_OFFSET           0x150C
#define CAM_MI_STATUS_REG              IOA(CAM_BASE_ADDR + CAM_MI_STATUS_OFFSET)

/* CAM MI_STATUS_CLR Register (32 bits) */
#define CAM_MI_STATUS_CLR_OFFSET       0x1510
#define CAM_MI_STATUS_CLR_REG          IOA(CAM_BASE_ADDR + CAM_MI_STATUS_CLR_OFFSET)

/* CAM MI_SP_Y_PIC_WIDTH Register (32 bits) */
#define CAM_MI_SP_Y_PIC_WIDTH_OFFSET   0x1514
#define CAM_MI_SP_Y_PIC_WIDTH_REG      IOA(CAM_BASE_ADDR + CAM_MI_SP_Y_PIC_WIDTH_OFFSET)

/* CAM MI_SP_Y_PIC_HEIGHT Register (32 bits) */
#define CAM_MI_SP_Y_PIC_HEIGHT_OFFSET  0x1518
#define CAM_MI_SP_Y_PIC_HEIGHT_REG     IOA(CAM_BASE_ADDR + CAM_MI_SP_Y_PIC_HEIGHT_OFFSET)

/* CAM MI_SP_Y_PIC_SIZE Register (32 bits) */
#define CAM_MI_SP_Y_PIC_SIZE_OFFSET    0x151C
#define CAM_MI_SP_Y_PIC_SIZE_REG       IOA(CAM_BASE_ADDR + CAM_MI_SP_Y_PIC_SIZE_OFFSET)

/* CAM MI_DMA_CTRL Register (32 bits) */
#define CAM_MI_DMA_CTRL_OFFSET         0x1520
#define CAM_MI_DMA_CTRL_REG            IOA(CAM_BASE_ADDR + CAM_MI_DMA_CTRL_OFFSET)

/* CAM MI_DMA_START Register (32 bits) */
#define CAM_MI_DMA_START_OFFSET        0x1524
#define CAM_MI_DMA_START_REG           IOA(CAM_BASE_ADDR + CAM_MI_DMA_START_OFFSET)

/* CAM MI_DMA_STATUS Register (32 bits) */
#define CAM_MI_DMA_STATUS_OFFSET       0x1528
#define CAM_MI_DMA_STATUS_REG          IOA(CAM_BASE_ADDR + CAM_MI_DMA_STATUS_OFFSET)

/* CAM JPE_GEN_HEADER Register (32 bits) */
#define CAM_JPE_GEN_HEADER_OFFSET      0x1800
#define CAM_JPE_GEN_HEADER_REG         IOA(CAM_BASE_ADDR + CAM_JPE_GEN_HEADER_OFFSET)

/* CAM JPE_ENCODE Register (32 bits) */
#define CAM_JPE_ENCODE_OFFSET          0x1804
#define CAM_JPE_ENCODE_REG             IOA(CAM_BASE_ADDR + CAM_JPE_ENCODE_OFFSET)

/* CAM JPE_INIT Register (32 bits) */
#define CAM_JPE_INIT_OFFSET            0x1808
#define CAM_JPE_INIT_REG               IOA(CAM_BASE_ADDR + CAM_JPE_INIT_OFFSET)

/* CAM JPE_Y_SCALE_EN Register (32 bits) */
#define CAM_JPE_Y_SCALE_EN_OFFSET      0x180C
#define CAM_JPE_Y_SCALE_EN_REG         IOA(CAM_BASE_ADDR + CAM_JPE_Y_SCALE_EN_OFFSET)

/* CAM JPE_CBCR_SCALE_EN Register (32 bits) */
#define CAM_JPE_CBCR_SCALE_EN_OFFSET   0x1810
#define CAM_JPE_CBCR_SCALE_EN_REG      IOA(CAM_BASE_ADDR + CAM_JPE_CBCR_SCALE_EN_OFFSET)

/* CAM JPE_TABLE_FLUSH Register (32 bits) */
#define CAM_JPE_TABLE_FLUSH_OFFSET     0x1814
#define CAM_JPE_TABLE_FLUSH_REG        IOA(CAM_BASE_ADDR + CAM_JPE_TABLE_FLUSH_OFFSET)

/* CAM JPE_ENC_HSIZE Register (32 bits) */
#define CAM_JPE_ENC_HSIZE_OFFSET       0x1818
#define CAM_JPE_ENC_HSIZE_REG          IOA(CAM_BASE_ADDR + CAM_JPE_ENC_HSIZE_OFFSET)

/* CAM JPE_ENC_VSIZE Register (32 bits) */
#define CAM_JPE_ENC_VSIZE_OFFSET       0x181C
#define CAM_JPE_ENC_VSIZE_REG          IOA(CAM_BASE_ADDR + CAM_JPE_ENC_VSIZE_OFFSET)

/* CAM JPE_PIC_FORMAT Register (32 bits) */
#define CAM_JPE_PIC_FORMAT_OFFSET      0x1820
#define CAM_JPE_PIC_FORMAT_REG         IOA(CAM_BASE_ADDR + CAM_JPE_PIC_FORMAT_OFFSET)

/* CAM JPE_RESTART_INTERVAL Register (32 bits) */
#define CAM_JPE_RESTART_INTERVAL_OFFSET            0x1824
#define CAM_JPE_RESTART_INTERVAL_REG   IOA(CAM_BASE_ADDR + CAM_JPE_RESTART_INTERVAL_OFFSET)

/* CAM JPE_TQ_Y_SELECT Register (32 bits) */
#define CAM_JPE_TQ_Y_SELECT_OFFSET     0x1828
#define CAM_JPE_TQ_Y_SELECT_REG        IOA(CAM_BASE_ADDR + CAM_JPE_TQ_Y_SELECT_OFFSET)

/* CAM JPE_TQ_U_SELECT Register (32 bits) */
#define CAM_JPE_TQ_U_SELECT_OFFSET     0x182C
#define CAM_JPE_TQ_U_SELECT_REG        IOA(CAM_BASE_ADDR + CAM_JPE_TQ_U_SELECT_OFFSET)

/* CAM JPE_TQ_V_SELECT Register (32 bits) */
#define CAM_JPE_TQ_V_SELECT_OFFSET     0x1830
#define CAM_JPE_TQ_V_SELECT_REG        IOA(CAM_BASE_ADDR + CAM_JPE_TQ_V_SELECT_OFFSET)

/* CAM JPE_DC_TABLE_SELECT Register (32 bits) */
#define CAM_JPE_DC_TABLE_SELECT_OFFSET 0x1834
#define CAM_JPE_DC_TABLE_SELECT_REG    IOA(CAM_BASE_ADDR + CAM_JPE_DC_TABLE_SELECT_OFFSET)

/* CAM JPE_AC_TABLE_SELECT Register (32 bits) */
#define CAM_JPE_AC_TABLE_SELECT_OFFSET 0x1838
#define CAM_JPE_AC_TABLE_SELECT_REG    IOA(CAM_BASE_ADDR + CAM_JPE_AC_TABLE_SELECT_OFFSET)

/* CAM JPE_TABLE_DATA Register (32 bits) */
#define CAM_JPE_TABLE_DATA_OFFSET      0x183C
#define CAM_JPE_TABLE_DATA_REG         IOA(CAM_BASE_ADDR + CAM_JPE_TABLE_DATA_OFFSET)

/* CAM JPE_TABLE_ID Register (32 bits) */
#define CAM_JPE_TABLE_ID_OFFSET        0x1840
#define CAM_JPE_TABLE_ID_REG           IOA(CAM_BASE_ADDR + CAM_JPE_TABLE_ID_OFFSET)

/* CAM JPE_TAC0_LEN Register (32 bits) */
#define CAM_JPE_TAC0_LEN_OFFSET        0x1844
#define CAM_JPE_TAC0_LEN_REG           IOA(CAM_BASE_ADDR + CAM_JPE_TAC0_LEN_OFFSET)

/* CAM JPE_TDC0_LEN Register (32 bits) */
#define CAM_JPE_TDC0_LEN_OFFSET        0x1848
#define CAM_JPE_TDC0_LEN_REG           IOA(CAM_BASE_ADDR + CAM_JPE_TDC0_LEN_OFFSET)

/* CAM JPE_TAC1_LEN Register (32 bits) */
#define CAM_JPE_TAC1_LEN_OFFSET        0x184C
#define CAM_JPE_TAC1_LEN_REG           IOA(CAM_BASE_ADDR + CAM_JPE_TAC1_LEN_OFFSET)

/* CAM JPE_TDC1_LEN Register (32 bits) */
#define CAM_JPE_TDC1_LEN_OFFSET        0x1850
#define CAM_JPE_TDC1_LEN_REG           IOA(CAM_BASE_ADDR + CAM_JPE_TDC1_LEN_OFFSET)

/* CAM JPE_ENCODER_BUSY Register (32 bits) */
#define CAM_JPE_ENCODER_BUSY_OFFSET    0x1858
#define CAM_JPE_ENCODER_BUSY_REG       IOA(CAM_BASE_ADDR + CAM_JPE_ENCODER_BUSY_OFFSET)

/* CAM JPE_HEADER_MODE Register (32 bits) */
#define CAM_JPE_HEADER_MODE_OFFSET     0x185C
#define CAM_JPE_HEADER_MODE_REG        IOA(CAM_BASE_ADDR + CAM_JPE_HEADER_MODE_OFFSET)

/* CAM JPE_ENCODE_MODE Register (32 bits) */
#define CAM_JPE_ENCODE_MODE_OFFSET     0x1860
#define CAM_JPE_ENCODE_MODE_REG        IOA(CAM_BASE_ADDR + CAM_JPE_ENCODE_MODE_OFFSET)

/* CAM JPE_DEBUG Register (32 bits) */
#define CAM_JPE_DEBUG_OFFSET           0x1864
#define CAM_JPE_DEBUG_REG              IOA(CAM_BASE_ADDR + CAM_JPE_DEBUG_OFFSET)

/* CAM JPE_ERROR_IMSC Register (32 bits) */
#define CAM_JPE_ERROR_IMSC_OFFSET      0x1868
#define CAM_JPE_ERROR_IMSC_REG         IOA(CAM_BASE_ADDR + CAM_JPE_ERROR_IMSC_OFFSET)

/* CAM JPE_ERROR_RIS Register (32 bits) */
#define CAM_JPE_ERROR_RIS_OFFSET       0x186C
#define CAM_JPE_ERROR_RIS_REG          IOA(CAM_BASE_ADDR + CAM_JPE_ERROR_RIS_OFFSET)

/* CAM JPE_ERROR_MIS Register (32 bits) */
#define CAM_JPE_ERROR_MIS_OFFSET       0x1870
#define CAM_JPE_ERROR_MIS_REG          IOA(CAM_BASE_ADDR + CAM_JPE_ERROR_MIS_OFFSET)

/* CAM JPE_ERROR_ICR Register (32 bits) */
#define CAM_JPE_ERROR_ICR_OFFSET       0x1874
#define CAM_JPE_ERROR_ICR_REG          IOA(CAM_BASE_ADDR + CAM_JPE_ERROR_ICR_OFFSET)

/* CAM JPE_ERROR_ISR Register (32 bits) */
#define CAM_JPE_ERROR_ISR_OFFSET       0x1878
#define CAM_JPE_ERROR_ISR_REG          IOA(CAM_BASE_ADDR + CAM_JPE_ERROR_ISR_OFFSET)

/* CAM JPE_STATUS_IMSC Register (32 bits) */
#define CAM_JPE_STATUS_IMSC_OFFSET     0x187C
#define CAM_JPE_STATUS_IMSC_REG        IOA(CAM_BASE_ADDR + CAM_JPE_STATUS_IMSC_OFFSET)

/* CAM JPE_STATUS_RIS Register (32 bits) */
#define CAM_JPE_STATUS_RIS_OFFSET      0x1880
#define CAM_JPE_STATUS_RIS_REG         IOA(CAM_BASE_ADDR + CAM_JPE_STATUS_RIS_OFFSET)

/* CAM JPE_STATUS_MIS Register (32 bits) */
#define CAM_JPE_STATUS_MIS_OFFSET      0x1884
#define CAM_JPE_STATUS_MIS_REG         IOA(CAM_BASE_ADDR + CAM_JPE_STATUS_MIS_OFFSET)

/* CAM JPE_STATUS_ICR Register (32 bits) */
#define CAM_JPE_STATUS_ICR_OFFSET      0x1888
#define CAM_JPE_STATUS_ICR_REG         IOA(CAM_BASE_ADDR + CAM_JPE_STATUS_ICR_OFFSET)

/* CAM JPE_STATUS_ISR Register (32 bits) */
#define CAM_JPE_STATUS_ISR_OFFSET      0x188C
#define CAM_JPE_STATUS_ISR_REG         IOA(CAM_BASE_ADDR + CAM_JPE_STATUS_ISR_OFFSET)

/* CAM ISP_AFM_CTRL Register (32 bits) */
#define CAM_ISP_AFM_CTRL_OFFSET        0x2000
#define CAM_ISP_AFM_CTRL_REG           IOA(CAM_BASE_ADDR + CAM_ISP_AFM_CTRL_OFFSET)

/* CAM ISP_AFM_LT_A Register (32 bits) */
#define CAM_ISP_AFM_LT_A_OFFSET        0x2004
#define CAM_ISP_AFM_LT_A_REG           IOA(CAM_BASE_ADDR + CAM_ISP_AFM_LT_A_OFFSET)

/* CAM ISP_AFM_RB_A Register (32 bits) */
#define CAM_ISP_AFM_RB_A_OFFSET        0x2008
#define CAM_ISP_AFM_RB_A_REG           IOA(CAM_BASE_ADDR + CAM_ISP_AFM_RB_A_OFFSET)

/* CAM ISP_AFM_LT_B Register (32 bits) */
#define CAM_ISP_AFM_LT_B_OFFSET        0x200C
#define CAM_ISP_AFM_LT_B_REG           IOA(CAM_BASE_ADDR + CAM_ISP_AFM_LT_B_OFFSET)

/* CAM ISP_AFM_RB_B Register (32 bits) */
#define CAM_ISP_AFM_RB_B_OFFSET        0x2010
#define CAM_ISP_AFM_RB_B_REG           IOA(CAM_BASE_ADDR + CAM_ISP_AFM_RB_B_OFFSET)

/* CAM ISP_AFM_LT_C Register (32 bits) */
#define CAM_ISP_AFM_LT_C_OFFSET        0x2014
#define CAM_ISP_AFM_LT_C_REG           IOA(CAM_BASE_ADDR + CAM_ISP_AFM_LT_C_OFFSET)

/* CAM ISP_AFM_RB_C Register (32 bits) */
#define CAM_ISP_AFM_RB_C_OFFSET        0x2018
#define CAM_ISP_AFM_RB_C_REG           IOA(CAM_BASE_ADDR + CAM_ISP_AFM_RB_C_OFFSET)

/* CAM ISP_AFM_THRE Register (32 bits) */
#define CAM_ISP_AFM_THRE_OFFSET        0x201C
#define CAM_ISP_AFM_THRE_REG           IOA(CAM_BASE_ADDR + CAM_ISP_AFM_THRE_OFFSET)

/* CAM ISP_AFM_VAR_SHIFT Register (32 bits) */
#define CAM_ISP_AFM_VAR_SHIFT_OFFSET   0x2020
#define CAM_ISP_AFM_VAR_SHIFT_REG      IOA(CAM_BASE_ADDR + CAM_ISP_AFM_VAR_SHIFT_OFFSET)

/* CAM ISP_AFM_SUM_A Register (32 bits) */
#define CAM_ISP_AFM_SUM_A_OFFSET       0x2024
#define CAM_ISP_AFM_SUM_A_REG          IOA(CAM_BASE_ADDR + CAM_ISP_AFM_SUM_A_OFFSET)

/* CAM ISP_AFM_SUM_B Register (32 bits) */
#define CAM_ISP_AFM_SUM_B_OFFSET       0x2028
#define CAM_ISP_AFM_SUM_B_REG          IOA(CAM_BASE_ADDR + CAM_ISP_AFM_SUM_B_OFFSET)

/* CAM ISP_AFM_SUM_C Register (32 bits) */
#define CAM_ISP_AFM_SUM_C_OFFSET       0x202C
#define CAM_ISP_AFM_SUM_C_REG          IOA(CAM_BASE_ADDR + CAM_ISP_AFM_SUM_C_OFFSET)

/* CAM ISP_AFM_LUM_A Register (32 bits) */
#define CAM_ISP_AFM_LUM_A_OFFSET       0x2030
#define CAM_ISP_AFM_LUM_A_REG          IOA(CAM_BASE_ADDR + CAM_ISP_AFM_LUM_A_OFFSET)

/* CAM ISP_AFM_LUM_B Register (32 bits) */
#define CAM_ISP_AFM_LUM_B_OFFSET       0x2034
#define CAM_ISP_AFM_LUM_B_REG          IOA(CAM_BASE_ADDR + CAM_ISP_AFM_LUM_B_OFFSET)

/* CAM ISP_AFM_LUM_C Register (32 bits) */
#define CAM_ISP_AFM_LUM_C_OFFSET       0x2038
#define CAM_ISP_AFM_LUM_C_REG          IOA(CAM_BASE_ADDR + CAM_ISP_AFM_LUM_C_OFFSET)

/* CAM ISP_BP_CTRL Register (32 bits) */
#define CAM_ISP_BP_CTRL_OFFSET         0x2100
#define CAM_ISP_BP_CTRL_REG            IOA(CAM_BASE_ADDR + CAM_ISP_BP_CTRL_OFFSET)

/* CAM ISP_BP_CFG1 Register (32 bits) */
#define CAM_ISP_BP_CFG1_OFFSET         0x2104
#define CAM_ISP_BP_CFG1_REG            IOA(CAM_BASE_ADDR + CAM_ISP_BP_CFG1_OFFSET)

/* CAM ISP_BP_CFG2 Register (32 bits) */
#define CAM_ISP_BP_CFG2_OFFSET         0x2108
#define CAM_ISP_BP_CFG2_REG            IOA(CAM_BASE_ADDR + CAM_ISP_BP_CFG2_OFFSET)

/* CAM ISP_BP_NUMBER Register (32 bits) */
#define CAM_ISP_BP_NUMBER_OFFSET       0x210C
#define CAM_ISP_BP_NUMBER_REG          IOA(CAM_BASE_ADDR + CAM_ISP_BP_NUMBER_OFFSET)

/* CAM ISP_BP_TABLE_ADDR Register (32 bits) */
#define CAM_ISP_BP_TABLE_ADDR_OFFSET   0x2110
#define CAM_ISP_BP_TABLE_ADDR_REG      IOA(CAM_BASE_ADDR + CAM_ISP_BP_TABLE_ADDR_OFFSET)

/* CAM ISP_BP_TABLE_DATA Register (32 bits) */
#define CAM_ISP_BP_TABLE_DATA_OFFSET   0x2114
#define CAM_ISP_BP_TABLE_DATA_REG      IOA(CAM_BASE_ADDR + CAM_ISP_BP_TABLE_DATA_OFFSET)

/* CAM ISP_BP_NEW_NUMBER Register (32 bits) */
#define CAM_ISP_BP_NEW_NUMBER_OFFSET   0x2118
#define CAM_ISP_BP_NEW_NUMBER_REG      IOA(CAM_BASE_ADDR + CAM_ISP_BP_NEW_NUMBER_OFFSET)

/* CAM ISP_BP_NEW_TABLE0 Register (32 bits) */
#define CAM_ISP_BP_NEW_TABLE0_OFFSET   0x211C
#define CAM_ISP_BP_NEW_TABLE0_REG      IOA(CAM_BASE_ADDR + CAM_ISP_BP_NEW_TABLE0_OFFSET)

/* CAM ISP_BP_NEW_TABLE1 Register (32 bits) */
#define CAM_ISP_BP_NEW_TABLE1_OFFSET   0x2120
#define CAM_ISP_BP_NEW_TABLE1_REG      IOA(CAM_BASE_ADDR + CAM_ISP_BP_NEW_TABLE1_OFFSET)

/* CAM ISP_BP_NEW_TABLE2 Register (32 bits) */
#define CAM_ISP_BP_NEW_TABLE2_OFFSET   0x2124
#define CAM_ISP_BP_NEW_TABLE2_REG      IOA(CAM_BASE_ADDR + CAM_ISP_BP_NEW_TABLE2_OFFSET)

/* CAM ISP_BP_NEW_TABLE3 Register (32 bits) */
#define CAM_ISP_BP_NEW_TABLE3_OFFSET   0x2128
#define CAM_ISP_BP_NEW_TABLE3_REG      IOA(CAM_BASE_ADDR + CAM_ISP_BP_NEW_TABLE3_OFFSET)

/* CAM ISP_BP_NEW_TABLE4 Register (32 bits) */
#define CAM_ISP_BP_NEW_TABLE4_OFFSET   0x212C
#define CAM_ISP_BP_NEW_TABLE4_REG      IOA(CAM_BASE_ADDR + CAM_ISP_BP_NEW_TABLE4_OFFSET)

/* CAM ISP_BP_NEW_TABLE5 Register (32 bits) */
#define CAM_ISP_BP_NEW_TABLE5_OFFSET   0x2130
#define CAM_ISP_BP_NEW_TABLE5_REG      IOA(CAM_BASE_ADDR + CAM_ISP_BP_NEW_TABLE5_OFFSET)

/* CAM ISP_BP_NEW_TABLE6 Register (32 bits) */
#define CAM_ISP_BP_NEW_TABLE6_OFFSET   0x2134
#define CAM_ISP_BP_NEW_TABLE6_REG      IOA(CAM_BASE_ADDR + CAM_ISP_BP_NEW_TABLE6_OFFSET)

/* CAM ISP_BP_NEW_TABLE7 Register (32 bits) */
#define CAM_ISP_BP_NEW_TABLE7_OFFSET   0x2138
#define CAM_ISP_BP_NEW_TABLE7_REG      IOA(CAM_BASE_ADDR + CAM_ISP_BP_NEW_TABLE7_OFFSET)

/* CAM ISP_LSC_CTRL Register (32 bits) */
#define CAM_ISP_LSC_CTRL_OFFSET        0x2200
#define CAM_ISP_LSC_CTRL_REG           IOA(CAM_BASE_ADDR + CAM_ISP_LSC_CTRL_OFFSET)

/* CAM ISP_LSC_R_RAM_ADDR Register (32 bits) */
#define CAM_ISP_LSC_R_RAM_ADDR_OFFSET  0x2204
#define CAM_ISP_LSC_R_RAM_ADDR_REG     IOA(CAM_BASE_ADDR + CAM_ISP_LSC_R_RAM_ADDR_OFFSET)

/* CAM ISP_LSC_G_RAM_ADDR Register (32 bits) */
#define CAM_ISP_LSC_G_RAM_ADDR_OFFSET  0x2208
#define CAM_ISP_LSC_G_RAM_ADDR_REG     IOA(CAM_BASE_ADDR + CAM_ISP_LSC_G_RAM_ADDR_OFFSET)

/* CAM ISP_LSC_B_RAM_ADDR Register (32 bits) */
#define CAM_ISP_LSC_B_RAM_ADDR_OFFSET  0x220C
#define CAM_ISP_LSC_B_RAM_ADDR_REG     IOA(CAM_BASE_ADDR + CAM_ISP_LSC_B_RAM_ADDR_OFFSET)

/* CAM ISP_LSC_R_SAMP_TBL Register (32 bits) */
#define CAM_ISP_LSC_R_SAMP_TBL_OFFSET  0x2210
#define CAM_ISP_LSC_R_SAMP_TBL_REG     IOA(CAM_BASE_ADDR + CAM_ISP_LSC_R_SAMP_TBL_OFFSET)

/* CAM ISP_LSC_G_SAMP_TBL Register (32 bits) */
#define CAM_ISP_LSC_G_SAMP_TBL_OFFSET  0x2214
#define CAM_ISP_LSC_G_SAMP_TBL_REG     IOA(CAM_BASE_ADDR + CAM_ISP_LSC_G_SAMP_TBL_OFFSET)

/* CAM ISP_LSC_B_SAMP_TBL Register (32 bits) */
#define CAM_ISP_LSC_B_SAMP_TBL_OFFSET  0x2218
#define CAM_ISP_LSC_B_SAMP_TBL_REG     IOA(CAM_BASE_ADDR + CAM_ISP_LSC_B_SAMP_TBL_OFFSET)

/* CAM ISP_LSC_XGRAD_01 Register (32 bits) */
#define CAM_ISP_LSC_XGRAD_01_OFFSET    0x2220
#define CAM_ISP_LSC_XGRAD_01_REG       IOA(CAM_BASE_ADDR + CAM_ISP_LSC_XGRAD_01_OFFSET)

/* CAM ISP_LSC_XGRAD_23 Register (32 bits) */
#define CAM_ISP_LSC_XGRAD_23_OFFSET    0x2224
#define CAM_ISP_LSC_XGRAD_23_REG       IOA(CAM_BASE_ADDR + CAM_ISP_LSC_XGRAD_23_OFFSET)

/* CAM ISP_LSC_XGRAD_45 Register (32 bits) */
#define CAM_ISP_LSC_XGRAD_45_OFFSET    0x2228
#define CAM_ISP_LSC_XGRAD_45_REG       IOA(CAM_BASE_ADDR + CAM_ISP_LSC_XGRAD_45_OFFSET)

/* CAM ISP_LSC_XGRAD_67 Register (32 bits) */
#define CAM_ISP_LSC_XGRAD_67_OFFSET    0x222C
#define CAM_ISP_LSC_XGRAD_67_REG       IOA(CAM_BASE_ADDR + CAM_ISP_LSC_XGRAD_67_OFFSET)

/* CAM ISP_LSC_YGRAD_01 Register (32 bits) */
#define CAM_ISP_LSC_YGRAD_01_OFFSET    0x2230
#define CAM_ISP_LSC_YGRAD_01_REG       IOA(CAM_BASE_ADDR + CAM_ISP_LSC_YGRAD_01_OFFSET)

/* CAM ISP_LSC_YGRAD_23 Register (32 bits) */
#define CAM_ISP_LSC_YGRAD_23_OFFSET    0x2234
#define CAM_ISP_LSC_YGRAD_23_REG       IOA(CAM_BASE_ADDR + CAM_ISP_LSC_YGRAD_23_OFFSET)

/* CAM ISP_LSC_YGRAD_45 Register (32 bits) */
#define CAM_ISP_LSC_YGRAD_45_OFFSET    0x2238
#define CAM_ISP_LSC_YGRAD_45_REG       IOA(CAM_BASE_ADDR + CAM_ISP_LSC_YGRAD_45_OFFSET)

/* CAM ISP_LSC_YGRAD_67 Register (32 bits) */
#define CAM_ISP_LSC_YGRAD_67_OFFSET    0x223C
#define CAM_ISP_LSC_YGRAD_67_REG       IOA(CAM_BASE_ADDR + CAM_ISP_LSC_YGRAD_67_OFFSET)

/* CAM ISP_LSC_XSIZE_01 Register (32 bits) */
#define CAM_ISP_LSC_XSIZE_01_OFFSET    0x2240
#define CAM_ISP_LSC_XSIZE_01_REG       IOA(CAM_BASE_ADDR + CAM_ISP_LSC_XSIZE_01_OFFSET)

/* CAM ISP_LSC_XSIZE_23 Register (32 bits) */
#define CAM_ISP_LSC_XSIZE_23_OFFSET    0x2244
#define CAM_ISP_LSC_XSIZE_23_REG       IOA(CAM_BASE_ADDR + CAM_ISP_LSC_XSIZE_23_OFFSET)

/* CAM ISP_LSC_XSIZE_45 Register (32 bits) */
#define CAM_ISP_LSC_XSIZE_45_OFFSET    0x2248
#define CAM_ISP_LSC_XSIZE_45_REG       IOA(CAM_BASE_ADDR + CAM_ISP_LSC_XSIZE_45_OFFSET)

/* CAM ISP_LSC_XSIZE_67 Register (32 bits) */
#define CAM_ISP_LSC_XSIZE_67_OFFSET    0x224C
#define CAM_ISP_LSC_XSIZE_67_REG       IOA(CAM_BASE_ADDR + CAM_ISP_LSC_XSIZE_67_OFFSET)

/* CAM ISP_LSC_YSIZE_01 Register (32 bits) */
#define CAM_ISP_LSC_YSIZE_01_OFFSET    0x2250
#define CAM_ISP_LSC_YSIZE_01_REG       IOA(CAM_BASE_ADDR + CAM_ISP_LSC_YSIZE_01_OFFSET)

/* CAM ISP_LSC_YSIZE_23 Register (32 bits) */
#define CAM_ISP_LSC_YSIZE_23_OFFSET    0x2254
#define CAM_ISP_LSC_YSIZE_23_REG       IOA(CAM_BASE_ADDR + CAM_ISP_LSC_YSIZE_23_OFFSET)

/* CAM ISP_LSC_YSIZE_45 Register (32 bits) */
#define CAM_ISP_LSC_YSIZE_45_OFFSET    0x2258
#define CAM_ISP_LSC_YSIZE_45_REG       IOA(CAM_BASE_ADDR + CAM_ISP_LSC_YSIZE_45_OFFSET)

/* CAM ISP_LSC_YSIZE_67 Register (32 bits) */
#define CAM_ISP_LSC_YSIZE_67_OFFSET    0x225C
#define CAM_ISP_LSC_YSIZE_67_REG       IOA(CAM_BASE_ADDR + CAM_ISP_LSC_YSIZE_67_OFFSET)

/* CAM ISP_IS_CTRL Register (32 bits) */
#define CAM_ISP_IS_CTRL_OFFSET         0x2300
#define CAM_ISP_IS_CTRL_REG            IOA(CAM_BASE_ADDR + CAM_ISP_IS_CTRL_OFFSET)

/* CAM ISP_IS_RECENTER Register (32 bits) */
#define CAM_ISP_IS_RECENTER_OFFSET     0x2304
#define CAM_ISP_IS_RECENTER_REG        IOA(CAM_BASE_ADDR + CAM_ISP_IS_RECENTER_OFFSET)

/* CAM ISP_IS_H_OFFS Register (32 bits) */
#define CAM_ISP_IS_H_OFFS_OFFSET       0x2308
#define CAM_ISP_IS_H_OFFS_REG          IOA(CAM_BASE_ADDR + CAM_ISP_IS_H_OFFS_OFFSET)

/* CAM ISP_IS_V_OFFS Register (32 bits) */
#define CAM_ISP_IS_V_OFFS_OFFSET       0x230C
#define CAM_ISP_IS_V_OFFS_REG          IOA(CAM_BASE_ADDR + CAM_ISP_IS_V_OFFS_OFFSET)

/* CAM ISP_IS_H_SIZE Register (32 bits) */
#define CAM_ISP_IS_H_SIZE_OFFSET       0x2310
#define CAM_ISP_IS_H_SIZE_REG          IOA(CAM_BASE_ADDR + CAM_ISP_IS_H_SIZE_OFFSET)

/* CAM ISP_IS_V_SIZE Register (32 bits) */
#define CAM_ISP_IS_V_SIZE_OFFSET       0x2314
#define CAM_ISP_IS_V_SIZE_REG          IOA(CAM_BASE_ADDR + CAM_ISP_IS_V_SIZE_OFFSET)

/* CAM ISP_IS_MAX_DX Register (32 bits) */
#define CAM_ISP_IS_MAX_DX_OFFSET       0x2318
#define CAM_ISP_IS_MAX_DX_REG          IOA(CAM_BASE_ADDR + CAM_ISP_IS_MAX_DX_OFFSET)

/* CAM ISP_IS_MAX_DY Register (32 bits) */
#define CAM_ISP_IS_MAX_DY_OFFSET       0x231C
#define CAM_ISP_IS_MAX_DY_REG          IOA(CAM_BASE_ADDR + CAM_ISP_IS_MAX_DY_OFFSET)

/* CAM ISP_IS_DISPLACE Register (32 bits) */
#define CAM_ISP_IS_DISPLACE_OFFSET     0x2320
#define CAM_ISP_IS_DISPLACE_REG        IOA(CAM_BASE_ADDR + CAM_ISP_IS_DISPLACE_OFFSET)

/* CAM ISP_IS_H_OFFS_SHD Register (32 bits) */
#define CAM_ISP_IS_H_OFFS_SHD_OFFSET   0x2324
#define CAM_ISP_IS_H_OFFS_SHD_REG      IOA(CAM_BASE_ADDR + CAM_ISP_IS_H_OFFS_SHD_OFFSET)

/* CAM ISP_IS_V_OFFS_SHD Register (32 bits) */
#define CAM_ISP_IS_V_OFFS_SHD_OFFSET   0x2328
#define CAM_ISP_IS_V_OFFS_SHD_REG      IOA(CAM_BASE_ADDR + CAM_ISP_IS_V_OFFS_SHD_OFFSET)

/* CAM ISP_IS_H_SIZE_SHD Register (32 bits) */
#define CAM_ISP_IS_H_SIZE_SHD_OFFSET   0x232C
#define CAM_ISP_IS_H_SIZE_SHD_REG      IOA(CAM_BASE_ADDR + CAM_ISP_IS_H_SIZE_SHD_OFFSET)

/* CAM ISP_IS_V_SIZE_SHD Register (32 bits) */
#define CAM_ISP_IS_V_SIZE_SHD_OFFSET   0x2330
#define CAM_ISP_IS_V_SIZE_SHD_REG      IOA(CAM_BASE_ADDR + CAM_ISP_IS_V_SIZE_SHD_OFFSET)

/* CAM ISP_HIST_PROP Register (32 bits) */
#define CAM_ISP_HIST_PROP_OFFSET       0x2400
#define CAM_ISP_HIST_PROP_REG          IOA(CAM_BASE_ADDR + CAM_ISP_HIST_PROP_OFFSET)

/* CAM ISP_HIST_H_OFFS Register (32 bits) */
#define CAM_ISP_HIST_H_OFFS_OFFSET     0x2404
#define CAM_ISP_HIST_H_OFFS_REG        IOA(CAM_BASE_ADDR + CAM_ISP_HIST_H_OFFS_OFFSET)

/* CAM ISP_HIST_V_OFFS Register (32 bits) */
#define CAM_ISP_HIST_V_OFFS_OFFSET     0x2408
#define CAM_ISP_HIST_V_OFFS_REG        IOA(CAM_BASE_ADDR + CAM_ISP_HIST_V_OFFS_OFFSET)

/* CAM ISP_HIST_H_SIZE Register (32 bits) */
#define CAM_ISP_HIST_H_SIZE_OFFSET     0x240C
#define CAM_ISP_HIST_H_SIZE_REG        IOA(CAM_BASE_ADDR + CAM_ISP_HIST_H_SIZE_OFFSET)

/* CAM ISP_HIST_V_SIZE Register (32 bits) */
#define CAM_ISP_HIST_V_SIZE_OFFSET     0x2410
#define CAM_ISP_HIST_V_SIZE_REG        IOA(CAM_BASE_ADDR + CAM_ISP_HIST_V_SIZE_OFFSET)

/* CAM ISP_HIST_BIN0 Register (32 bits) */
#define CAM_ISP_HIST_BIN0_OFFSET       0x2414
#define CAM_ISP_HIST_BIN0_REG          IOA(CAM_BASE_ADDR + CAM_ISP_HIST_BIN0_OFFSET)

/* CAM ISP_HIST_BIN1 Register (32 bits) */
#define CAM_ISP_HIST_BIN1_OFFSET       0x2418
#define CAM_ISP_HIST_BIN1_REG          IOA(CAM_BASE_ADDR + CAM_ISP_HIST_BIN1_OFFSET)

/* CAM ISP_HIST_BIN2 Register (32 bits) */
#define CAM_ISP_HIST_BIN2_OFFSET       0x241C
#define CAM_ISP_HIST_BIN2_REG          IOA(CAM_BASE_ADDR + CAM_ISP_HIST_BIN2_OFFSET)

/* CAM ISP_HIST_BIN3 Register (32 bits) */
#define CAM_ISP_HIST_BIN3_OFFSET       0x2420
#define CAM_ISP_HIST_BIN3_REG          IOA(CAM_BASE_ADDR + CAM_ISP_HIST_BIN3_OFFSET)

/* CAM ISP_HIST_BIN4 Register (32 bits) */
#define CAM_ISP_HIST_BIN4_OFFSET       0x2424
#define CAM_ISP_HIST_BIN4_REG          IOA(CAM_BASE_ADDR + CAM_ISP_HIST_BIN4_OFFSET)

/* CAM ISP_HIST_BIN5 Register (32 bits) */
#define CAM_ISP_HIST_BIN5_OFFSET       0x2428
#define CAM_ISP_HIST_BIN5_REG          IOA(CAM_BASE_ADDR + CAM_ISP_HIST_BIN5_OFFSET)

/* CAM ISP_HIST_BIN6 Register (32 bits) */
#define CAM_ISP_HIST_BIN6_OFFSET       0x242C
#define CAM_ISP_HIST_BIN6_REG          IOA(CAM_BASE_ADDR + CAM_ISP_HIST_BIN6_OFFSET)

/* CAM ISP_HIST_BIN7 Register (32 bits) */
#define CAM_ISP_HIST_BIN7_OFFSET       0x2430
#define CAM_ISP_HIST_BIN7_REG          IOA(CAM_BASE_ADDR + CAM_ISP_HIST_BIN7_OFFSET)

/* CAM ISP_HIST_BIN8 Register (32 bits) */
#define CAM_ISP_HIST_BIN8_OFFSET       0x2434
#define CAM_ISP_HIST_BIN8_REG          IOA(CAM_BASE_ADDR + CAM_ISP_HIST_BIN8_OFFSET)

/* CAM ISP_HIST_BIN9 Register (32 bits) */
#define CAM_ISP_HIST_BIN9_OFFSET       0x2438
#define CAM_ISP_HIST_BIN9_REG          IOA(CAM_BASE_ADDR + CAM_ISP_HIST_BIN9_OFFSET)

/* CAM ISP_HIST_BIN10 Register (32 bits) */
#define CAM_ISP_HIST_BIN10_OFFSET      0x243C
#define CAM_ISP_HIST_BIN10_REG         IOA(CAM_BASE_ADDR + CAM_ISP_HIST_BIN10_OFFSET)

/* CAM ISP_HIST_BIN11 Register (32 bits) */
#define CAM_ISP_HIST_BIN11_OFFSET      0x2440
#define CAM_ISP_HIST_BIN11_REG         IOA(CAM_BASE_ADDR + CAM_ISP_HIST_BIN11_OFFSET)

/* CAM ISP_HIST_BIN12 Register (32 bits) */
#define CAM_ISP_HIST_BIN12_OFFSET      0x2444
#define CAM_ISP_HIST_BIN12_REG         IOA(CAM_BASE_ADDR + CAM_ISP_HIST_BIN12_OFFSET)

/* CAM ISP_HIST_BIN13 Register (32 bits) */
#define CAM_ISP_HIST_BIN13_OFFSET      0x2448
#define CAM_ISP_HIST_BIN13_REG         IOA(CAM_BASE_ADDR + CAM_ISP_HIST_BIN13_OFFSET)

/* CAM ISP_HIST_BIN14 Register (32 bits) */
#define CAM_ISP_HIST_BIN14_OFFSET      0x244C
#define CAM_ISP_HIST_BIN14_REG         IOA(CAM_BASE_ADDR + CAM_ISP_HIST_BIN14_OFFSET)

/* CAM ISP_HIST_BIN15 Register (32 bits) */
#define CAM_ISP_HIST_BIN15_OFFSET      0x2450
#define CAM_ISP_HIST_BIN15_REG         IOA(CAM_BASE_ADDR + CAM_ISP_HIST_BIN15_OFFSET)

/* CAM ISP_FILT_MODE Register (32 bits) */
#define CAM_ISP_FILT_MODE_OFFSET       0x2500
#define CAM_ISP_FILT_MODE_REG          IOA(CAM_BASE_ADDR + CAM_ISP_FILT_MODE_OFFSET)

/* CAM ISP_FILT_THRESH_BL0 Register (32 bits) */
#define CAM_ISP_FILT_THRESH_BL0_OFFSET 0x2528
#define CAM_ISP_FILT_THRESH_BL0_REG    IOA(CAM_BASE_ADDR + CAM_ISP_FILT_THRESH_BL0_OFFSET)

/* CAM ISP_FILT_THRESH_BL1 Register (32 bits) */
#define CAM_ISP_FILT_THRESH_BL1_OFFSET 0x252C
#define CAM_ISP_FILT_THRESH_BL1_REG    IOA(CAM_BASE_ADDR + CAM_ISP_FILT_THRESH_BL1_OFFSET)

/* CAM ISP_FILT_THRESH_SH0 Register (32 bits) */
#define CAM_ISP_FILT_THRESH_SH0_OFFSET 0x2530
#define CAM_ISP_FILT_THRESH_SH0_REG    IOA(CAM_BASE_ADDR + CAM_ISP_FILT_THRESH_SH0_OFFSET)

/* CAM ISP_FILT_THRESH_SH1 Register (32 bits) */
#define CAM_ISP_FILT_THRESH_SH1_OFFSET 0x2534
#define CAM_ISP_FILT_THRESH_SH1_REG    IOA(CAM_BASE_ADDR + CAM_ISP_FILT_THRESH_SH1_OFFSET)

/* CAM ISP_FILT_LUM_WEIGHT Register (32 bits) */
#define CAM_ISP_FILT_LUM_WEIGHT_OFFSET 0x2538
#define CAM_ISP_FILT_LUM_WEIGHT_REG    IOA(CAM_BASE_ADDR + CAM_ISP_FILT_LUM_WEIGHT_OFFSET)

/* CAM ISP_FILT_FAC_SH1 Register (32 bits) */
#define CAM_ISP_FILT_FAC_SH1_OFFSET    0x253C
#define CAM_ISP_FILT_FAC_SH1_REG       IOA(CAM_BASE_ADDR + CAM_ISP_FILT_FAC_SH1_OFFSET)

/* CAM ISP_FILT_FAC_SH0 Register (32 bits) */
#define CAM_ISP_FILT_FAC_SH0_OFFSET    0x2540
#define CAM_ISP_FILT_FAC_SH0_REG       IOA(CAM_BASE_ADDR + CAM_ISP_FILT_FAC_SH0_OFFSET)

/* CAM ISP_FILT_FAC_MID Register (32 bits) */
#define CAM_ISP_FILT_FAC_MID_OFFSET    0x2544
#define CAM_ISP_FILT_FAC_MID_REG       IOA(CAM_BASE_ADDR + CAM_ISP_FILT_FAC_MID_OFFSET)

/* CAM ISP_FILT_FAC_BL0 Register (32 bits) */
#define CAM_ISP_FILT_FAC_BL0_OFFSET    0x2548
#define CAM_ISP_FILT_FAC_BL0_REG       IOA(CAM_BASE_ADDR + CAM_ISP_FILT_FAC_BL0_OFFSET)

/* CAM ISP_FILT_FAC_BL1 Register (32 bits) */
#define CAM_ISP_FILT_FAC_BL1_OFFSET    0x254C
#define CAM_ISP_FILT_FAC_BL1_REG       IOA(CAM_BASE_ADDR + CAM_ISP_FILT_FAC_BL1_OFFSET)

/* CAM ISP_CAC_CTRL Register (32 bits) */
#define CAM_ISP_CAC_CTRL_OFFSET        0x2580
#define CAM_ISP_CAC_CTRL_REG           IOA(CAM_BASE_ADDR + CAM_ISP_CAC_CTRL_OFFSET)

/* CAM ISP_CAC_COUNT_START Register (32 bits) */
#define CAM_ISP_CAC_COUNT_START_OFFSET 0x2584
#define CAM_ISP_CAC_COUNT_START_REG    IOA(CAM_BASE_ADDR + CAM_ISP_CAC_COUNT_START_OFFSET)

/* CAM ISP_CAC_A Register (32 bits) */
#define CAM_ISP_CAC_A_OFFSET           0x2588
#define CAM_ISP_CAC_A_REG              IOA(CAM_BASE_ADDR + CAM_ISP_CAC_A_OFFSET)

/* CAM ISP_CAC_B Register (32 bits) */
#define CAM_ISP_CAC_B_OFFSET           0x258C
#define CAM_ISP_CAC_B_REG              IOA(CAM_BASE_ADDR + CAM_ISP_CAC_B_OFFSET)

/* CAM ISP_CAC_C Register (32 bits) */
#define CAM_ISP_CAC_C_OFFSET           0x2590
#define CAM_ISP_CAC_C_REG              IOA(CAM_BASE_ADDR + CAM_ISP_CAC_C_OFFSET)

/* CAM ISP_CAC_X_NORM Register (32 bits) */
#define CAM_ISP_CAC_X_NORM_OFFSET      0x2594
#define CAM_ISP_CAC_X_NORM_REG         IOA(CAM_BASE_ADDR + CAM_ISP_CAC_X_NORM_OFFSET)

/* CAM ISP_CAC_Y_NORM Register (32 bits) */
#define CAM_ISP_CAC_Y_NORM_OFFSET      0x2598
#define CAM_ISP_CAC_Y_NORM_REG         IOA(CAM_BASE_ADDR + CAM_ISP_CAC_Y_NORM_OFFSET)

/* CAM ISP_EXP_CTRL Register (32 bits) */
#define CAM_ISP_EXP_CTRL_OFFSET        0x2600
#define CAM_ISP_EXP_CTRL_REG           IOA(CAM_BASE_ADDR + CAM_ISP_EXP_CTRL_OFFSET)

/* CAM ISP_EXP_H_OFFSET Register (32 bits) */
#define CAM_ISP_EXP_H_OFFSET_OFFSET    0x2604
#define CAM_ISP_EXP_H_OFFSET_REG       IOA(CAM_BASE_ADDR + CAM_ISP_EXP_H_OFFSET_OFFSET)

/* CAM ISP_EXP_V_OFFSET Register (32 bits) */
#define CAM_ISP_EXP_V_OFFSET_OFFSET    0x2608
#define CAM_ISP_EXP_V_OFFSET_REG       IOA(CAM_BASE_ADDR + CAM_ISP_EXP_V_OFFSET_OFFSET)

/* CAM ISP_EXP_H_SIZE Register (32 bits) */
#define CAM_ISP_EXP_H_SIZE_OFFSET      0x260C
#define CAM_ISP_EXP_H_SIZE_REG         IOA(CAM_BASE_ADDR + CAM_ISP_EXP_H_SIZE_OFFSET)

/* CAM ISP_EXP_V_SIZE Register (32 bits) */
#define CAM_ISP_EXP_V_SIZE_OFFSET      0x2610
#define CAM_ISP_EXP_V_SIZE_REG         IOA(CAM_BASE_ADDR + CAM_ISP_EXP_V_SIZE_OFFSET)

/* CAM ISP_EXP_MEAN_00 Register (32 bits) */
#define CAM_ISP_EXP_MEAN_00_OFFSET     0x2614
#define CAM_ISP_EXP_MEAN_00_REG        IOA(CAM_BASE_ADDR + CAM_ISP_EXP_MEAN_00_OFFSET)

/* CAM ISP_EXP_MEAN_10 Register (32 bits) */
#define CAM_ISP_EXP_MEAN_10_OFFSET     0x2618
#define CAM_ISP_EXP_MEAN_10_REG        IOA(CAM_BASE_ADDR + CAM_ISP_EXP_MEAN_10_OFFSET)

/* CAM ISP_EXP_MEAN_20 Register (32 bits) */
#define CAM_ISP_EXP_MEAN_20_OFFSET     0x261C
#define CAM_ISP_EXP_MEAN_20_REG        IOA(CAM_BASE_ADDR + CAM_ISP_EXP_MEAN_20_OFFSET)

/* CAM ISP_EXP_MEAN_30 Register (32 bits) */
#define CAM_ISP_EXP_MEAN_30_OFFSET     0x2620
#define CAM_ISP_EXP_MEAN_30_REG        IOA(CAM_BASE_ADDR + CAM_ISP_EXP_MEAN_30_OFFSET)

/* CAM ISP_EXP_MEAN_40 Register (32 bits) */
#define CAM_ISP_EXP_MEAN_40_OFFSET     0x2624
#define CAM_ISP_EXP_MEAN_40_REG        IOA(CAM_BASE_ADDR + CAM_ISP_EXP_MEAN_40_OFFSET)

/* CAM ISP_EXP_MEAN_01 Register (32 bits) */
#define CAM_ISP_EXP_MEAN_01_OFFSET     0x2628
#define CAM_ISP_EXP_MEAN_01_REG        IOA(CAM_BASE_ADDR + CAM_ISP_EXP_MEAN_01_OFFSET)

/* CAM ISP_EXP_MEAN_11 Register (32 bits) */
#define CAM_ISP_EXP_MEAN_11_OFFSET     0x262C
#define CAM_ISP_EXP_MEAN_11_REG        IOA(CAM_BASE_ADDR + CAM_ISP_EXP_MEAN_11_OFFSET)

/* CAM ISP_EXP_MEAN_21 Register (32 bits) */
#define CAM_ISP_EXP_MEAN_21_OFFSET     0x2630
#define CAM_ISP_EXP_MEAN_21_REG        IOA(CAM_BASE_ADDR + CAM_ISP_EXP_MEAN_21_OFFSET)

/* CAM ISP_EXP_MEAN_31 Register (32 bits) */
#define CAM_ISP_EXP_MEAN_31_OFFSET     0x2634
#define CAM_ISP_EXP_MEAN_31_REG        IOA(CAM_BASE_ADDR + CAM_ISP_EXP_MEAN_31_OFFSET)

/* CAM ISP_EXP_MEAN_41 Register (32 bits) */
#define CAM_ISP_EXP_MEAN_41_OFFSET     0x2638
#define CAM_ISP_EXP_MEAN_41_REG        IOA(CAM_BASE_ADDR + CAM_ISP_EXP_MEAN_41_OFFSET)

/* CAM ISP_EXP_MEAN_02 Register (32 bits) */
#define CAM_ISP_EXP_MEAN_02_OFFSET     0x263C
#define CAM_ISP_EXP_MEAN_02_REG        IOA(CAM_BASE_ADDR + CAM_ISP_EXP_MEAN_02_OFFSET)

/* CAM ISP_EXP_MEAN_12 Register (32 bits) */
#define CAM_ISP_EXP_MEAN_12_OFFSET     0x2640
#define CAM_ISP_EXP_MEAN_12_REG        IOA(CAM_BASE_ADDR + CAM_ISP_EXP_MEAN_12_OFFSET)

/* CAM ISP_EXP_MEAN_22 Register (32 bits) */
#define CAM_ISP_EXP_MEAN_22_OFFSET     0x2644
#define CAM_ISP_EXP_MEAN_22_REG        IOA(CAM_BASE_ADDR + CAM_ISP_EXP_MEAN_22_OFFSET)

/* CAM ISP_EXP_MEAN_32 Register (32 bits) */
#define CAM_ISP_EXP_MEAN_32_OFFSET     0x2648
#define CAM_ISP_EXP_MEAN_32_REG        IOA(CAM_BASE_ADDR + CAM_ISP_EXP_MEAN_32_OFFSET)

/* CAM ISP_EXP_MEAN_42 Register (32 bits) */
#define CAM_ISP_EXP_MEAN_42_OFFSET     0x264C
#define CAM_ISP_EXP_MEAN_42_REG        IOA(CAM_BASE_ADDR + CAM_ISP_EXP_MEAN_42_OFFSET)

/* CAM ISP_EXP_MEAN_03 Register (32 bits) */
#define CAM_ISP_EXP_MEAN_03_OFFSET     0x2650
#define CAM_ISP_EXP_MEAN_03_REG        IOA(CAM_BASE_ADDR + CAM_ISP_EXP_MEAN_03_OFFSET)

/* CAM ISP_EXP_MEAN_13 Register (32 bits) */
#define CAM_ISP_EXP_MEAN_13_OFFSET     0x2654
#define CAM_ISP_EXP_MEAN_13_REG        IOA(CAM_BASE_ADDR + CAM_ISP_EXP_MEAN_13_OFFSET)

/* CAM ISP_EXP_MEAN_23 Register (32 bits) */
#define CAM_ISP_EXP_MEAN_23_OFFSET     0x2658
#define CAM_ISP_EXP_MEAN_23_REG        IOA(CAM_BASE_ADDR + CAM_ISP_EXP_MEAN_23_OFFSET)

/* CAM ISP_EXP_MEAN_33 Register (32 bits) */
#define CAM_ISP_EXP_MEAN_33_OFFSET     0x265C
#define CAM_ISP_EXP_MEAN_33_REG        IOA(CAM_BASE_ADDR + CAM_ISP_EXP_MEAN_33_OFFSET)

/* CAM ISP_EXP_MEAN_43 Register (32 bits) */
#define CAM_ISP_EXP_MEAN_43_OFFSET     0x2660
#define CAM_ISP_EXP_MEAN_43_REG        IOA(CAM_BASE_ADDR + CAM_ISP_EXP_MEAN_43_OFFSET)

/* CAM ISP_EXP_MEAN_04 Register (32 bits) */
#define CAM_ISP_EXP_MEAN_04_OFFSET     0x2664
#define CAM_ISP_EXP_MEAN_04_REG        IOA(CAM_BASE_ADDR + CAM_ISP_EXP_MEAN_04_OFFSET)

/* CAM ISP_EXP_MEAN_14 Register (32 bits) */
#define CAM_ISP_EXP_MEAN_14_OFFSET     0x2668
#define CAM_ISP_EXP_MEAN_14_REG        IOA(CAM_BASE_ADDR + CAM_ISP_EXP_MEAN_14_OFFSET)

/* CAM ISP_EXP_MEAN_24 Register (32 bits) */
#define CAM_ISP_EXP_MEAN_24_OFFSET     0x266C
#define CAM_ISP_EXP_MEAN_24_REG        IOA(CAM_BASE_ADDR + CAM_ISP_EXP_MEAN_24_OFFSET)

/* CAM ISP_EXP_MEAN_34 Register (32 bits) */
#define CAM_ISP_EXP_MEAN_34_OFFSET     0x2670
#define CAM_ISP_EXP_MEAN_34_REG        IOA(CAM_BASE_ADDR + CAM_ISP_EXP_MEAN_34_OFFSET)

/* CAM ISP_EXP_MEAN_44 Register (32 bits) */
#define CAM_ISP_EXP_MEAN_44_OFFSET     0x2674
#define CAM_ISP_EXP_MEAN_44_REG        IOA(CAM_BASE_ADDR + CAM_ISP_EXP_MEAN_44_OFFSET)

/* CAM ISP_BLS_CTRL Register (32 bits) */
#define CAM_ISP_BLS_CTRL_OFFSET        0x2700
#define CAM_ISP_BLS_CTRL_REG           IOA(CAM_BASE_ADDR + CAM_ISP_BLS_CTRL_OFFSET)

/* CAM ISP_BLS_SAMPLES Register (32 bits) */
#define CAM_ISP_BLS_SAMPLES_OFFSET     0x2704
#define CAM_ISP_BLS_SAMPLES_REG        IOA(CAM_BASE_ADDR + CAM_ISP_BLS_SAMPLES_OFFSET)

/* CAM ISP_BLS_H1_START Register (32 bits) */
#define CAM_ISP_BLS_H1_START_OFFSET    0x2708
#define CAM_ISP_BLS_H1_START_REG       IOA(CAM_BASE_ADDR + CAM_ISP_BLS_H1_START_OFFSET)

/* CAM ISP_BLS_H1_STOP Register (32 bits) */
#define CAM_ISP_BLS_H1_STOP_OFFSET     0x270C
#define CAM_ISP_BLS_H1_STOP_REG        IOA(CAM_BASE_ADDR + CAM_ISP_BLS_H1_STOP_OFFSET)

/* CAM ISP_BLS_V1_START Register (32 bits) */
#define CAM_ISP_BLS_V1_START_OFFSET    0x2710
#define CAM_ISP_BLS_V1_START_REG       IOA(CAM_BASE_ADDR + CAM_ISP_BLS_V1_START_OFFSET)

/* CAM ISP_BLS_V1_STOP Register (32 bits) */
#define CAM_ISP_BLS_V1_STOP_OFFSET     0x2714
#define CAM_ISP_BLS_V1_STOP_REG        IOA(CAM_BASE_ADDR + CAM_ISP_BLS_V1_STOP_OFFSET)

/* CAM ISP_BLS_H2_START Register (32 bits) */
#define CAM_ISP_BLS_H2_START_OFFSET    0x2718
#define CAM_ISP_BLS_H2_START_REG       IOA(CAM_BASE_ADDR + CAM_ISP_BLS_H2_START_OFFSET)

/* CAM ISP_BLS_H2_STOP Register (32 bits) */
#define CAM_ISP_BLS_H2_STOP_OFFSET     0x271C
#define CAM_ISP_BLS_H2_STOP_REG        IOA(CAM_BASE_ADDR + CAM_ISP_BLS_H2_STOP_OFFSET)

/* CAM ISP_BLS_V2_START Register (32 bits) */
#define CAM_ISP_BLS_V2_START_OFFSET    0x2720
#define CAM_ISP_BLS_V2_START_REG       IOA(CAM_BASE_ADDR + CAM_ISP_BLS_V2_START_OFFSET)

/* CAM ISP_BLS_V2_STOP Register (32 bits) */
#define CAM_ISP_BLS_V2_STOP_OFFSET     0x2724
#define CAM_ISP_BLS_V2_STOP_REG        IOA(CAM_BASE_ADDR + CAM_ISP_BLS_V2_STOP_OFFSET)

/* CAM ISP_BLS_A_FIXED Register (32 bits) */
#define CAM_ISP_BLS_A_FIXED_OFFSET     0x2728
#define CAM_ISP_BLS_A_FIXED_REG        IOA(CAM_BASE_ADDR + CAM_ISP_BLS_A_FIXED_OFFSET)

/* CAM ISP_BLS_B_FIXED Register (32 bits) */
#define CAM_ISP_BLS_B_FIXED_OFFSET     0x272C
#define CAM_ISP_BLS_B_FIXED_REG        IOA(CAM_BASE_ADDR + CAM_ISP_BLS_B_FIXED_OFFSET)

/* CAM ISP_BLS_C_FIXED Register (32 bits) */
#define CAM_ISP_BLS_C_FIXED_OFFSET     0x2730
#define CAM_ISP_BLS_C_FIXED_REG        IOA(CAM_BASE_ADDR + CAM_ISP_BLS_C_FIXED_OFFSET)

/* CAM ISP_BLS_D_FIXED Register (32 bits) */
#define CAM_ISP_BLS_D_FIXED_OFFSET     0x2734
#define CAM_ISP_BLS_D_FIXED_REG        IOA(CAM_BASE_ADDR + CAM_ISP_BLS_D_FIXED_OFFSET)

/* CAM ISP_BLS_A_MEASURED Register (32 bits) */
#define CAM_ISP_BLS_A_MEASURED_OFFSET  0x2738
#define CAM_ISP_BLS_A_MEASURED_REG     IOA(CAM_BASE_ADDR + CAM_ISP_BLS_A_MEASURED_OFFSET)

/* CAM ISP_BLS_B_MEASURED Register (32 bits) */
#define CAM_ISP_BLS_B_MEASURED_OFFSET  0x273C
#define CAM_ISP_BLS_B_MEASURED_REG     IOA(CAM_BASE_ADDR + CAM_ISP_BLS_B_MEASURED_OFFSET)

/* CAM ISP_BLS_C_MEASURED Register (32 bits) */
#define CAM_ISP_BLS_C_MEASURED_OFFSET  0x2740
#define CAM_ISP_BLS_C_MEASURED_REG     IOA(CAM_BASE_ADDR + CAM_ISP_BLS_C_MEASURED_OFFSET)

/* CAM ISP_BLS_D_MEASURED Register (32 bits) */
#define CAM_ISP_BLS_D_MEASURED_OFFSET  0x2744
#define CAM_ISP_BLS_D_MEASURED_REG     IOA(CAM_BASE_ADDR + CAM_ISP_BLS_D_MEASURED_OFFSET)

/* Register description for VI_CCL */

/* Reset value of register CAM_VI_CCL */
#define CAM_VI_CCL_VALUE               0x0

/* Bits definition for register CAM_VI_CCL */
#define CAM_CCLFDIS_SHIFT              2
#define CAM_CCLFDIS_FIELD              (0xFFFFFFFF - (0x1UL<<CAM_CCLFDIS_SHIFT))
#define CAM_CCLFDIS_0                  (0x0UL<<CAM_CCLFDIS_SHIFT)
#define CAM_CCLFDIS_1                  (0x1UL<<CAM_CCLFDIS_SHIFT)
#define CAM_CCLFDIS                    (0x1UL<<CAM_CCLFDIS_SHIFT)
#define CAM_CCLDISS_SHIFT              1
#define CAM_CCLDISS_FIELD              (0xFFFFFFFF - (0x1UL<<CAM_CCLDISS_SHIFT))
#define CAM_CCLDISS_0                  (0x0UL<<CAM_CCLDISS_SHIFT)
#define CAM_CCLDISS_1                  (0x1UL<<CAM_CCLDISS_SHIFT)
#define CAM_CCLDISS                    (0x1UL<<CAM_CCLDISS_SHIFT)

/*****************************************************************************/
/* Register description for VI_ID */

/* Reset value of register CAM_VI_ID */
#define CAM_VI_ID_VALUE                0x553010

/* Bits definition for register CAM_VI_ID */
#define CAM_IP_ID_SHIFT                0
#define CAM_IP_ID_FIELD                (0xFFFFFFFF - (0x7FFFFFFFUL<<CAM_IP_ID_SHIFT))
#define CAM_IP_ID_553010               (0x553010UL<<CAM_IP_ID_SHIFT)

/*****************************************************************************/
/* Register description for VI_ICCL */

/* Reset value of register CAM_VI_ICCL */
#define CAM_VI_ICCL_VALUE              0xF7B

/* Bits definition for register CAM_VI_ICCL */
#define CAM_SIMP_CLK_EN_SHIFT          9
#define CAM_SIMP_CLK_EN_FIELD          (0xFFFFFFFF - (0x1UL<<CAM_SIMP_CLK_EN_SHIFT))
#define CAM_SIMP_CLK_EN_0              (0x0UL<<CAM_SIMP_CLK_EN_SHIFT)
#define CAM_SIMP_CLK_EN_1              (0x1UL<<CAM_SIMP_CLK_EN_SHIFT)
#define CAM_SIMP_CLK_EN                (0x1UL<<CAM_SIMP_CLK_EN_SHIFT)
#define CAM_IE_CLK_EN_SHIFT            8
#define CAM_IE_CLK_EN_FIELD            (0xFFFFFFFF - (0x1UL<<CAM_IE_CLK_EN_SHIFT))
#define CAM_IE_CLK_EN_0                (0x0UL<<CAM_IE_CLK_EN_SHIFT)
#define CAM_IE_CLK_EN_1                (0x1UL<<CAM_IE_CLK_EN_SHIFT)
#define CAM_IE_CLK_EN                  (0x1UL<<CAM_IE_CLK_EN_SHIFT)
#define CAM_MI_CLK_EN_SHIFT            6
#define CAM_MI_CLK_EN_FIELD            (0xFFFFFFFF - (0x1UL<<CAM_MI_CLK_EN_SHIFT))
#define CAM_MI_CLK_EN_0                (0x0UL<<CAM_MI_CLK_EN_SHIFT)
#define CAM_MI_CLK_EN_1                (0x1UL<<CAM_MI_CLK_EN_SHIFT)
#define CAM_MI_CLK_EN                  (0x1UL<<CAM_MI_CLK_EN_SHIFT)
#define CAM_JPE_CLK_EN_SHIFT           5
#define CAM_JPE_CLK_EN_FIELD           (0xFFFFFFFF - (0x1UL<<CAM_JPE_CLK_EN_SHIFT))
#define CAM_JPE_CLK_EN_0               (0x0UL<<CAM_JPE_CLK_EN_SHIFT)
#define CAM_JPE_CLK_EN_1               (0x1UL<<CAM_JPE_CLK_EN_SHIFT)
#define CAM_JPE_CLK_EN                 (0x1UL<<CAM_JPE_CLK_EN_SHIFT)
#define CAM_SRSZ_CLK_EN_SHIFT          4
#define CAM_SRSZ_CLK_EN_FIELD          (0xFFFFFFFF - (0x1UL<<CAM_SRSZ_CLK_EN_SHIFT))
#define CAM_SRSZ_CLK_EN_0              (0x0UL<<CAM_SRSZ_CLK_EN_SHIFT)
#define CAM_SRSZ_CLK_EN_1              (0x1UL<<CAM_SRSZ_CLK_EN_SHIFT)
#define CAM_SRSZ_CLK_EN                (0x1UL<<CAM_SRSZ_CLK_EN_SHIFT)
#define CAM_MRSZ_CLK_EN_SHIFT          3
#define CAM_MRSZ_CLK_EN_FIELD          (0xFFFFFFFF - (0x1UL<<CAM_MRSZ_CLK_EN_SHIFT))
#define CAM_MRSZ_CLK_EN_0              (0x0UL<<CAM_MRSZ_CLK_EN_SHIFT)
#define CAM_MRSZ_CLK_EN_1              (0x1UL<<CAM_MRSZ_CLK_EN_SHIFT)
#define CAM_MRSZ_CLK_EN                (0x1UL<<CAM_MRSZ_CLK_EN_SHIFT)
#define CAM_CP_CLK_EN_SHIFT            1
#define CAM_CP_CLK_EN_FIELD            (0xFFFFFFFF - (0x1UL<<CAM_CP_CLK_EN_SHIFT))
#define CAM_CP_CLK_EN_0                (0x0UL<<CAM_CP_CLK_EN_SHIFT)
#define CAM_CP_CLK_EN_1                (0x1UL<<CAM_CP_CLK_EN_SHIFT)
#define CAM_CP_CLK_EN                  (0x1UL<<CAM_CP_CLK_EN_SHIFT)
#define CAM_ISP_CLK_EN_SHIFT           0
#define CAM_ISP_CLK_EN_FIELD           (0xFFFFFFFF - (0x1UL<<CAM_ISP_CLK_EN_SHIFT))
#define CAM_ISP_CLK_EN_0               (0x0UL<<CAM_ISP_CLK_EN_SHIFT)
#define CAM_ISP_CLK_EN_1               (0x1UL<<CAM_ISP_CLK_EN_SHIFT)
#define CAM_ISP_CLK_EN                 (0x1UL<<CAM_ISP_CLK_EN_SHIFT)

/*****************************************************************************/
/* Register description for VI_IRCL */

/* Reset value of register CAM_VI_IRCL */
#define CAM_VI_IRCL_VALUE              0x0

/* Bits definition for register CAM_VI_IRCL */
#define CAM_SIMP_SW_RST_SHIFT          9
#define CAM_SIMP_SW_RST_FIELD          (0xFFFFFFFF - (0x1UL<<CAM_SIMP_SW_RST_SHIFT))
#define CAM_SIMP_SW_RST_0              (0x0UL<<CAM_SIMP_SW_RST_SHIFT)
#define CAM_SIMP_SW_RST_1              (0x1UL<<CAM_SIMP_SW_RST_SHIFT)
#define CAM_SIMP_SW_RST                (0x1UL<<CAM_SIMP_SW_RST_SHIFT)
#define CAM_IE_SW_RST_SHIFT            8
#define CAM_IE_SW_RST_FIELD            (0xFFFFFFFF - (0x1UL<<CAM_IE_SW_RST_SHIFT))
#define CAM_IE_SW_RST_0                (0x0UL<<CAM_IE_SW_RST_SHIFT)
#define CAM_IE_SW_RST_1                (0x1UL<<CAM_IE_SW_RST_SHIFT)
#define CAM_IE_SW_RST                  (0x1UL<<CAM_IE_SW_RST_SHIFT)
#define CAM_VI_SW_RST_SHIFT            7
#define CAM_VI_SW_RST_FIELD            (0xFFFFFFFF - (0x1UL<<CAM_VI_SW_RST_SHIFT))
#define CAM_VI_SW_RST_0                (0x0UL<<CAM_VI_SW_RST_SHIFT)
#define CAM_VI_SW_RST_1                (0x1UL<<CAM_VI_SW_RST_SHIFT)
#define CAM_VI_SW_RST                  (0x1UL<<CAM_VI_SW_RST_SHIFT)
#define CAM_MI_SW_RST_SHIFT            6
#define CAM_MI_SW_RST_FIELD            (0xFFFFFFFF - (0x1UL<<CAM_MI_SW_RST_SHIFT))
#define CAM_MI_SW_RST_0                (0x0UL<<CAM_MI_SW_RST_SHIFT)
#define CAM_MI_SW_RST_1                (0x1UL<<CAM_MI_SW_RST_SHIFT)
#define CAM_MI_SW_RST                  (0x1UL<<CAM_MI_SW_RST_SHIFT)
#define CAM_JPE_SW_RST_SHIFT           5
#define CAM_JPE_SW_RST_FIELD           (0xFFFFFFFF - (0x1UL<<CAM_JPE_SW_RST_SHIFT))
#define CAM_JPE_SW_RST_0               (0x0UL<<CAM_JPE_SW_RST_SHIFT)
#define CAM_JPE_SW_RST_1               (0x1UL<<CAM_JPE_SW_RST_SHIFT)
#define CAM_JPE_SW_RST                 (0x1UL<<CAM_JPE_SW_RST_SHIFT)
#define CAM_SRSZ_SW_RST_SHIFT          4
#define CAM_SRSZ_SW_RST_FIELD          (0xFFFFFFFF - (0x1UL<<CAM_SRSZ_SW_RST_SHIFT))
#define CAM_SRSZ_SW_RST_0              (0x0UL<<CAM_SRSZ_SW_RST_SHIFT)
#define CAM_SRSZ_SW_RST_1              (0x1UL<<CAM_SRSZ_SW_RST_SHIFT)
#define CAM_SRSZ_SW_RST                (0x1UL<<CAM_SRSZ_SW_RST_SHIFT)
#define CAM_MRSZ_SW_RST_SHIFT          3
#define CAM_MRSZ_SW_RST_FIELD          (0xFFFFFFFF - (0x1UL<<CAM_MRSZ_SW_RST_SHIFT))
#define CAM_MRSZ_SW_RST_0              (0x0UL<<CAM_MRSZ_SW_RST_SHIFT)
#define CAM_MRSZ_SW_RST_1              (0x1UL<<CAM_MRSZ_SW_RST_SHIFT)
#define CAM_MRSZ_SW_RST                (0x1UL<<CAM_MRSZ_SW_RST_SHIFT)
#define CAM_YCS_SW_RST_SHIFT           2
#define CAM_YCS_SW_RST_FIELD           (0xFFFFFFFF - (0x1UL<<CAM_YCS_SW_RST_SHIFT))
#define CAM_YCS_SW_RST_0               (0x0UL<<CAM_YCS_SW_RST_SHIFT)
#define CAM_YCS_SW_RST_1               (0x1UL<<CAM_YCS_SW_RST_SHIFT)
#define CAM_YCS_SW_RST                 (0x1UL<<CAM_YCS_SW_RST_SHIFT)
#define CAM_CP_SW_RST_SHIFT            1
#define CAM_CP_SW_RST_FIELD            (0xFFFFFFFF - (0x1UL<<CAM_CP_SW_RST_SHIFT))
#define CAM_CP_SW_RST_0                (0x0UL<<CAM_CP_SW_RST_SHIFT)
#define CAM_CP_SW_RST_1                (0x1UL<<CAM_CP_SW_RST_SHIFT)
#define CAM_CP_SW_RST                  (0x1UL<<CAM_CP_SW_RST_SHIFT)
#define CAM_ISP_SW_RST_SHIFT           0
#define CAM_ISP_SW_RST_FIELD           (0xFFFFFFFF - (0x1UL<<CAM_ISP_SW_RST_SHIFT))
#define CAM_ISP_SW_RST_0               (0x0UL<<CAM_ISP_SW_RST_SHIFT)
#define CAM_ISP_SW_RST_1               (0x1UL<<CAM_ISP_SW_RST_SHIFT)
#define CAM_ISP_SW_RST                 (0x1UL<<CAM_ISP_SW_RST_SHIFT)

/*****************************************************************************/
/* Register description for VI_DPCL */

/* Reset value of register CAM_VI_DPCL */
#define CAM_VI_DPCL_VALUE              0x0

/* Bits definition for register CAM_VI_DPCL */
#define CAM_SP_SWITCH_SHIFT            11
#define CAM_SP_SWITCH_FIELD            (0xFFFFFFFF - (0x1UL<<CAM_SP_SWITCH_SHIFT))
#define CAM_SP_SWITCH_0                (0x0UL<<CAM_SP_SWITCH_SHIFT)
#define CAM_SP_SWITCH_1                (0x1UL<<CAM_SP_SWITCH_SHIFT)
#define CAM_SP_SWITCH                  (0x1UL<<CAM_SP_SWITCH_SHIFT)
#define CAM_IE_SWITCH_SHIFT            10
#define CAM_IE_SWITCH_FIELD            (0xFFFFFFFF - (0x1UL<<CAM_IE_SWITCH_SHIFT))
#define CAM_IE_SWITCH_0                (0x0UL<<CAM_IE_SWITCH_SHIFT)
#define CAM_IE_SWITCH_1                (0x1UL<<CAM_IE_SWITCH_SHIFT)
#define CAM_IE_SWITCH                  (0x1UL<<CAM_IE_SWITCH_SHIFT)
#define CAM_DMA_SWITCH_SHIFT           4
#define CAM_DMA_SWITCH_FIELD           (0xFFFFFFFF - (0x7UL<<CAM_DMA_SWITCH_SHIFT))
#define CAM_DMA_SWITCH_0               (0x0UL<<CAM_DMA_SWITCH_SHIFT)
#define CAM_DMA_SWITCH_1               (0x1UL<<CAM_DMA_SWITCH_SHIFT)
#define CAM_DMA_SWITCH_2               (0x2UL<<CAM_DMA_SWITCH_SHIFT)
#define CAM_DMA_SWITCH_3               (0x3UL<<CAM_DMA_SWITCH_SHIFT)
#define CAM_YCS_CHN_MODE_SHIFT         2
#define CAM_YCS_CHN_MODE_FIELD         (0xFFFFFFFF - (0x3UL<<CAM_YCS_CHN_MODE_SHIFT))
#define CAM_YCS_CHN_MODE_0             (0x0UL<<CAM_YCS_CHN_MODE_SHIFT)
#define CAM_YCS_CHN_MODE_1             (0x1UL<<CAM_YCS_CHN_MODE_SHIFT)
#define CAM_YCS_CHN_MODE_2             (0x2UL<<CAM_YCS_CHN_MODE_SHIFT)
#define CAM_YCS_CHN_MODE_3             (0x3UL<<CAM_YCS_CHN_MODE_SHIFT)
#define CAM_MP_SWITCH_SHIFT            0
#define CAM_MP_SWITCH_FIELD            (0xFFFFFFFF - (0x3UL<<CAM_MP_SWITCH_SHIFT))
#define CAM_MP_SWITCH_0                (0x0UL<<CAM_MP_SWITCH_SHIFT)
#define CAM_MP_SWITCH_1                (0x1UL<<CAM_MP_SWITCH_SHIFT)
#define CAM_MP_SWITCH_2                (0x2UL<<CAM_MP_SWITCH_SHIFT)
#define CAM_MP_SWITCH_3                (0x3UL<<CAM_MP_SWITCH_SHIFT)

/*****************************************************************************/
/* Register description for IE_CTRL */

/* Reset value of register CAM_IE_CTRL */
#define CAM_IE_CTRL_VALUE              0x0

/* Bits definition for register CAM_IE_CTRL */
#define CAM_IE_CFG_UPD_SHIFT           4
#define CAM_IE_CFG_UPD_FIELD           (0xFFFFFFFF - (0x1UL<<CAM_IE_CFG_UPD_SHIFT))
#define CAM_IE_CFG_UPD_0               (0x0UL<<CAM_IE_CFG_UPD_SHIFT)
#define CAM_IE_CFG_UPD_1               (0x1UL<<CAM_IE_CFG_UPD_SHIFT)
#define CAM_IE_CFG_UPD                 (0x1UL<<CAM_IE_CFG_UPD_SHIFT)
#define CAM_EFFECT_MODE_SHIFT          1
#define CAM_EFFECT_MODE_FIELD          (0xFFFFFFFF - (0x7UL<<CAM_EFFECT_MODE_SHIFT))
#define CAM_EFFECT_MODE_0              (0x0UL<<CAM_EFFECT_MODE_SHIFT)
#define CAM_EFFECT_MODE_1              (0x1UL<<CAM_EFFECT_MODE_SHIFT)
#define CAM_EFFECT_MODE_2              (0x2UL<<CAM_EFFECT_MODE_SHIFT)
#define CAM_EFFECT_MODE_3              (0x3UL<<CAM_EFFECT_MODE_SHIFT)
#define CAM_EFFECT_MODE_4              (0x4UL<<CAM_EFFECT_MODE_SHIFT)
#define CAM_EFFECT_MODE_5              (0x5UL<<CAM_EFFECT_MODE_SHIFT)
#define CAM_BYPASS_MODE_SHIFT          0
#define CAM_BYPASS_MODE_FIELD          (0xFFFFFFFF - (0x1UL<<CAM_BYPASS_MODE_SHIFT))
#define CAM_BYPASS_MODE_0              (0x0UL<<CAM_BYPASS_MODE_SHIFT)
#define CAM_BYPASS_MODE_1              (0x1UL<<CAM_BYPASS_MODE_SHIFT)
#define CAM_BYPASS_MODE                (0x1UL<<CAM_BYPASS_MODE_SHIFT)

/*****************************************************************************/
/* Register description for IE_COLOR_SEL */

/* Reset value of register CAM_IE_COLOR_SEL */
#define CAM_IE_COLOR_SEL_VALUE         0x0

/* Bits definition for register CAM_IE_COLOR_SEL */
#define CAM_COLOR_THRESHOLD_SHIFT      8
#define CAM_COLOR_THRESHOLD_FIELD      (0xFFFFFFFF - (0xFFUL<<CAM_COLOR_THRESHOLD_SHIFT))
#define CAM_COLOR_THRESHOLD_0          (0x0UL<<CAM_COLOR_THRESHOLD_SHIFT)
#define CAM_COLOR_SELECTION_SHIFT      0
#define CAM_COLOR_SELECTION_FIELD      (0xFFFFFFFF - (0x7UL<<CAM_COLOR_SELECTION_SHIFT))
#define CAM_COLOR_SELECTION_0          (0x0UL<<CAM_COLOR_SELECTION_SHIFT)
#define CAM_COLOR_SELECTION_1          (0x1UL<<CAM_COLOR_SELECTION_SHIFT)
#define CAM_COLOR_SELECTION_2          (0x2UL<<CAM_COLOR_SELECTION_SHIFT)
#define CAM_COLOR_SELECTION_3          (0x3UL<<CAM_COLOR_SELECTION_SHIFT)
#define CAM_COLOR_SELECTION_4          (0x4UL<<CAM_COLOR_SELECTION_SHIFT)
#define CAM_COLOR_SELECTION_5          (0x5UL<<CAM_COLOR_SELECTION_SHIFT)
#define CAM_COLOR_SELECTION_6          (0x6UL<<CAM_COLOR_SELECTION_SHIFT)
#define CAM_COLOR_SELECTION_7          (0x7UL<<CAM_COLOR_SELECTION_SHIFT)

/*****************************************************************************/
/* Register description for IE_EFF_MAT_1 */

/* Reset value of register CAM_IE_EFF_MAT_1 */
#define CAM_IE_EFF_MAT_1_VALUE         0x8089

/* Bits definition for register CAM_IE_EFF_MAT_1 */
#define CAM_EMB_COEF_21_EN_SHIFT       15
#define CAM_EMB_COEF_21_EN_FIELD       (0xFFFFFFFF - (0x1UL<<CAM_EMB_COEF_21_EN_SHIFT))
#define CAM_EMB_COEF_21_EN_0           (0x0UL<<CAM_EMB_COEF_21_EN_SHIFT)
#define CAM_EMB_COEF_21_EN_1           (0x1UL<<CAM_EMB_COEF_21_EN_SHIFT)
#define CAM_EMB_COEF_21_EN             (0x1UL<<CAM_EMB_COEF_21_EN_SHIFT)
#define CAM_EMB_COEF_21_SHIFT          12
#define CAM_EMB_COEF_21_FIELD          (0xFFFFFFFF - (0x7UL<<CAM_EMB_COEF_21_SHIFT))
#define CAM_EMB_COEF_21_0              (0x0UL<<CAM_EMB_COEF_21_SHIFT)
#define CAM_EMB_COEF_21_1              (0x1UL<<CAM_EMB_COEF_21_SHIFT)
#define CAM_EMB_COEF_21_2              (0x2UL<<CAM_EMB_COEF_21_SHIFT)
#define CAM_EMB_COEF_21_3              (0x3UL<<CAM_EMB_COEF_21_SHIFT)
#define CAM_EMB_COEF_21_4              (0x4UL<<CAM_EMB_COEF_21_SHIFT)
#define CAM_EMB_COEF_21_5              (0x5UL<<CAM_EMB_COEF_21_SHIFT)
#define CAM_EMB_COEF_21_6              (0x6UL<<CAM_EMB_COEF_21_SHIFT)
#define CAM_EMB_COEF_21_7              (0x7UL<<CAM_EMB_COEF_21_SHIFT)
#define CAM_EMB_COEF_13_EN_SHIFT       11
#define CAM_EMB_COEF_13_EN_FIELD       (0xFFFFFFFF - (0x1UL<<CAM_EMB_COEF_13_EN_SHIFT))
#define CAM_EMB_COEF_13_EN_0           (0x0UL<<CAM_EMB_COEF_13_EN_SHIFT)
#define CAM_EMB_COEF_13_EN_1           (0x1UL<<CAM_EMB_COEF_13_EN_SHIFT)
#define CAM_EMB_COEF_13_EN             (0x1UL<<CAM_EMB_COEF_13_EN_SHIFT)
#define CAM_EMB_COEF_13_SHIFT          8
#define CAM_EMB_COEF_13_FIELD          (0xFFFFFFFF - (0x7UL<<CAM_EMB_COEF_13_SHIFT))
#define CAM_EMB_COEF_13_0              (0x0UL<<CAM_EMB_COEF_13_SHIFT)
#define CAM_EMB_COEF_13_1              (0x1UL<<CAM_EMB_COEF_13_SHIFT)
#define CAM_EMB_COEF_13_2              (0x2UL<<CAM_EMB_COEF_13_SHIFT)
#define CAM_EMB_COEF_13_3              (0x3UL<<CAM_EMB_COEF_13_SHIFT)
#define CAM_EMB_COEF_13_4              (0x4UL<<CAM_EMB_COEF_13_SHIFT)
#define CAM_EMB_COEF_13_5              (0x5UL<<CAM_EMB_COEF_13_SHIFT)
#define CAM_EMB_COEF_13_6              (0x6UL<<CAM_EMB_COEF_13_SHIFT)
#define CAM_EMB_COEF_13_7              (0x7UL<<CAM_EMB_COEF_13_SHIFT)
#define CAM_EMB_COEF_12_EN_SHIFT       7
#define CAM_EMB_COEF_12_EN_FIELD       (0xFFFFFFFF - (0x1UL<<CAM_EMB_COEF_12_EN_SHIFT))
#define CAM_EMB_COEF_12_EN_0           (0x0UL<<CAM_EMB_COEF_12_EN_SHIFT)
#define CAM_EMB_COEF_12_EN_1           (0x1UL<<CAM_EMB_COEF_12_EN_SHIFT)
#define CAM_EMB_COEF_12_EN             (0x1UL<<CAM_EMB_COEF_12_EN_SHIFT)
#define CAM_EMB_COEF_12_SHIFT          4
#define CAM_EMB_COEF_12_FIELD          (0xFFFFFFFF - (0x7UL<<CAM_EMB_COEF_12_SHIFT))
#define CAM_EMB_COEF_12_0              (0x0UL<<CAM_EMB_COEF_12_SHIFT)
#define CAM_EMB_COEF_12_1              (0x1UL<<CAM_EMB_COEF_12_SHIFT)
#define CAM_EMB_COEF_12_2              (0x2UL<<CAM_EMB_COEF_12_SHIFT)
#define CAM_EMB_COEF_12_3              (0x3UL<<CAM_EMB_COEF_12_SHIFT)
#define CAM_EMB_COEF_12_4              (0x4UL<<CAM_EMB_COEF_12_SHIFT)
#define CAM_EMB_COEF_12_5              (0x5UL<<CAM_EMB_COEF_12_SHIFT)
#define CAM_EMB_COEF_12_6              (0x6UL<<CAM_EMB_COEF_12_SHIFT)
#define CAM_EMB_COEF_12_7              (0x7UL<<CAM_EMB_COEF_12_SHIFT)
#define CAM_EMB_COEF_11_EN_SHIFT       3
#define CAM_EMB_COEF_11_EN_FIELD       (0xFFFFFFFF - (0x1UL<<CAM_EMB_COEF_11_EN_SHIFT))
#define CAM_EMB_COEF_11_EN_0           (0x0UL<<CAM_EMB_COEF_11_EN_SHIFT)
#define CAM_EMB_COEF_11_EN_1           (0x1UL<<CAM_EMB_COEF_11_EN_SHIFT)
#define CAM_EMB_COEF_11_EN             (0x1UL<<CAM_EMB_COEF_11_EN_SHIFT)
#define CAM_EMB_COEF_11_SHIFT          0
#define CAM_EMB_COEF_11_FIELD          (0xFFFFFFFF - (0x7UL<<CAM_EMB_COEF_11_SHIFT))
#define CAM_EMB_COEF_11_0              (0x0UL<<CAM_EMB_COEF_11_SHIFT)
#define CAM_EMB_COEF_11_1              (0x1UL<<CAM_EMB_COEF_11_SHIFT)
#define CAM_EMB_COEF_11_2              (0x2UL<<CAM_EMB_COEF_11_SHIFT)
#define CAM_EMB_COEF_11_3              (0x3UL<<CAM_EMB_COEF_11_SHIFT)
#define CAM_EMB_COEF_11_4              (0x4UL<<CAM_EMB_COEF_11_SHIFT)
#define CAM_EMB_COEF_11_5              (0x5UL<<CAM_EMB_COEF_11_SHIFT)
#define CAM_EMB_COEF_11_6              (0x6UL<<CAM_EMB_COEF_11_SHIFT)
#define CAM_EMB_COEF_11_7              (0x7UL<<CAM_EMB_COEF_11_SHIFT)

/*****************************************************************************/
/* Register description for IE_EFF_MAT_2 */

/* Reset value of register CAM_IE_EFF_MAT_2 */
#define CAM_IE_EFF_MAT_2_VALUE         0xC0C0

/* Bits definition for register CAM_IE_EFF_MAT_2 */
#define CAM_EMB_COEF_32_EN_SHIFT       15
#define CAM_EMB_COEF_32_EN_FIELD       (0xFFFFFFFF - (0x1UL<<CAM_EMB_COEF_32_EN_SHIFT))
#define CAM_EMB_COEF_32_EN_0           (0x0UL<<CAM_EMB_COEF_32_EN_SHIFT)
#define CAM_EMB_COEF_32_EN_1           (0x1UL<<CAM_EMB_COEF_32_EN_SHIFT)
#define CAM_EMB_COEF_32_EN             (0x1UL<<CAM_EMB_COEF_32_EN_SHIFT)
#define CAM_EMB_COEF_32_SHIFT          12
#define CAM_EMB_COEF_32_FIELD          (0xFFFFFFFF - (0x7UL<<CAM_EMB_COEF_32_SHIFT))
#define CAM_EMB_COEF_32_0              (0x0UL<<CAM_EMB_COEF_32_SHIFT)
#define CAM_EMB_COEF_32_1              (0x1UL<<CAM_EMB_COEF_32_SHIFT)
#define CAM_EMB_COEF_32_2              (0x2UL<<CAM_EMB_COEF_32_SHIFT)
#define CAM_EMB_COEF_32_3              (0x3UL<<CAM_EMB_COEF_32_SHIFT)
#define CAM_EMB_COEF_32_4              (0x4UL<<CAM_EMB_COEF_32_SHIFT)
#define CAM_EMB_COEF_32_5              (0x5UL<<CAM_EMB_COEF_32_SHIFT)
#define CAM_EMB_COEF_32_6              (0x6UL<<CAM_EMB_COEF_32_SHIFT)
#define CAM_EMB_COEF_32_7              (0x7UL<<CAM_EMB_COEF_32_SHIFT)
#define CAM_EMB_COEF_31_EN_SHIFT       11
#define CAM_EMB_COEF_31_EN_FIELD       (0xFFFFFFFF - (0x1UL<<CAM_EMB_COEF_31_EN_SHIFT))
#define CAM_EMB_COEF_31_EN_0           (0x0UL<<CAM_EMB_COEF_31_EN_SHIFT)
#define CAM_EMB_COEF_31_EN_1           (0x1UL<<CAM_EMB_COEF_31_EN_SHIFT)
#define CAM_EMB_COEF_31_EN             (0x1UL<<CAM_EMB_COEF_31_EN_SHIFT)
#define CAM_EMB_COEF_31_SHIFT          8
#define CAM_EMB_COEF_31_FIELD          (0xFFFFFFFF - (0x7UL<<CAM_EMB_COEF_31_SHIFT))
#define CAM_EMB_COEF_31_0              (0x0UL<<CAM_EMB_COEF_31_SHIFT)
#define CAM_EMB_COEF_31_1              (0x1UL<<CAM_EMB_COEF_31_SHIFT)
#define CAM_EMB_COEF_31_2              (0x2UL<<CAM_EMB_COEF_31_SHIFT)
#define CAM_EMB_COEF_31_3              (0x3UL<<CAM_EMB_COEF_31_SHIFT)
#define CAM_EMB_COEF_31_4              (0x4UL<<CAM_EMB_COEF_31_SHIFT)
#define CAM_EMB_COEF_31_5              (0x5UL<<CAM_EMB_COEF_31_SHIFT)
#define CAM_EMB_COEF_31_6              (0x6UL<<CAM_EMB_COEF_31_SHIFT)
#define CAM_EMB_COEF_31_7              (0x7UL<<CAM_EMB_COEF_31_SHIFT)
#define CAM_EMB_COEF_23_EN_SHIFT       7
#define CAM_EMB_COEF_23_EN_FIELD       (0xFFFFFFFF - (0x1UL<<CAM_EMB_COEF_23_EN_SHIFT))
#define CAM_EMB_COEF_23_EN_0           (0x0UL<<CAM_EMB_COEF_23_EN_SHIFT)
#define CAM_EMB_COEF_23_EN_1           (0x1UL<<CAM_EMB_COEF_23_EN_SHIFT)
#define CAM_EMB_COEF_23_EN             (0x1UL<<CAM_EMB_COEF_23_EN_SHIFT)
#define CAM_EMB_COEF_23_SHIFT          4
#define CAM_EMB_COEF_23_FIELD          (0xFFFFFFFF - (0x7UL<<CAM_EMB_COEF_23_SHIFT))
#define CAM_EMB_COEF_23_0              (0x0UL<<CAM_EMB_COEF_23_SHIFT)
#define CAM_EMB_COEF_23_1              (0x1UL<<CAM_EMB_COEF_23_SHIFT)
#define CAM_EMB_COEF_23_2              (0x2UL<<CAM_EMB_COEF_23_SHIFT)
#define CAM_EMB_COEF_23_3              (0x3UL<<CAM_EMB_COEF_23_SHIFT)
#define CAM_EMB_COEF_23_4              (0x4UL<<CAM_EMB_COEF_23_SHIFT)
#define CAM_EMB_COEF_23_5              (0x5UL<<CAM_EMB_COEF_23_SHIFT)
#define CAM_EMB_COEF_23_6              (0x6UL<<CAM_EMB_COEF_23_SHIFT)
#define CAM_EMB_COEF_23_7              (0x7UL<<CAM_EMB_COEF_23_SHIFT)
#define CAM_EMB_COEF_22_EN_SHIFT       3
#define CAM_EMB_COEF_22_EN_FIELD       (0xFFFFFFFF - (0x1UL<<CAM_EMB_COEF_22_EN_SHIFT))
#define CAM_EMB_COEF_22_EN_0           (0x0UL<<CAM_EMB_COEF_22_EN_SHIFT)
#define CAM_EMB_COEF_22_EN_1           (0x1UL<<CAM_EMB_COEF_22_EN_SHIFT)
#define CAM_EMB_COEF_22_EN             (0x1UL<<CAM_EMB_COEF_22_EN_SHIFT)
#define CAM_EMB_COEF_22_SHIFT          0
#define CAM_EMB_COEF_22_FIELD          (0xFFFFFFFF - (0x7UL<<CAM_EMB_COEF_22_SHIFT))
#define CAM_EMB_COEF_22_0              (0x0UL<<CAM_EMB_COEF_22_SHIFT)
#define CAM_EMB_COEF_22_1              (0x1UL<<CAM_EMB_COEF_22_SHIFT)
#define CAM_EMB_COEF_22_2              (0x2UL<<CAM_EMB_COEF_22_SHIFT)
#define CAM_EMB_COEF_22_3              (0x3UL<<CAM_EMB_COEF_22_SHIFT)
#define CAM_EMB_COEF_22_4              (0x4UL<<CAM_EMB_COEF_22_SHIFT)
#define CAM_EMB_COEF_22_5              (0x5UL<<CAM_EMB_COEF_22_SHIFT)
#define CAM_EMB_COEF_22_6              (0x6UL<<CAM_EMB_COEF_22_SHIFT)
#define CAM_EMB_COEF_22_7              (0x7UL<<CAM_EMB_COEF_22_SHIFT)

/*****************************************************************************/
/* Register description for IE_EFF_MAT_3 */

/* Reset value of register CAM_IE_EFF_MAT_3 */
#define CAM_IE_EFF_MAT_3_VALUE         0xCCCD

/* Bits definition for register CAM_IE_EFF_MAT_3 */
#define CAM_SKET_COEF_13_EN_SHIFT      15
#define CAM_SKET_COEF_13_EN_FIELD      (0xFFFFFFFF - (0x1UL<<CAM_SKET_COEF_13_EN_SHIFT))
#define CAM_SKET_COEF_13_EN_0          (0x0UL<<CAM_SKET_COEF_13_EN_SHIFT)
#define CAM_SKET_COEF_13_EN_1          (0x1UL<<CAM_SKET_COEF_13_EN_SHIFT)
#define CAM_SKET_COEF_13_EN            (0x1UL<<CAM_SKET_COEF_13_EN_SHIFT)
#define CAM_SKET_COEF_13_SHIFT         12
#define CAM_SKET_COEF_13_FIELD         (0xFFFFFFFF - (0x7UL<<CAM_SKET_COEF_13_SHIFT))
#define CAM_SKET_COEF_13_0             (0x0UL<<CAM_SKET_COEF_13_SHIFT)
#define CAM_SKET_COEF_13_1             (0x1UL<<CAM_SKET_COEF_13_SHIFT)
#define CAM_SKET_COEF_13_2             (0x2UL<<CAM_SKET_COEF_13_SHIFT)
#define CAM_SKET_COEF_13_3             (0x3UL<<CAM_SKET_COEF_13_SHIFT)
#define CAM_SKET_COEF_13_4             (0x4UL<<CAM_SKET_COEF_13_SHIFT)
#define CAM_SKET_COEF_13_5             (0x5UL<<CAM_SKET_COEF_13_SHIFT)
#define CAM_SKET_COEF_13_6             (0x6UL<<CAM_SKET_COEF_13_SHIFT)
#define CAM_SKET_COEF_13_7             (0x7UL<<CAM_SKET_COEF_13_SHIFT)
#define CAM_SKET_COEF_12_EN_SHIFT      11
#define CAM_SKET_COEF_12_EN_FIELD      (0xFFFFFFFF - (0x1UL<<CAM_SKET_COEF_12_EN_SHIFT))
#define CAM_SKET_COEF_12_EN_0          (0x0UL<<CAM_SKET_COEF_12_EN_SHIFT)
#define CAM_SKET_COEF_12_EN_1          (0x1UL<<CAM_SKET_COEF_12_EN_SHIFT)
#define CAM_SKET_COEF_12_EN            (0x1UL<<CAM_SKET_COEF_12_EN_SHIFT)
#define CAM_SKET_COEF_12_SHIFT         8
#define CAM_SKET_COEF_12_FIELD         (0xFFFFFFFF - (0x7UL<<CAM_SKET_COEF_12_SHIFT))
#define CAM_SKET_COEF_12_0             (0x0UL<<CAM_SKET_COEF_12_SHIFT)
#define CAM_SKET_COEF_12_1             (0x1UL<<CAM_SKET_COEF_12_SHIFT)
#define CAM_SKET_COEF_12_2             (0x2UL<<CAM_SKET_COEF_12_SHIFT)
#define CAM_SKET_COEF_12_3             (0x3UL<<CAM_SKET_COEF_12_SHIFT)
#define CAM_SKET_COEF_12_4             (0x4UL<<CAM_SKET_COEF_12_SHIFT)
#define CAM_SKET_COEF_12_5             (0x5UL<<CAM_SKET_COEF_12_SHIFT)
#define CAM_SKET_COEF_12_6             (0x6UL<<CAM_SKET_COEF_12_SHIFT)
#define CAM_SKET_COEF_12_7             (0x7UL<<CAM_SKET_COEF_12_SHIFT)
#define CAM_SKET_COEF_11_EN_SHIFT      7
#define CAM_SKET_COEF_11_EN_FIELD      (0xFFFFFFFF - (0x1UL<<CAM_SKET_COEF_11_EN_SHIFT))
#define CAM_SKET_COEF_11_EN_0          (0x0UL<<CAM_SKET_COEF_11_EN_SHIFT)
#define CAM_SKET_COEF_11_EN_1          (0x1UL<<CAM_SKET_COEF_11_EN_SHIFT)
#define CAM_SKET_COEF_11_EN            (0x1UL<<CAM_SKET_COEF_11_EN_SHIFT)
#define CAM_SKET_COEF_11_SHIFT         4
#define CAM_SKET_COEF_11_FIELD         (0xFFFFFFFF - (0x7UL<<CAM_SKET_COEF_11_SHIFT))
#define CAM_SKET_COEF_11_0             (0x0UL<<CAM_SKET_COEF_11_SHIFT)
#define CAM_SKET_COEF_11_1             (0x1UL<<CAM_SKET_COEF_11_SHIFT)
#define CAM_SKET_COEF_11_2             (0x2UL<<CAM_SKET_COEF_11_SHIFT)
#define CAM_SKET_COEF_11_3             (0x3UL<<CAM_SKET_COEF_11_SHIFT)
#define CAM_SKET_COEF_11_4             (0x4UL<<CAM_SKET_COEF_11_SHIFT)
#define CAM_SKET_COEF_11_5             (0x5UL<<CAM_SKET_COEF_11_SHIFT)
#define CAM_SKET_COEF_11_6             (0x6UL<<CAM_SKET_COEF_11_SHIFT)
#define CAM_SKET_COEF_11_7             (0x7UL<<CAM_SKET_COEF_11_SHIFT)
#define CAM_EMB_COEF_33_EN_SHIFT       3
#define CAM_EMB_COEF_33_EN_FIELD       (0xFFFFFFFF - (0x1UL<<CAM_EMB_COEF_33_EN_SHIFT))
#define CAM_EMB_COEF_33_EN_0           (0x0UL<<CAM_EMB_COEF_33_EN_SHIFT)
#define CAM_EMB_COEF_33_EN_1           (0x1UL<<CAM_EMB_COEF_33_EN_SHIFT)
#define CAM_EMB_COEF_33_EN             (0x1UL<<CAM_EMB_COEF_33_EN_SHIFT)
#define CAM_EMB_COEF_33_SHIFT          0
#define CAM_EMB_COEF_33_FIELD          (0xFFFFFFFF - (0x7UL<<CAM_EMB_COEF_33_SHIFT))
#define CAM_EMB_COEF_33_0              (0x0UL<<CAM_EMB_COEF_33_SHIFT)
#define CAM_EMB_COEF_33_1              (0x1UL<<CAM_EMB_COEF_33_SHIFT)
#define CAM_EMB_COEF_33_2              (0x2UL<<CAM_EMB_COEF_33_SHIFT)
#define CAM_EMB_COEF_33_3              (0x3UL<<CAM_EMB_COEF_33_SHIFT)
#define CAM_EMB_COEF_33_4              (0x4UL<<CAM_EMB_COEF_33_SHIFT)
#define CAM_EMB_COEF_33_5              (0x5UL<<CAM_EMB_COEF_33_SHIFT)
#define CAM_EMB_COEF_33_6              (0x6UL<<CAM_EMB_COEF_33_SHIFT)
#define CAM_EMB_COEF_33_7              (0x7UL<<CAM_EMB_COEF_33_SHIFT)

/*****************************************************************************/
/* Register description for IE_EFF_MAT_4 */

/* Reset value of register CAM_IE_EFF_MAT_4 */
#define CAM_IE_EFF_MAT_4_VALUE         0xCCBC

/* Bits definition for register CAM_IE_EFF_MAT_4 */
#define CAM_SKET_COEF_31_EN_SHIFT      15
#define CAM_SKET_COEF_31_EN_FIELD      (0xFFFFFFFF - (0x1UL<<CAM_SKET_COEF_31_EN_SHIFT))
#define CAM_SKET_COEF_31_EN_0          (0x0UL<<CAM_SKET_COEF_31_EN_SHIFT)
#define CAM_SKET_COEF_31_EN_1          (0x1UL<<CAM_SKET_COEF_31_EN_SHIFT)
#define CAM_SKET_COEF_31_EN            (0x1UL<<CAM_SKET_COEF_31_EN_SHIFT)
#define CAM_SKET_COEF_31_SHIFT         12
#define CAM_SKET_COEF_31_FIELD         (0xFFFFFFFF - (0x7UL<<CAM_SKET_COEF_31_SHIFT))
#define CAM_SKET_COEF_31_0             (0x0UL<<CAM_SKET_COEF_31_SHIFT)
#define CAM_SKET_COEF_31_1             (0x1UL<<CAM_SKET_COEF_31_SHIFT)
#define CAM_SKET_COEF_31_2             (0x2UL<<CAM_SKET_COEF_31_SHIFT)
#define CAM_SKET_COEF_31_3             (0x3UL<<CAM_SKET_COEF_31_SHIFT)
#define CAM_SKET_COEF_31_4             (0x4UL<<CAM_SKET_COEF_31_SHIFT)
#define CAM_SKET_COEF_31_5             (0x5UL<<CAM_SKET_COEF_31_SHIFT)
#define CAM_SKET_COEF_31_6             (0x6UL<<CAM_SKET_COEF_31_SHIFT)
#define CAM_SKET_COEF_31_7             (0x7UL<<CAM_SKET_COEF_31_SHIFT)
#define CAM_SKET_COEF_23_EN_SHIFT      11
#define CAM_SKET_COEF_23_EN_FIELD      (0xFFFFFFFF - (0x1UL<<CAM_SKET_COEF_23_EN_SHIFT))
#define CAM_SKET_COEF_23_EN_0          (0x0UL<<CAM_SKET_COEF_23_EN_SHIFT)
#define CAM_SKET_COEF_23_EN_1          (0x1UL<<CAM_SKET_COEF_23_EN_SHIFT)
#define CAM_SKET_COEF_23_EN            (0x1UL<<CAM_SKET_COEF_23_EN_SHIFT)
#define CAM_SKET_COEF_23_SHIFT         8
#define CAM_SKET_COEF_23_FIELD         (0xFFFFFFFF - (0x7UL<<CAM_SKET_COEF_23_SHIFT))
#define CAM_SKET_COEF_23_0             (0x0UL<<CAM_SKET_COEF_23_SHIFT)
#define CAM_SKET_COEF_23_1             (0x1UL<<CAM_SKET_COEF_23_SHIFT)
#define CAM_SKET_COEF_23_2             (0x2UL<<CAM_SKET_COEF_23_SHIFT)
#define CAM_SKET_COEF_23_3             (0x3UL<<CAM_SKET_COEF_23_SHIFT)
#define CAM_SKET_COEF_23_4             (0x4UL<<CAM_SKET_COEF_23_SHIFT)
#define CAM_SKET_COEF_23_5             (0x5UL<<CAM_SKET_COEF_23_SHIFT)
#define CAM_SKET_COEF_23_6             (0x6UL<<CAM_SKET_COEF_23_SHIFT)
#define CAM_SKET_COEF_23_7             (0x7UL<<CAM_SKET_COEF_23_SHIFT)
#define CAM_SKET_COEF_22_EN_SHIFT      7
#define CAM_SKET_COEF_22_EN_FIELD      (0xFFFFFFFF - (0x1UL<<CAM_SKET_COEF_22_EN_SHIFT))
#define CAM_SKET_COEF_22_EN_0          (0x0UL<<CAM_SKET_COEF_22_EN_SHIFT)
#define CAM_SKET_COEF_22_EN_1          (0x1UL<<CAM_SKET_COEF_22_EN_SHIFT)
#define CAM_SKET_COEF_22_EN            (0x1UL<<CAM_SKET_COEF_22_EN_SHIFT)
#define CAM_SKET_COEF_22_SHIFT         4
#define CAM_SKET_COEF_22_FIELD         (0xFFFFFFFF - (0x7UL<<CAM_SKET_COEF_22_SHIFT))
#define CAM_SKET_COEF_22_0             (0x0UL<<CAM_SKET_COEF_22_SHIFT)
#define CAM_SKET_COEF_22_1             (0x1UL<<CAM_SKET_COEF_22_SHIFT)
#define CAM_SKET_COEF_22_2             (0x2UL<<CAM_SKET_COEF_22_SHIFT)
#define CAM_SKET_COEF_22_3             (0x3UL<<CAM_SKET_COEF_22_SHIFT)
#define CAM_SKET_COEF_22_4             (0x4UL<<CAM_SKET_COEF_22_SHIFT)
#define CAM_SKET_COEF_22_5             (0x5UL<<CAM_SKET_COEF_22_SHIFT)
#define CAM_SKET_COEF_22_6             (0x6UL<<CAM_SKET_COEF_22_SHIFT)
#define CAM_SKET_COEF_22_7             (0x7UL<<CAM_SKET_COEF_22_SHIFT)
#define CAM_SKET_COEF_21_EN_SHIFT      3
#define CAM_SKET_COEF_21_EN_FIELD      (0xFFFFFFFF - (0x1UL<<CAM_SKET_COEF_21_EN_SHIFT))
#define CAM_SKET_COEF_21_EN_0          (0x0UL<<CAM_SKET_COEF_21_EN_SHIFT)
#define CAM_SKET_COEF_21_EN_1          (0x1UL<<CAM_SKET_COEF_21_EN_SHIFT)
#define CAM_SKET_COEF_21_EN            (0x1UL<<CAM_SKET_COEF_21_EN_SHIFT)
#define CAM_SKET_COEF_21_SHIFT         0
#define CAM_SKET_COEF_21_FIELD         (0xFFFFFFFF - (0x7UL<<CAM_SKET_COEF_21_SHIFT))
#define CAM_SKET_COEF_21_0             (0x0UL<<CAM_SKET_COEF_21_SHIFT)
#define CAM_SKET_COEF_21_1             (0x1UL<<CAM_SKET_COEF_21_SHIFT)
#define CAM_SKET_COEF_21_2             (0x2UL<<CAM_SKET_COEF_21_SHIFT)
#define CAM_SKET_COEF_21_3             (0x3UL<<CAM_SKET_COEF_21_SHIFT)
#define CAM_SKET_COEF_21_4             (0x4UL<<CAM_SKET_COEF_21_SHIFT)
#define CAM_SKET_COEF_21_5             (0x5UL<<CAM_SKET_COEF_21_SHIFT)
#define CAM_SKET_COEF_21_6             (0x6UL<<CAM_SKET_COEF_21_SHIFT)
#define CAM_SKET_COEF_21_7             (0x7UL<<CAM_SKET_COEF_21_SHIFT)

/*****************************************************************************/
/* Register description for IE_EFF_MAT_5 */

/* Reset value of register CAM_IE_EFF_MAT_5 */
#define CAM_IE_EFF_MAT_5_VALUE         0xCC

/* Bits definition for register CAM_IE_EFF_MAT_5 */
#define CAM_SKET_COEF_33_EN_SHIFT      7
#define CAM_SKET_COEF_33_EN_FIELD      (0xFFFFFFFF - (0x1UL<<CAM_SKET_COEF_33_EN_SHIFT))
#define CAM_SKET_COEF_33_EN_0          (0x0UL<<CAM_SKET_COEF_33_EN_SHIFT)
#define CAM_SKET_COEF_33_EN_1          (0x1UL<<CAM_SKET_COEF_33_EN_SHIFT)
#define CAM_SKET_COEF_33_EN            (0x1UL<<CAM_SKET_COEF_33_EN_SHIFT)
#define CAM_SKET_COEF_33_SHIFT         4
#define CAM_SKET_COEF_33_FIELD         (0xFFFFFFFF - (0x7UL<<CAM_SKET_COEF_33_SHIFT))
#define CAM_SKET_COEF_33_0             (0x0UL<<CAM_SKET_COEF_33_SHIFT)
#define CAM_SKET_COEF_33_1             (0x1UL<<CAM_SKET_COEF_33_SHIFT)
#define CAM_SKET_COEF_33_2             (0x2UL<<CAM_SKET_COEF_33_SHIFT)
#define CAM_SKET_COEF_33_3             (0x3UL<<CAM_SKET_COEF_33_SHIFT)
#define CAM_SKET_COEF_33_4             (0x4UL<<CAM_SKET_COEF_33_SHIFT)
#define CAM_SKET_COEF_33_5             (0x5UL<<CAM_SKET_COEF_33_SHIFT)
#define CAM_SKET_COEF_33_6             (0x6UL<<CAM_SKET_COEF_33_SHIFT)
#define CAM_SKET_COEF_33_7             (0x7UL<<CAM_SKET_COEF_33_SHIFT)
#define CAM_SKET_COEF_32_EN_SHIFT      3
#define CAM_SKET_COEF_32_EN_FIELD      (0xFFFFFFFF - (0x1UL<<CAM_SKET_COEF_32_EN_SHIFT))
#define CAM_SKET_COEF_32_EN_0          (0x0UL<<CAM_SKET_COEF_32_EN_SHIFT)
#define CAM_SKET_COEF_32_EN_1          (0x1UL<<CAM_SKET_COEF_32_EN_SHIFT)
#define CAM_SKET_COEF_32_EN            (0x1UL<<CAM_SKET_COEF_32_EN_SHIFT)
#define CAM_SKET_COEF_32_SHIFT         0
#define CAM_SKET_COEF_32_FIELD         (0xFFFFFFFF - (0x7UL<<CAM_SKET_COEF_32_SHIFT))
#define CAM_SKET_COEF_32_0             (0x0UL<<CAM_SKET_COEF_32_SHIFT)
#define CAM_SKET_COEF_32_1             (0x1UL<<CAM_SKET_COEF_32_SHIFT)
#define CAM_SKET_COEF_32_2             (0x2UL<<CAM_SKET_COEF_32_SHIFT)
#define CAM_SKET_COEF_32_3             (0x3UL<<CAM_SKET_COEF_32_SHIFT)
#define CAM_SKET_COEF_32_4             (0x4UL<<CAM_SKET_COEF_32_SHIFT)
#define CAM_SKET_COEF_32_5             (0x5UL<<CAM_SKET_COEF_32_SHIFT)
#define CAM_SKET_COEF_32_6             (0x6UL<<CAM_SKET_COEF_32_SHIFT)
#define CAM_SKET_COEF_32_7             (0x7UL<<CAM_SKET_COEF_32_SHIFT)

/*****************************************************************************/
/* Register description for IE_EFF_TINT */

/* Reset value of register CAM_IE_EFF_TINT */
#define CAM_IE_EFF_TINT_VALUE          0x880C

/* Bits definition for register CAM_IE_EFF_TINT */
#define CAM_INCR_CR_SHIFT              8
#define CAM_INCR_CR_FIELD              (0xFFFFFFFF - (0xFFUL<<CAM_INCR_CR_SHIFT))
#define CAM_INCR_CR_88                 (0x88UL<<CAM_INCR_CR_SHIFT)
#define CAM_INCR_CB_SHIFT              0
#define CAM_INCR_CB_FIELD              (0xFFFFFFFF - (0xFFUL<<CAM_INCR_CB_SHIFT))
#define CAM_INCR_CB_C                  (0xCUL<<CAM_INCR_CB_SHIFT)

/*****************************************************************************/
/* Register description for IE_CTRL_SHD */

/* Reset value of register CAM_IE_CTRL_SHD */
#define CAM_IE_CTRL_SHD_VALUE          0x0

/* Bits definition for register CAM_IE_CTRL_SHD */
#define CAM_EFFECT_MODE_SHD_SHIFT      1
#define CAM_EFFECT_MODE_SHD_FIELD      (0xFFFFFFFF - (0x7UL<<CAM_EFFECT_MODE_SHD_SHIFT))
#define CAM_EFFECT_MODE_SHD_0          (0x0UL<<CAM_EFFECT_MODE_SHD_SHIFT)
#define CAM_EFFECT_MODE_SHD_1          (0x1UL<<CAM_EFFECT_MODE_SHD_SHIFT)
#define CAM_EFFECT_MODE_SHD_2          (0x2UL<<CAM_EFFECT_MODE_SHD_SHIFT)
#define CAM_EFFECT_MODE_SHD_3          (0x3UL<<CAM_EFFECT_MODE_SHD_SHIFT)
#define CAM_EFFECT_MODE_SHD_4          (0x4UL<<CAM_EFFECT_MODE_SHD_SHIFT)
#define CAM_EFFECT_MODE_SHD_5          (0x5UL<<CAM_EFFECT_MODE_SHD_SHIFT)

/*****************************************************************************/
/* Register description for SUPER_IMP_CTRL */

/* Reset value of register CAM_SUPER_IMP_CTRL */
#define CAM_SUPER_IMP_CTRL_VALUE       0x0

/* Bits definition for register CAM_SUPER_IMP_CTRL */
#define CAM_TRANSPARENCY_MODE_SHIFT    2
#define CAM_TRANSPARENCY_MODE_FIELD    (0xFFFFFFFF - (0x1UL<<CAM_TRANSPARENCY_MODE_SHIFT))
#define CAM_TRANSPARENCY_MODE_0        (0x0UL<<CAM_TRANSPARENCY_MODE_SHIFT)
#define CAM_TRANSPARENCY_MODE_1        (0x1UL<<CAM_TRANSPARENCY_MODE_SHIFT)
#define CAM_TRANSPARENCY_MODE          (0x1UL<<CAM_TRANSPARENCY_MODE_SHIFT)
#define CAM_REF_IMAGE_SHIFT            1
#define CAM_REF_IMAGE_FIELD            (0xFFFFFFFF - (0x1UL<<CAM_REF_IMAGE_SHIFT))
#define CAM_REF_IMAGE_0                (0x0UL<<CAM_REF_IMAGE_SHIFT)
#define CAM_REF_IMAGE_1                (0x1UL<<CAM_REF_IMAGE_SHIFT)
#define CAM_REF_IMAGE                  (0x1UL<<CAM_REF_IMAGE_SHIFT)
#define CAM_BYPASS_MODE_SHIFT          0
#define CAM_BYPASS_MODE_FIELD          (0xFFFFFFFF - (0x1UL<<CAM_BYPASS_MODE_SHIFT))
#define CAM_BYPASS_MODE_0              (0x0UL<<CAM_BYPASS_MODE_SHIFT)
#define CAM_BYPASS_MODE_1              (0x1UL<<CAM_BYPASS_MODE_SHIFT)
#define CAM_BYPASS_MODE                (0x1UL<<CAM_BYPASS_MODE_SHIFT)

/*****************************************************************************/
/* Register description for SUPER_IMP_OFFSET_X */

/* Reset value of register CAM_SUPER_IMP_OFFSET_X */
#define CAM_SUPER_IMP_OFFSET_X_VALUE   0x0

/* Bits definition for register CAM_SUPER_IMP_OFFSET_X */
#define CAM_OFFSET_X_SHIFT             0
#define CAM_OFFSET_X_FIELD             (0xFFFFFFFF - (0xFFFUL<<CAM_OFFSET_X_SHIFT))
#define CAM_OFFSET_X_0                 (0x0UL<<CAM_OFFSET_X_SHIFT)

/*****************************************************************************/
/* Register description for SUPER_IMP_OFFSET_Y */

/* Reset value of register CAM_SUPER_IMP_OFFSET_Y */
#define CAM_SUPER_IMP_OFFSET_Y_VALUE   0x0

/* Bits definition for register CAM_SUPER_IMP_OFFSET_Y */
#define CAM_OFFSET_Y_SHIFT             0
#define CAM_OFFSET_Y_FIELD             (0xFFFFFFFF - (0x7FFUL<<CAM_OFFSET_Y_SHIFT))
#define CAM_OFFSET_Y_0                 (0x0UL<<CAM_OFFSET_Y_SHIFT)

/*****************************************************************************/
/* Register description for SUPER_IMP_COLOR_Y */

/* Reset value of register CAM_SUPER_IMP_COLOR_Y */
#define CAM_SUPER_IMP_COLOR_Y_VALUE    0x0

/* Bits definition for register CAM_SUPER_IMP_COLOR_Y */
#define CAM_Y_COMP_SHIFT               0
#define CAM_Y_COMP_FIELD               (0xFFFFFFFF - (0xFFUL<<CAM_Y_COMP_SHIFT))
#define CAM_Y_COMP_0                   (0x0UL<<CAM_Y_COMP_SHIFT)

/*****************************************************************************/
/* Register description for SUPER_IMP_COLOR_CB */

/* Reset value of register CAM_SUPER_IMP_COLOR_CB */
#define CAM_SUPER_IMP_COLOR_CB_VALUE   0x0

/* Bits definition for register CAM_SUPER_IMP_COLOR_CB */
#define CAM_CB_COMP_SHIFT              0
#define CAM_CB_COMP_FIELD              (0xFFFFFFFF - (0xFFUL<<CAM_CB_COMP_SHIFT))
#define CAM_CB_COMP_0                  (0x0UL<<CAM_CB_COMP_SHIFT)

/*****************************************************************************/
/* Register description for SUPER_IMP_COLOR_CR */

/* Reset value of register CAM_SUPER_IMP_COLOR_CR */
#define CAM_SUPER_IMP_COLOR_CR_VALUE   0x0

/* Bits definition for register CAM_SUPER_IMP_COLOR_CR */
#define CAM_CR_COMP_SHIFT              0
#define CAM_CR_COMP_FIELD              (0xFFFFFFFF - (0xFFUL<<CAM_CR_COMP_SHIFT))
#define CAM_CR_COMP_0                  (0x0UL<<CAM_CR_COMP_SHIFT)

/*****************************************************************************/
/* Register description for ISP_CTRL */

/* Reset value of register CAM_ISP_CTRL */
#define CAM_ISP_CTRL_VALUE             0x0

/* Bits definition for register CAM_ISP_CTRL */
#define CAM_CSM_C_RANGE_SHIFT          14
#define CAM_CSM_C_RANGE_FIELD          (0xFFFFFFFF - (0x1UL<<CAM_CSM_C_RANGE_SHIFT))
#define CAM_CSM_C_RANGE_0              (0x0UL<<CAM_CSM_C_RANGE_SHIFT)
#define CAM_CSM_C_RANGE_1              (0x1UL<<CAM_CSM_C_RANGE_SHIFT)
#define CAM_CSM_C_RANGE                (0x1UL<<CAM_CSM_C_RANGE_SHIFT)
#define CAM_CSM_Y_RANGE_SHIFT          13
#define CAM_CSM_Y_RANGE_FIELD          (0xFFFFFFFF - (0x1UL<<CAM_CSM_Y_RANGE_SHIFT))
#define CAM_CSM_Y_RANGE_0              (0x0UL<<CAM_CSM_Y_RANGE_SHIFT)
#define CAM_CSM_Y_RANGE_1              (0x1UL<<CAM_CSM_Y_RANGE_SHIFT)
#define CAM_CSM_Y_RANGE                (0x1UL<<CAM_CSM_Y_RANGE_SHIFT)
#define CAM_ISP_FLASH_MODE_SHIFT       12
#define CAM_ISP_FLASH_MODE_FIELD       (0xFFFFFFFF - (0x1UL<<CAM_ISP_FLASH_MODE_SHIFT))
#define CAM_ISP_FLASH_MODE_0           (0x0UL<<CAM_ISP_FLASH_MODE_SHIFT)
#define CAM_ISP_FLASH_MODE_1           (0x1UL<<CAM_ISP_FLASH_MODE_SHIFT)
#define CAM_ISP_FLASH_MODE             (0x1UL<<CAM_ISP_FLASH_MODE_SHIFT)
#define CAM_GAM_OUT_EN_SHIFT           11
#define CAM_GAM_OUT_EN_FIELD           (0xFFFFFFFF - (0x1UL<<CAM_GAM_OUT_EN_SHIFT))
#define CAM_GAM_OUT_EN_0               (0x0UL<<CAM_GAM_OUT_EN_SHIFT)
#define CAM_GAM_OUT_EN_1               (0x1UL<<CAM_GAM_OUT_EN_SHIFT)
#define CAM_GAM_OUT_EN                 (0x1UL<<CAM_GAM_OUT_EN_SHIFT)
#define CAM_GEN_CFG_UPD_SHIFT          10
#define CAM_GEN_CFG_UPD_FIELD          (0xFFFFFFFF - (0x1UL<<CAM_GEN_CFG_UPD_SHIFT))
#define CAM_GEN_CFG_UPD_0              (0x0UL<<CAM_GEN_CFG_UPD_SHIFT)
#define CAM_GEN_CFG_UPD_1              (0x1UL<<CAM_GEN_CFG_UPD_SHIFT)
#define CAM_GEN_CFG_UPD                (0x1UL<<CAM_GEN_CFG_UPD_SHIFT)
#define CAM_ISP_CFG_UPD_SHIFT          9
#define CAM_ISP_CFG_UPD_FIELD          (0xFFFFFFFF - (0x1UL<<CAM_ISP_CFG_UPD_SHIFT))
#define CAM_ISP_CFG_UPD_0              (0x0UL<<CAM_ISP_CFG_UPD_SHIFT)
#define CAM_ISP_CFG_UPD_1              (0x1UL<<CAM_ISP_CFG_UPD_SHIFT)
#define CAM_ISP_CFG_UPD                (0x1UL<<CAM_ISP_CFG_UPD_SHIFT)
#define CAM_AWB_EN_SHIFT               7
#define CAM_AWB_EN_FIELD               (0xFFFFFFFF - (0x1UL<<CAM_AWB_EN_SHIFT))
#define CAM_AWB_EN_0                   (0x0UL<<CAM_AWB_EN_SHIFT)
#define CAM_AWB_EN_1                   (0x1UL<<CAM_AWB_EN_SHIFT)
#define CAM_AWB_EN                     (0x1UL<<CAM_AWB_EN_SHIFT)
#define CAM_GAM_IN_EN_SHIFT            6
#define CAM_GAM_IN_EN_FIELD            (0xFFFFFFFF - (0x1UL<<CAM_GAM_IN_EN_SHIFT))
#define CAM_GAM_IN_EN_0                (0x0UL<<CAM_GAM_IN_EN_SHIFT)
#define CAM_GAM_IN_EN_1                (0x1UL<<CAM_GAM_IN_EN_SHIFT)
#define CAM_GAM_IN_EN                  (0x1UL<<CAM_GAM_IN_EN_SHIFT)
#define CAM_INPUT_EN_SHIFT             4
#define CAM_INPUT_EN_FIELD             (0xFFFFFFFF - (0x1UL<<CAM_INPUT_EN_SHIFT))
#define CAM_INPUT_EN_0                 (0x0UL<<CAM_INPUT_EN_SHIFT)
#define CAM_INPUT_EN_1                 (0x1UL<<CAM_INPUT_EN_SHIFT)
#define CAM_INPUT_EN                   (0x1UL<<CAM_INPUT_EN_SHIFT)
#define CAM_MODE_SHIFT                 1
#define CAM_MODE_FIELD                 (0xFFFFFFFF - (0x7UL<<CAM_MODE_SHIFT))
#define CAM_MODE_0                     (0x0UL<<CAM_MODE_SHIFT)
#define CAM_MODE_1                     (0x1UL<<CAM_MODE_SHIFT)
#define CAM_MODE_2                     (0x2UL<<CAM_MODE_SHIFT)
#define CAM_MODE_3                     (0x3UL<<CAM_MODE_SHIFT)
#define CAM_MODE_4                     (0x4UL<<CAM_MODE_SHIFT)
#define CAM_MODE_5                     (0x5UL<<CAM_MODE_SHIFT)
#define CAM_MODE_6                     (0x6UL<<CAM_MODE_SHIFT)
#define CAM_ISP_EN_SHIFT               0
#define CAM_ISP_EN_FIELD               (0xFFFFFFFF - (0x1UL<<CAM_ISP_EN_SHIFT))
#define CAM_ISP_EN_0                   (0x0UL<<CAM_ISP_EN_SHIFT)
#define CAM_ISP_EN_1                   (0x1UL<<CAM_ISP_EN_SHIFT)
#define CAM_ISP_EN                     (0x1UL<<CAM_ISP_EN_SHIFT)

/*****************************************************************************/
/* Register description for ISP_ACQ_PROP */

/* Reset value of register CAM_ISP_ACQ_PROP */
#define CAM_ISP_ACQ_PROP_VALUE         0x0

/* Bits definition for register CAM_ISP_ACQ_PROP */
#define CAM_INPUT_SELECTION_SHIFT      12
#define CAM_INPUT_SELECTION_FIELD      (0xFFFFFFFF - (0x7UL<<CAM_INPUT_SELECTION_SHIFT))
#define CAM_INPUT_SELECTION_0          (0x0UL<<CAM_INPUT_SELECTION_SHIFT)
#define CAM_INPUT_SELECTION_1          (0x1UL<<CAM_INPUT_SELECTION_SHIFT)
#define CAM_INPUT_SELECTION_2          (0x2UL<<CAM_INPUT_SELECTION_SHIFT)
#define CAM_INPUT_SELECTION_3          (0x3UL<<CAM_INPUT_SELECTION_SHIFT)
#define CAM_INPUT_SELECTION_4          (0x4UL<<CAM_INPUT_SELECTION_SHIFT)
#define CAM_FIELD_INV_SHIFT            11
#define CAM_FIELD_INV_FIELD            (0xFFFFFFFF - (0x1UL<<CAM_FIELD_INV_SHIFT))
#define CAM_FIELD_INV_0                (0x0UL<<CAM_FIELD_INV_SHIFT)
#define CAM_FIELD_INV_1                (0x1UL<<CAM_FIELD_INV_SHIFT)
#define CAM_FIELD_INV                  (0x1UL<<CAM_FIELD_INV_SHIFT)
#define CAM_FIELD_SET_SHIFT            9
#define CAM_FIELD_SET_FIELD            (0xFFFFFFFF - (0x3UL<<CAM_FIELD_SET_SHIFT))
#define CAM_FIELD_SET_0                (0x0UL<<CAM_FIELD_SET_SHIFT)
#define CAM_FIELD_SET_1                (0x1UL<<CAM_FIELD_SET_SHIFT)
#define CAM_FIELD_SET_2                (0x2UL<<CAM_FIELD_SET_SHIFT)
#define CAM_FIELD_SET_3                (0x3UL<<CAM_FIELD_SET_SHIFT)
#define CAM_YC_SEQ_SHIFT               7
#define CAM_YC_SEQ_FIELD               (0xFFFFFFFF - (0x3UL<<CAM_YC_SEQ_SHIFT))
#define CAM_YC_SEQ_0                   (0x0UL<<CAM_YC_SEQ_SHIFT)
#define CAM_YC_SEQ_1                   (0x1UL<<CAM_YC_SEQ_SHIFT)
#define CAM_YC_SEQ_2                   (0x2UL<<CAM_YC_SEQ_SHIFT)
#define CAM_YC_SEQ_3                   (0x3UL<<CAM_YC_SEQ_SHIFT)
#define CAM_CONV_422_SHIFT             5
#define CAM_CONV_422_FIELD             (0xFFFFFFFF - (0x3UL<<CAM_CONV_422_SHIFT))
#define CAM_CONV_422_0                 (0x0UL<<CAM_CONV_422_SHIFT)
#define CAM_CONV_422_1                 (0x1UL<<CAM_CONV_422_SHIFT)
#define CAM_CONV_422_2                 (0x2UL<<CAM_CONV_422_SHIFT)
#define CAM_CONV_422_3                 (0x3UL<<CAM_CONV_422_SHIFT)
#define CAM_BAYER_PAT_SHIFT            3
#define CAM_BAYER_PAT_FIELD            (0xFFFFFFFF - (0x3UL<<CAM_BAYER_PAT_SHIFT))
#define CAM_BAYER_PAT_0                (0x0UL<<CAM_BAYER_PAT_SHIFT)
#define CAM_BAYER_PAT_1                (0x1UL<<CAM_BAYER_PAT_SHIFT)
#define CAM_BAYER_PAT_2                (0x2UL<<CAM_BAYER_PAT_SHIFT)
#define CAM_BAYER_PAT_3                (0x3UL<<CAM_BAYER_PAT_SHIFT)
#define CAM_VSYNC_POL_SHIFT            2
#define CAM_VSYNC_POL_FIELD            (0xFFFFFFFF - (0x1UL<<CAM_VSYNC_POL_SHIFT))
#define CAM_VSYNC_POL_0                (0x0UL<<CAM_VSYNC_POL_SHIFT)
#define CAM_VSYNC_POL_1                (0x1UL<<CAM_VSYNC_POL_SHIFT)
#define CAM_VSYNC_POL                  (0x1UL<<CAM_VSYNC_POL_SHIFT)
#define CAM_HSYNC_POL_SHIFT            1
#define CAM_HSYNC_POL_FIELD            (0xFFFFFFFF - (0x1UL<<CAM_HSYNC_POL_SHIFT))
#define CAM_HSYNC_POL_0                (0x0UL<<CAM_HSYNC_POL_SHIFT)
#define CAM_HSYNC_POL_1                (0x1UL<<CAM_HSYNC_POL_SHIFT)
#define CAM_HSYNC_POL                  (0x1UL<<CAM_HSYNC_POL_SHIFT)
#define CAM_SAMPLE_EDGE_SHIFT          0
#define CAM_SAMPLE_EDGE_FIELD          (0xFFFFFFFF - (0x1UL<<CAM_SAMPLE_EDGE_SHIFT))
#define CAM_SAMPLE_EDGE_0              (0x0UL<<CAM_SAMPLE_EDGE_SHIFT)
#define CAM_SAMPLE_EDGE_1              (0x1UL<<CAM_SAMPLE_EDGE_SHIFT)
#define CAM_SAMPLE_EDGE                (0x1UL<<CAM_SAMPLE_EDGE_SHIFT)

/*****************************************************************************/
/* Register description for ISP_ACQ_H_OFFS */

/* Reset value of register CAM_ISP_ACQ_H_OFFS */
#define CAM_ISP_ACQ_H_OFFS_VALUE       0x0

/* Bits definition for register CAM_ISP_ACQ_H_OFFS */
#define CAM_ACQ_H_OFFS_SHIFT           0
#define CAM_ACQ_H_OFFS_FIELD           (0xFFFFFFFF - (0x1FFFUL<<CAM_ACQ_H_OFFS_SHIFT))
#define CAM_ACQ_H_OFFS_0               (0x0UL<<CAM_ACQ_H_OFFS_SHIFT)

/*****************************************************************************/
/* Register description for ISP_ACQ_V_OFFS */

/* Reset value of register CAM_ISP_ACQ_V_OFFS */
#define CAM_ISP_ACQ_V_OFFS_VALUE       0x0

/* Bits definition for register CAM_ISP_ACQ_V_OFFS */
#define CAM_ACQ_V_OFFS_SHIFT           0
#define CAM_ACQ_V_OFFS_FIELD           (0xFFFFFFFF - (0xFFFUL<<CAM_ACQ_V_OFFS_SHIFT))
#define CAM_ACQ_V_OFFS_0               (0x0UL<<CAM_ACQ_V_OFFS_SHIFT)

/*****************************************************************************/
/* Register description for ISP_ACQ_H_SIZE */

/* Reset value of register CAM_ISP_ACQ_H_SIZE */
#define CAM_ISP_ACQ_H_SIZE_VALUE       0xA28

/* Bits definition for register CAM_ISP_ACQ_H_SIZE */
#define CAM_ACQ_H_SIZE_SHIFT           0
#define CAM_ACQ_H_SIZE_FIELD           (0xFFFFFFFF - (0x1FFFUL<<CAM_ACQ_H_SIZE_SHIFT))
#define CAM_ACQ_H_SIZE_A28             (0xA28UL<<CAM_ACQ_H_SIZE_SHIFT)

/*****************************************************************************/
/* Register description for ISP_ACQ_V_SIZE */

/* Reset value of register CAM_ISP_ACQ_V_SIZE */
#define CAM_ISP_ACQ_V_SIZE_VALUE       0x800

/* Bits definition for register CAM_ISP_ACQ_V_SIZE */
#define CAM_ACQ_V_SIZE_SHIFT           0
#define CAM_ACQ_V_SIZE_FIELD           (0xFFFFFFFF - (0xFFFUL<<CAM_ACQ_V_SIZE_SHIFT))
#define CAM_ACQ_V_SIZE_800             (0x800UL<<CAM_ACQ_V_SIZE_SHIFT)

/*****************************************************************************/
/* Register description for ISP_ACQ_NR_FRAMES */

/* Reset value of register CAM_ISP_ACQ_NR_FRAMES */
#define CAM_ISP_ACQ_NR_FRAMES_VALUE    0x0

/* Bits definition for register CAM_ISP_ACQ_NR_FRAMES */
#define CAM_NR_OF_FRAMES_SHIFT         0
#define CAM_NR_OF_FRAMES_FIELD         (0xFFFFFFFF - (0x3FFUL<<CAM_NR_OF_FRAMES_SHIFT))
#define CAM_NR_OF_FRAMES_0             (0x0UL<<CAM_NR_OF_FRAMES_SHIFT)

/*****************************************************************************/
/* Register description for ISP_GAMMA_DX1 */

/* Reset value of register CAM_ISP_GAMMA_DX1 */
#define CAM_ISP_GAMMA_DX1_VALUE        0x44444444

/* Bits definition for register CAM_ISP_GAMMA_DX1 */
#define CAM_GAMMA_DX16_SHIFT           28
#define CAM_GAMMA_DX16_FIELD           (0xFFFFFFFF - (0x7UL<<CAM_GAMMA_DX16_SHIFT))
#define CAM_GAMMA_DX16_4               (0x4UL<<CAM_GAMMA_DX16_SHIFT)
#define CAM_GAMMA_DX15_SHIFT           24
#define CAM_GAMMA_DX15_FIELD           (0xFFFFFFFF - (0x7UL<<CAM_GAMMA_DX15_SHIFT))
#define CAM_GAMMA_DX15_4               (0x4UL<<CAM_GAMMA_DX15_SHIFT)
#define CAM_GAMMA_DX14_SHIFT           20
#define CAM_GAMMA_DX14_FIELD           (0xFFFFFFFF - (0x7UL<<CAM_GAMMA_DX14_SHIFT))
#define CAM_GAMMA_DX14_4               (0x4UL<<CAM_GAMMA_DX14_SHIFT)
#define CAM_GAMMA_DX13_SHIFT           16
#define CAM_GAMMA_DX13_FIELD           (0xFFFFFFFF - (0x7UL<<CAM_GAMMA_DX13_SHIFT))
#define CAM_GAMMA_DX13_4               (0x4UL<<CAM_GAMMA_DX13_SHIFT)
#define CAM_GAMMA_DX12_SHIFT           12
#define CAM_GAMMA_DX12_FIELD           (0xFFFFFFFF - (0x7UL<<CAM_GAMMA_DX12_SHIFT))
#define CAM_GAMMA_DX12_4               (0x4UL<<CAM_GAMMA_DX12_SHIFT)
#define CAM_GAMMA_DX11_SHIFT           8
#define CAM_GAMMA_DX11_FIELD           (0xFFFFFFFF - (0x7UL<<CAM_GAMMA_DX11_SHIFT))
#define CAM_GAMMA_DX11_4               (0x4UL<<CAM_GAMMA_DX11_SHIFT)
#define CAM_GAMMA_DX10_SHIFT           4
#define CAM_GAMMA_DX10_FIELD           (0xFFFFFFFF - (0x7UL<<CAM_GAMMA_DX10_SHIFT))
#define CAM_GAMMA_DX10_4               (0x4UL<<CAM_GAMMA_DX10_SHIFT)
#define CAM_GAMMA_DX9_SHIFT            0
#define CAM_GAMMA_DX9_FIELD            (0xFFFFFFFF - (0x7UL<<CAM_GAMMA_DX9_SHIFT))
#define CAM_GAMMA_DX9_4                (0x4UL<<CAM_GAMMA_DX9_SHIFT)

/*****************************************************************************/
/* Register description for ISP_GAMMA_DX0 */

/* Reset value of register CAM_ISP_GAMMA_DX0 */
#define CAM_ISP_GAMMA_DX0_VALUE        0x44444444

/* Bits definition for register CAM_ISP_GAMMA_DX0 */
#define CAM_GAMMA_DX8_SHIFT            28
#define CAM_GAMMA_DX8_FIELD            (0xFFFFFFFF - (0x7UL<<CAM_GAMMA_DX8_SHIFT))
#define CAM_GAMMA_DX8_4                (0x4UL<<CAM_GAMMA_DX8_SHIFT)
#define CAM_GAMMA_DX7_SHIFT            24
#define CAM_GAMMA_DX7_FIELD            (0xFFFFFFFF - (0x7UL<<CAM_GAMMA_DX7_SHIFT))
#define CAM_GAMMA_DX7_4                (0x4UL<<CAM_GAMMA_DX7_SHIFT)
#define CAM_GAMMA_DX6_SHIFT            20
#define CAM_GAMMA_DX6_FIELD            (0xFFFFFFFF - (0x7UL<<CAM_GAMMA_DX6_SHIFT))
#define CAM_GAMMA_DX6_4                (0x4UL<<CAM_GAMMA_DX6_SHIFT)
#define CAM_GAMMA_DX5_SHIFT            16
#define CAM_GAMMA_DX5_FIELD            (0xFFFFFFFF - (0x7UL<<CAM_GAMMA_DX5_SHIFT))
#define CAM_GAMMA_DX5_4                (0x4UL<<CAM_GAMMA_DX5_SHIFT)
#define CAM_GAMMA_DX4_SHIFT            12
#define CAM_GAMMA_DX4_FIELD            (0xFFFFFFFF - (0x7UL<<CAM_GAMMA_DX4_SHIFT))
#define CAM_GAMMA_DX4_4                (0x4UL<<CAM_GAMMA_DX4_SHIFT)
#define CAM_GAMMA_DX3_SHIFT            8
#define CAM_GAMMA_DX3_FIELD            (0xFFFFFFFF - (0x7UL<<CAM_GAMMA_DX3_SHIFT))
#define CAM_GAMMA_DX3_4                (0x4UL<<CAM_GAMMA_DX3_SHIFT)
#define CAM_GAMMA_DX2_SHIFT            4
#define CAM_GAMMA_DX2_FIELD            (0xFFFFFFFF - (0x7UL<<CAM_GAMMA_DX2_SHIFT))
#define CAM_GAMMA_DX2_4                (0x4UL<<CAM_GAMMA_DX2_SHIFT)
#define CAM_GAMMA_DX1_SHIFT            0
#define CAM_GAMMA_DX1_FIELD            (0xFFFFFFFF - (0x7UL<<CAM_GAMMA_DX1_SHIFT))
#define CAM_GAMMA_DX1_4                (0x4UL<<CAM_GAMMA_DX1_SHIFT)

/*****************************************************************************/
/* Register description for ISP_GAMMA_R_Y0 */

/* Reset value of register CAM_ISP_GAMMA_R_Y0 */
#define CAM_ISP_GAMMA_R_Y0_VALUE       0x0

/* Bits definition for register CAM_ISP_GAMMA_R_Y0 */
#define CAM_GAMMA_R_Y_0_SHIFT          0
#define CAM_GAMMA_R_Y_0_FIELD          (0xFFFFFFFF - (0xFFFUL<<CAM_GAMMA_R_Y_0_SHIFT))
#define CAM_GAMMA_R_Y_0_0              (0x0UL<<CAM_GAMMA_R_Y_0_SHIFT)

/*****************************************************************************/
/* Register description for ISP_GAMMA_R_Y1 */

/* Reset value of register CAM_ISP_GAMMA_R_Y1 */
#define CAM_ISP_GAMMA_R_Y1_VALUE       0x100

/* Bits definition for register CAM_ISP_GAMMA_R_Y1 */
#define CAM_GAMMA_R_Y_1_SHIFT          0
#define CAM_GAMMA_R_Y_1_FIELD          (0xFFFFFFFF - (0xFFFUL<<CAM_GAMMA_R_Y_1_SHIFT))
#define CAM_GAMMA_R_Y_1_100            (0x100UL<<CAM_GAMMA_R_Y_1_SHIFT)

/*****************************************************************************/
/* Register description for ISP_GAMMA_R_Y2 */

/* Reset value of register CAM_ISP_GAMMA_R_Y2 */
#define CAM_ISP_GAMMA_R_Y2_VALUE       0x200

/* Bits definition for register CAM_ISP_GAMMA_R_Y2 */
#define CAM_GAMMA_R_Y_2_SHIFT          0
#define CAM_GAMMA_R_Y_2_FIELD          (0xFFFFFFFF - (0xFFFUL<<CAM_GAMMA_R_Y_2_SHIFT))
#define CAM_GAMMA_R_Y_2_200            (0x200UL<<CAM_GAMMA_R_Y_2_SHIFT)

/*****************************************************************************/
/* Register description for ISP_GAMMA_R_Y3 */

/* Reset value of register CAM_ISP_GAMMA_R_Y3 */
#define CAM_ISP_GAMMA_R_Y3_VALUE       0x300

/* Bits definition for register CAM_ISP_GAMMA_R_Y3 */
#define CAM_GAMMA_R_Y_3_SHIFT          0
#define CAM_GAMMA_R_Y_3_FIELD          (0xFFFFFFFF - (0xFFFUL<<CAM_GAMMA_R_Y_3_SHIFT))
#define CAM_GAMMA_R_Y_3_300            (0x300UL<<CAM_GAMMA_R_Y_3_SHIFT)

/*****************************************************************************/
/* Register description for ISP_GAMMA_R_Y4 */

/* Reset value of register CAM_ISP_GAMMA_R_Y4 */
#define CAM_ISP_GAMMA_R_Y4_VALUE       0x400

/* Bits definition for register CAM_ISP_GAMMA_R_Y4 */
#define CAM_GAMMA_R_Y_4_SHIFT          0
#define CAM_GAMMA_R_Y_4_FIELD          (0xFFFFFFFF - (0xFFFUL<<CAM_GAMMA_R_Y_4_SHIFT))
#define CAM_GAMMA_R_Y_4_400            (0x400UL<<CAM_GAMMA_R_Y_4_SHIFT)

/*****************************************************************************/
/* Register description for ISP_GAMMA_R_Y5 */

/* Reset value of register CAM_ISP_GAMMA_R_Y5 */
#define CAM_ISP_GAMMA_R_Y5_VALUE       0x500

/* Bits definition for register CAM_ISP_GAMMA_R_Y5 */
#define CAM_GAMMA_R_Y_5_SHIFT          0
#define CAM_GAMMA_R_Y_5_FIELD          (0xFFFFFFFF - (0xFFFUL<<CAM_GAMMA_R_Y_5_SHIFT))
#define CAM_GAMMA_R_Y_5_500            (0x500UL<<CAM_GAMMA_R_Y_5_SHIFT)

/*****************************************************************************/
/* Register description for ISP_GAMMA_R_Y6 */

/* Reset value of register CAM_ISP_GAMMA_R_Y6 */
#define CAM_ISP_GAMMA_R_Y6_VALUE       0x600

/* Bits definition for register CAM_ISP_GAMMA_R_Y6 */
#define CAM_GAMMA_R_Y_6_SHIFT          0
#define CAM_GAMMA_R_Y_6_FIELD          (0xFFFFFFFF - (0xFFFUL<<CAM_GAMMA_R_Y_6_SHIFT))
#define CAM_GAMMA_R_Y_6_600            (0x600UL<<CAM_GAMMA_R_Y_6_SHIFT)

/*****************************************************************************/
/* Register description for ISP_GAMMA_R_Y7 */

/* Reset value of register CAM_ISP_GAMMA_R_Y7 */
#define CAM_ISP_GAMMA_R_Y7_VALUE       0x700

/* Bits definition for register CAM_ISP_GAMMA_R_Y7 */
#define CAM_GAMMA_R_Y_7_SHIFT          0
#define CAM_GAMMA_R_Y_7_FIELD          (0xFFFFFFFF - (0xFFFUL<<CAM_GAMMA_R_Y_7_SHIFT))
#define CAM_GAMMA_R_Y_7_700            (0x700UL<<CAM_GAMMA_R_Y_7_SHIFT)

/*****************************************************************************/
/* Register description for ISP_GAMMA_R_Y8 */

/* Reset value of register CAM_ISP_GAMMA_R_Y8 */
#define CAM_ISP_GAMMA_R_Y8_VALUE       0x800

/* Bits definition for register CAM_ISP_GAMMA_R_Y8 */
#define CAM_GAMMA_R_Y_8_SHIFT          0
#define CAM_GAMMA_R_Y_8_FIELD          (0xFFFFFFFF - (0xFFFUL<<CAM_GAMMA_R_Y_8_SHIFT))
#define CAM_GAMMA_R_Y_8_800            (0x800UL<<CAM_GAMMA_R_Y_8_SHIFT)

/*****************************************************************************/
/* Register description for ISP_GAMMA_R_Y9 */

/* Reset value of register CAM_ISP_GAMMA_R_Y9 */
#define CAM_ISP_GAMMA_R_Y9_VALUE       0x900

/* Bits definition for register CAM_ISP_GAMMA_R_Y9 */
#define CAM_GAMMA_R_Y_9_SHIFT          0
#define CAM_GAMMA_R_Y_9_FIELD          (0xFFFFFFFF - (0xFFFUL<<CAM_GAMMA_R_Y_9_SHIFT))
#define CAM_GAMMA_R_Y_9_900            (0x900UL<<CAM_GAMMA_R_Y_9_SHIFT)

/*****************************************************************************/
/* Register description for ISP_GAMMA_R_Y10 */

/* Reset value of register CAM_ISP_GAMMA_R_Y10 */
#define CAM_ISP_GAMMA_R_Y10_VALUE      0xA00

/* Bits definition for register CAM_ISP_GAMMA_R_Y10 */
#define CAM_GAMMA_R_Y_10_SHIFT         0
#define CAM_GAMMA_R_Y_10_FIELD         (0xFFFFFFFF - (0xFFFUL<<CAM_GAMMA_R_Y_10_SHIFT))
#define CAM_GAMMA_R_Y_10_A00           (0xA00UL<<CAM_GAMMA_R_Y_10_SHIFT)

/*****************************************************************************/
/* Register description for ISP_GAMMA_R_Y11 */

/* Reset value of register CAM_ISP_GAMMA_R_Y11 */
#define CAM_ISP_GAMMA_R_Y11_VALUE      0xB00

/* Bits definition for register CAM_ISP_GAMMA_R_Y11 */
#define CAM_GAMMA_R_Y_11_SHIFT         0
#define CAM_GAMMA_R_Y_11_FIELD         (0xFFFFFFFF - (0xFFFUL<<CAM_GAMMA_R_Y_11_SHIFT))
#define CAM_GAMMA_R_Y_11_B00           (0xB00UL<<CAM_GAMMA_R_Y_11_SHIFT)

/*****************************************************************************/
/* Register description for ISP_GAMMA_R_Y12 */

/* Reset value of register CAM_ISP_GAMMA_R_Y12 */
#define CAM_ISP_GAMMA_R_Y12_VALUE      0xC00

/* Bits definition for register CAM_ISP_GAMMA_R_Y12 */
#define CAM_GAMMA_R_Y_12_SHIFT         0
#define CAM_GAMMA_R_Y_12_FIELD         (0xFFFFFFFF - (0xFFFUL<<CAM_GAMMA_R_Y_12_SHIFT))
#define CAM_GAMMA_R_Y_12_C00           (0xC00UL<<CAM_GAMMA_R_Y_12_SHIFT)

/*****************************************************************************/
/* Register description for ISP_GAMMA_R_Y13 */

/* Reset value of register CAM_ISP_GAMMA_R_Y13 */
#define CAM_ISP_GAMMA_R_Y13_VALUE      0xD00

/* Bits definition for register CAM_ISP_GAMMA_R_Y13 */
#define CAM_GAMMA_R_Y_13_SHIFT         0
#define CAM_GAMMA_R_Y_13_FIELD         (0xFFFFFFFF - (0xFFFUL<<CAM_GAMMA_R_Y_13_SHIFT))
#define CAM_GAMMA_R_Y_13_D00           (0xD00UL<<CAM_GAMMA_R_Y_13_SHIFT)

/*****************************************************************************/
/* Register description for ISP_GAMMA_R_Y14 */

/* Reset value of register CAM_ISP_GAMMA_R_Y14 */
#define CAM_ISP_GAMMA_R_Y14_VALUE      0xE00

/* Bits definition for register CAM_ISP_GAMMA_R_Y14 */
#define CAM_GAMMA_R_Y_14_SHIFT         0
#define CAM_GAMMA_R_Y_14_FIELD         (0xFFFFFFFF - (0xFFFUL<<CAM_GAMMA_R_Y_14_SHIFT))
#define CAM_GAMMA_R_Y_14_E00           (0xE00UL<<CAM_GAMMA_R_Y_14_SHIFT)

/*****************************************************************************/
/* Register description for ISP_GAMMA_R_Y15 */

/* Reset value of register CAM_ISP_GAMMA_R_Y15 */
#define CAM_ISP_GAMMA_R_Y15_VALUE      0xF00

/* Bits definition for register CAM_ISP_GAMMA_R_Y15 */
#define CAM_GAMMA_R_Y_15_SHIFT         0
#define CAM_GAMMA_R_Y_15_FIELD         (0xFFFFFFFF - (0xFFFUL<<CAM_GAMMA_R_Y_15_SHIFT))
#define CAM_GAMMA_R_Y_15_F00           (0xF00UL<<CAM_GAMMA_R_Y_15_SHIFT)

/*****************************************************************************/
/* Register description for ISP_GAMMA_R_Y16 */

/* Reset value of register CAM_ISP_GAMMA_R_Y16 */
#define CAM_ISP_GAMMA_R_Y16_VALUE      0xFFF

/* Bits definition for register CAM_ISP_GAMMA_R_Y16 */
#define CAM_GAMMA_R_Y_16_SHIFT         0
#define CAM_GAMMA_R_Y_16_FIELD         (0xFFFFFFFF - (0xFFFUL<<CAM_GAMMA_R_Y_16_SHIFT))
#define CAM_GAMMA_R_Y_16_FFF           (0xFFFUL<<CAM_GAMMA_R_Y_16_SHIFT)

/*****************************************************************************/
/* Register description for ISP_GAMMA_G_Y0 */

/* Reset value of register CAM_ISP_GAMMA_G_Y0 */
#define CAM_ISP_GAMMA_G_Y0_VALUE       0x0

/* Bits definition for register CAM_ISP_GAMMA_G_Y0 */
#define CAM_GAMMA_G_Y_0_SHIFT          0
#define CAM_GAMMA_G_Y_0_FIELD          (0xFFFFFFFF - (0xFFFUL<<CAM_GAMMA_G_Y_0_SHIFT))
#define CAM_GAMMA_G_Y_0_0              (0x0UL<<CAM_GAMMA_G_Y_0_SHIFT)

/*****************************************************************************/
/* Register description for ISP_GAMMA_G_Y1 */

/* Reset value of register CAM_ISP_GAMMA_G_Y1 */
#define CAM_ISP_GAMMA_G_Y1_VALUE       0x100

/* Bits definition for register CAM_ISP_GAMMA_G_Y1 */
#define CAM_GAMMA_G_Y_1_SHIFT          0
#define CAM_GAMMA_G_Y_1_FIELD          (0xFFFFFFFF - (0xFFFUL<<CAM_GAMMA_G_Y_1_SHIFT))
#define CAM_GAMMA_G_Y_1_100            (0x100UL<<CAM_GAMMA_G_Y_1_SHIFT)

/*****************************************************************************/
/* Register description for ISP_GAMMA_G_Y2 */

/* Reset value of register CAM_ISP_GAMMA_G_Y2 */
#define CAM_ISP_GAMMA_G_Y2_VALUE       0x200

/* Bits definition for register CAM_ISP_GAMMA_G_Y2 */
#define CAM_GAMMA_G_Y_2_SHIFT          0
#define CAM_GAMMA_G_Y_2_FIELD          (0xFFFFFFFF - (0xFFFUL<<CAM_GAMMA_G_Y_2_SHIFT))
#define CAM_GAMMA_G_Y_2_200            (0x200UL<<CAM_GAMMA_G_Y_2_SHIFT)

/*****************************************************************************/
/* Register description for ISP_GAMMA_G_Y3 */

/* Reset value of register CAM_ISP_GAMMA_G_Y3 */
#define CAM_ISP_GAMMA_G_Y3_VALUE       0x300

/* Bits definition for register CAM_ISP_GAMMA_G_Y3 */
#define CAM_GAMMA_G_Y_3_SHIFT          0
#define CAM_GAMMA_G_Y_3_FIELD          (0xFFFFFFFF - (0xFFFUL<<CAM_GAMMA_G_Y_3_SHIFT))
#define CAM_GAMMA_G_Y_3_300            (0x300UL<<CAM_GAMMA_G_Y_3_SHIFT)

/*****************************************************************************/
/* Register description for ISP_GAMMA_G_Y4 */

/* Reset value of register CAM_ISP_GAMMA_G_Y4 */
#define CAM_ISP_GAMMA_G_Y4_VALUE       0x400

/* Bits definition for register CAM_ISP_GAMMA_G_Y4 */
#define CAM_GAMMA_G_Y_4_SHIFT          0
#define CAM_GAMMA_G_Y_4_FIELD          (0xFFFFFFFF - (0xFFFUL<<CAM_GAMMA_G_Y_4_SHIFT))
#define CAM_GAMMA_G_Y_4_400            (0x400UL<<CAM_GAMMA_G_Y_4_SHIFT)

/*****************************************************************************/
/* Register description for ISP_GAMMA_G_Y5 */

/* Reset value of register CAM_ISP_GAMMA_G_Y5 */
#define CAM_ISP_GAMMA_G_Y5_VALUE       0x500

/* Bits definition for register CAM_ISP_GAMMA_G_Y5 */
#define CAM_GAMMA_G_Y_5_SHIFT          0
#define CAM_GAMMA_G_Y_5_FIELD          (0xFFFFFFFF - (0xFFFUL<<CAM_GAMMA_G_Y_5_SHIFT))
#define CAM_GAMMA_G_Y_5_500            (0x500UL<<CAM_GAMMA_G_Y_5_SHIFT)

/*****************************************************************************/
/* Register description for ISP_GAMMA_G_Y6 */

/* Reset value of register CAM_ISP_GAMMA_G_Y6 */
#define CAM_ISP_GAMMA_G_Y6_VALUE       0x600

/* Bits definition for register CAM_ISP_GAMMA_G_Y6 */
#define CAM_GAMMA_G_Y_6_SHIFT          0
#define CAM_GAMMA_G_Y_6_FIELD          (0xFFFFFFFF - (0xFFFUL<<CAM_GAMMA_G_Y_6_SHIFT))
#define CAM_GAMMA_G_Y_6_600            (0x600UL<<CAM_GAMMA_G_Y_6_SHIFT)

/*****************************************************************************/
/* Register description for ISP_GAMMA_G_Y7 */

/* Reset value of register CAM_ISP_GAMMA_G_Y7 */
#define CAM_ISP_GAMMA_G_Y7_VALUE       0x700

/* Bits definition for register CAM_ISP_GAMMA_G_Y7 */
#define CAM_GAMMA_G_Y_7_SHIFT          0
#define CAM_GAMMA_G_Y_7_FIELD          (0xFFFFFFFF - (0xFFFUL<<CAM_GAMMA_G_Y_7_SHIFT))
#define CAM_GAMMA_G_Y_7_700            (0x700UL<<CAM_GAMMA_G_Y_7_SHIFT)

/*****************************************************************************/
/* Register description for ISP_GAMMA_G_Y8 */

/* Reset value of register CAM_ISP_GAMMA_G_Y8 */
#define CAM_ISP_GAMMA_G_Y8_VALUE       0x800

/* Bits definition for register CAM_ISP_GAMMA_G_Y8 */
#define CAM_GAMMA_G_Y_8_SHIFT          0
#define CAM_GAMMA_G_Y_8_FIELD          (0xFFFFFFFF - (0xFFFUL<<CAM_GAMMA_G_Y_8_SHIFT))
#define CAM_GAMMA_G_Y_8_800            (0x800UL<<CAM_GAMMA_G_Y_8_SHIFT)

/*****************************************************************************/
/* Register description for ISP_GAMMA_G_Y9 */

/* Reset value of register CAM_ISP_GAMMA_G_Y9 */
#define CAM_ISP_GAMMA_G_Y9_VALUE       0x900

/* Bits definition for register CAM_ISP_GAMMA_G_Y9 */
#define CAM_GAMMA_G_Y_9_SHIFT          0
#define CAM_GAMMA_G_Y_9_FIELD          (0xFFFFFFFF - (0xFFFUL<<CAM_GAMMA_G_Y_9_SHIFT))
#define CAM_GAMMA_G_Y_9_900            (0x900UL<<CAM_GAMMA_G_Y_9_SHIFT)

/*****************************************************************************/
/* Register description for ISP_GAMMA_G_Y10 */

/* Reset value of register CAM_ISP_GAMMA_G_Y10 */
#define CAM_ISP_GAMMA_G_Y10_VALUE      0xA00

/* Bits definition for register CAM_ISP_GAMMA_G_Y10 */
#define CAM_GAMMA_G_Y_10_SHIFT         0
#define CAM_GAMMA_G_Y_10_FIELD         (0xFFFFFFFF - (0xFFFUL<<CAM_GAMMA_G_Y_10_SHIFT))
#define CAM_GAMMA_G_Y_10_A00           (0xA00UL<<CAM_GAMMA_G_Y_10_SHIFT)

/*****************************************************************************/
/* Register description for ISP_GAMMA_G_Y11 */

/* Reset value of register CAM_ISP_GAMMA_G_Y11 */
#define CAM_ISP_GAMMA_G_Y11_VALUE      0xB00

/* Bits definition for register CAM_ISP_GAMMA_G_Y11 */
#define CAM_GAMMA_G_Y_11_SHIFT         0
#define CAM_GAMMA_G_Y_11_FIELD         (0xFFFFFFFF - (0xFFFUL<<CAM_GAMMA_G_Y_11_SHIFT))
#define CAM_GAMMA_G_Y_11_B00           (0xB00UL<<CAM_GAMMA_G_Y_11_SHIFT)

/*****************************************************************************/
/* Register description for ISP_GAMMA_G_Y12 */

/* Reset value of register CAM_ISP_GAMMA_G_Y12 */
#define CAM_ISP_GAMMA_G_Y12_VALUE      0xC00

/* Bits definition for register CAM_ISP_GAMMA_G_Y12 */
#define CAM_GAMMA_G_Y_12_SHIFT         0
#define CAM_GAMMA_G_Y_12_FIELD         (0xFFFFFFFF - (0xFFFUL<<CAM_GAMMA_G_Y_12_SHIFT))
#define CAM_GAMMA_G_Y_12_C00           (0xC00UL<<CAM_GAMMA_G_Y_12_SHIFT)

/*****************************************************************************/
/* Register description for ISP_GAMMA_G_Y13 */

/* Reset value of register CAM_ISP_GAMMA_G_Y13 */
#define CAM_ISP_GAMMA_G_Y13_VALUE      0xD00

/* Bits definition for register CAM_ISP_GAMMA_G_Y13 */
#define CAM_GAMMA_G_Y_13_SHIFT         0
#define CAM_GAMMA_G_Y_13_FIELD         (0xFFFFFFFF - (0xFFFUL<<CAM_GAMMA_G_Y_13_SHIFT))
#define CAM_GAMMA_G_Y_13_D00           (0xD00UL<<CAM_GAMMA_G_Y_13_SHIFT)

/*****************************************************************************/
/* Register description for ISP_GAMMA_G_Y14 */

/* Reset value of register CAM_ISP_GAMMA_G_Y14 */
#define CAM_ISP_GAMMA_G_Y14_VALUE      0xE00

/* Bits definition for register CAM_ISP_GAMMA_G_Y14 */
#define CAM_GAMMA_G_Y_14_SHIFT         0
#define CAM_GAMMA_G_Y_14_FIELD         (0xFFFFFFFF - (0xFFFUL<<CAM_GAMMA_G_Y_14_SHIFT))
#define CAM_GAMMA_G_Y_14_E00           (0xE00UL<<CAM_GAMMA_G_Y_14_SHIFT)

/*****************************************************************************/
/* Register description for ISP_GAMMA_G_Y15 */

/* Reset value of register CAM_ISP_GAMMA_G_Y15 */
#define CAM_ISP_GAMMA_G_Y15_VALUE      0xF00

/* Bits definition for register CAM_ISP_GAMMA_G_Y15 */
#define CAM_GAMMA_G_Y_15_SHIFT         0
#define CAM_GAMMA_G_Y_15_FIELD         (0xFFFFFFFF - (0xFFFUL<<CAM_GAMMA_G_Y_15_SHIFT))
#define CAM_GAMMA_G_Y_15_F00           (0xF00UL<<CAM_GAMMA_G_Y_15_SHIFT)

/*****************************************************************************/
/* Register description for ISP_GAMMA_G_Y16 */

/* Reset value of register CAM_ISP_GAMMA_G_Y16 */
#define CAM_ISP_GAMMA_G_Y16_VALUE      0xFFF

/* Bits definition for register CAM_ISP_GAMMA_G_Y16 */
#define CAM_GAMMA_G_Y_16_SHIFT         0
#define CAM_GAMMA_G_Y_16_FIELD         (0xFFFFFFFF - (0xFFFUL<<CAM_GAMMA_G_Y_16_SHIFT))
#define CAM_GAMMA_G_Y_16_FFF           (0xFFFUL<<CAM_GAMMA_G_Y_16_SHIFT)

/*****************************************************************************/
/* Register description for ISP_GAMMA_B_Y0 */

/* Reset value of register CAM_ISP_GAMMA_B_Y0 */
#define CAM_ISP_GAMMA_B_Y0_VALUE       0x0

/* Bits definition for register CAM_ISP_GAMMA_B_Y0 */
#define CAM_GAMMA_B_Y_0_SHIFT          0
#define CAM_GAMMA_B_Y_0_FIELD          (0xFFFFFFFF - (0xFFFUL<<CAM_GAMMA_B_Y_0_SHIFT))
#define CAM_GAMMA_B_Y_0_0              (0x0UL<<CAM_GAMMA_B_Y_0_SHIFT)

/*****************************************************************************/
/* Register description for ISP_GAMMA_B_Y1 */

/* Reset value of register CAM_ISP_GAMMA_B_Y1 */
#define CAM_ISP_GAMMA_B_Y1_VALUE       0x100

/* Bits definition for register CAM_ISP_GAMMA_B_Y1 */
#define CAM_GAMMA_B_Y_1_SHIFT          0
#define CAM_GAMMA_B_Y_1_FIELD          (0xFFFFFFFF - (0xFFFUL<<CAM_GAMMA_B_Y_1_SHIFT))
#define CAM_GAMMA_B_Y_1_100            (0x100UL<<CAM_GAMMA_B_Y_1_SHIFT)

/*****************************************************************************/
/* Register description for ISP_GAMMA_B_Y2 */

/* Reset value of register CAM_ISP_GAMMA_B_Y2 */
#define CAM_ISP_GAMMA_B_Y2_VALUE       0x200

/* Bits definition for register CAM_ISP_GAMMA_B_Y2 */
#define CAM_GAMMA_B_Y_2_SHIFT          0
#define CAM_GAMMA_B_Y_2_FIELD          (0xFFFFFFFF - (0xFFFUL<<CAM_GAMMA_B_Y_2_SHIFT))
#define CAM_GAMMA_B_Y_2_200            (0x200UL<<CAM_GAMMA_B_Y_2_SHIFT)

/*****************************************************************************/
/* Register description for ISP_GAMMA_B_Y3 */

/* Reset value of register CAM_ISP_GAMMA_B_Y3 */
#define CAM_ISP_GAMMA_B_Y3_VALUE       0x300

/* Bits definition for register CAM_ISP_GAMMA_B_Y3 */
#define CAM_GAMMA_B_Y_3_SHIFT          0
#define CAM_GAMMA_B_Y_3_FIELD          (0xFFFFFFFF - (0xFFFUL<<CAM_GAMMA_B_Y_3_SHIFT))
#define CAM_GAMMA_B_Y_3_300            (0x300UL<<CAM_GAMMA_B_Y_3_SHIFT)

/*****************************************************************************/
/* Register description for ISP_GAMMA_B_Y4 */

/* Reset value of register CAM_ISP_GAMMA_B_Y4 */
#define CAM_ISP_GAMMA_B_Y4_VALUE       0x400

/* Bits definition for register CAM_ISP_GAMMA_B_Y4 */
#define CAM_GAMMA_B_Y_4_SHIFT          0
#define CAM_GAMMA_B_Y_4_FIELD          (0xFFFFFFFF - (0xFFFUL<<CAM_GAMMA_B_Y_4_SHIFT))
#define CAM_GAMMA_B_Y_4_400            (0x400UL<<CAM_GAMMA_B_Y_4_SHIFT)

/*****************************************************************************/
/* Register description for ISP_GAMMA_B_Y5 */

/* Reset value of register CAM_ISP_GAMMA_B_Y5 */
#define CAM_ISP_GAMMA_B_Y5_VALUE       0x500

/* Bits definition for register CAM_ISP_GAMMA_B_Y5 */
#define CAM_GAMMA_B_Y_5_SHIFT          0
#define CAM_GAMMA_B_Y_5_FIELD          (0xFFFFFFFF - (0xFFFUL<<CAM_GAMMA_B_Y_5_SHIFT))
#define CAM_GAMMA_B_Y_5_500            (0x500UL<<CAM_GAMMA_B_Y_5_SHIFT)

/*****************************************************************************/
/* Register description for ISP_GAMMA_B_Y6 */

/* Reset value of register CAM_ISP_GAMMA_B_Y6 */
#define CAM_ISP_GAMMA_B_Y6_VALUE       0x500

/* Bits definition for register CAM_ISP_GAMMA_B_Y6 */
#define CAM_GAMMA_B_Y_6_SHIFT          0
#define CAM_GAMMA_B_Y_6_FIELD          (0xFFFFFFFF - (0xFFFUL<<CAM_GAMMA_B_Y_6_SHIFT))
#define CAM_GAMMA_B_Y_6_500            (0x500UL<<CAM_GAMMA_B_Y_6_SHIFT)

/*****************************************************************************/
/* Register description for ISP_GAMMA_B_Y7 */

/* Reset value of register CAM_ISP_GAMMA_B_Y7 */
#define CAM_ISP_GAMMA_B_Y7_VALUE       0x600

/* Bits definition for register CAM_ISP_GAMMA_B_Y7 */
#define CAM_GAMMA_B_Y_7_SHIFT          0
#define CAM_GAMMA_B_Y_7_FIELD          (0xFFFFFFFF - (0xFFFUL<<CAM_GAMMA_B_Y_7_SHIFT))
#define CAM_GAMMA_B_Y_7_600            (0x600UL<<CAM_GAMMA_B_Y_7_SHIFT)

/*****************************************************************************/
/* Register description for ISP_GAMMA_B_Y8 */

/* Reset value of register CAM_ISP_GAMMA_B_Y8 */
#define CAM_ISP_GAMMA_B_Y8_VALUE       0x700

/* Bits definition for register CAM_ISP_GAMMA_B_Y8 */
#define CAM_GAMMA_B_Y_8_SHIFT          0
#define CAM_GAMMA_B_Y_8_FIELD          (0xFFFFFFFF - (0xFFFUL<<CAM_GAMMA_B_Y_8_SHIFT))
#define CAM_GAMMA_B_Y_8_700            (0x700UL<<CAM_GAMMA_B_Y_8_SHIFT)

/*****************************************************************************/
/* Register description for ISP_GAMMA_B_Y9 */

/* Reset value of register CAM_ISP_GAMMA_B_Y9 */
#define CAM_ISP_GAMMA_B_Y9_VALUE       0x800

/* Bits definition for register CAM_ISP_GAMMA_B_Y9 */
#define CAM_GAMMA_B_Y_9_SHIFT          0
#define CAM_GAMMA_B_Y_9_FIELD          (0xFFFFFFFF - (0xFFFUL<<CAM_GAMMA_B_Y_9_SHIFT))
#define CAM_GAMMA_B_Y_9_800            (0x800UL<<CAM_GAMMA_B_Y_9_SHIFT)

/*****************************************************************************/
/* Register description for ISP_GAMMA_B_Y10 */

/* Reset value of register CAM_ISP_GAMMA_B_Y10 */
#define CAM_ISP_GAMMA_B_Y10_VALUE      0x900

/* Bits definition for register CAM_ISP_GAMMA_B_Y10 */
#define CAM_GAMMA_B_Y_10_SHIFT         0
#define CAM_GAMMA_B_Y_10_FIELD         (0xFFFFFFFF - (0xFFFUL<<CAM_GAMMA_B_Y_10_SHIFT))
#define CAM_GAMMA_B_Y_10_900           (0x900UL<<CAM_GAMMA_B_Y_10_SHIFT)

/*****************************************************************************/
/* Register description for ISP_GAMMA_B_Y11 */

/* Reset value of register CAM_ISP_GAMMA_B_Y11 */
#define CAM_ISP_GAMMA_B_Y11_VALUE      0xA00

/* Bits definition for register CAM_ISP_GAMMA_B_Y11 */
#define CAM_GAMMA_B_Y_11_SHIFT         0
#define CAM_GAMMA_B_Y_11_FIELD         (0xFFFFFFFF - (0xFFFUL<<CAM_GAMMA_B_Y_11_SHIFT))
#define CAM_GAMMA_B_Y_11_A00           (0xA00UL<<CAM_GAMMA_B_Y_11_SHIFT)

/*****************************************************************************/
/* Register description for ISP_GAMMA_B_Y12 */

/* Reset value of register CAM_ISP_GAMMA_B_Y12 */
#define CAM_ISP_GAMMA_B_Y12_VALUE      0xB00

/* Bits definition for register CAM_ISP_GAMMA_B_Y12 */
#define CAM_GAMMA_B_Y_12_SHIFT         0
#define CAM_GAMMA_B_Y_12_FIELD         (0xFFFFFFFF - (0xFFFUL<<CAM_GAMMA_B_Y_12_SHIFT))
#define CAM_GAMMA_B_Y_12_B00           (0xB00UL<<CAM_GAMMA_B_Y_12_SHIFT)

/*****************************************************************************/
/* Register description for ISP_GAMMA_B_Y13 */

/* Reset value of register CAM_ISP_GAMMA_B_Y13 */
#define CAM_ISP_GAMMA_B_Y13_VALUE      0xC00

/* Bits definition for register CAM_ISP_GAMMA_B_Y13 */
#define CAM_GAMMA_B_Y_13_SHIFT         0
#define CAM_GAMMA_B_Y_13_FIELD         (0xFFFFFFFF - (0xFFFUL<<CAM_GAMMA_B_Y_13_SHIFT))
#define CAM_GAMMA_B_Y_13_C00           (0xC00UL<<CAM_GAMMA_B_Y_13_SHIFT)

/*****************************************************************************/
/* Register description for ISP_GAMMA_B_Y14 */

/* Reset value of register CAM_ISP_GAMMA_B_Y14 */
#define CAM_ISP_GAMMA_B_Y14_VALUE      0xD00

/* Bits definition for register CAM_ISP_GAMMA_B_Y14 */
#define CAM_GAMMA_B_Y_14_SHIFT         0
#define CAM_GAMMA_B_Y_14_FIELD         (0xFFFFFFFF - (0xFFFUL<<CAM_GAMMA_B_Y_14_SHIFT))
#define CAM_GAMMA_B_Y_14_D00           (0xD00UL<<CAM_GAMMA_B_Y_14_SHIFT)

/*****************************************************************************/
/* Register description for ISP_GAMMA_B_Y15 */

/* Reset value of register CAM_ISP_GAMMA_B_Y15 */
#define CAM_ISP_GAMMA_B_Y15_VALUE      0xF00

/* Bits definition for register CAM_ISP_GAMMA_B_Y15 */
#define CAM_GAMMA_B_Y_15_SHIFT         0
#define CAM_GAMMA_B_Y_15_FIELD         (0xFFFFFFFF - (0xFFFUL<<CAM_GAMMA_B_Y_15_SHIFT))
#define CAM_GAMMA_B_Y_15_F00           (0xF00UL<<CAM_GAMMA_B_Y_15_SHIFT)

/*****************************************************************************/
/* Register description for ISP_GAMMA_B_Y16 */

/* Reset value of register CAM_ISP_GAMMA_B_Y16 */
#define CAM_ISP_GAMMA_B_Y16_VALUE      0xFFF

/* Bits definition for register CAM_ISP_GAMMA_B_Y16 */
#define CAM_GAMMA_B_Y_16_SHIFT         0
#define CAM_GAMMA_B_Y_16_FIELD         (0xFFFFFFFF - (0xFFFUL<<CAM_GAMMA_B_Y_16_SHIFT))
#define CAM_GAMMA_B_Y_16_FFF           (0xFFFUL<<CAM_GAMMA_B_Y_16_SHIFT)

/*****************************************************************************/
/* Register description for ISP_AWB_PROP */

/* Reset value of register CAM_ISP_AWB_PROP */
#define CAM_ISP_AWB_PROP_VALUE         0x0

/* Bits definition for register CAM_ISP_AWB_PROP */
#define CAM_AWB_MEAS_MODE_SHIFT        31
#define CAM_AWB_MEAS_MODE_FIELD        (0xFFFFFFFF - (0x1UL<<CAM_AWB_MEAS_MODE_SHIFT))
#define CAM_AWB_MEAS_MODE_0            (0x0UL<<CAM_AWB_MEAS_MODE_SHIFT)
#define CAM_AWB_MEAS_MODE_1            (0x1UL<<CAM_AWB_MEAS_MODE_SHIFT)
#define CAM_AWB_MEAS_MODE              (0x1UL<<CAM_AWB_MEAS_MODE_SHIFT)
#define CAM_AWB_MODE2_SHIFT            2
#define CAM_AWB_MODE2_FIELD            (0xFFFFFFFF - (0x1UL<<CAM_AWB_MODE2_SHIFT))
#define CAM_AWB_MODE2_0                (0x0UL<<CAM_AWB_MODE2_SHIFT)
#define CAM_AWB_MODE2_1                (0x1UL<<CAM_AWB_MODE2_SHIFT)
#define CAM_AWB_MODE2                  (0x1UL<<CAM_AWB_MODE2_SHIFT)
#define CAM_AWB_MODE_SHIFT             0
#define CAM_AWB_MODE_FIELD             (0xFFFFFFFF - (0x3UL<<CAM_AWB_MODE_SHIFT))
#define CAM_AWB_MODE_0                 (0x0UL<<CAM_AWB_MODE_SHIFT)
#define CAM_AWB_MODE_1                 (0x1UL<<CAM_AWB_MODE_SHIFT)
#define CAM_AWB_MODE_2                 (0x2UL<<CAM_AWB_MODE_SHIFT)
#define CAM_AWB_MODE_3                 (0x3UL<<CAM_AWB_MODE_SHIFT)

/*****************************************************************************/
/* Register description for ISP_AWB_H_OFFS */

/* Reset value of register CAM_ISP_AWB_H_OFFS */
#define CAM_ISP_AWB_H_OFFS_VALUE       0x0

/* Bits definition for register CAM_ISP_AWB_H_OFFS */
#define CAM_AWB_H_OFFS_SHIFT           0
#define CAM_AWB_H_OFFS_FIELD           (0xFFFFFFFF - (0xFFFUL<<CAM_AWB_H_OFFS_SHIFT))
#define CAM_AWB_H_OFFS_0               (0x0UL<<CAM_AWB_H_OFFS_SHIFT)

/*****************************************************************************/
/* Register description for ISP_AWB_V_OFFS */

/* Reset value of register CAM_ISP_AWB_V_OFFS */
#define CAM_ISP_AWB_V_OFFS_VALUE       0x0

/* Bits definition for register CAM_ISP_AWB_V_OFFS */
#define CAM_AWB_V_OFFS_SHIFT           0
#define CAM_AWB_V_OFFS_FIELD           (0xFFFFFFFF - (0xFFFUL<<CAM_AWB_V_OFFS_SHIFT))
#define CAM_AWB_V_OFFS_0               (0x0UL<<CAM_AWB_V_OFFS_SHIFT)

/*****************************************************************************/
/* Register description for ISP_AWB_H_SIZE */

/* Reset value of register CAM_ISP_AWB_H_SIZE */
#define CAM_ISP_AWB_H_SIZE_VALUE       0x0

/* Bits definition for register CAM_ISP_AWB_H_SIZE */
#define CAM_AWB_H_SIZE_SHIFT           0
#define CAM_AWB_H_SIZE_FIELD           (0xFFFFFFFF - (0xFFFUL<<CAM_AWB_H_SIZE_SHIFT))
#define CAM_AWB_H_SIZE_0               (0x0UL<<CAM_AWB_H_SIZE_SHIFT)

/*****************************************************************************/
/* Register description for ISP_AWB_V_SIZE */

/* Reset value of register CAM_ISP_AWB_V_SIZE */
#define CAM_ISP_AWB_V_SIZE_VALUE       0x0

/* Bits definition for register CAM_ISP_AWB_V_SIZE */
#define CAM_AWB_V_SIZE_SHIFT           0
#define CAM_AWB_V_SIZE_FIELD           (0xFFFFFFFF - (0xFFFUL<<CAM_AWB_V_SIZE_SHIFT))
#define CAM_AWB_V_SIZE_0               (0x0UL<<CAM_AWB_V_SIZE_SHIFT)

/*****************************************************************************/
/* Register description for ISP_AWB_FRAMES */

/* Reset value of register CAM_ISP_AWB_FRAMES */
#define CAM_ISP_AWB_FRAMES_VALUE       0x0

/* Bits definition for register CAM_ISP_AWB_FRAMES */
#define CAM_AWB_FRAMES_SHIFT           0
#define CAM_AWB_FRAMES_FIELD           (0xFFFFFFFF - (0x7UL<<CAM_AWB_FRAMES_SHIFT))
#define CAM_AWB_FRAMES_0               (0x0UL<<CAM_AWB_FRAMES_SHIFT)
#define CAM_AWB_FRAMES_1               (0x1UL<<CAM_AWB_FRAMES_SHIFT)
#define CAM_AWB_FRAMES_2               (0x2UL<<CAM_AWB_FRAMES_SHIFT)
#define CAM_AWB_FRAMES_3               (0x3UL<<CAM_AWB_FRAMES_SHIFT)
#define CAM_AWB_FRAMES_4               (0x4UL<<CAM_AWB_FRAMES_SHIFT)
#define CAM_AWB_FRAMES_5               (0x5UL<<CAM_AWB_FRAMES_SHIFT)
#define CAM_AWB_FRAMES_6               (0x6UL<<CAM_AWB_FRAMES_SHIFT)
#define CAM_AWB_FRAMES_7               (0x7UL<<CAM_AWB_FRAMES_SHIFT)

/*****************************************************************************/
/* Register description for ISP_AWB_REF */

/* Reset value of register CAM_ISP_AWB_REF */
#define CAM_ISP_AWB_REF_VALUE          0x8080

/* Bits definition for register CAM_ISP_AWB_REF */
#define CAM_AWB_REF_CR_MAX_R_SHIFT     8
#define CAM_AWB_REF_CR_MAX_R_FIELD     (0xFFFFFFFF - (0xFFUL<<CAM_AWB_REF_CR_MAX_R_SHIFT))
#define CAM_AWB_REF_CR_MAX_R_80        (0x80UL<<CAM_AWB_REF_CR_MAX_R_SHIFT)
#define CAM_AWB_REF_CB_MAX_B_SHIFT     0
#define CAM_AWB_REF_CB_MAX_B_FIELD     (0xFFFFFFFF - (0xFFUL<<CAM_AWB_REF_CB_MAX_B_SHIFT))
#define CAM_AWB_REF_CB_MAX_B_80        (0x80UL<<CAM_AWB_REF_CB_MAX_B_SHIFT)

/*****************************************************************************/
/* Register description for ISP_AWB_THRESH */

/* Reset value of register CAM_ISP_AWB_THRESH */
#define CAM_ISP_AWB_THRESH_VALUE       0xE9C01010

/* Bits definition for register CAM_ISP_AWB_THRESH */
#define CAM_AWB_MAX_Y_SHIFT            24
#define CAM_AWB_MAX_Y_FIELD            (0xFFFFFFFF - (0xFFUL<<CAM_AWB_MAX_Y_SHIFT))
#define CAM_AWB_MAX_Y_E9               (0xE9UL<<CAM_AWB_MAX_Y_SHIFT)
#define CAM_AWB_MIN_Y_MAX_G_SHIFT      16
#define CAM_AWB_MIN_Y_MAX_G_FIELD      (0xFFFFFFFF - (0xFFUL<<CAM_AWB_MIN_Y_MAX_G_SHIFT))
#define CAM_AWB_MIN_Y_MAX_G_C0         (0xC0UL<<CAM_AWB_MIN_Y_MAX_G_SHIFT)
#define CAM_AWB_MAX_CSUM_SHIFT         8
#define CAM_AWB_MAX_CSUM_FIELD         (0xFFFFFFFF - (0xFFUL<<CAM_AWB_MAX_CSUM_SHIFT))
#define CAM_AWB_MAX_CSUM_10            (0x10UL<<CAM_AWB_MAX_CSUM_SHIFT)
#define CAM_AWB_MIN_C_SHIFT            0
#define CAM_AWB_MIN_C_FIELD            (0xFFFFFFFF - (0xFFUL<<CAM_AWB_MIN_C_SHIFT))
#define CAM_AWB_MIN_C_10               (0x10UL<<CAM_AWB_MIN_C_SHIFT)

/*****************************************************************************/
/* Register description for ISP_AWB_GAIN_G */

/* Reset value of register CAM_ISP_AWB_GAIN_G */
#define CAM_ISP_AWB_GAIN_G_VALUE       0x1000100

/* Bits definition for register CAM_ISP_AWB_GAIN_G */
#define CAM_AWB_GAIN_GR_SHIFT          16
#define CAM_AWB_GAIN_GR_FIELD          (0xFFFFFFFF - (0x3FFUL<<CAM_AWB_GAIN_GR_SHIFT))
#define CAM_AWB_GAIN_GR_100            (0x100UL<<CAM_AWB_GAIN_GR_SHIFT)
#define CAM_AWB_GAIN_GB_SHIFT          0
#define CAM_AWB_GAIN_GB_FIELD          (0xFFFFFFFF - (0x3FFUL<<CAM_AWB_GAIN_GB_SHIFT))
#define CAM_AWB_GAIN_GB_100            (0x100UL<<CAM_AWB_GAIN_GB_SHIFT)

/*****************************************************************************/
/* Register description for ISP_AWB_GAIN_RB */

/* Reset value of register CAM_ISP_AWB_GAIN_RB */
#define CAM_ISP_AWB_GAIN_RB_VALUE      0x1000100

/* Bits definition for register CAM_ISP_AWB_GAIN_RB */
#define CAM_AWB_GAIN_R_SHIFT           16
#define CAM_AWB_GAIN_R_FIELD           (0xFFFFFFFF - (0x3FFUL<<CAM_AWB_GAIN_R_SHIFT))
#define CAM_AWB_GAIN_R_100             (0x100UL<<CAM_AWB_GAIN_R_SHIFT)
#define CAM_AWB_GAIN_B_SHIFT           0
#define CAM_AWB_GAIN_B_FIELD           (0xFFFFFFFF - (0x3FFUL<<CAM_AWB_GAIN_B_SHIFT))
#define CAM_AWB_GAIN_B_100             (0x100UL<<CAM_AWB_GAIN_B_SHIFT)

/*****************************************************************************/
/* Register description for ISP_AWB_WHITE_CNT */

/* Reset value of register CAM_ISP_AWB_WHITE_CNT */
#define CAM_ISP_AWB_WHITE_CNT_VALUE    0x0

/* Bits definition for register CAM_ISP_AWB_WHITE_CNT */
#define CAM_AWB_WHITE_CNT_SHIFT        0
#define CAM_AWB_WHITE_CNT_FIELD        (0xFFFFFFFF - (0x3FFFFFFUL<<CAM_AWB_WHITE_CNT_SHIFT))
#define CAM_AWB_WHITE_CNT_0            (0x0UL<<CAM_AWB_WHITE_CNT_SHIFT)

/*****************************************************************************/
/* Register description for ISP_AWB_MEAN */

/* Reset value of register CAM_ISP_AWB_MEAN */
#define CAM_ISP_AWB_MEAN_VALUE         0x0

/* Bits definition for register CAM_ISP_AWB_MEAN */
#define CAM_AWB_MEAN_Y_G_SHIFT         16
#define CAM_AWB_MEAN_Y_G_FIELD         (0xFFFFFFFF - (0xFFUL<<CAM_AWB_MEAN_Y_G_SHIFT))
#define CAM_AWB_MEAN_Y_G_0             (0x0UL<<CAM_AWB_MEAN_Y_G_SHIFT)
#define CAM_AWB_MEAN_CB_B_SHIFT        8
#define CAM_AWB_MEAN_CB_B_FIELD        (0xFFFFFFFF - (0xFFUL<<CAM_AWB_MEAN_CB_B_SHIFT))
#define CAM_AWB_MEAN_CB_B_0            (0x0UL<<CAM_AWB_MEAN_CB_B_SHIFT)
#define CAM_AWB_MEAN_CR_R_SHIFT        0
#define CAM_AWB_MEAN_CR_R_FIELD        (0xFFFFFFFF - (0xFFUL<<CAM_AWB_MEAN_CR_R_SHIFT))
#define CAM_AWB_MEAN_CR_R_0            (0x0UL<<CAM_AWB_MEAN_CR_R_SHIFT)

/*****************************************************************************/
/* Register description for ISP_CC_COEFF0 */

/* Reset value of register CAM_ISP_CC_COEFF0 */
#define CAM_ISP_CC_COEFF0_VALUE        0x21

/* Bits definition for register CAM_ISP_CC_COEFF0 */
#define CAM_CC_COEFF_0_SHIFT           0
#define CAM_CC_COEFF_0_FIELD           (0xFFFFFFFF - (0x1FFUL<<CAM_CC_COEFF_0_SHIFT))
#define CAM_CC_COEFF_0_21              (0x21UL<<CAM_CC_COEFF_0_SHIFT)

/*****************************************************************************/
/* Register description for ISP_CC_COEFF1 */

/* Reset value of register CAM_ISP_CC_COEFF1 */
#define CAM_ISP_CC_COEFF1_VALUE        0x40

/* Bits definition for register CAM_ISP_CC_COEFF1 */
#define CAM_CC_COEFF_1_SHIFT           0
#define CAM_CC_COEFF_1_FIELD           (0xFFFFFFFF - (0x1FFUL<<CAM_CC_COEFF_1_SHIFT))
#define CAM_CC_COEFF_1_40              (0x40UL<<CAM_CC_COEFF_1_SHIFT)

/*****************************************************************************/
/* Register description for ISP_CC_COEFF2 */

/* Reset value of register CAM_ISP_CC_COEFF2 */
#define CAM_ISP_CC_COEFF2_VALUE        0xD

/* Bits definition for register CAM_ISP_CC_COEFF2 */
#define CAM_CC_COEFF_2_SHIFT           0
#define CAM_CC_COEFF_2_FIELD           (0xFFFFFFFF - (0x1FFUL<<CAM_CC_COEFF_2_SHIFT))
#define CAM_CC_COEFF_2_D               (0xDUL<<CAM_CC_COEFF_2_SHIFT)

/*****************************************************************************/
/* Register description for ISP_CC_COEFF3 */

/* Reset value of register CAM_ISP_CC_COEFF3 */
#define CAM_ISP_CC_COEFF3_VALUE        0x1ED

/* Bits definition for register CAM_ISP_CC_COEFF3 */
#define CAM_CC_COEFF_3_SHIFT           0
#define CAM_CC_COEFF_3_FIELD           (0xFFFFFFFF - (0x1FFUL<<CAM_CC_COEFF_3_SHIFT))
#define CAM_CC_COEFF_3_1ED             (0x1EDUL<<CAM_CC_COEFF_3_SHIFT)

/*****************************************************************************/
/* Register description for ISP_CC_COEFF4 */

/* Reset value of register CAM_ISP_CC_COEFF4 */
#define CAM_ISP_CC_COEFF4_VALUE        0x1DB

/* Bits definition for register CAM_ISP_CC_COEFF4 */
#define CAM_CC_COEFF_4_SHIFT           0
#define CAM_CC_COEFF_4_FIELD           (0xFFFFFFFF - (0x1FFUL<<CAM_CC_COEFF_4_SHIFT))
#define CAM_CC_COEFF_4_1DB             (0x1DBUL<<CAM_CC_COEFF_4_SHIFT)

/*****************************************************************************/
/* Register description for ISP_CC_COEFF5 */

/* Reset value of register CAM_ISP_CC_COEFF5 */
#define CAM_ISP_CC_COEFF5_VALUE        0x38

/* Bits definition for register CAM_ISP_CC_COEFF5 */
#define CAM_CC_COEFF_5_SHIFT           0
#define CAM_CC_COEFF_5_FIELD           (0xFFFFFFFF - (0x1FFUL<<CAM_CC_COEFF_5_SHIFT))
#define CAM_CC_COEFF_5_38              (0x38UL<<CAM_CC_COEFF_5_SHIFT)

/*****************************************************************************/
/* Register description for ISP_CC_COEFF6 */

/* Reset value of register CAM_ISP_CC_COEFF6 */
#define CAM_ISP_CC_COEFF6_VALUE        0x38

/* Bits definition for register CAM_ISP_CC_COEFF6 */
#define CAM_CC_COEFF_6_SHIFT           0
#define CAM_CC_COEFF_6_FIELD           (0xFFFFFFFF - (0x1FFUL<<CAM_CC_COEFF_6_SHIFT))
#define CAM_CC_COEFF_6_38              (0x38UL<<CAM_CC_COEFF_6_SHIFT)

/*****************************************************************************/
/* Register description for ISP_CC_COEFF7 */

/* Reset value of register CAM_ISP_CC_COEFF7 */
#define CAM_ISP_CC_COEFF7_VALUE        0x1D1

/* Bits definition for register CAM_ISP_CC_COEFF7 */
#define CAM_CC_COEFF_7_SHIFT           0
#define CAM_CC_COEFF_7_FIELD           (0xFFFFFFFF - (0x1FFUL<<CAM_CC_COEFF_7_SHIFT))
#define CAM_CC_COEFF_7_1D1             (0x1D1UL<<CAM_CC_COEFF_7_SHIFT)

/*****************************************************************************/
/* Register description for ISP_CC_COEFF8 */

/* Reset value of register CAM_ISP_CC_COEFF8 */
#define CAM_ISP_CC_COEFF8_VALUE        0x1F7

/* Bits definition for register CAM_ISP_CC_COEFF8 */
#define CAM_CC_COEFF_8_SHIFT           0
#define CAM_CC_COEFF_8_FIELD           (0xFFFFFFFF - (0x1FFUL<<CAM_CC_COEFF_8_SHIFT))
#define CAM_CC_COEFF_8_1F7             (0x1F7UL<<CAM_CC_COEFF_8_SHIFT)

/*****************************************************************************/
/* Register description for ISP_OUT_H_OFFS */

/* Reset value of register CAM_ISP_OUT_H_OFFS */
#define CAM_ISP_OUT_H_OFFS_VALUE       0x0

/* Bits definition for register CAM_ISP_OUT_H_OFFS */
#define CAM_OUT_H_OFFS_SHIFT           0
#define CAM_OUT_H_OFFS_FIELD           (0xFFFFFFFF - (0xFFFUL<<CAM_OUT_H_OFFS_SHIFT))
#define CAM_OUT_H_OFFS_0               (0x0UL<<CAM_OUT_H_OFFS_SHIFT)

/*****************************************************************************/
/* Register description for ISP_OUT_V_OFFS */

/* Reset value of register CAM_ISP_OUT_V_OFFS */
#define CAM_ISP_OUT_V_OFFS_VALUE       0x0

/* Bits definition for register CAM_ISP_OUT_V_OFFS */
#define CAM_OUT_V_OFFS_SHIFT           0
#define CAM_OUT_V_OFFS_FIELD           (0xFFFFFFFF - (0xFFFUL<<CAM_OUT_V_OFFS_SHIFT))
#define CAM_OUT_V_OFFS_0               (0x0UL<<CAM_OUT_V_OFFS_SHIFT)

/*****************************************************************************/
/* Register description for ISP_OUT_H_SIZE */

/* Reset value of register CAM_ISP_OUT_H_SIZE */
#define CAM_ISP_OUT_H_SIZE_VALUE       0xA28

/* Bits definition for register CAM_ISP_OUT_H_SIZE */
#define CAM_OUT_H_SIZE_SHIFT           0
#define CAM_OUT_H_SIZE_FIELD           (0xFFFFFFFF - (0xFFFUL<<CAM_OUT_H_SIZE_SHIFT))
#define CAM_OUT_H_SIZE_A28             (0xA28UL<<CAM_OUT_H_SIZE_SHIFT)

/*****************************************************************************/
/* Register description for ISP_OUT_V_SIZE */

/* Reset value of register CAM_ISP_OUT_V_SIZE */
#define CAM_ISP_OUT_V_SIZE_VALUE       0x800

/* Bits definition for register CAM_ISP_OUT_V_SIZE */
#define CAM_OUT_V_SIZE_SHIFT           0
#define CAM_OUT_V_SIZE_FIELD           (0xFFFFFFFF - (0xFFFUL<<CAM_OUT_V_SIZE_SHIFT))
#define CAM_OUT_V_SIZE_800             (0x800UL<<CAM_OUT_V_SIZE_SHIFT)

/*****************************************************************************/
/* Register description for ISP_DEMOSAIC */

/* Reset value of register CAM_ISP_DEMOSAIC */
#define CAM_ISP_DEMOSAIC_VALUE         0x4

/* Bits definition for register CAM_ISP_DEMOSAIC */
#define CAM_DEMOSAIC_BYP_SHIFT         10
#define CAM_DEMOSAIC_BYP_FIELD         (0xFFFFFFFF - (0x1UL<<CAM_DEMOSAIC_BYP_SHIFT))
#define CAM_DEMOSAIC_BYP_0             (0x0UL<<CAM_DEMOSAIC_BYP_SHIFT)
#define CAM_DEMOSAIC_BYP_1             (0x1UL<<CAM_DEMOSAIC_BYP_SHIFT)
#define CAM_DEMOSAIC_BYP               (0x1UL<<CAM_DEMOSAIC_BYP_SHIFT)
#define CAM_DEMOSAIC_TH_SHIFT          0
#define CAM_DEMOSAIC_TH_FIELD          (0xFFFFFFFF - (0xFFUL<<CAM_DEMOSAIC_TH_SHIFT))
#define CAM_DEMOSAIC_TH_4              (0x4UL<<CAM_DEMOSAIC_TH_SHIFT)

/*****************************************************************************/
/* Register description for ISP_FLAGS_SHD */

/* Reset value of register CAM_ISP_FLAGS_SHD */
#define CAM_ISP_FLAGS_SHD_VALUE        0x0

/* Bits definition for register CAM_ISP_FLAGS_SHD */
#define CAM_HSYNC_IN_PORT_SHIFT        31
#define CAM_HSYNC_IN_PORT_FIELD        (0xFFFFFFFF - (0x1UL<<CAM_HSYNC_IN_PORT_SHIFT))
#define CAM_HSYNC_IN_PORT              (0x1UL<<CAM_HSYNC_IN_PORT_SHIFT)
#define CAM_VSYNC_IN_PORT_SHIFT        30
#define CAM_VSYNC_IN_PORT_FIELD        (0xFFFFFFFF - (0x1UL<<CAM_VSYNC_IN_PORT_SHIFT))
#define CAM_VSYNC_IN_PORT              (0x1UL<<CAM_VSYNC_IN_PORT_SHIFT)
#define CAM_DATA_IN_PORT_SHIFT         18
#define CAM_DATA_IN_PORT_FIELD         (0xFFFFFFFF - (0x3FFUL<<CAM_DATA_IN_PORT_SHIFT))
#define CAM_IN_FIELD_SHIFT             2
#define CAM_IN_FIELD_FIELD             (0xFFFFFFFF - (0x1UL<<CAM_IN_FIELD_SHIFT))
#define CAM_IN_FIELD_0                 (0x0UL<<CAM_IN_FIELD_SHIFT)
#define CAM_IN_FIELD_1                 (0x1UL<<CAM_IN_FIELD_SHIFT)
#define CAM_IN_FIELD                   (0x1UL<<CAM_IN_FIELD_SHIFT)
#define CAM_IN_ENABLE_SHD_SHIFT        1
#define CAM_IN_ENABLE_SHD_FIELD        (0xFFFFFFFF - (0x1UL<<CAM_IN_ENABLE_SHD_SHIFT))
#define CAM_IN_ENABLE_SHD_0            (0x0UL<<CAM_IN_ENABLE_SHD_SHIFT)
#define CAM_IN_ENABLE_SHD_1            (0x1UL<<CAM_IN_ENABLE_SHD_SHIFT)
#define CAM_IN_ENABLE_SHD              (0x1UL<<CAM_IN_ENABLE_SHD_SHIFT)
#define CAM_ISP_ON_SHD_SHIFT           0
#define CAM_ISP_ON_SHD_FIELD           (0xFFFFFFFF - (0x1UL<<CAM_ISP_ON_SHD_SHIFT))
#define CAM_ISP_ON_SHD_0               (0x0UL<<CAM_ISP_ON_SHD_SHIFT)
#define CAM_ISP_ON_SHD_1               (0x1UL<<CAM_ISP_ON_SHD_SHIFT)
#define CAM_ISP_ON_SHD                 (0x1UL<<CAM_ISP_ON_SHD_SHIFT)

/*****************************************************************************/
/* Register description for ISP_OUT_H_OFFS_SHD */

/* Reset value of register CAM_ISP_OUT_H_OFFS_SHD */
#define CAM_ISP_OUT_H_OFFS_SHD_VALUE   0x0

/* Bits definition for register CAM_ISP_OUT_H_OFFS_SHD */
#define CAM_OUT_H_OFFS_SHD_SHIFT       0
#define CAM_OUT_H_OFFS_SHD_FIELD       (0xFFFFFFFF - (0xFFFUL<<CAM_OUT_H_OFFS_SHD_SHIFT))
#define CAM_OUT_H_OFFS_SHD_0           (0x0UL<<CAM_OUT_H_OFFS_SHD_SHIFT)

/*****************************************************************************/
/* Register description for ISP_OUT_V_OFFS_SHD */

/* Reset value of register CAM_ISP_OUT_V_OFFS_SHD */
#define CAM_ISP_OUT_V_OFFS_SHD_VALUE   0x0

/* Bits definition for register CAM_ISP_OUT_V_OFFS_SHD */
#define CAM_OUT_V_OFFS_SHD_SHIFT       0
#define CAM_OUT_V_OFFS_SHD_FIELD       (0xFFFFFFFF - (0xFFFUL<<CAM_OUT_V_OFFS_SHD_SHIFT))
#define CAM_OUT_V_OFFS_SHD_0           (0x0UL<<CAM_OUT_V_OFFS_SHD_SHIFT)

/*****************************************************************************/
/* Register description for ISP_OUT_H_SIZE_SHD */

/* Reset value of register CAM_ISP_OUT_H_SIZE_SHD */
#define CAM_ISP_OUT_H_SIZE_SHD_VALUE   0x0

/* Bits definition for register CAM_ISP_OUT_H_SIZE_SHD */
#define CAM_OUT_H_SIZE_SHD_SHIFT       0
#define CAM_OUT_H_SIZE_SHD_FIELD       (0xFFFFFFFF - (0xFFFUL<<CAM_OUT_H_SIZE_SHD_SHIFT))
#define CAM_OUT_H_SIZE_SHD_0           (0x0UL<<CAM_OUT_H_SIZE_SHD_SHIFT)

/*****************************************************************************/
/* Register description for ISP_OUT_V_SIZE_SHD */

/* Reset value of register CAM_ISP_OUT_V_SIZE_SHD */
#define CAM_ISP_OUT_V_SIZE_SHD_VALUE   0x0

/* Bits definition for register CAM_ISP_OUT_V_SIZE_SHD */
#define CAM_OUT_V_SIZE_SHD_SHIFT       0
#define CAM_OUT_V_SIZE_SHD_FIELD       (0xFFFFFFFF - (0xFFFUL<<CAM_OUT_V_SIZE_SHD_SHIFT))
#define CAM_OUT_V_SIZE_SHD_0           (0x0UL<<CAM_OUT_V_SIZE_SHD_SHIFT)

/*****************************************************************************/
/* Register description for ISP_IMSC */

/* Reset value of register CAM_ISP_IMSC */
#define CAM_ISP_IMSC_VALUE             0x0

/* Bits definition for register CAM_ISP_IMSC */
#define CAM_IMSC_EXP_END_SHIFT         18
#define CAM_IMSC_EXP_END_FIELD         (0xFFFFFFFF - (0x1UL<<CAM_IMSC_EXP_END_SHIFT))
#define CAM_IMSC_EXP_END_0             (0x0UL<<CAM_IMSC_EXP_END_SHIFT)
#define CAM_IMSC_EXP_END_1             (0x1UL<<CAM_IMSC_EXP_END_SHIFT)
#define CAM_IMSC_EXP_END               (0x1UL<<CAM_IMSC_EXP_END_SHIFT)
#define CAM_IMSC_FLASH_CAP_SHIFT       17
#define CAM_IMSC_FLASH_CAP_FIELD       (0xFFFFFFFF - (0x1UL<<CAM_IMSC_FLASH_CAP_SHIFT))
#define CAM_IMSC_FLASH_CAP_0           (0x0UL<<CAM_IMSC_FLASH_CAP_SHIFT)
#define CAM_IMSC_FLASH_CAP_1           (0x1UL<<CAM_IMSC_FLASH_CAP_SHIFT)
#define CAM_IMSC_FLASH_CAP             (0x1UL<<CAM_IMSC_FLASH_CAP_SHIFT)
#define CAM_IMSC_BP_DET_SHIFT          16
#define CAM_IMSC_BP_DET_FIELD          (0xFFFFFFFF - (0x1UL<<CAM_IMSC_BP_DET_SHIFT))
#define CAM_IMSC_BP_DET_0              (0x0UL<<CAM_IMSC_BP_DET_SHIFT)
#define CAM_IMSC_BP_DET_1              (0x1UL<<CAM_IMSC_BP_DET_SHIFT)
#define CAM_IMSC_BP_DET                (0x1UL<<CAM_IMSC_BP_DET_SHIFT)
#define CAM_IMSC_BP_NEW_TAB_FUL_SHIFT  15
#define CAM_IMSC_BP_NEW_TAB_FUL_FIELD  (0xFFFFFFFF - (0x1UL<<CAM_IMSC_BP_NEW_TAB_FUL_SHIFT))
#define CAM_IMSC_BP_NEW_TAB_FUL_0      (0x0UL<<CAM_IMSC_BP_NEW_TAB_FUL_SHIFT)
#define CAM_IMSC_BP_NEW_TAB_FUL_1      (0x1UL<<CAM_IMSC_BP_NEW_TAB_FUL_SHIFT)
#define CAM_IMSC_BP_NEW_TAB_FUL        (0x1UL<<CAM_IMSC_BP_NEW_TAB_FUL_SHIFT)
#define CAM_IMSC_AFM_FIN_SHIFT         14
#define CAM_IMSC_AFM_FIN_FIELD         (0xFFFFFFFF - (0x1UL<<CAM_IMSC_AFM_FIN_SHIFT))
#define CAM_IMSC_AFM_FIN_0             (0x0UL<<CAM_IMSC_AFM_FIN_SHIFT)
#define CAM_IMSC_AFM_FIN_1             (0x1UL<<CAM_IMSC_AFM_FIN_SHIFT)
#define CAM_IMSC_AFM_FIN               (0x1UL<<CAM_IMSC_AFM_FIN_SHIFT)
#define CAM_IMSC_AFM_LUM_OF_SHIFT      13
#define CAM_IMSC_AFM_LUM_OF_FIELD      (0xFFFFFFFF - (0x1UL<<CAM_IMSC_AFM_LUM_OF_SHIFT))
#define CAM_IMSC_AFM_LUM_OF_0          (0x0UL<<CAM_IMSC_AFM_LUM_OF_SHIFT)
#define CAM_IMSC_AFM_LUM_OF_1          (0x1UL<<CAM_IMSC_AFM_LUM_OF_SHIFT)
#define CAM_IMSC_AFM_LUM_OF            (0x1UL<<CAM_IMSC_AFM_LUM_OF_SHIFT)
#define CAM_IMSC_AFM_SUM_OF_SHIFT      12
#define CAM_IMSC_AFM_SUM_OF_FIELD      (0xFFFFFFFF - (0x1UL<<CAM_IMSC_AFM_SUM_OF_SHIFT))
#define CAM_IMSC_AFM_SUM_OF_0          (0x0UL<<CAM_IMSC_AFM_SUM_OF_SHIFT)
#define CAM_IMSC_AFM_SUM_OF_1          (0x1UL<<CAM_IMSC_AFM_SUM_OF_SHIFT)
#define CAM_IMSC_AFM_SUM_OF            (0x1UL<<CAM_IMSC_AFM_SUM_OF_SHIFT)
#define CAM_IMSC_FLASH_OFF_SHIFT       9
#define CAM_IMSC_FLASH_OFF_FIELD       (0xFFFFFFFF - (0x1UL<<CAM_IMSC_FLASH_OFF_SHIFT))
#define CAM_IMSC_FLASH_OFF_0           (0x0UL<<CAM_IMSC_FLASH_OFF_SHIFT)
#define CAM_IMSC_FLASH_OFF_1           (0x1UL<<CAM_IMSC_FLASH_OFF_SHIFT)
#define CAM_IMSC_FLASH_OFF             (0x1UL<<CAM_IMSC_FLASH_OFF_SHIFT)
#define CAM_IMSC_FLASH_ON_SHIFT        8
#define CAM_IMSC_FLASH_ON_FIELD        (0xFFFFFFFF - (0x1UL<<CAM_IMSC_FLASH_ON_SHIFT))
#define CAM_IMSC_FLASH_ON_0            (0x0UL<<CAM_IMSC_FLASH_ON_SHIFT)
#define CAM_IMSC_FLASH_ON_1            (0x1UL<<CAM_IMSC_FLASH_ON_SHIFT)
#define CAM_IMSC_FLASH_ON              (0x1UL<<CAM_IMSC_FLASH_ON_SHIFT)
#define CAM_IMSC_H_START_SHIFT         7
#define CAM_IMSC_H_START_FIELD         (0xFFFFFFFF - (0x1UL<<CAM_IMSC_H_START_SHIFT))
#define CAM_IMSC_H_START_0             (0x0UL<<CAM_IMSC_H_START_SHIFT)
#define CAM_IMSC_H_START_1             (0x1UL<<CAM_IMSC_H_START_SHIFT)
#define CAM_IMSC_H_START               (0x1UL<<CAM_IMSC_H_START_SHIFT)
#define CAM_IMSC_V_START_SHIFT         6
#define CAM_IMSC_V_START_FIELD         (0xFFFFFFFF - (0x1UL<<CAM_IMSC_V_START_SHIFT))
#define CAM_IMSC_V_START_0             (0x0UL<<CAM_IMSC_V_START_SHIFT)
#define CAM_IMSC_V_START_1             (0x1UL<<CAM_IMSC_V_START_SHIFT)
#define CAM_IMSC_V_START               (0x1UL<<CAM_IMSC_V_START_SHIFT)
#define CAM_IMSC_IN_FRAME_END_SHIFT    5
#define CAM_IMSC_IN_FRAME_END_FIELD    (0xFFFFFFFF - (0x1UL<<CAM_IMSC_IN_FRAME_END_SHIFT))
#define CAM_IMSC_IN_FRAME_END_0        (0x0UL<<CAM_IMSC_IN_FRAME_END_SHIFT)
#define CAM_IMSC_IN_FRAME_END_1        (0x1UL<<CAM_IMSC_IN_FRAME_END_SHIFT)
#define CAM_IMSC_IN_FRAME_END          (0x1UL<<CAM_IMSC_IN_FRAME_END_SHIFT)
#define CAM_IMSC_AWB_DONE_SHIFT        4
#define CAM_IMSC_AWB_DONE_FIELD        (0xFFFFFFFF - (0x1UL<<CAM_IMSC_AWB_DONE_SHIFT))
#define CAM_IMSC_AWB_DONE_0            (0x0UL<<CAM_IMSC_AWB_DONE_SHIFT)
#define CAM_IMSC_AWB_DONE_1            (0x1UL<<CAM_IMSC_AWB_DONE_SHIFT)
#define CAM_IMSC_AWB_DONE              (0x1UL<<CAM_IMSC_AWB_DONE_SHIFT)
#define CAM_IMSC_PIC_ERR_SHIFT         3
#define CAM_IMSC_PIC_ERR_FIELD         (0xFFFFFFFF - (0x1UL<<CAM_IMSC_PIC_ERR_SHIFT))
#define CAM_IMSC_PIC_ERR_0             (0x0UL<<CAM_IMSC_PIC_ERR_SHIFT)
#define CAM_IMSC_PIC_ERR_1             (0x1UL<<CAM_IMSC_PIC_ERR_SHIFT)
#define CAM_IMSC_PIC_ERR               (0x1UL<<CAM_IMSC_PIC_ERR_SHIFT)
#define CAM_IMSC_DATA_LOSS_SHIFT       2
#define CAM_IMSC_DATA_LOSS_FIELD       (0xFFFFFFFF - (0x1UL<<CAM_IMSC_DATA_LOSS_SHIFT))
#define CAM_IMSC_DATA_LOSS_0           (0x0UL<<CAM_IMSC_DATA_LOSS_SHIFT)
#define CAM_IMSC_DATA_LOSS_1           (0x1UL<<CAM_IMSC_DATA_LOSS_SHIFT)
#define CAM_IMSC_DATA_LOSS             (0x1UL<<CAM_IMSC_DATA_LOSS_SHIFT)
#define CAM_IMSC_OUT_FRAME_END_SHIFT   1
#define CAM_IMSC_OUT_FRAME_END_FIELD   (0xFFFFFFFF - (0x1UL<<CAM_IMSC_OUT_FRAME_END_SHIFT))
#define CAM_IMSC_OUT_FRAME_END_0       (0x0UL<<CAM_IMSC_OUT_FRAME_END_SHIFT)
#define CAM_IMSC_OUT_FRAME_END_1       (0x1UL<<CAM_IMSC_OUT_FRAME_END_SHIFT)
#define CAM_IMSC_OUT_FRAME_END         (0x1UL<<CAM_IMSC_OUT_FRAME_END_SHIFT)
#define CAM_IMSC_ISP_OFF_SHIFT         0
#define CAM_IMSC_ISP_OFF_FIELD         (0xFFFFFFFF - (0x1UL<<CAM_IMSC_ISP_OFF_SHIFT))
#define CAM_IMSC_ISP_OFF_0             (0x0UL<<CAM_IMSC_ISP_OFF_SHIFT)
#define CAM_IMSC_ISP_OFF_1             (0x1UL<<CAM_IMSC_ISP_OFF_SHIFT)
#define CAM_IMSC_ISP_OFF               (0x1UL<<CAM_IMSC_ISP_OFF_SHIFT)

/*****************************************************************************/
/* Register description for ISP_RIS */

/* Reset value of register CAM_ISP_RIS */
#define CAM_ISP_RIS_VALUE              0x0

/* Bits definition for register CAM_ISP_RIS */
#define CAM_RIS_EXP_END_SHIFT          18
#define CAM_RIS_EXP_END_FIELD          (0xFFFFFFFF - (0x1UL<<CAM_RIS_EXP_END_SHIFT))
#define CAM_RIS_EXP_END_0              (0x0UL<<CAM_RIS_EXP_END_SHIFT)
#define CAM_RIS_EXP_END_1              (0x1UL<<CAM_RIS_EXP_END_SHIFT)
#define CAM_RIS_EXP_END                (0x1UL<<CAM_RIS_EXP_END_SHIFT)
#define CAM_RIS_FLASH_CAP_SHIFT        17
#define CAM_RIS_FLASH_CAP_FIELD        (0xFFFFFFFF - (0x1UL<<CAM_RIS_FLASH_CAP_SHIFT))
#define CAM_RIS_FLASH_CAP_0            (0x0UL<<CAM_RIS_FLASH_CAP_SHIFT)
#define CAM_RIS_FLASH_CAP_1            (0x1UL<<CAM_RIS_FLASH_CAP_SHIFT)
#define CAM_RIS_FLASH_CAP              (0x1UL<<CAM_RIS_FLASH_CAP_SHIFT)
#define CAM_RIS_BP_DET_SHIFT           16
#define CAM_RIS_BP_DET_FIELD           (0xFFFFFFFF - (0x1UL<<CAM_RIS_BP_DET_SHIFT))
#define CAM_RIS_BP_DET_0               (0x0UL<<CAM_RIS_BP_DET_SHIFT)
#define CAM_RIS_BP_DET_1               (0x1UL<<CAM_RIS_BP_DET_SHIFT)
#define CAM_RIS_BP_DET                 (0x1UL<<CAM_RIS_BP_DET_SHIFT)
#define CAM_RIS_BP_NEW_TABLE_FUL_SHIFT 15
#define CAM_RIS_BP_NEW_TABLE_FUL_FIELD (0xFFFFFFFF - (0x1UL<<CAM_RIS_BP_NEW_TABLE_FUL_SHIFT))
#define CAM_RIS_BP_NEW_TABLE_FUL_0     (0x0UL<<CAM_RIS_BP_NEW_TABLE_FUL_SHIFT)
#define CAM_RIS_BP_NEW_TABLE_FUL_1     (0x1UL<<CAM_RIS_BP_NEW_TABLE_FUL_SHIFT)
#define CAM_RIS_BP_NEW_TABLE_FUL       (0x1UL<<CAM_RIS_BP_NEW_TABLE_FUL_SHIFT)
#define CAM_RIS_AFM_FIN_SHIFT          14
#define CAM_RIS_AFM_FIN_FIELD          (0xFFFFFFFF - (0x1UL<<CAM_RIS_AFM_FIN_SHIFT))
#define CAM_RIS_AFM_FIN_0              (0x0UL<<CAM_RIS_AFM_FIN_SHIFT)
#define CAM_RIS_AFM_FIN_1              (0x1UL<<CAM_RIS_AFM_FIN_SHIFT)
#define CAM_RIS_AFM_FIN                (0x1UL<<CAM_RIS_AFM_FIN_SHIFT)
#define CAM_RIS_AFM_LUM_OF_SHIFT       13
#define CAM_RIS_AFM_LUM_OF_FIELD       (0xFFFFFFFF - (0x1UL<<CAM_RIS_AFM_LUM_OF_SHIFT))
#define CAM_RIS_AFM_LUM_OF_0           (0x0UL<<CAM_RIS_AFM_LUM_OF_SHIFT)
#define CAM_RIS_AFM_LUM_OF_1           (0x1UL<<CAM_RIS_AFM_LUM_OF_SHIFT)
#define CAM_RIS_AFM_LUM_OF             (0x1UL<<CAM_RIS_AFM_LUM_OF_SHIFT)
#define CAM_RIS_AFM_SUM_OF_SHIFT       12
#define CAM_RIS_AFM_SUM_OF_FIELD       (0xFFFFFFFF - (0x1UL<<CAM_RIS_AFM_SUM_OF_SHIFT))
#define CAM_RIS_AFM_SUM_OF_0           (0x0UL<<CAM_RIS_AFM_SUM_OF_SHIFT)
#define CAM_RIS_AFM_SUM_OF_1           (0x1UL<<CAM_RIS_AFM_SUM_OF_SHIFT)
#define CAM_RIS_AFM_SUM_OF             (0x1UL<<CAM_RIS_AFM_SUM_OF_SHIFT)
#define CAM_RIS_FLASH_OFF_SHIFT        9
#define CAM_RIS_FLASH_OFF_FIELD        (0xFFFFFFFF - (0x1UL<<CAM_RIS_FLASH_OFF_SHIFT))
#define CAM_RIS_FLASH_OFF_0            (0x0UL<<CAM_RIS_FLASH_OFF_SHIFT)
#define CAM_RIS_FLASH_OFF_1            (0x1UL<<CAM_RIS_FLASH_OFF_SHIFT)
#define CAM_RIS_FLASH_OFF              (0x1UL<<CAM_RIS_FLASH_OFF_SHIFT)
#define CAM_RIS_FLASH_ON_SHIFT         8
#define CAM_RIS_FLASH_ON_FIELD         (0xFFFFFFFF - (0x1UL<<CAM_RIS_FLASH_ON_SHIFT))
#define CAM_RIS_FLASH_ON_0             (0x0UL<<CAM_RIS_FLASH_ON_SHIFT)
#define CAM_RIS_FLASH_ON_1             (0x1UL<<CAM_RIS_FLASH_ON_SHIFT)
#define CAM_RIS_FLASH_ON               (0x1UL<<CAM_RIS_FLASH_ON_SHIFT)
#define CAM_RIS_H_START_SHIFT          7
#define CAM_RIS_H_START_FIELD          (0xFFFFFFFF - (0x1UL<<CAM_RIS_H_START_SHIFT))
#define CAM_RIS_H_START_0              (0x0UL<<CAM_RIS_H_START_SHIFT)
#define CAM_RIS_H_START_1              (0x1UL<<CAM_RIS_H_START_SHIFT)
#define CAM_RIS_H_START                (0x1UL<<CAM_RIS_H_START_SHIFT)
#define CAM_RIS_V_START_SHIFT          6
#define CAM_RIS_V_START_FIELD          (0xFFFFFFFF - (0x1UL<<CAM_RIS_V_START_SHIFT))
#define CAM_RIS_V_START_0              (0x0UL<<CAM_RIS_V_START_SHIFT)
#define CAM_RIS_V_START_1              (0x1UL<<CAM_RIS_V_START_SHIFT)
#define CAM_RIS_V_START                (0x1UL<<CAM_RIS_V_START_SHIFT)
#define CAM_RIS_IN_FRAME_END_SHIFT     5
#define CAM_RIS_IN_FRAME_END_FIELD     (0xFFFFFFFF - (0x1UL<<CAM_RIS_IN_FRAME_END_SHIFT))
#define CAM_RIS_IN_FRAME_END_0         (0x0UL<<CAM_RIS_IN_FRAME_END_SHIFT)
#define CAM_RIS_IN_FRAME_END_1         (0x1UL<<CAM_RIS_IN_FRAME_END_SHIFT)
#define CAM_RIS_IN_FRAME_END           (0x1UL<<CAM_RIS_IN_FRAME_END_SHIFT)
#define CAM_RIS_AWB_DONE_SHIFT         4
#define CAM_RIS_AWB_DONE_FIELD         (0xFFFFFFFF - (0x1UL<<CAM_RIS_AWB_DONE_SHIFT))
#define CAM_RIS_AWB_DONE_0             (0x0UL<<CAM_RIS_AWB_DONE_SHIFT)
#define CAM_RIS_AWB_DONE_1             (0x1UL<<CAM_RIS_AWB_DONE_SHIFT)
#define CAM_RIS_AWB_DONE               (0x1UL<<CAM_RIS_AWB_DONE_SHIFT)
#define CAM_RIS_PIC_ERR_SHIFT          3
#define CAM_RIS_PIC_ERR_FIELD          (0xFFFFFFFF - (0x1UL<<CAM_RIS_PIC_ERR_SHIFT))
#define CAM_RIS_PIC_ERR_0              (0x0UL<<CAM_RIS_PIC_ERR_SHIFT)
#define CAM_RIS_PIC_ERR_1              (0x1UL<<CAM_RIS_PIC_ERR_SHIFT)
#define CAM_RIS_PIC_ERR                (0x1UL<<CAM_RIS_PIC_ERR_SHIFT)
#define CAM_RIS_DATA_LOSS_SHIFT        2
#define CAM_RIS_DATA_LOSS_FIELD        (0xFFFFFFFF - (0x1UL<<CAM_RIS_DATA_LOSS_SHIFT))
#define CAM_RIS_DATA_LOSS_0            (0x0UL<<CAM_RIS_DATA_LOSS_SHIFT)
#define CAM_RIS_DATA_LOSS_1            (0x1UL<<CAM_RIS_DATA_LOSS_SHIFT)
#define CAM_RIS_DATA_LOSS              (0x1UL<<CAM_RIS_DATA_LOSS_SHIFT)
#define CAM_RIS_OUT_FRAME_END_SHIFT    1
#define CAM_RIS_OUT_FRAME_END_FIELD    (0xFFFFFFFF - (0x1UL<<CAM_RIS_OUT_FRAME_END_SHIFT))
#define CAM_RIS_OUT_FRAME_END_0        (0x0UL<<CAM_RIS_OUT_FRAME_END_SHIFT)
#define CAM_RIS_OUT_FRAME_END_1        (0x1UL<<CAM_RIS_OUT_FRAME_END_SHIFT)
#define CAM_RIS_OUT_FRAME_END          (0x1UL<<CAM_RIS_OUT_FRAME_END_SHIFT)
#define CAM_RIS_ISP_OFF_SHIFT          0
#define CAM_RIS_ISP_OFF_FIELD          (0xFFFFFFFF - (0x1UL<<CAM_RIS_ISP_OFF_SHIFT))
#define CAM_RIS_ISP_OFF_0              (0x0UL<<CAM_RIS_ISP_OFF_SHIFT)
#define CAM_RIS_ISP_OFF_1              (0x1UL<<CAM_RIS_ISP_OFF_SHIFT)
#define CAM_RIS_ISP_OFF                (0x1UL<<CAM_RIS_ISP_OFF_SHIFT)

/*****************************************************************************/
/* Register description for ISP_MIS */

/* Reset value of register CAM_ISP_MIS */
#define CAM_ISP_MIS_VALUE              0x0

/* Bits definition for register CAM_ISP_MIS */
#define CAM_MIS_EXP_END_SHIFT          18
#define CAM_MIS_EXP_END_FIELD          (0xFFFFFFFF - (0x1UL<<CAM_MIS_EXP_END_SHIFT))
#define CAM_MIS_EXP_END_0              (0x0UL<<CAM_MIS_EXP_END_SHIFT)
#define CAM_MIS_EXP_END_1              (0x1UL<<CAM_MIS_EXP_END_SHIFT)
#define CAM_MIS_EXP_END                (0x1UL<<CAM_MIS_EXP_END_SHIFT)
#define CAM_MIS_FLASH_CAP_SHIFT        17
#define CAM_MIS_FLASH_CAP_FIELD        (0xFFFFFFFF - (0x1UL<<CAM_MIS_FLASH_CAP_SHIFT))
#define CAM_MIS_FLASH_CAP_0            (0x0UL<<CAM_MIS_FLASH_CAP_SHIFT)
#define CAM_MIS_FLASH_CAP_1            (0x1UL<<CAM_MIS_FLASH_CAP_SHIFT)
#define CAM_MIS_FLASH_CAP              (0x1UL<<CAM_MIS_FLASH_CAP_SHIFT)
#define CAM_MIS_BP_DET_SHIFT           16
#define CAM_MIS_BP_DET_FIELD           (0xFFFFFFFF - (0x1UL<<CAM_MIS_BP_DET_SHIFT))
#define CAM_MIS_BP_DET_0               (0x0UL<<CAM_MIS_BP_DET_SHIFT)
#define CAM_MIS_BP_DET_1               (0x1UL<<CAM_MIS_BP_DET_SHIFT)
#define CAM_MIS_BP_DET                 (0x1UL<<CAM_MIS_BP_DET_SHIFT)
#define CAM_MIS_BP_NEW_TABLE_FUL_SHIFT 15
#define CAM_MIS_BP_NEW_TABLE_FUL_FIELD (0xFFFFFFFF - (0x1UL<<CAM_MIS_BP_NEW_TABLE_FUL_SHIFT))
#define CAM_MIS_BP_NEW_TABLE_FUL_0     (0x0UL<<CAM_MIS_BP_NEW_TABLE_FUL_SHIFT)
#define CAM_MIS_BP_NEW_TABLE_FUL_1     (0x1UL<<CAM_MIS_BP_NEW_TABLE_FUL_SHIFT)
#define CAM_MIS_BP_NEW_TABLE_FUL       (0x1UL<<CAM_MIS_BP_NEW_TABLE_FUL_SHIFT)
#define CAM_MIS_AFM_FIN_SHIFT          14
#define CAM_MIS_AFM_FIN_FIELD          (0xFFFFFFFF - (0x1UL<<CAM_MIS_AFM_FIN_SHIFT))
#define CAM_MIS_AFM_FIN_0              (0x0UL<<CAM_MIS_AFM_FIN_SHIFT)
#define CAM_MIS_AFM_FIN_1              (0x1UL<<CAM_MIS_AFM_FIN_SHIFT)
#define CAM_MIS_AFM_FIN                (0x1UL<<CAM_MIS_AFM_FIN_SHIFT)
#define CAM_MIS_AFM_LUM_OF_SHIFT       13
#define CAM_MIS_AFM_LUM_OF_FIELD       (0xFFFFFFFF - (0x1UL<<CAM_MIS_AFM_LUM_OF_SHIFT))
#define CAM_MIS_AFM_LUM_OF_0           (0x0UL<<CAM_MIS_AFM_LUM_OF_SHIFT)
#define CAM_MIS_AFM_LUM_OF_1           (0x1UL<<CAM_MIS_AFM_LUM_OF_SHIFT)
#define CAM_MIS_AFM_LUM_OF             (0x1UL<<CAM_MIS_AFM_LUM_OF_SHIFT)
#define CAM_MIS_AFM_SUM_OF_SHIFT       12
#define CAM_MIS_AFM_SUM_OF_FIELD       (0xFFFFFFFF - (0x1UL<<CAM_MIS_AFM_SUM_OF_SHIFT))
#define CAM_MIS_AFM_SUM_OF_0           (0x0UL<<CAM_MIS_AFM_SUM_OF_SHIFT)
#define CAM_MIS_AFM_SUM_OF_1           (0x1UL<<CAM_MIS_AFM_SUM_OF_SHIFT)
#define CAM_MIS_AFM_SUM_OF             (0x1UL<<CAM_MIS_AFM_SUM_OF_SHIFT)
#define CAM_MIS_FLASH_OFF_SHIFT        9
#define CAM_MIS_FLASH_OFF_FIELD        (0xFFFFFFFF - (0x1UL<<CAM_MIS_FLASH_OFF_SHIFT))
#define CAM_MIS_FLASH_OFF_0            (0x0UL<<CAM_MIS_FLASH_OFF_SHIFT)
#define CAM_MIS_FLASH_OFF_1            (0x1UL<<CAM_MIS_FLASH_OFF_SHIFT)
#define CAM_MIS_FLASH_OFF              (0x1UL<<CAM_MIS_FLASH_OFF_SHIFT)
#define CAM_MIS_FLASH_ON_SHIFT         8
#define CAM_MIS_FLASH_ON_FIELD         (0xFFFFFFFF - (0x1UL<<CAM_MIS_FLASH_ON_SHIFT))
#define CAM_MIS_FLASH_ON_0             (0x0UL<<CAM_MIS_FLASH_ON_SHIFT)
#define CAM_MIS_FLASH_ON_1             (0x1UL<<CAM_MIS_FLASH_ON_SHIFT)
#define CAM_MIS_FLASH_ON               (0x1UL<<CAM_MIS_FLASH_ON_SHIFT)
#define CAM_MIS_H_START_SHIFT          7
#define CAM_MIS_H_START_FIELD          (0xFFFFFFFF - (0x1UL<<CAM_MIS_H_START_SHIFT))
#define CAM_MIS_H_START_0              (0x0UL<<CAM_MIS_H_START_SHIFT)
#define CAM_MIS_H_START_1              (0x1UL<<CAM_MIS_H_START_SHIFT)
#define CAM_MIS_H_START                (0x1UL<<CAM_MIS_H_START_SHIFT)
#define CAM_MIS_V_START_SHIFT          6
#define CAM_MIS_V_START_FIELD          (0xFFFFFFFF - (0x1UL<<CAM_MIS_V_START_SHIFT))
#define CAM_MIS_V_START_0              (0x0UL<<CAM_MIS_V_START_SHIFT)
#define CAM_MIS_V_START_1              (0x1UL<<CAM_MIS_V_START_SHIFT)
#define CAM_MIS_V_START                (0x1UL<<CAM_MIS_V_START_SHIFT)
#define CAM_MIS_IN_FRAME_END_SHIFT     5
#define CAM_MIS_IN_FRAME_END_FIELD     (0xFFFFFFFF - (0x1UL<<CAM_MIS_IN_FRAME_END_SHIFT))
#define CAM_MIS_IN_FRAME_END_0         (0x0UL<<CAM_MIS_IN_FRAME_END_SHIFT)
#define CAM_MIS_IN_FRAME_END_1         (0x1UL<<CAM_MIS_IN_FRAME_END_SHIFT)
#define CAM_MIS_IN_FRAME_END           (0x1UL<<CAM_MIS_IN_FRAME_END_SHIFT)
#define CAM_MIS_AWB_DONE_SHIFT         4
#define CAM_MIS_AWB_DONE_FIELD         (0xFFFFFFFF - (0x1UL<<CAM_MIS_AWB_DONE_SHIFT))
#define CAM_MIS_AWB_DONE_0             (0x0UL<<CAM_MIS_AWB_DONE_SHIFT)
#define CAM_MIS_AWB_DONE_1             (0x1UL<<CAM_MIS_AWB_DONE_SHIFT)
#define CAM_MIS_AWB_DONE               (0x1UL<<CAM_MIS_AWB_DONE_SHIFT)
#define CAM_MIS_PIC_ERR_SHIFT          3
#define CAM_MIS_PIC_ERR_FIELD          (0xFFFFFFFF - (0x1UL<<CAM_MIS_PIC_ERR_SHIFT))
#define CAM_MIS_PIC_ERR_0              (0x0UL<<CAM_MIS_PIC_ERR_SHIFT)
#define CAM_MIS_PIC_ERR_1              (0x1UL<<CAM_MIS_PIC_ERR_SHIFT)
#define CAM_MIS_PIC_ERR                (0x1UL<<CAM_MIS_PIC_ERR_SHIFT)
#define CAM_MIS_DATA_LOSS_SHIFT        2
#define CAM_MIS_DATA_LOSS_FIELD        (0xFFFFFFFF - (0x1UL<<CAM_MIS_DATA_LOSS_SHIFT))
#define CAM_MIS_DATA_LOSS_0            (0x0UL<<CAM_MIS_DATA_LOSS_SHIFT)
#define CAM_MIS_DATA_LOSS_1            (0x1UL<<CAM_MIS_DATA_LOSS_SHIFT)
#define CAM_MIS_DATA_LOSS              (0x1UL<<CAM_MIS_DATA_LOSS_SHIFT)
#define CAM_MIS_OUT_FRAME_END_SHIFT    1
#define CAM_MIS_OUT_FRAME_END_FIELD    (0xFFFFFFFF - (0x1UL<<CAM_MIS_OUT_FRAME_END_SHIFT))
#define CAM_MIS_OUT_FRAME_END_0        (0x0UL<<CAM_MIS_OUT_FRAME_END_SHIFT)
#define CAM_MIS_OUT_FRAME_END_1        (0x1UL<<CAM_MIS_OUT_FRAME_END_SHIFT)
#define CAM_MIS_OUT_FRAME_END          (0x1UL<<CAM_MIS_OUT_FRAME_END_SHIFT)
#define CAM_MIS_ISP_OFF_SHIFT          0
#define CAM_MIS_ISP_OFF_FIELD          (0xFFFFFFFF - (0x1UL<<CAM_MIS_ISP_OFF_SHIFT))
#define CAM_MIS_ISP_OFF_0              (0x0UL<<CAM_MIS_ISP_OFF_SHIFT)
#define CAM_MIS_ISP_OFF_1              (0x1UL<<CAM_MIS_ISP_OFF_SHIFT)
#define CAM_MIS_ISP_OFF                (0x1UL<<CAM_MIS_ISP_OFF_SHIFT)

/*****************************************************************************/
/* Register description for ISP_ICR */

/* Reset value of register CAM_ISP_ICR */
#define CAM_ISP_ICR_VALUE              0x0

/* Bits definition for register CAM_ISP_ICR */
#define CAM_ICR_EXP_END_SHIFT          18
#define CAM_ICR_EXP_END_FIELD          (0xFFFFFFFF - (0x1UL<<CAM_ICR_EXP_END_SHIFT))
#define CAM_ICR_EXP_END_0              (0x0UL<<CAM_ICR_EXP_END_SHIFT)
#define CAM_ICR_EXP_END_1              (0x1UL<<CAM_ICR_EXP_END_SHIFT)
#define CAM_ICR_EXP_END                (0x1UL<<CAM_ICR_EXP_END_SHIFT)
#define CAM_ICR_FLASH_CAP_SHIFT        17
#define CAM_ICR_FLASH_CAP_FIELD        (0xFFFFFFFF - (0x1UL<<CAM_ICR_FLASH_CAP_SHIFT))
#define CAM_ICR_FLASH_CAP_0            (0x0UL<<CAM_ICR_FLASH_CAP_SHIFT)
#define CAM_ICR_FLASH_CAP_1            (0x1UL<<CAM_ICR_FLASH_CAP_SHIFT)
#define CAM_ICR_FLASH_CAP              (0x1UL<<CAM_ICR_FLASH_CAP_SHIFT)
#define CAM_ICR_BP_DET_SHIFT           16
#define CAM_ICR_BP_DET_FIELD           (0xFFFFFFFF - (0x1UL<<CAM_ICR_BP_DET_SHIFT))
#define CAM_ICR_BP_DET_0               (0x0UL<<CAM_ICR_BP_DET_SHIFT)
#define CAM_ICR_BP_DET_1               (0x1UL<<CAM_ICR_BP_DET_SHIFT)
#define CAM_ICR_BP_DET                 (0x1UL<<CAM_ICR_BP_DET_SHIFT)
#define CAM_ICR_BP_NEW_TABLE_FUL_SHIFT 15
#define CAM_ICR_BP_NEW_TABLE_FUL_FIELD (0xFFFFFFFF - (0x1UL<<CAM_ICR_BP_NEW_TABLE_FUL_SHIFT))
#define CAM_ICR_BP_NEW_TABLE_FUL_0     (0x0UL<<CAM_ICR_BP_NEW_TABLE_FUL_SHIFT)
#define CAM_ICR_BP_NEW_TABLE_FUL_1     (0x1UL<<CAM_ICR_BP_NEW_TABLE_FUL_SHIFT)
#define CAM_ICR_BP_NEW_TABLE_FUL       (0x1UL<<CAM_ICR_BP_NEW_TABLE_FUL_SHIFT)
#define CAM_ICR_AFM_FIN_SHIFT          14
#define CAM_ICR_AFM_FIN_FIELD          (0xFFFFFFFF - (0x1UL<<CAM_ICR_AFM_FIN_SHIFT))
#define CAM_ICR_AFM_FIN_0              (0x0UL<<CAM_ICR_AFM_FIN_SHIFT)
#define CAM_ICR_AFM_FIN_1              (0x1UL<<CAM_ICR_AFM_FIN_SHIFT)
#define CAM_ICR_AFM_FIN                (0x1UL<<CAM_ICR_AFM_FIN_SHIFT)
#define CAM_ICR_AFM_LUM_OF_SHIFT       13
#define CAM_ICR_AFM_LUM_OF_FIELD       (0xFFFFFFFF - (0x1UL<<CAM_ICR_AFM_LUM_OF_SHIFT))
#define CAM_ICR_AFM_LUM_OF_0           (0x0UL<<CAM_ICR_AFM_LUM_OF_SHIFT)
#define CAM_ICR_AFM_LUM_OF_1           (0x1UL<<CAM_ICR_AFM_LUM_OF_SHIFT)
#define CAM_ICR_AFM_LUM_OF             (0x1UL<<CAM_ICR_AFM_LUM_OF_SHIFT)
#define CAM_ICR_AFM_SUM_OF_SHIFT       12
#define CAM_ICR_AFM_SUM_OF_FIELD       (0xFFFFFFFF - (0x1UL<<CAM_ICR_AFM_SUM_OF_SHIFT))
#define CAM_ICR_AFM_SUM_OF_0           (0x0UL<<CAM_ICR_AFM_SUM_OF_SHIFT)
#define CAM_ICR_AFM_SUM_OF_1           (0x1UL<<CAM_ICR_AFM_SUM_OF_SHIFT)
#define CAM_ICR_AFM_SUM_OF             (0x1UL<<CAM_ICR_AFM_SUM_OF_SHIFT)
#define CAM_ICR_FLASH_OFF_SHIFT        9
#define CAM_ICR_FLASH_OFF_FIELD        (0xFFFFFFFF - (0x1UL<<CAM_ICR_FLASH_OFF_SHIFT))
#define CAM_ICR_FLASH_OFF_0            (0x0UL<<CAM_ICR_FLASH_OFF_SHIFT)
#define CAM_ICR_FLASH_OFF_1            (0x1UL<<CAM_ICR_FLASH_OFF_SHIFT)
#define CAM_ICR_FLASH_OFF              (0x1UL<<CAM_ICR_FLASH_OFF_SHIFT)
#define CAM_ICR_FLASH_ON_SHIFT         8
#define CAM_ICR_FLASH_ON_FIELD         (0xFFFFFFFF - (0x1UL<<CAM_ICR_FLASH_ON_SHIFT))
#define CAM_ICR_FLASH_ON_0             (0x0UL<<CAM_ICR_FLASH_ON_SHIFT)
#define CAM_ICR_FLASH_ON_1             (0x1UL<<CAM_ICR_FLASH_ON_SHIFT)
#define CAM_ICR_FLASH_ON               (0x1UL<<CAM_ICR_FLASH_ON_SHIFT)
#define CAM_ICR_H_START_SHIFT          7
#define CAM_ICR_H_START_FIELD          (0xFFFFFFFF - (0x1UL<<CAM_ICR_H_START_SHIFT))
#define CAM_ICR_H_START_0              (0x0UL<<CAM_ICR_H_START_SHIFT)
#define CAM_ICR_H_START_1              (0x1UL<<CAM_ICR_H_START_SHIFT)
#define CAM_ICR_H_START                (0x1UL<<CAM_ICR_H_START_SHIFT)
#define CAM_ICR_V_START_SHIFT          6
#define CAM_ICR_V_START_FIELD          (0xFFFFFFFF - (0x1UL<<CAM_ICR_V_START_SHIFT))
#define CAM_ICR_V_START_0              (0x0UL<<CAM_ICR_V_START_SHIFT)
#define CAM_ICR_V_START_1              (0x1UL<<CAM_ICR_V_START_SHIFT)
#define CAM_ICR_V_START                (0x1UL<<CAM_ICR_V_START_SHIFT)
#define CAM_ICR_IN_FRAME_END_SHIFT     5
#define CAM_ICR_IN_FRAME_END_FIELD     (0xFFFFFFFF - (0x1UL<<CAM_ICR_IN_FRAME_END_SHIFT))
#define CAM_ICR_IN_FRAME_END_0         (0x0UL<<CAM_ICR_IN_FRAME_END_SHIFT)
#define CAM_ICR_IN_FRAME_END_1         (0x1UL<<CAM_ICR_IN_FRAME_END_SHIFT)
#define CAM_ICR_IN_FRAME_END           (0x1UL<<CAM_ICR_IN_FRAME_END_SHIFT)
#define CAM_ICR_AWB_DONE_SHIFT         4
#define CAM_ICR_AWB_DONE_FIELD         (0xFFFFFFFF - (0x1UL<<CAM_ICR_AWB_DONE_SHIFT))
#define CAM_ICR_AWB_DONE_0             (0x0UL<<CAM_ICR_AWB_DONE_SHIFT)
#define CAM_ICR_AWB_DONE_1             (0x1UL<<CAM_ICR_AWB_DONE_SHIFT)
#define CAM_ICR_AWB_DONE               (0x1UL<<CAM_ICR_AWB_DONE_SHIFT)
#define CAM_ICR_PIC_ERR_SHIFT          3
#define CAM_ICR_PIC_ERR_FIELD          (0xFFFFFFFF - (0x1UL<<CAM_ICR_PIC_ERR_SHIFT))
#define CAM_ICR_PIC_ERR_0              (0x0UL<<CAM_ICR_PIC_ERR_SHIFT)
#define CAM_ICR_PIC_ERR_1              (0x1UL<<CAM_ICR_PIC_ERR_SHIFT)
#define CAM_ICR_PIC_ERR                (0x1UL<<CAM_ICR_PIC_ERR_SHIFT)
#define CAM_ICR_DATA_LOSS_SHIFT        2
#define CAM_ICR_DATA_LOSS_FIELD        (0xFFFFFFFF - (0x1UL<<CAM_ICR_DATA_LOSS_SHIFT))
#define CAM_ICR_DATA_LOSS_0            (0x0UL<<CAM_ICR_DATA_LOSS_SHIFT)
#define CAM_ICR_DATA_LOSS_1            (0x1UL<<CAM_ICR_DATA_LOSS_SHIFT)
#define CAM_ICR_DATA_LOSS              (0x1UL<<CAM_ICR_DATA_LOSS_SHIFT)
#define CAM_ICR_OUT_FRAME_END_SHIFT    1
#define CAM_ICR_OUT_FRAME_END_FIELD    (0xFFFFFFFF - (0x1UL<<CAM_ICR_OUT_FRAME_END_SHIFT))
#define CAM_ICR_OUT_FRAME_END_0        (0x0UL<<CAM_ICR_OUT_FRAME_END_SHIFT)
#define CAM_ICR_OUT_FRAME_END_1        (0x1UL<<CAM_ICR_OUT_FRAME_END_SHIFT)
#define CAM_ICR_OUT_FRAME_END          (0x1UL<<CAM_ICR_OUT_FRAME_END_SHIFT)
#define CAM_ICR_ISP_OFF_SHIFT          0
#define CAM_ICR_ISP_OFF_FIELD          (0xFFFFFFFF - (0x1UL<<CAM_ICR_ISP_OFF_SHIFT))
#define CAM_ICR_ISP_OFF_0              (0x0UL<<CAM_ICR_ISP_OFF_SHIFT)
#define CAM_ICR_ISP_OFF_1              (0x1UL<<CAM_ICR_ISP_OFF_SHIFT)
#define CAM_ICR_ISP_OFF                (0x1UL<<CAM_ICR_ISP_OFF_SHIFT)

/*****************************************************************************/
/* Register description for ISP_ISR */

/* Reset value of register CAM_ISP_ISR */
#define CAM_ISP_ISR_VALUE              0x0

/* Bits definition for register CAM_ISP_ISR */
#define CAM_ISR_EXP_END_SHIFT          18
#define CAM_ISR_EXP_END_FIELD          (0xFFFFFFFF - (0x1UL<<CAM_ISR_EXP_END_SHIFT))
#define CAM_ISR_EXP_END_0              (0x0UL<<CAM_ISR_EXP_END_SHIFT)
#define CAM_ISR_EXP_END_1              (0x1UL<<CAM_ISR_EXP_END_SHIFT)
#define CAM_ISR_EXP_END                (0x1UL<<CAM_ISR_EXP_END_SHIFT)
#define CAM_ISR_FLASH_CAP_SHIFT        17
#define CAM_ISR_FLASH_CAP_FIELD        (0xFFFFFFFF - (0x1UL<<CAM_ISR_FLASH_CAP_SHIFT))
#define CAM_ISR_FLASH_CAP_0            (0x0UL<<CAM_ISR_FLASH_CAP_SHIFT)
#define CAM_ISR_FLASH_CAP_1            (0x1UL<<CAM_ISR_FLASH_CAP_SHIFT)
#define CAM_ISR_FLASH_CAP              (0x1UL<<CAM_ISR_FLASH_CAP_SHIFT)
#define CAM_ISR_BP_DET_SHIFT           16
#define CAM_ISR_BP_DET_FIELD           (0xFFFFFFFF - (0x1UL<<CAM_ISR_BP_DET_SHIFT))
#define CAM_ISR_BP_DET_0               (0x0UL<<CAM_ISR_BP_DET_SHIFT)
#define CAM_ISR_BP_DET_1               (0x1UL<<CAM_ISR_BP_DET_SHIFT)
#define CAM_ISR_BP_DET                 (0x1UL<<CAM_ISR_BP_DET_SHIFT)
#define CAM_ISR_BP_NEW_TABLE_FUL_SHIFT 15
#define CAM_ISR_BP_NEW_TABLE_FUL_FIELD (0xFFFFFFFF - (0x1UL<<CAM_ISR_BP_NEW_TABLE_FUL_SHIFT))
#define CAM_ISR_BP_NEW_TABLE_FUL_0     (0x0UL<<CAM_ISR_BP_NEW_TABLE_FUL_SHIFT)
#define CAM_ISR_BP_NEW_TABLE_FUL_1     (0x1UL<<CAM_ISR_BP_NEW_TABLE_FUL_SHIFT)
#define CAM_ISR_BP_NEW_TABLE_FUL       (0x1UL<<CAM_ISR_BP_NEW_TABLE_FUL_SHIFT)
#define CAM_ISR_AFM_FIN_SHIFT          14
#define CAM_ISR_AFM_FIN_FIELD          (0xFFFFFFFF - (0x1UL<<CAM_ISR_AFM_FIN_SHIFT))
#define CAM_ISR_AFM_FIN_0              (0x0UL<<CAM_ISR_AFM_FIN_SHIFT)
#define CAM_ISR_AFM_FIN_1              (0x1UL<<CAM_ISR_AFM_FIN_SHIFT)
#define CAM_ISR_AFM_FIN                (0x1UL<<CAM_ISR_AFM_FIN_SHIFT)
#define CAM_ISR_AFM_LUM_OF_SHIFT       13
#define CAM_ISR_AFM_LUM_OF_FIELD       (0xFFFFFFFF - (0x1UL<<CAM_ISR_AFM_LUM_OF_SHIFT))
#define CAM_ISR_AFM_LUM_OF_0           (0x0UL<<CAM_ISR_AFM_LUM_OF_SHIFT)
#define CAM_ISR_AFM_LUM_OF_1           (0x1UL<<CAM_ISR_AFM_LUM_OF_SHIFT)
#define CAM_ISR_AFM_LUM_OF             (0x1UL<<CAM_ISR_AFM_LUM_OF_SHIFT)
#define CAM_ISR_AFM_SUM_OF_SHIFT       12
#define CAM_ISR_AFM_SUM_OF_FIELD       (0xFFFFFFFF - (0x1UL<<CAM_ISR_AFM_SUM_OF_SHIFT))
#define CAM_ISR_AFM_SUM_OF_0           (0x0UL<<CAM_ISR_AFM_SUM_OF_SHIFT)
#define CAM_ISR_AFM_SUM_OF_1           (0x1UL<<CAM_ISR_AFM_SUM_OF_SHIFT)
#define CAM_ISR_AFM_SUM_OF             (0x1UL<<CAM_ISR_AFM_SUM_OF_SHIFT)
#define CAM_ISR_FLASH_OFF_SHIFT        9
#define CAM_ISR_FLASH_OFF_FIELD        (0xFFFFFFFF - (0x1UL<<CAM_ISR_FLASH_OFF_SHIFT))
#define CAM_ISR_FLASH_OFF_0            (0x0UL<<CAM_ISR_FLASH_OFF_SHIFT)
#define CAM_ISR_FLASH_OFF_1            (0x1UL<<CAM_ISR_FLASH_OFF_SHIFT)
#define CAM_ISR_FLASH_OFF              (0x1UL<<CAM_ISR_FLASH_OFF_SHIFT)
#define CAM_ISR_FLASH_ON_SHIFT         8
#define CAM_ISR_FLASH_ON_FIELD         (0xFFFFFFFF - (0x1UL<<CAM_ISR_FLASH_ON_SHIFT))
#define CAM_ISR_FLASH_ON_0             (0x0UL<<CAM_ISR_FLASH_ON_SHIFT)
#define CAM_ISR_FLASH_ON_1             (0x1UL<<CAM_ISR_FLASH_ON_SHIFT)
#define CAM_ISR_FLASH_ON               (0x1UL<<CAM_ISR_FLASH_ON_SHIFT)
#define CAM_ISR_H_START_SHIFT          7
#define CAM_ISR_H_START_FIELD          (0xFFFFFFFF - (0x1UL<<CAM_ISR_H_START_SHIFT))
#define CAM_ISR_H_START_0              (0x0UL<<CAM_ISR_H_START_SHIFT)
#define CAM_ISR_H_START_1              (0x1UL<<CAM_ISR_H_START_SHIFT)
#define CAM_ISR_H_START                (0x1UL<<CAM_ISR_H_START_SHIFT)
#define CAM_ISR_V_START_SHIFT          6
#define CAM_ISR_V_START_FIELD          (0xFFFFFFFF - (0x1UL<<CAM_ISR_V_START_SHIFT))
#define CAM_ISR_V_START_0              (0x0UL<<CAM_ISR_V_START_SHIFT)
#define CAM_ISR_V_START_1              (0x1UL<<CAM_ISR_V_START_SHIFT)
#define CAM_ISR_V_START                (0x1UL<<CAM_ISR_V_START_SHIFT)
#define CAM_ISR_IN_FRAME_END_SHIFT     5
#define CAM_ISR_IN_FRAME_END_FIELD     (0xFFFFFFFF - (0x1UL<<CAM_ISR_IN_FRAME_END_SHIFT))
#define CAM_ISR_IN_FRAME_END_0         (0x0UL<<CAM_ISR_IN_FRAME_END_SHIFT)
#define CAM_ISR_IN_FRAME_END_1         (0x1UL<<CAM_ISR_IN_FRAME_END_SHIFT)
#define CAM_ISR_IN_FRAME_END           (0x1UL<<CAM_ISR_IN_FRAME_END_SHIFT)
#define CAM_ISR_AWB_DONE_SHIFT         4
#define CAM_ISR_AWB_DONE_FIELD         (0xFFFFFFFF - (0x1UL<<CAM_ISR_AWB_DONE_SHIFT))
#define CAM_ISR_AWB_DONE_0             (0x0UL<<CAM_ISR_AWB_DONE_SHIFT)
#define CAM_ISR_AWB_DONE_1             (0x1UL<<CAM_ISR_AWB_DONE_SHIFT)
#define CAM_ISR_AWB_DONE               (0x1UL<<CAM_ISR_AWB_DONE_SHIFT)
#define CAM_ISR_PIC_ERR_SHIFT          3
#define CAM_ISR_PIC_ERR_FIELD          (0xFFFFFFFF - (0x1UL<<CAM_ISR_PIC_ERR_SHIFT))
#define CAM_ISR_PIC_ERR_0              (0x0UL<<CAM_ISR_PIC_ERR_SHIFT)
#define CAM_ISR_PIC_ERR_1              (0x1UL<<CAM_ISR_PIC_ERR_SHIFT)
#define CAM_ISR_PIC_ERR                (0x1UL<<CAM_ISR_PIC_ERR_SHIFT)
#define CAM_ISR_DATA_LOSS_SHIFT        2
#define CAM_ISR_DATA_LOSS_FIELD        (0xFFFFFFFF - (0x1UL<<CAM_ISR_DATA_LOSS_SHIFT))
#define CAM_ISR_DATA_LOSS_0            (0x0UL<<CAM_ISR_DATA_LOSS_SHIFT)
#define CAM_ISR_DATA_LOSS_1            (0x1UL<<CAM_ISR_DATA_LOSS_SHIFT)
#define CAM_ISR_DATA_LOSS              (0x1UL<<CAM_ISR_DATA_LOSS_SHIFT)
#define CAM_ISR_OUT_FRAME_END_SHIFT    1
#define CAM_ISR_OUT_FRAME_END_FIELD    (0xFFFFFFFF - (0x1UL<<CAM_ISR_OUT_FRAME_END_SHIFT))
#define CAM_ISR_OUT_FRAME_END_0        (0x0UL<<CAM_ISR_OUT_FRAME_END_SHIFT)
#define CAM_ISR_OUT_FRAME_END_1        (0x1UL<<CAM_ISR_OUT_FRAME_END_SHIFT)
#define CAM_ISR_OUT_FRAME_END          (0x1UL<<CAM_ISR_OUT_FRAME_END_SHIFT)
#define CAM_ISR_ISP_OFF_SHIFT          0
#define CAM_ISR_ISP_OFF_FIELD          (0xFFFFFFFF - (0x1UL<<CAM_ISR_ISP_OFF_SHIFT))
#define CAM_ISR_ISP_OFF_0              (0x0UL<<CAM_ISR_ISP_OFF_SHIFT)
#define CAM_ISR_ISP_OFF_1              (0x1UL<<CAM_ISR_ISP_OFF_SHIFT)
#define CAM_ISR_ISP_OFF                (0x1UL<<CAM_ISR_ISP_OFF_SHIFT)

/*****************************************************************************/
/* Register description for ISP_CT_COEFF0 */

/* Reset value of register CAM_ISP_CT_COEFF0 */
#define CAM_ISP_CT_COEFF0_VALUE        0x80

/* Bits definition for register CAM_ISP_CT_COEFF0 */
#define CAM_CT_COEFF_0_SHIFT           0
#define CAM_CT_COEFF_0_FIELD           (0xFFFFFFFF - (0x7FFUL<<CAM_CT_COEFF_0_SHIFT))
#define CAM_CT_COEFF_0_80              (0x80UL<<CAM_CT_COEFF_0_SHIFT)

/*****************************************************************************/
/* Register description for ISP_CT_COEFF1 */

/* Reset value of register CAM_ISP_CT_COEFF1 */
#define CAM_ISP_CT_COEFF1_VALUE        0x0

/* Bits definition for register CAM_ISP_CT_COEFF1 */
#define CAM_CT_COEFF_1_SHIFT           0
#define CAM_CT_COEFF_1_FIELD           (0xFFFFFFFF - (0x7FFUL<<CAM_CT_COEFF_1_SHIFT))
#define CAM_CT_COEFF_1_0               (0x0UL<<CAM_CT_COEFF_1_SHIFT)

/*****************************************************************************/
/* Register description for ISP_CT_COEFF2 */

/* Reset value of register CAM_ISP_CT_COEFF2 */
#define CAM_ISP_CT_COEFF2_VALUE        0x0

/* Bits definition for register CAM_ISP_CT_COEFF2 */
#define CAM_CT_COEFF_2_SHIFT           0
#define CAM_CT_COEFF_2_FIELD           (0xFFFFFFFF - (0x7FFUL<<CAM_CT_COEFF_2_SHIFT))
#define CAM_CT_COEFF_2_0               (0x0UL<<CAM_CT_COEFF_2_SHIFT)

/*****************************************************************************/
/* Register description for ISP_CT_COEFF3 */

/* Reset value of register CAM_ISP_CT_COEFF3 */
#define CAM_ISP_CT_COEFF3_VALUE        0x0

/* Bits definition for register CAM_ISP_CT_COEFF3 */
#define CAM_CT_COEFF_3_SHIFT           0
#define CAM_CT_COEFF_3_FIELD           (0xFFFFFFFF - (0x7FFUL<<CAM_CT_COEFF_3_SHIFT))
#define CAM_CT_COEFF_3_0               (0x0UL<<CAM_CT_COEFF_3_SHIFT)

/*****************************************************************************/
/* Register description for ISP_CT_COEFF4 */

/* Reset value of register CAM_ISP_CT_COEFF4 */
#define CAM_ISP_CT_COEFF4_VALUE        0x80

/* Bits definition for register CAM_ISP_CT_COEFF4 */
#define CAM_CT_COEFF_4_SHIFT           0
#define CAM_CT_COEFF_4_FIELD           (0xFFFFFFFF - (0x7FFUL<<CAM_CT_COEFF_4_SHIFT))
#define CAM_CT_COEFF_4_80              (0x80UL<<CAM_CT_COEFF_4_SHIFT)

/*****************************************************************************/
/* Register description for ISP_CT_COEFF5 */

/* Reset value of register CAM_ISP_CT_COEFF5 */
#define CAM_ISP_CT_COEFF5_VALUE        0x0

/* Bits definition for register CAM_ISP_CT_COEFF5 */
#define CAM_CT_COEFF_5_SHIFT           0
#define CAM_CT_COEFF_5_FIELD           (0xFFFFFFFF - (0x7FFUL<<CAM_CT_COEFF_5_SHIFT))
#define CAM_CT_COEFF_5_0               (0x0UL<<CAM_CT_COEFF_5_SHIFT)

/*****************************************************************************/
/* Register description for ISP_CT_COEFF6 */

/* Reset value of register CAM_ISP_CT_COEFF6 */
#define CAM_ISP_CT_COEFF6_VALUE        0x0

/* Bits definition for register CAM_ISP_CT_COEFF6 */
#define CAM_CT_COEFF_6_SHIFT           0
#define CAM_CT_COEFF_6_FIELD           (0xFFFFFFFF - (0x7FFUL<<CAM_CT_COEFF_6_SHIFT))
#define CAM_CT_COEFF_6_0               (0x0UL<<CAM_CT_COEFF_6_SHIFT)

/*****************************************************************************/
/* Register description for ISP_CT_COEFF7 */

/* Reset value of register CAM_ISP_CT_COEFF7 */
#define CAM_ISP_CT_COEFF7_VALUE        0x0

/* Bits definition for register CAM_ISP_CT_COEFF7 */
#define CAM_CT_COEFF_7_SHIFT           0
#define CAM_CT_COEFF_7_FIELD           (0xFFFFFFFF - (0x7FFUL<<CAM_CT_COEFF_7_SHIFT))
#define CAM_CT_COEFF_7_0               (0x0UL<<CAM_CT_COEFF_7_SHIFT)

/*****************************************************************************/
/* Register description for ISP_CT_COEFF8 */

/* Reset value of register CAM_ISP_CT_COEFF8 */
#define CAM_ISP_CT_COEFF8_VALUE        0x80

/* Bits definition for register CAM_ISP_CT_COEFF8 */
#define CAM_CT_COEFF_8_SHIFT           0
#define CAM_CT_COEFF_8_FIELD           (0xFFFFFFFF - (0x7FFUL<<CAM_CT_COEFF_8_SHIFT))
#define CAM_CT_COEFF_8_80              (0x80UL<<CAM_CT_COEFF_8_SHIFT)

/*****************************************************************************/
/* Register description for ISP_GAMMA_OUT_MODE */

/* Reset value of register CAM_ISP_GAMMA_OUT_MODE */
#define CAM_ISP_GAMMA_OUT_MODE_VALUE   0x0

/* Bits definition for register CAM_ISP_GAMMA_OUT_MODE */
#define CAM_EQU_SEGM_SHIFT             0
#define CAM_EQU_SEGM_FIELD             (0xFFFFFFFF - (0x1UL<<CAM_EQU_SEGM_SHIFT))
#define CAM_EQU_SEGM_0                 (0x0UL<<CAM_EQU_SEGM_SHIFT)
#define CAM_EQU_SEGM_1                 (0x1UL<<CAM_EQU_SEGM_SHIFT)
#define CAM_EQU_SEGM                   (0x1UL<<CAM_EQU_SEGM_SHIFT)

/*****************************************************************************/
/* Register description for ISP_GAMMA_OUT_Y0 */

/* Reset value of register CAM_ISP_GAMMA_OUT_Y0 */
#define CAM_ISP_GAMMA_OUT_Y0_VALUE     0x0

/* Bits definition for register CAM_ISP_GAMMA_OUT_Y0 */
#define CAM_GAMMA_OUT_Y_0_SHIFT        0
#define CAM_GAMMA_OUT_Y_0_FIELD        (0xFFFFFFFF - (0x3FFUL<<CAM_GAMMA_OUT_Y_0_SHIFT))
#define CAM_GAMMA_OUT_Y_0_0            (0x0UL<<CAM_GAMMA_OUT_Y_0_SHIFT)

/*****************************************************************************/
/* Register description for ISP_GAMMA_OUT_Y1 */

/* Reset value of register CAM_ISP_GAMMA_OUT_Y1 */
#define CAM_ISP_GAMMA_OUT_Y1_VALUE     0x49

/* Bits definition for register CAM_ISP_GAMMA_OUT_Y1 */
#define CAM_GAMMA_OUT_Y_1_SHIFT        0
#define CAM_GAMMA_OUT_Y_1_FIELD        (0xFFFFFFFF - (0x3FFUL<<CAM_GAMMA_OUT_Y_1_SHIFT))
#define CAM_GAMMA_OUT_Y_1_49           (0x49UL<<CAM_GAMMA_OUT_Y_1_SHIFT)

/*****************************************************************************/
/* Register description for ISP_GAMMA_OUT_Y2 */

/* Reset value of register CAM_ISP_GAMMA_OUT_Y2 */
#define CAM_ISP_GAMMA_OUT_Y2_VALUE     0x89

/* Bits definition for register CAM_ISP_GAMMA_OUT_Y2 */
#define CAM_GAMMA_OUT_Y_2_SHIFT        0
#define CAM_GAMMA_OUT_Y_2_FIELD        (0xFFFFFFFF - (0x3FFUL<<CAM_GAMMA_OUT_Y_2_SHIFT))
#define CAM_GAMMA_OUT_Y_2_89           (0x89UL<<CAM_GAMMA_OUT_Y_2_SHIFT)

/*****************************************************************************/
/* Register description for ISP_GAMMA_OUT_Y3 */

/* Reset value of register CAM_ISP_GAMMA_OUT_Y3 */
#define CAM_ISP_GAMMA_OUT_Y3_VALUE     0xB7

/* Bits definition for register CAM_ISP_GAMMA_OUT_Y3 */
#define CAM_GAMMA_OUT_Y_3_SHIFT        0
#define CAM_GAMMA_OUT_Y_3_FIELD        (0xFFFFFFFF - (0x3FFUL<<CAM_GAMMA_OUT_Y_3_SHIFT))
#define CAM_GAMMA_OUT_Y_3_B7           (0xB7UL<<CAM_GAMMA_OUT_Y_3_SHIFT)

/*****************************************************************************/
/* Register description for ISP_GAMMA_OUT_Y4 */

/* Reset value of register CAM_ISP_GAMMA_OUT_Y4 */
#define CAM_ISP_GAMMA_OUT_Y4_VALUE     0xDF

/* Bits definition for register CAM_ISP_GAMMA_OUT_Y4 */
#define CAM_GAMMA_OUT_Y_4_SHIFT        0
#define CAM_GAMMA_OUT_Y_4_FIELD        (0xFFFFFFFF - (0x3FFUL<<CAM_GAMMA_OUT_Y_4_SHIFT))
#define CAM_GAMMA_OUT_Y_4_DF           (0xDFUL<<CAM_GAMMA_OUT_Y_4_SHIFT)

/*****************************************************************************/
/* Register description for ISP_GAMMA_OUT_Y5 */

/* Reset value of register CAM_ISP_GAMMA_OUT_Y5 */
#define CAM_ISP_GAMMA_OUT_Y5_VALUE     0x11F

/* Bits definition for register CAM_ISP_GAMMA_OUT_Y5 */
#define CAM_GAMMA_OUT_Y_5_SHIFT        0
#define CAM_GAMMA_OUT_Y_5_FIELD        (0xFFFFFFFF - (0x3FFUL<<CAM_GAMMA_OUT_Y_5_SHIFT))
#define CAM_GAMMA_OUT_Y_5_11F          (0x11FUL<<CAM_GAMMA_OUT_Y_5_SHIFT)

/*****************************************************************************/
/* Register description for ISP_GAMMA_OUT_Y6 */

/* Reset value of register CAM_ISP_GAMMA_OUT_Y6 */
#define CAM_ISP_GAMMA_OUT_Y6_VALUE     0x154

/* Bits definition for register CAM_ISP_GAMMA_OUT_Y6 */
#define CAM_GAMMA_OUT_Y_6_SHIFT        0
#define CAM_GAMMA_OUT_Y_6_FIELD        (0xFFFFFFFF - (0x3FFUL<<CAM_GAMMA_OUT_Y_6_SHIFT))
#define CAM_GAMMA_OUT_Y_6_154          (0x154UL<<CAM_GAMMA_OUT_Y_6_SHIFT)

/*****************************************************************************/
/* Register description for ISP_GAMMA_OUT_Y7 */

/* Reset value of register CAM_ISP_GAMMA_OUT_Y7 */
#define CAM_ISP_GAMMA_OUT_Y7_VALUE     0x183

/* Bits definition for register CAM_ISP_GAMMA_OUT_Y7 */
#define CAM_GAMMA_OUT_Y_7_SHIFT        0
#define CAM_GAMMA_OUT_Y_7_FIELD        (0xFFFFFFFF - (0x3FFUL<<CAM_GAMMA_OUT_Y_7_SHIFT))
#define CAM_GAMMA_OUT_Y_7_183          (0x183UL<<CAM_GAMMA_OUT_Y_7_SHIFT)

/*****************************************************************************/
/* Register description for ISP_GAMMA_OUT_Y8 */

/* Reset value of register CAM_ISP_GAMMA_OUT_Y8 */
#define CAM_ISP_GAMMA_OUT_Y8_VALUE     0x1AD

/* Bits definition for register CAM_ISP_GAMMA_OUT_Y8 */
#define CAM_GAMMA_OUT_Y_80_SHIFT       0
#define CAM_GAMMA_OUT_Y_80_FIELD       (0xFFFFFFFF - (0x3FFUL<<CAM_GAMMA_OUT_Y_80_SHIFT))
#define CAM_GAMMA_OUT_Y_80_1AD         (0x1ADUL<<CAM_GAMMA_OUT_Y_80_SHIFT)

/*****************************************************************************/
/* Register description for ISP_GAMMA_OUT_Y9 */

/* Reset value of register CAM_ISP_GAMMA_OUT_Y9 */
#define CAM_ISP_GAMMA_OUT_Y9_VALUE     0x1F6

/* Bits definition for register CAM_ISP_GAMMA_OUT_Y9 */
#define CAM_GAMMA_OUT_Y_9_SHIFT        0
#define CAM_GAMMA_OUT_Y_9_FIELD        (0xFFFFFFFF - (0x3FFUL<<CAM_GAMMA_OUT_Y_9_SHIFT))
#define CAM_GAMMA_OUT_Y_9_1F6          (0x1F6UL<<CAM_GAMMA_OUT_Y_9_SHIFT)

/*****************************************************************************/
/* Register description for ISP_GAMMA_OUT_Y10 */

/* Reset value of register CAM_ISP_GAMMA_OUT_Y10 */
#define CAM_ISP_GAMMA_OUT_Y10_VALUE    0x235

/* Bits definition for register CAM_ISP_GAMMA_OUT_Y10 */
#define CAM_GAMMA_OUT_Y_10_SHIFT       0
#define CAM_GAMMA_OUT_Y_10_FIELD       (0xFFFFFFFF - (0x3FFUL<<CAM_GAMMA_OUT_Y_10_SHIFT))
#define CAM_GAMMA_OUT_Y_10_235         (0x235UL<<CAM_GAMMA_OUT_Y_10_SHIFT)

/*****************************************************************************/
/* Register description for ISP_GAMMA_OUT_Y11 */

/* Reset value of register CAM_ISP_GAMMA_OUT_Y11 */
#define CAM_ISP_GAMMA_OUT_Y11_VALUE    0x26F

/* Bits definition for register CAM_ISP_GAMMA_OUT_Y11 */
#define CAM_GAMMA_OUT_Y_11_SHIFT       0
#define CAM_GAMMA_OUT_Y_11_FIELD       (0xFFFFFFFF - (0x3FFUL<<CAM_GAMMA_OUT_Y_11_SHIFT))
#define CAM_GAMMA_OUT_Y_11_26F         (0x26FUL<<CAM_GAMMA_OUT_Y_11_SHIFT)

/*****************************************************************************/
/* Register description for ISP_GAMMA_OUT_Y12 */

/* Reset value of register CAM_ISP_GAMMA_OUT_Y12 */
#define CAM_ISP_GAMMA_OUT_Y12_VALUE    0x2D3

/* Bits definition for register CAM_ISP_GAMMA_OUT_Y12 */
#define CAM_GAMMA_OUT_Y_12_SHIFT       0
#define CAM_GAMMA_OUT_Y_12_FIELD       (0xFFFFFFFF - (0x3FFUL<<CAM_GAMMA_OUT_Y_12_SHIFT))
#define CAM_GAMMA_OUT_Y_12_2D3         (0x2D3UL<<CAM_GAMMA_OUT_Y_12_SHIFT)

/*****************************************************************************/
/* Register description for ISP_GAMMA_OUT_Y13 */

/* Reset value of register CAM_ISP_GAMMA_OUT_Y13 */
#define CAM_ISP_GAMMA_OUT_Y13_VALUE    0x32A

/* Bits definition for register CAM_ISP_GAMMA_OUT_Y13 */
#define CAM_GAMMA_OUT_Y_13_SHIFT       0
#define CAM_GAMMA_OUT_Y_13_FIELD       (0xFFFFFFFF - (0x3FFUL<<CAM_GAMMA_OUT_Y_13_SHIFT))
#define CAM_GAMMA_OUT_Y_13_32A         (0x32AUL<<CAM_GAMMA_OUT_Y_13_SHIFT)

/*****************************************************************************/
/* Register description for ISP_GAMMA_OUT_Y14 */

/* Reset value of register CAM_ISP_GAMMA_OUT_Y14 */
#define CAM_ISP_GAMMA_OUT_Y14_VALUE    0x378

/* Bits definition for register CAM_ISP_GAMMA_OUT_Y14 */
#define CAM_GAMMA_OUT_Y_14_SHIFT       0
#define CAM_GAMMA_OUT_Y_14_FIELD       (0xFFFFFFFF - (0x3FFUL<<CAM_GAMMA_OUT_Y_14_SHIFT))
#define CAM_GAMMA_OUT_Y_14_378         (0x378UL<<CAM_GAMMA_OUT_Y_14_SHIFT)

/*****************************************************************************/
/* Register description for ISP_GAMMA_OUT_Y15 */

/* Reset value of register CAM_ISP_GAMMA_OUT_Y15 */
#define CAM_ISP_GAMMA_OUT_Y15_VALUE    0x3BF

/* Bits definition for register CAM_ISP_GAMMA_OUT_Y15 */
#define CAM_GAMMA_OUT_Y_15_SHIFT       0
#define CAM_GAMMA_OUT_Y_15_FIELD       (0xFFFFFFFF - (0x3FFUL<<CAM_GAMMA_OUT_Y_15_SHIFT))
#define CAM_GAMMA_OUT_Y_15_3BF         (0x3BFUL<<CAM_GAMMA_OUT_Y_15_SHIFT)

/*****************************************************************************/
/* Register description for ISP_GAMMA_OUT_Y16 */

/* Reset value of register CAM_ISP_GAMMA_OUT_Y16 */
#define CAM_ISP_GAMMA_OUT_Y16_VALUE    0x3FF

/* Bits definition for register CAM_ISP_GAMMA_OUT_Y16 */
#define CAM_GAMMA_OUT_Y_16_SHIFT       0
#define CAM_GAMMA_OUT_Y_16_FIELD       (0xFFFFFFFF - (0x3FFUL<<CAM_GAMMA_OUT_Y_16_SHIFT))
#define CAM_GAMMA_OUT_Y_16_3FF         (0x3FFUL<<CAM_GAMMA_OUT_Y_16_SHIFT)

/*****************************************************************************/
/* Register description for ISP_ERR */

/* Reset value of register CAM_ISP_ERR */
#define CAM_ISP_ERR_VALUE              0x0

/* Bits definition for register CAM_ISP_ERR */
#define CAM_OUTFORM_SIZE_ERR_SHIFT     2
#define CAM_OUTFORM_SIZE_ERR_FIELD     (0xFFFFFFFF - (0x1UL<<CAM_OUTFORM_SIZE_ERR_SHIFT))
#define CAM_OUTFORM_SIZE_ERR_0         (0x0UL<<CAM_OUTFORM_SIZE_ERR_SHIFT)
#define CAM_OUTFORM_SIZE_ERR_1         (0x1UL<<CAM_OUTFORM_SIZE_ERR_SHIFT)
#define CAM_OUTFORM_SIZE_ERR           (0x1UL<<CAM_OUTFORM_SIZE_ERR_SHIFT)
#define CAM_IS_SIZE_ERR_ERR_SHIFT      1
#define CAM_IS_SIZE_ERR_ERR_FIELD      (0xFFFFFFFF - (0x1UL<<CAM_IS_SIZE_ERR_ERR_SHIFT))
#define CAM_IS_SIZE_ERR_ERR_0          (0x0UL<<CAM_IS_SIZE_ERR_ERR_SHIFT)
#define CAM_IS_SIZE_ERR_ERR_1          (0x1UL<<CAM_IS_SIZE_ERR_ERR_SHIFT)
#define CAM_IS_SIZE_ERR_ERR            (0x1UL<<CAM_IS_SIZE_ERR_ERR_SHIFT)
#define CAM_INFORM_SIZE_ERR_SHIFT      0
#define CAM_INFORM_SIZE_ERR_FIELD      (0xFFFFFFFF - (0x1UL<<CAM_INFORM_SIZE_ERR_SHIFT))
#define CAM_INFORM_SIZE_ERR_0          (0x0UL<<CAM_INFORM_SIZE_ERR_SHIFT)
#define CAM_INFORM_SIZE_ERR_1          (0x1UL<<CAM_INFORM_SIZE_ERR_SHIFT)
#define CAM_INFORM_SIZE_ERR            (0x1UL<<CAM_INFORM_SIZE_ERR_SHIFT)

/*****************************************************************************/
/* Register description for ISP_ERR_CLR */

/* Reset value of register CAM_ISP_ERR_CLR */
#define CAM_ISP_ERR_CLR_VALUE          0x0

/* Bits definition for register CAM_ISP_ERR_CLR */
#define CAM_OUTFORM_SIZE_ERR_CLR_SHIFT 2
#define CAM_OUTFORM_SIZE_ERR_CLR_FIELD (0xFFFFFFFF - (0x1UL<<CAM_OUTFORM_SIZE_ERR_CLR_SHIFT))
#define CAM_OUTFORM_SIZE_ERR_CLR_0     (0x0UL<<CAM_OUTFORM_SIZE_ERR_CLR_SHIFT)
#define CAM_OUTFORM_SIZE_ERR_CLR_1     (0x1UL<<CAM_OUTFORM_SIZE_ERR_CLR_SHIFT)
#define CAM_OUTFORM_SIZE_ERR_CLR       (0x1UL<<CAM_OUTFORM_SIZE_ERR_CLR_SHIFT)
#define CAM_IS_SIZE_ERR_ERR_CLR_SHIFT  1
#define CAM_IS_SIZE_ERR_ERR_CLR_FIELD  (0xFFFFFFFF - (0x1UL<<CAM_IS_SIZE_ERR_ERR_CLR_SHIFT))
#define CAM_IS_SIZE_ERR_ERR_CLR_0      (0x0UL<<CAM_IS_SIZE_ERR_ERR_CLR_SHIFT)
#define CAM_IS_SIZE_ERR_ERR_CLR_1      (0x1UL<<CAM_IS_SIZE_ERR_ERR_CLR_SHIFT)
#define CAM_IS_SIZE_ERR_ERR_CLR        (0x1UL<<CAM_IS_SIZE_ERR_ERR_CLR_SHIFT)
#define CAM_INFORM_SIZE_ERR_CLR_SHIFT  0
#define CAM_INFORM_SIZE_ERR_CLR_FIELD  (0xFFFFFFFF - (0x1UL<<CAM_INFORM_SIZE_ERR_CLR_SHIFT))
#define CAM_INFORM_SIZE_ERR_CLR_0      (0x0UL<<CAM_INFORM_SIZE_ERR_CLR_SHIFT)
#define CAM_INFORM_SIZE_ERR_CLR_1      (0x1UL<<CAM_INFORM_SIZE_ERR_CLR_SHIFT)
#define CAM_INFORM_SIZE_ERR_CLR        (0x1UL<<CAM_INFORM_SIZE_ERR_CLR_SHIFT)

/*****************************************************************************/
/* Register description for ISP_FRAME_COUNT */

/* Reset value of register CAM_ISP_FRAME_COUNT */
#define CAM_ISP_FRAME_COUNT_VALUE      0x0

/* Bits definition for register CAM_ISP_FRAME_COUNT */
#define CAM_FRAME_COUNT_SHIFT          0
#define CAM_FRAME_COUNT_FIELD          (0xFFFFFFFF - (0x3FFUL<<CAM_FRAME_COUNT_SHIFT))
#define CAM_FRAME_COUNT_0              (0x0UL<<CAM_FRAME_COUNT_SHIFT)

/*****************************************************************************/
/* Register description for ISP_CT_OFFSET_R */

/* Reset value of register CAM_ISP_CT_OFFSET_R */
#define CAM_ISP_CT_OFFSET_R_VALUE      0x0

/* Bits definition for register CAM_ISP_CT_OFFSET_R */
#define CAM_CT_OFFSET_R_SHIFT          0
#define CAM_CT_OFFSET_R_FIELD          (0xFFFFFFFF - (0xFFFUL<<CAM_CT_OFFSET_R_SHIFT))
#define CAM_CT_OFFSET_R_0              (0x0UL<<CAM_CT_OFFSET_R_SHIFT)

/*****************************************************************************/
/* Register description for ISP_CT_OFFSET_G */

/* Reset value of register CAM_ISP_CT_OFFSET_G */
#define CAM_ISP_CT_OFFSET_G_VALUE      0x0

/* Bits definition for register CAM_ISP_CT_OFFSET_G */
#define CAM_CT_OFFSET_G_SHIFT          0
#define CAM_CT_OFFSET_G_FIELD          (0xFFFFFFFF - (0xFFFUL<<CAM_CT_OFFSET_G_SHIFT))
#define CAM_CT_OFFSET_G_0              (0x0UL<<CAM_CT_OFFSET_G_SHIFT)

/*****************************************************************************/
/* Register description for ISP_CT_OFFSET_B */

/* Reset value of register CAM_ISP_CT_OFFSET_B */
#define CAM_ISP_CT_OFFSET_B_VALUE      0x0

/* Bits definition for register CAM_ISP_CT_OFFSET_B */
#define CAM_CT_OFFSET_B_SHIFT          0
#define CAM_CT_OFFSET_B_FIELD          (0xFFFFFFFF - (0xFFFUL<<CAM_CT_OFFSET_B_SHIFT))
#define CAM_CT_OFFSET_B_0              (0x0UL<<CAM_CT_OFFSET_B_SHIFT)

/*****************************************************************************/
/* Register description for ISP_FLASH_CMD */

/* Reset value of register CAM_ISP_FLASH_CMD */
#define CAM_ISP_FLASH_CMD_VALUE        0x0

/* Bits definition for register CAM_ISP_FLASH_CMD */
#define CAM_PREFLASH_ON_SHIFT          2
#define CAM_PREFLASH_ON_FIELD          (0xFFFFFFFF - (0x1UL<<CAM_PREFLASH_ON_SHIFT))
#define CAM_PREFLASH_ON_0              (0x0UL<<CAM_PREFLASH_ON_SHIFT)
#define CAM_PREFLASH_ON_1              (0x1UL<<CAM_PREFLASH_ON_SHIFT)
#define CAM_PREFLASH_ON                (0x1UL<<CAM_PREFLASH_ON_SHIFT)
#define CAM_FLASH_ON_SHIFT             1
#define CAM_FLASH_ON_FIELD             (0xFFFFFFFF - (0x1UL<<CAM_FLASH_ON_SHIFT))
#define CAM_FLASH_ON_0                 (0x0UL<<CAM_FLASH_ON_SHIFT)
#define CAM_FLASH_ON_1                 (0x1UL<<CAM_FLASH_ON_SHIFT)
#define CAM_FLASH_ON                   (0x1UL<<CAM_FLASH_ON_SHIFT)
#define CAM_PRELIGHT_ON_SHIFT          0
#define CAM_PRELIGHT_ON_FIELD          (0xFFFFFFFF - (0x1UL<<CAM_PRELIGHT_ON_SHIFT))
#define CAM_PRELIGHT_ON_0              (0x0UL<<CAM_PRELIGHT_ON_SHIFT)
#define CAM_PRELIGHT_ON_1              (0x1UL<<CAM_PRELIGHT_ON_SHIFT)
#define CAM_PRELIGHT_ON                (0x1UL<<CAM_PRELIGHT_ON_SHIFT)

/*****************************************************************************/
/* Register description for ISP_FLASH_CONFIG */

/* Reset value of register CAM_ISP_FLASH_CONFIG */
#define CAM_ISP_FLASH_CONFIG_VALUE     0x0

/* Bits definition for register CAM_ISP_FLASH_CONFIG */
#define CAM_FL_CAP_DEL_SHIFT           4
#define CAM_FL_CAP_DEL_FIELD           (0xFFFFFFFF - (0xFUL<<CAM_FL_CAP_DEL_SHIFT))
#define CAM_FL_CAP_DEL_0               (0x0UL<<CAM_FL_CAP_DEL_SHIFT)
#define CAM_FL_TRIG_SRC_SHIFT          3
#define CAM_FL_TRIG_SRC_FIELD          (0xFFFFFFFF - (0x1UL<<CAM_FL_TRIG_SRC_SHIFT))
#define CAM_FL_TRIG_SRC_0              (0x0UL<<CAM_FL_TRIG_SRC_SHIFT)
#define CAM_FL_TRIG_SRC_1              (0x1UL<<CAM_FL_TRIG_SRC_SHIFT)
#define CAM_FL_TRIG_SRC                (0x1UL<<CAM_FL_TRIG_SRC_SHIFT)
#define CAM_FL_POL_SHIFT               2
#define CAM_FL_POL_FIELD               (0xFFFFFFFF - (0x1UL<<CAM_FL_POL_SHIFT))
#define CAM_FL_POL_0                   (0x0UL<<CAM_FL_POL_SHIFT)
#define CAM_FL_POL_1                   (0x1UL<<CAM_FL_POL_SHIFT)
#define CAM_FL_POL                     (0x1UL<<CAM_FL_POL_SHIFT)
#define CAM_VS_IN_EDGE_SHIFT           1
#define CAM_VS_IN_EDGE_FIELD           (0xFFFFFFFF - (0x1UL<<CAM_VS_IN_EDGE_SHIFT))
#define CAM_VS_IN_EDGE_0               (0x0UL<<CAM_VS_IN_EDGE_SHIFT)
#define CAM_VS_IN_EDGE_1               (0x1UL<<CAM_VS_IN_EDGE_SHIFT)
#define CAM_VS_IN_EDGE                 (0x1UL<<CAM_VS_IN_EDGE_SHIFT)
#define CAM_PRELIGHT_MODE_SHIFT        0
#define CAM_PRELIGHT_MODE_FIELD        (0xFFFFFFFF - (0x1UL<<CAM_PRELIGHT_MODE_SHIFT))
#define CAM_PRELIGHT_MODE_0            (0x0UL<<CAM_PRELIGHT_MODE_SHIFT)
#define CAM_PRELIGHT_MODE_1            (0x1UL<<CAM_PRELIGHT_MODE_SHIFT)
#define CAM_PRELIGHT_MODE              (0x1UL<<CAM_PRELIGHT_MODE_SHIFT)

/*****************************************************************************/
/* Register description for ISP_FLASH_PREDIV */

/* Reset value of register CAM_ISP_FLASH_PREDIV */
#define CAM_ISP_FLASH_PREDIV_VALUE     0x0

/* Bits definition for register CAM_ISP_FLASH_PREDIV */
#define CAM_FL_PRE_DIV_SHIFT           0
#define CAM_FL_PRE_DIV_FIELD           (0xFFFFFFFF - (0x3FFUL<<CAM_FL_PRE_DIV_SHIFT))
#define CAM_FL_PRE_DIV_0               (0x0UL<<CAM_FL_PRE_DIV_SHIFT)

/*****************************************************************************/
/* Register description for ISP_FLASH_DELAY */

/* Reset value of register CAM_ISP_FLASH_DELAY */
#define CAM_ISP_FLASH_DELAY_VALUE      0x0

/* Bits definition for register CAM_ISP_FLASH_DELAY */
#define CAM_FL_DELAY_SHIFT             0
#define CAM_FL_DELAY_FIELD             (0xFFFFFFFF - (0x3FFFFUL<<CAM_FL_DELAY_SHIFT))
#define CAM_FL_DELAY_0                 (0x0UL<<CAM_FL_DELAY_SHIFT)

/*****************************************************************************/
/* Register description for ISP_FLASH_TIME */

/* Reset value of register CAM_ISP_FLASH_TIME */
#define CAM_ISP_FLASH_TIME_VALUE       0x0

/* Bits definition for register CAM_ISP_FLASH_TIME */
#define CAM_FL_TIME_SHIFT              0
#define CAM_FL_TIME_FIELD              (0xFFFFFFFF - (0x3FFFFUL<<CAM_FL_TIME_SHIFT))
#define CAM_FL_TIME_0                  (0x0UL<<CAM_FL_TIME_SHIFT)

/*****************************************************************************/
/* Register description for ISP_FLASH_MAXP */

/* Reset value of register CAM_ISP_FLASH_MAXP */
#define CAM_ISP_FLASH_MAXP_VALUE       0x0

/* Bits definition for register CAM_ISP_FLASH_MAXP */
#define CAM_FL_MAXP_SHIFT              0
#define CAM_FL_MAXP_FIELD              (0xFFFFFFFF - (0xFFFFUL<<CAM_FL_MAXP_SHIFT))
#define CAM_FL_MAXP_0                  (0x0UL<<CAM_FL_MAXP_SHIFT)

/*****************************************************************************/
/* Register description for C_PROC_CTRL */

/* Reset value of register CAM_C_PROC_CTRL */
#define CAM_C_PROC_CTRL_VALUE          0x0

/* Bits definition for register CAM_C_PROC_CTRL */
#define CAM_CPROC_C_OUT_RANGE_SHIFT    3
#define CAM_CPROC_C_OUT_RANGE_FIELD    (0xFFFFFFFF - (0x1UL<<CAM_CPROC_C_OUT_RANGE_SHIFT))
#define CAM_CPROC_C_OUT_RANGE_0        (0x0UL<<CAM_CPROC_C_OUT_RANGE_SHIFT)
#define CAM_CPROC_C_OUT_RANGE_1        (0x1UL<<CAM_CPROC_C_OUT_RANGE_SHIFT)
#define CAM_CPROC_C_OUT_RANGE          (0x1UL<<CAM_CPROC_C_OUT_RANGE_SHIFT)
#define CAM_CPROC_Y_IN_RANGE_SHIFT     2
#define CAM_CPROC_Y_IN_RANGE_FIELD     (0xFFFFFFFF - (0x1UL<<CAM_CPROC_Y_IN_RANGE_SHIFT))
#define CAM_CPROC_Y_IN_RANGE_0         (0x0UL<<CAM_CPROC_Y_IN_RANGE_SHIFT)
#define CAM_CPROC_Y_IN_RANGE_1         (0x1UL<<CAM_CPROC_Y_IN_RANGE_SHIFT)
#define CAM_CPROC_Y_IN_RANGE           (0x1UL<<CAM_CPROC_Y_IN_RANGE_SHIFT)
#define CAM_CPROC_Y_OUT_RANGE_SHIFT    1
#define CAM_CPROC_Y_OUT_RANGE_FIELD    (0xFFFFFFFF - (0x1UL<<CAM_CPROC_Y_OUT_RANGE_SHIFT))
#define CAM_CPROC_Y_OUT_RANGE_0        (0x0UL<<CAM_CPROC_Y_OUT_RANGE_SHIFT)
#define CAM_CPROC_Y_OUT_RANGE_1        (0x1UL<<CAM_CPROC_Y_OUT_RANGE_SHIFT)
#define CAM_CPROC_Y_OUT_RANGE          (0x1UL<<CAM_CPROC_Y_OUT_RANGE_SHIFT)
#define CAM_CPROC_EN_SHIFT             0
#define CAM_CPROC_EN_FIELD             (0xFFFFFFFF - (0x1UL<<CAM_CPROC_EN_SHIFT))
#define CAM_CPROC_EN_0                 (0x0UL<<CAM_CPROC_EN_SHIFT)
#define CAM_CPROC_EN_1                 (0x1UL<<CAM_CPROC_EN_SHIFT)
#define CAM_CPROC_EN                   (0x1UL<<CAM_CPROC_EN_SHIFT)

/*****************************************************************************/
/* Register description for C_PROC_CONTRAST */

/* Reset value of register CAM_C_PROC_CONTRAST */
#define CAM_C_PROC_CONTRAST_VALUE      0x80

/* Bits definition for register CAM_C_PROC_CONTRAST */
#define CAM_CPROC_CONTR_SHIFT          0
#define CAM_CPROC_CONTR_FIELD          (0xFFFFFFFF - (0xFFUL<<CAM_CPROC_CONTR_SHIFT))
#define CAM_CPROC_CONTR_0              (0x0UL<<CAM_CPROC_CONTR_SHIFT)
#define CAM_CPROC_CONTR_80             (0x80UL<<CAM_CPROC_CONTR_SHIFT)
#define CAM_CPROC_CONTR_FF             (0xFFUL<<CAM_CPROC_CONTR_SHIFT)

/*****************************************************************************/
/* Register description for C_PROC_BRIGHTNESS */

/* Reset value of register CAM_C_PROC_BRIGHTNESS */
#define CAM_C_PROC_BRIGHTNESS_VALUE    0x0

/* Bits definition for register CAM_C_PROC_BRIGHTNESS */
#define CAM_CPROC_BRIGHT_SHIFT         0
#define CAM_CPROC_BRIGHT_FIELD         (0xFFFFFFFF - (0xFFUL<<CAM_CPROC_BRIGHT_SHIFT))
#define CAM_CPROC_BRIGHT_0             (0x0UL<<CAM_CPROC_BRIGHT_SHIFT)
#define CAM_CPROC_BRIGHT_80            (0x80UL<<CAM_CPROC_BRIGHT_SHIFT)
#define CAM_CPROC_BRIGHT_7F            (0x7FUL<<CAM_CPROC_BRIGHT_SHIFT)

/*****************************************************************************/
/* Register description for C_PROC_SATURATION */

/* Reset value of register CAM_C_PROC_SATURATION */
#define CAM_C_PROC_SATURATION_VALUE    0x80

/* Bits definition for register CAM_C_PROC_SATURATION */
#define CAM_CPROC_SATUR_SHIFT          0
#define CAM_CPROC_SATUR_FIELD          (0xFFFFFFFF - (0xFFUL<<CAM_CPROC_SATUR_SHIFT))
#define CAM_CPROC_SATUR_0              (0x0UL<<CAM_CPROC_SATUR_SHIFT)
#define CAM_CPROC_SATUR_80             (0x80UL<<CAM_CPROC_SATUR_SHIFT)
#define CAM_CPROC_SATUR_FF             (0xFFUL<<CAM_CPROC_SATUR_SHIFT)

/*****************************************************************************/
/* Register description for C_PROC_HUE */

/* Reset value of register CAM_C_PROC_HUE */
#define CAM_C_PROC_HUE_VALUE           0x0

/* Bits definition for register CAM_C_PROC_HUE */
#define CAM_CPROC_HUE_SHIFT            0
#define CAM_CPROC_HUE_FIELD            (0xFFFFFFFF - (0xFFUL<<CAM_CPROC_HUE_SHIFT))
#define CAM_CPROC_HUE_0                (0x0UL<<CAM_CPROC_HUE_SHIFT)
#define CAM_CPROC_HUE_80               (0x80UL<<CAM_CPROC_HUE_SHIFT)
#define CAM_CPROC_HUE_7F               (0x7FUL<<CAM_CPROC_HUE_SHIFT)

/*****************************************************************************/
/* Register description for MRSZ_CTRL */

/* Reset value of register CAM_MRSZ_CTRL */
#define CAM_MRSZ_CTRL_VALUE            0x0

/* Bits definition for register CAM_MRSZ_CTRL */
#define CAM_MRSZ_CFG_UPD_SHIFT         8
#define CAM_MRSZ_CFG_UPD_FIELD         (0xFFFFFFFF - (0x1UL<<CAM_MRSZ_CFG_UPD_SHIFT))
#define CAM_MRSZ_CFG_UPD_0             (0x0UL<<CAM_MRSZ_CFG_UPD_SHIFT)
#define CAM_MRSZ_CFG_UPD_1             (0x1UL<<CAM_MRSZ_CFG_UPD_SHIFT)
#define CAM_MRSZ_CFG_UPD               (0x1UL<<CAM_MRSZ_CFG_UPD_SHIFT)
#define CAM_SCALE_VC_UP_SHIFT          7
#define CAM_SCALE_VC_UP_FIELD          (0xFFFFFFFF - (0x1UL<<CAM_SCALE_VC_UP_SHIFT))
#define CAM_SCALE_VC_UP_0              (0x0UL<<CAM_SCALE_VC_UP_SHIFT)
#define CAM_SCALE_VC_UP_1              (0x1UL<<CAM_SCALE_VC_UP_SHIFT)
#define CAM_SCALE_VC_UP                (0x1UL<<CAM_SCALE_VC_UP_SHIFT)
#define CAM_SCALE_VY_UP_SHIFT          6
#define CAM_SCALE_VY_UP_FIELD          (0xFFFFFFFF - (0x1UL<<CAM_SCALE_VY_UP_SHIFT))
#define CAM_SCALE_VY_UP_0              (0x0UL<<CAM_SCALE_VY_UP_SHIFT)
#define CAM_SCALE_VY_UP_1              (0x1UL<<CAM_SCALE_VY_UP_SHIFT)
#define CAM_SCALE_VY_UP                (0x1UL<<CAM_SCALE_VY_UP_SHIFT)
#define CAM_SCALE_HC_UP_SHIFT          5
#define CAM_SCALE_HC_UP_FIELD          (0xFFFFFFFF - (0x1UL<<CAM_SCALE_HC_UP_SHIFT))
#define CAM_SCALE_HC_UP_0              (0x0UL<<CAM_SCALE_HC_UP_SHIFT)
#define CAM_SCALE_HC_UP_1              (0x1UL<<CAM_SCALE_HC_UP_SHIFT)
#define CAM_SCALE_HC_UP                (0x1UL<<CAM_SCALE_HC_UP_SHIFT)
#define CAM_SCALE_HY_UP_SHIFT          4
#define CAM_SCALE_HY_UP_FIELD          (0xFFFFFFFF - (0x1UL<<CAM_SCALE_HY_UP_SHIFT))
#define CAM_SCALE_HY_UP_0              (0x0UL<<CAM_SCALE_HY_UP_SHIFT)
#define CAM_SCALE_HY_UP_1              (0x1UL<<CAM_SCALE_HY_UP_SHIFT)
#define CAM_SCALE_HY_UP                (0x1UL<<CAM_SCALE_HY_UP_SHIFT)
#define CAM_SCALE_VC_EN_SHIFT          3
#define CAM_SCALE_VC_EN_FIELD          (0xFFFFFFFF - (0x1UL<<CAM_SCALE_VC_EN_SHIFT))
#define CAM_SCALE_VC_EN_0              (0x0UL<<CAM_SCALE_VC_EN_SHIFT)
#define CAM_SCALE_VC_EN_1              (0x1UL<<CAM_SCALE_VC_EN_SHIFT)
#define CAM_SCALE_VC_EN                (0x1UL<<CAM_SCALE_VC_EN_SHIFT)
#define CAM_SCALE_VY_EN_SHIFT          2
#define CAM_SCALE_VY_EN_FIELD          (0xFFFFFFFF - (0x1UL<<CAM_SCALE_VY_EN_SHIFT))
#define CAM_SCALE_VY_EN_0              (0x0UL<<CAM_SCALE_VY_EN_SHIFT)
#define CAM_SCALE_VY_EN_1              (0x1UL<<CAM_SCALE_VY_EN_SHIFT)
#define CAM_SCALE_VY_EN                (0x1UL<<CAM_SCALE_VY_EN_SHIFT)
#define CAM_SCALE_HC_EN_SHIFT          1
#define CAM_SCALE_HC_EN_FIELD          (0xFFFFFFFF - (0x1UL<<CAM_SCALE_HC_EN_SHIFT))
#define CAM_SCALE_HC_EN_0              (0x0UL<<CAM_SCALE_HC_EN_SHIFT)
#define CAM_SCALE_HC_EN_1              (0x1UL<<CAM_SCALE_HC_EN_SHIFT)
#define CAM_SCALE_HC_EN                (0x1UL<<CAM_SCALE_HC_EN_SHIFT)
#define CAM_SCALE_HY_EN_SHIFT          0
#define CAM_SCALE_HY_EN_FIELD          (0xFFFFFFFF - (0x1UL<<CAM_SCALE_HY_EN_SHIFT))
#define CAM_SCALE_HY_EN_0              (0x0UL<<CAM_SCALE_HY_EN_SHIFT)
#define CAM_SCALE_HY_EN_1              (0x1UL<<CAM_SCALE_HY_EN_SHIFT)
#define CAM_SCALE_HY_EN                (0x1UL<<CAM_SCALE_HY_EN_SHIFT)

/*****************************************************************************/
/* Register description for MRSZ_SCALE_HY */

/* Reset value of register CAM_MRSZ_SCALE_HY */
#define CAM_MRSZ_SCALE_HY_VALUE        0x0

/* Bits definition for register CAM_MRSZ_SCALE_HY */
#define CAM_SCALE_HY_SHIFT             0
#define CAM_SCALE_HY_FIELD             (0xFFFFFFFF - (0x3FFFUL<<CAM_SCALE_HY_SHIFT))
#define CAM_SCALE_HY_0                 (0x0UL<<CAM_SCALE_HY_SHIFT)

/*****************************************************************************/
/* Register description for MRSZ_SCALE_HCB */

/* Reset value of register CAM_MRSZ_SCALE_HCB */
#define CAM_MRSZ_SCALE_HCB_VALUE       0x0

/* Bits definition for register CAM_MRSZ_SCALE_HCB */
#define CAM_SCALE_HCB_SHIFT            0
#define CAM_SCALE_HCB_FIELD            (0xFFFFFFFF - (0x3FFFUL<<CAM_SCALE_HCB_SHIFT))
#define CAM_SCALE_HCB_0                (0x0UL<<CAM_SCALE_HCB_SHIFT)

/*****************************************************************************/
/* Register description for MRSZ_SCALE_HCR */

/* Reset value of register CAM_MRSZ_SCALE_HCR */
#define CAM_MRSZ_SCALE_HCR_VALUE       0x0

/* Bits definition for register CAM_MRSZ_SCALE_HCR */
#define CAM_SCALE_HCR_SHIFT            0
#define CAM_SCALE_HCR_FIELD            (0xFFFFFFFF - (0x3FFFUL<<CAM_SCALE_HCR_SHIFT))
#define CAM_SCALE_HCR_0                (0x0UL<<CAM_SCALE_HCR_SHIFT)

/*****************************************************************************/
/* Register description for MRSZ_SCALE_VY */

/* Reset value of register CAM_MRSZ_SCALE_VY */
#define CAM_MRSZ_SCALE_VY_VALUE        0x0

/* Bits definition for register CAM_MRSZ_SCALE_VY */
#define CAM_SCALE_VY_SHIFT             0
#define CAM_SCALE_VY_FIELD             (0xFFFFFFFF - (0x3FFFUL<<CAM_SCALE_VY_SHIFT))
#define CAM_SCALE_VY_0                 (0x0UL<<CAM_SCALE_VY_SHIFT)

/*****************************************************************************/
/* Register description for MRSZ_SCALE_VC */

/* Reset value of register CAM_MRSZ_SCALE_VC */
#define CAM_MRSZ_SCALE_VC_VALUE        0x0

/* Bits definition for register CAM_MRSZ_SCALE_VC */
#define CAM_SCALE_VC_SHIFT             0
#define CAM_SCALE_VC_FIELD             (0xFFFFFFFF - (0x3FFFUL<<CAM_SCALE_VC_SHIFT))
#define CAM_SCALE_VC_0                 (0x0UL<<CAM_SCALE_VC_SHIFT)

/*****************************************************************************/
/* Register description for MRSZ_PHASE_HY */

/* Reset value of register CAM_MRSZ_PHASE_HY */
#define CAM_MRSZ_PHASE_HY_VALUE        0x0

/* Bits definition for register CAM_MRSZ_PHASE_HY */
#define CAM_PHASE_HY_SHIFT             0
#define CAM_PHASE_HY_FIELD             (0xFFFFFFFF - (0x3FFFUL<<CAM_PHASE_HY_SHIFT))
#define CAM_PHASE_HY_0                 (0x0UL<<CAM_PHASE_HY_SHIFT)

/*****************************************************************************/
/* Register description for MRSZ_PHASE_HC */

/* Reset value of register CAM_MRSZ_PHASE_HC */
#define CAM_MRSZ_PHASE_HC_VALUE        0x0

/* Bits definition for register CAM_MRSZ_PHASE_HC */
#define CAM_PHASE_HC_SHIFT             0
#define CAM_PHASE_HC_FIELD             (0xFFFFFFFF - (0x3FFFUL<<CAM_PHASE_HC_SHIFT))
#define CAM_PHASE_HC_0                 (0x0UL<<CAM_PHASE_HC_SHIFT)

/*****************************************************************************/
/* Register description for MRSZ_PHASE_VY */

/* Reset value of register CAM_MRSZ_PHASE_VY */
#define CAM_MRSZ_PHASE_VY_VALUE        0x0

/* Bits definition for register CAM_MRSZ_PHASE_VY */
#define CAM_PHASE_VY_SHIFT             0
#define CAM_PHASE_VY_FIELD             (0xFFFFFFFF - (0x3FFFUL<<CAM_PHASE_VY_SHIFT))
#define CAM_PHASE_VY_0                 (0x0UL<<CAM_PHASE_VY_SHIFT)

/*****************************************************************************/
/* Register description for MRSZ_PHASE_VC */

/* Reset value of register CAM_MRSZ_PHASE_VC */
#define CAM_MRSZ_PHASE_VC_VALUE        0x0

/* Bits definition for register CAM_MRSZ_PHASE_VC */
#define CAM_PHASE_VC_SHIFT             0
#define CAM_PHASE_VC_FIELD             (0xFFFFFFFF - (0x3FFFUL<<CAM_PHASE_VC_SHIFT))
#define CAM_PHASE_VC_0                 (0x0UL<<CAM_PHASE_VC_SHIFT)

/*****************************************************************************/
/* Register description for MRSZ_SCALE_LUT_ADDR */

/* Reset value of register CAM_MRSZ_SCALE_LUT_ADDR */
#define CAM_MRSZ_SCALE_LUT_ADDR_VALUE  0x0

/* Bits definition for register CAM_MRSZ_SCALE_LUT_ADDR */
#define CAM_SCALE_LUT_ADDR_SHIFT       0
#define CAM_SCALE_LUT_ADDR_FIELD       (0xFFFFFFFF - (0x3FUL<<CAM_SCALE_LUT_ADDR_SHIFT))
#define CAM_SCALE_LUT_ADDR_0           (0x0UL<<CAM_SCALE_LUT_ADDR_SHIFT)

/*****************************************************************************/
/* Register description for MRSZ_SCALE_LUT */

/* Reset value of register CAM_MRSZ_SCALE_LUT */
#define CAM_MRSZ_SCALE_LUT_VALUE       0x0

/* Bits definition for register CAM_MRSZ_SCALE_LUT */
#define CAM_SCALE_LUT_SHIFT            0
#define CAM_SCALE_LUT_FIELD            (0xFFFFFFFF - (0x3FUL<<CAM_SCALE_LUT_SHIFT))
#define CAM_SCALE_LUT_0                (0x0UL<<CAM_SCALE_LUT_SHIFT)

/*****************************************************************************/
/* Register description for MRSZ_CTRL_SHD */

/* Reset value of register CAM_MRSZ_CTRL_SHD */
#define CAM_MRSZ_CTRL_SHD_VALUE        0x0

/* Bits definition for register CAM_MRSZ_CTRL_SHD */
#define CAM_SCALE_VC_UP_STAT_SHIFT     7
#define CAM_SCALE_VC_UP_STAT_FIELD     (0xFFFFFFFF - (0x1UL<<CAM_SCALE_VC_UP_STAT_SHIFT))
#define CAM_SCALE_VC_UP_STAT_0         (0x0UL<<CAM_SCALE_VC_UP_STAT_SHIFT)
#define CAM_SCALE_VC_UP_STAT_1         (0x1UL<<CAM_SCALE_VC_UP_STAT_SHIFT)
#define CAM_SCALE_VC_UP_STAT           (0x1UL<<CAM_SCALE_VC_UP_STAT_SHIFT)
#define CAM_SCALE_VY_UP_STAT_SHIFT     6
#define CAM_SCALE_VY_UP_STAT_FIELD     (0xFFFFFFFF - (0x1UL<<CAM_SCALE_VY_UP_STAT_SHIFT))
#define CAM_SCALE_VY_UP_STAT_0         (0x0UL<<CAM_SCALE_VY_UP_STAT_SHIFT)
#define CAM_SCALE_VY_UP_STAT_1         (0x1UL<<CAM_SCALE_VY_UP_STAT_SHIFT)
#define CAM_SCALE_VY_UP_STAT           (0x1UL<<CAM_SCALE_VY_UP_STAT_SHIFT)
#define CAM_SCALE_HC_UP_STAT_SHIFT     5
#define CAM_SCALE_HC_UP_STAT_FIELD     (0xFFFFFFFF - (0x1UL<<CAM_SCALE_HC_UP_STAT_SHIFT))
#define CAM_SCALE_HC_UP_STAT_0         (0x0UL<<CAM_SCALE_HC_UP_STAT_SHIFT)
#define CAM_SCALE_HC_UP_STAT_1         (0x1UL<<CAM_SCALE_HC_UP_STAT_SHIFT)
#define CAM_SCALE_HC_UP_STAT           (0x1UL<<CAM_SCALE_HC_UP_STAT_SHIFT)
#define CAM_SCALE_HY_UP_STAT_SHIFT     4
#define CAM_SCALE_HY_UP_STAT_FIELD     (0xFFFFFFFF - (0x1UL<<CAM_SCALE_HY_UP_STAT_SHIFT))
#define CAM_SCALE_HY_UP_STAT_0         (0x0UL<<CAM_SCALE_HY_UP_STAT_SHIFT)
#define CAM_SCALE_HY_UP_STAT_1         (0x1UL<<CAM_SCALE_HY_UP_STAT_SHIFT)
#define CAM_SCALE_HY_UP_STAT           (0x1UL<<CAM_SCALE_HY_UP_STAT_SHIFT)
#define CAM_SCALE_VC_STAT_SHIFT        3
#define CAM_SCALE_VC_STAT_FIELD        (0xFFFFFFFF - (0x1UL<<CAM_SCALE_VC_STAT_SHIFT))
#define CAM_SCALE_VC_STAT_0            (0x0UL<<CAM_SCALE_VC_STAT_SHIFT)
#define CAM_SCALE_VC_STAT_1            (0x1UL<<CAM_SCALE_VC_STAT_SHIFT)
#define CAM_SCALE_VC_STAT              (0x1UL<<CAM_SCALE_VC_STAT_SHIFT)
#define CAM_SCALE_VY_STAT_SHIFT        2
#define CAM_SCALE_VY_STAT_FIELD        (0xFFFFFFFF - (0x1UL<<CAM_SCALE_VY_STAT_SHIFT))
#define CAM_SCALE_VY_STAT_0            (0x0UL<<CAM_SCALE_VY_STAT_SHIFT)
#define CAM_SCALE_VY_STAT_1            (0x1UL<<CAM_SCALE_VY_STAT_SHIFT)
#define CAM_SCALE_VY_STAT              (0x1UL<<CAM_SCALE_VY_STAT_SHIFT)
#define CAM_SCALE_HC_STAT_SHIFT        1
#define CAM_SCALE_HC_STAT_FIELD        (0xFFFFFFFF - (0x1UL<<CAM_SCALE_HC_STAT_SHIFT))
#define CAM_SCALE_HC_STAT_0            (0x0UL<<CAM_SCALE_HC_STAT_SHIFT)
#define CAM_SCALE_HC_STAT_1            (0x1UL<<CAM_SCALE_HC_STAT_SHIFT)
#define CAM_SCALE_HC_STAT              (0x1UL<<CAM_SCALE_HC_STAT_SHIFT)
#define CAM_SCALE_HY_STAT_SHIFT        0
#define CAM_SCALE_HY_STAT_FIELD        (0xFFFFFFFF - (0x1UL<<CAM_SCALE_HY_STAT_SHIFT))
#define CAM_SCALE_HY_STAT_0            (0x0UL<<CAM_SCALE_HY_STAT_SHIFT)
#define CAM_SCALE_HY_STAT_1            (0x1UL<<CAM_SCALE_HY_STAT_SHIFT)
#define CAM_SCALE_HY_STAT              (0x1UL<<CAM_SCALE_HY_STAT_SHIFT)

/*****************************************************************************/
/* Register description for MRSZ_SCALE_HY_SHD */

/* Reset value of register CAM_MRSZ_SCALE_HY_SHD */
#define CAM_MRSZ_SCALE_HY_SHD_VALUE    0x0

/* Bits definition for register CAM_MRSZ_SCALE_HY_SHD */
#define CAM_SCALE_HY_SHD_SHIFT         0
#define CAM_SCALE_HY_SHD_FIELD         (0xFFFFFFFF - (0x3FFFUL<<CAM_SCALE_HY_SHD_SHIFT))
#define CAM_SCALE_HY_SHD_0             (0x0UL<<CAM_SCALE_HY_SHD_SHIFT)

/*****************************************************************************/
/* Register description for MRSZ_SCALE_HCB_SHD */

/* Reset value of register CAM_MRSZ_SCALE_HCB_SHD */
#define CAM_MRSZ_SCALE_HCB_SHD_VALUE   0x0

/* Bits definition for register CAM_MRSZ_SCALE_HCB_SHD */
#define CAM_SCALE_HCB_SHD_SHIFT        0
#define CAM_SCALE_HCB_SHD_FIELD        (0xFFFFFFFF - (0x3FFFUL<<CAM_SCALE_HCB_SHD_SHIFT))

/*****************************************************************************/
/* Register description for MRSZ_SCALE_HCR_SHD */

/* Reset value of register CAM_MRSZ_SCALE_HCR_SHD */
#define CAM_MRSZ_SCALE_HCR_SHD_VALUE   0x0

/* Bits definition for register CAM_MRSZ_SCALE_HCR_SHD */
#define CAM_SCALE_HCR_SHD_SHIFT        0
#define CAM_SCALE_HCR_SHD_FIELD        (0xFFFFFFFF - (0x3FFFUL<<CAM_SCALE_HCR_SHD_SHIFT))
#define CAM_SCALE_HCR_SHD_0            (0x0UL<<CAM_SCALE_HCR_SHD_SHIFT)

/*****************************************************************************/
/* Register description for MRSZ_SCALE_VY_SHD */

/* Reset value of register CAM_MRSZ_SCALE_VY_SHD */
#define CAM_MRSZ_SCALE_VY_SHD_VALUE    0x0

/* Bits definition for register CAM_MRSZ_SCALE_VY_SHD */
#define CAM_SCALE_VY_SHD_SHIFT         0
#define CAM_SCALE_VY_SHD_FIELD         (0xFFFFFFFF - (0x3FFFUL<<CAM_SCALE_VY_SHD_SHIFT))
#define CAM_SCALE_VY_SHD_0             (0x0UL<<CAM_SCALE_VY_SHD_SHIFT)

/*****************************************************************************/
/* Register description for MRSZ_SCALE_VC_SHD */

/* Reset value of register CAM_MRSZ_SCALE_VC_SHD */
#define CAM_MRSZ_SCALE_VC_SHD_VALUE    0x0

/* Bits definition for register CAM_MRSZ_SCALE_VC_SHD */
#define CAM_SCALE_VC_SHD_SHIFT         0
#define CAM_SCALE_VC_SHD_FIELD         (0xFFFFFFFF - (0x3FFFUL<<CAM_SCALE_VC_SHD_SHIFT))
#define CAM_SCALE_VC_SHD_0             (0x0UL<<CAM_SCALE_VC_SHD_SHIFT)

/*****************************************************************************/
/* Register description for MRSZ_PHASE_HY_SHD */

/* Reset value of register CAM_MRSZ_PHASE_HY_SHD */
#define CAM_MRSZ_PHASE_HY_SHD_VALUE    0x0

/* Bits definition for register CAM_MRSZ_PHASE_HY_SHD */
#define CAM_PHASE_HY_SHD_SHIFT         0
#define CAM_PHASE_HY_SHD_FIELD         (0xFFFFFFFF - (0x3FFFUL<<CAM_PHASE_HY_SHD_SHIFT))
#define CAM_PHASE_HY_SHD_0             (0x0UL<<CAM_PHASE_HY_SHD_SHIFT)

/*****************************************************************************/
/* Register description for MRSZ_PHASE_HC_SHD */

/* Reset value of register CAM_MRSZ_PHASE_HC_SHD */
#define CAM_MRSZ_PHASE_HC_SHD_VALUE    0x0

/* Bits definition for register CAM_MRSZ_PHASE_HC_SHD */
#define CAM_PHASE_HC_SHD_SHIFT         0
#define CAM_PHASE_HC_SHD_FIELD         (0xFFFFFFFF - (0x3FFFUL<<CAM_PHASE_HC_SHD_SHIFT))
#define CAM_PHASE_HC_SHD_0             (0x0UL<<CAM_PHASE_HC_SHD_SHIFT)

/*****************************************************************************/
/* Register description for MRSZ_PHASE_VY_SHD */

/* Reset value of register CAM_MRSZ_PHASE_VY_SHD */
#define CAM_MRSZ_PHASE_VY_SHD_VALUE    0x0

/* Bits definition for register CAM_MRSZ_PHASE_VY_SHD */
#define CAM_PHASE_VY_SHD_SHIFT         0
#define CAM_PHASE_VY_SHD_FIELD         (0xFFFFFFFF - (0x3FFFUL<<CAM_PHASE_VY_SHD_SHIFT))
#define CAM_PHASE_VY_SHD_0             (0x0UL<<CAM_PHASE_VY_SHD_SHIFT)

/*****************************************************************************/
/* Register description for MRSZ_PHASE_VC_SHD */

/* Reset value of register CAM_MRSZ_PHASE_VC_SHD */
#define CAM_MRSZ_PHASE_VC_SHD_VALUE    0x0

/* Bits definition for register CAM_MRSZ_PHASE_VC_SHD */
#define CAM_PHASE_VC_SHD_SHIFT         0
#define CAM_PHASE_VC_SHD_FIELD         (0xFFFFFFFF - (0x3FFFUL<<CAM_PHASE_VC_SHD_SHIFT))
#define CAM_PHASE_VC_SHD_0             (0x0UL<<CAM_PHASE_VC_SHD_SHIFT)

/*****************************************************************************/
/* Register description for SRSZ_CTRL */

/* Reset value of register CAM_SRSZ_CTRL */
#define CAM_SRSZ_CTRL_VALUE            0x0

/* Bits definition for register CAM_SRSZ_CTRL */
#define CAM_SRSZ_CFG_UPD_SHIFT         8
#define CAM_SRSZ_CFG_UPD_FIELD         (0xFFFFFFFF - (0x1UL<<CAM_SRSZ_CFG_UPD_SHIFT))
#define CAM_SRSZ_CFG_UPD_0             (0x0UL<<CAM_SRSZ_CFG_UPD_SHIFT)
#define CAM_SRSZ_CFG_UPD_1             (0x1UL<<CAM_SRSZ_CFG_UPD_SHIFT)
#define CAM_SRSZ_CFG_UPD               (0x1UL<<CAM_SRSZ_CFG_UPD_SHIFT)
#define CAM_SCALE_VC_UP_SHIFT          7
#define CAM_SCALE_VC_UP_FIELD          (0xFFFFFFFF - (0x1UL<<CAM_SCALE_VC_UP_SHIFT))
#define CAM_SCALE_VC_UP_0              (0x0UL<<CAM_SCALE_VC_UP_SHIFT)
#define CAM_SCALE_VC_UP_1              (0x1UL<<CAM_SCALE_VC_UP_SHIFT)
#define CAM_SCALE_VC_UP                (0x1UL<<CAM_SCALE_VC_UP_SHIFT)
#define CAM_SCALE_VY_UP_SHIFT          6
#define CAM_SCALE_VY_UP_FIELD          (0xFFFFFFFF - (0x1UL<<CAM_SCALE_VY_UP_SHIFT))
#define CAM_SCALE_VY_UP_0              (0x0UL<<CAM_SCALE_VY_UP_SHIFT)
#define CAM_SCALE_VY_UP_1              (0x1UL<<CAM_SCALE_VY_UP_SHIFT)
#define CAM_SCALE_VY_UP                (0x1UL<<CAM_SCALE_VY_UP_SHIFT)
#define CAM_SCALE_HC_UP_SHIFT          5
#define CAM_SCALE_HC_UP_FIELD          (0xFFFFFFFF - (0x1UL<<CAM_SCALE_HC_UP_SHIFT))
#define CAM_SCALE_HC_UP_0              (0x0UL<<CAM_SCALE_HC_UP_SHIFT)
#define CAM_SCALE_HC_UP_1              (0x1UL<<CAM_SCALE_HC_UP_SHIFT)
#define CAM_SCALE_HC_UP                (0x1UL<<CAM_SCALE_HC_UP_SHIFT)
#define CAM_SCALE_HY_UP_SHIFT          4
#define CAM_SCALE_HY_UP_FIELD          (0xFFFFFFFF - (0x1UL<<CAM_SCALE_HY_UP_SHIFT))
#define CAM_SCALE_HY_UP_0              (0x0UL<<CAM_SCALE_HY_UP_SHIFT)
#define CAM_SCALE_HY_UP_1              (0x1UL<<CAM_SCALE_HY_UP_SHIFT)
#define CAM_SCALE_HY_UP                (0x1UL<<CAM_SCALE_HY_UP_SHIFT)
#define CAM_SCALE_VC_EN_SHIFT          3
#define CAM_SCALE_VC_EN_FIELD          (0xFFFFFFFF - (0x1UL<<CAM_SCALE_VC_EN_SHIFT))
#define CAM_SCALE_VC_EN_0              (0x0UL<<CAM_SCALE_VC_EN_SHIFT)
#define CAM_SCALE_VC_EN_1              (0x1UL<<CAM_SCALE_VC_EN_SHIFT)
#define CAM_SCALE_VC_EN                (0x1UL<<CAM_SCALE_VC_EN_SHIFT)
#define CAM_SCALE_VY_EN_SHIFT          2
#define CAM_SCALE_VY_EN_FIELD          (0xFFFFFFFF - (0x1UL<<CAM_SCALE_VY_EN_SHIFT))
#define CAM_SCALE_VY_EN_0              (0x0UL<<CAM_SCALE_VY_EN_SHIFT)
#define CAM_SCALE_VY_EN_1              (0x1UL<<CAM_SCALE_VY_EN_SHIFT)
#define CAM_SCALE_VY_EN                (0x1UL<<CAM_SCALE_VY_EN_SHIFT)
#define CAM_SCALE_HC_EN_SHIFT          1
#define CAM_SCALE_HC_EN_FIELD          (0xFFFFFFFF - (0x1UL<<CAM_SCALE_HC_EN_SHIFT))
#define CAM_SCALE_HC_EN_0              (0x0UL<<CAM_SCALE_HC_EN_SHIFT)
#define CAM_SCALE_HC_EN_1              (0x1UL<<CAM_SCALE_HC_EN_SHIFT)
#define CAM_SCALE_HC_EN                (0x1UL<<CAM_SCALE_HC_EN_SHIFT)
#define CAM_SCALE_HY_EN_SHIFT          0
#define CAM_SCALE_HY_EN_FIELD          (0xFFFFFFFF - (0x1UL<<CAM_SCALE_HY_EN_SHIFT))
#define CAM_SCALE_HY_EN_0              (0x0UL<<CAM_SCALE_HY_EN_SHIFT)
#define CAM_SCALE_HY_EN_1              (0x1UL<<CAM_SCALE_HY_EN_SHIFT)
#define CAM_SCALE_HY_EN                (0x1UL<<CAM_SCALE_HY_EN_SHIFT)

/*****************************************************************************/
/* Register description for SRSZ_SCALE_HY */

/* Reset value of register CAM_SRSZ_SCALE_HY */
#define CAM_SRSZ_SCALE_HY_VALUE        0x0

/* Bits definition for register CAM_SRSZ_SCALE_HY */
#define CAM_SCALE_HY_SHIFT             0
#define CAM_SCALE_HY_FIELD             (0xFFFFFFFF - (0x3FFFUL<<CAM_SCALE_HY_SHIFT))
#define CAM_SCALE_HY_0                 (0x0UL<<CAM_SCALE_HY_SHIFT)

/*****************************************************************************/
/* Register description for SRSZ_SCALE_HCB */

/* Reset value of register CAM_SRSZ_SCALE_HCB */
#define CAM_SRSZ_SCALE_HCB_VALUE       0x0

/* Bits definition for register CAM_SRSZ_SCALE_HCB */
#define CAM_SCALE_HCB_SHIFT            0
#define CAM_SCALE_HCB_FIELD            (0xFFFFFFFF - (0x3FFFUL<<CAM_SCALE_HCB_SHIFT))
#define CAM_SCALE_HCB_0                (0x0UL<<CAM_SCALE_HCB_SHIFT)

/*****************************************************************************/
/* Register description for SRSZ_SCALE_HCR */

/* Reset value of register CAM_SRSZ_SCALE_HCR */
#define CAM_SRSZ_SCALE_HCR_VALUE       0x0

/* Bits definition for register CAM_SRSZ_SCALE_HCR */
#define CAM_SCALE_HCR_SHIFT            0
#define CAM_SCALE_HCR_FIELD            (0xFFFFFFFF - (0x3FFFUL<<CAM_SCALE_HCR_SHIFT))
#define CAM_SCALE_HCR_0                (0x0UL<<CAM_SCALE_HCR_SHIFT)

/*****************************************************************************/
/* Register description for SRSZ_SCALE_VY */

/* Reset value of register CAM_SRSZ_SCALE_VY */
#define CAM_SRSZ_SCALE_VY_VALUE        0x0

/* Bits definition for register CAM_SRSZ_SCALE_VY */
#define CAM_SCALE_VY_SHIFT             0
#define CAM_SCALE_VY_FIELD             (0xFFFFFFFF - (0x3FFFUL<<CAM_SCALE_VY_SHIFT))
#define CAM_SCALE_VY_0                 (0x0UL<<CAM_SCALE_VY_SHIFT)

/*****************************************************************************/
/* Register description for SRSZ_SCALE_VC */

/* Reset value of register CAM_SRSZ_SCALE_VC */
#define CAM_SRSZ_SCALE_VC_VALUE        0x0

/* Bits definition for register CAM_SRSZ_SCALE_VC */
#define CAM_SCALE_VC_SHIFT             0
#define CAM_SCALE_VC_FIELD             (0xFFFFFFFF - (0x3FFFUL<<CAM_SCALE_VC_SHIFT))
#define CAM_SCALE_VC_0                 (0x0UL<<CAM_SCALE_VC_SHIFT)

/*****************************************************************************/
/* Register description for SRSZ_PHASE_HY */

/* Reset value of register CAM_SRSZ_PHASE_HY */
#define CAM_SRSZ_PHASE_HY_VALUE        0x0

/* Bits definition for register CAM_SRSZ_PHASE_HY */
#define CAM_PHASE_HY_SHIFT             0
#define CAM_PHASE_HY_FIELD             (0xFFFFFFFF - (0x3FFFUL<<CAM_PHASE_HY_SHIFT))
#define CAM_PHASE_HY_0                 (0x0UL<<CAM_PHASE_HY_SHIFT)

/*****************************************************************************/
/* Register description for SRSZ_PHASE_HC */

/* Reset value of register CAM_SRSZ_PHASE_HC */
#define CAM_SRSZ_PHASE_HC_VALUE        0x0

/* Bits definition for register CAM_SRSZ_PHASE_HC */
#define CAM_PHASE_HC_SHIFT             0
#define CAM_PHASE_HC_FIELD             (0xFFFFFFFF - (0x3FFFUL<<CAM_PHASE_HC_SHIFT))
#define CAM_PHASE_HC_0                 (0x0UL<<CAM_PHASE_HC_SHIFT)

/*****************************************************************************/
/* Register description for SRSZ_PHASE_VY */

/* Reset value of register CAM_SRSZ_PHASE_VY */
#define CAM_SRSZ_PHASE_VY_VALUE        0x0

/* Bits definition for register CAM_SRSZ_PHASE_VY */
#define CAM_PHASE_VY_SHIFT             0
#define CAM_PHASE_VY_FIELD             (0xFFFFFFFF - (0x3FFFUL<<CAM_PHASE_VY_SHIFT))
#define CAM_PHASE_VY_0                 (0x0UL<<CAM_PHASE_VY_SHIFT)

/*****************************************************************************/
/* Register description for SRSZ_PHASE_VC */

/* Reset value of register CAM_SRSZ_PHASE_VC */
#define CAM_SRSZ_PHASE_VC_VALUE        0x0

/* Bits definition for register CAM_SRSZ_PHASE_VC */
#define CAM_PHASE_VC_SHIFT             0
#define CAM_PHASE_VC_FIELD             (0xFFFFFFFF - (0x3FFFUL<<CAM_PHASE_VC_SHIFT))
#define CAM_PHASE_VC_0                 (0x0UL<<CAM_PHASE_VC_SHIFT)

/*****************************************************************************/
/* Register description for SRSZ_SCALE_LUT_ADDR */

/* Reset value of register CAM_SRSZ_SCALE_LUT_ADDR */
#define CAM_SRSZ_SCALE_LUT_ADDR_VALUE  0x0

/* Bits definition for register CAM_SRSZ_SCALE_LUT_ADDR */
#define CAM_SCALE_LUT_ADDR_SHIFT       0
#define CAM_SCALE_LUT_ADDR_FIELD       (0xFFFFFFFF - (0x3FUL<<CAM_SCALE_LUT_ADDR_SHIFT))
#define CAM_SCALE_LUT_ADDR_0           (0x0UL<<CAM_SCALE_LUT_ADDR_SHIFT)

/*****************************************************************************/
/* Register description for SRSZ_SCALE_LUT */

/* Reset value of register CAM_SRSZ_SCALE_LUT */
#define CAM_SRSZ_SCALE_LUT_VALUE       0x0

/* Bits definition for register CAM_SRSZ_SCALE_LUT */
#define CAM_SCALE_LUT_SHIFT            0
#define CAM_SCALE_LUT_FIELD            (0xFFFFFFFF - (0x3FUL<<CAM_SCALE_LUT_SHIFT))
#define CAM_SCALE_LUT_0                (0x0UL<<CAM_SCALE_LUT_SHIFT)

/*****************************************************************************/
/* Register description for SRSZ_CTRL_SHD */

/* Reset value of register CAM_SRSZ_CTRL_SHD */
#define CAM_SRSZ_CTRL_SHD_VALUE        0x0

/* Bits definition for register CAM_SRSZ_CTRL_SHD */
#define CAM_SCALE_VC_UP_STAT_SHIFT     7
#define CAM_SCALE_VC_UP_STAT_FIELD     (0xFFFFFFFF - (0x1UL<<CAM_SCALE_VC_UP_STAT_SHIFT))
#define CAM_SCALE_VC_UP_STAT_0         (0x0UL<<CAM_SCALE_VC_UP_STAT_SHIFT)
#define CAM_SCALE_VC_UP_STAT_1         (0x1UL<<CAM_SCALE_VC_UP_STAT_SHIFT)
#define CAM_SCALE_VC_UP_STAT           (0x1UL<<CAM_SCALE_VC_UP_STAT_SHIFT)
#define CAM_SCALE_VY_UP_STAT_SHIFT     6
#define CAM_SCALE_VY_UP_STAT_FIELD     (0xFFFFFFFF - (0x1UL<<CAM_SCALE_VY_UP_STAT_SHIFT))
#define CAM_SCALE_VY_UP_STAT_0         (0x0UL<<CAM_SCALE_VY_UP_STAT_SHIFT)
#define CAM_SCALE_VY_UP_STAT_1         (0x1UL<<CAM_SCALE_VY_UP_STAT_SHIFT)
#define CAM_SCALE_VY_UP_STAT           (0x1UL<<CAM_SCALE_VY_UP_STAT_SHIFT)
#define CAM_SCALE_HC_UP_STAT_SHIFT     5
#define CAM_SCALE_HC_UP_STAT_FIELD     (0xFFFFFFFF - (0x1UL<<CAM_SCALE_HC_UP_STAT_SHIFT))
#define CAM_SCALE_HC_UP_STAT_0         (0x0UL<<CAM_SCALE_HC_UP_STAT_SHIFT)
#define CAM_SCALE_HC_UP_STAT_1         (0x1UL<<CAM_SCALE_HC_UP_STAT_SHIFT)
#define CAM_SCALE_HC_UP_STAT           (0x1UL<<CAM_SCALE_HC_UP_STAT_SHIFT)
#define CAM_SCALE_HY_UP_STAT_SHIFT     4
#define CAM_SCALE_HY_UP_STAT_FIELD     (0xFFFFFFFF - (0x1UL<<CAM_SCALE_HY_UP_STAT_SHIFT))
#define CAM_SCALE_HY_UP_STAT_0         (0x0UL<<CAM_SCALE_HY_UP_STAT_SHIFT)
#define CAM_SCALE_HY_UP_STAT_1         (0x1UL<<CAM_SCALE_HY_UP_STAT_SHIFT)
#define CAM_SCALE_HY_UP_STAT           (0x1UL<<CAM_SCALE_HY_UP_STAT_SHIFT)
#define CAM_SCALE_VC_STAT_SHIFT        3
#define CAM_SCALE_VC_STAT_FIELD        (0xFFFFFFFF - (0x1UL<<CAM_SCALE_VC_STAT_SHIFT))
#define CAM_SCALE_VC_STAT_0            (0x0UL<<CAM_SCALE_VC_STAT_SHIFT)
#define CAM_SCALE_VC_STAT_1            (0x1UL<<CAM_SCALE_VC_STAT_SHIFT)
#define CAM_SCALE_VC_STAT              (0x1UL<<CAM_SCALE_VC_STAT_SHIFT)
#define CAM_SCALE_VY_STAT_SHIFT        2
#define CAM_SCALE_VY_STAT_FIELD        (0xFFFFFFFF - (0x1UL<<CAM_SCALE_VY_STAT_SHIFT))
#define CAM_SCALE_VY_STAT_0            (0x0UL<<CAM_SCALE_VY_STAT_SHIFT)
#define CAM_SCALE_VY_STAT_1            (0x1UL<<CAM_SCALE_VY_STAT_SHIFT)
#define CAM_SCALE_VY_STAT              (0x1UL<<CAM_SCALE_VY_STAT_SHIFT)
#define CAM_SCALE_HC_STAT_SHIFT        1
#define CAM_SCALE_HC_STAT_FIELD        (0xFFFFFFFF - (0x1UL<<CAM_SCALE_HC_STAT_SHIFT))
#define CAM_SCALE_HC_STAT_0            (0x0UL<<CAM_SCALE_HC_STAT_SHIFT)
#define CAM_SCALE_HC_STAT_1            (0x1UL<<CAM_SCALE_HC_STAT_SHIFT)
#define CAM_SCALE_HC_STAT              (0x1UL<<CAM_SCALE_HC_STAT_SHIFT)
#define CAM_SCALE_HY_STAT_SHIFT        0
#define CAM_SCALE_HY_STAT_FIELD        (0xFFFFFFFF - (0x1UL<<CAM_SCALE_HY_STAT_SHIFT))
#define CAM_SCALE_HY_STAT_0            (0x0UL<<CAM_SCALE_HY_STAT_SHIFT)
#define CAM_SCALE_HY_STAT_1            (0x1UL<<CAM_SCALE_HY_STAT_SHIFT)
#define CAM_SCALE_HY_STAT              (0x1UL<<CAM_SCALE_HY_STAT_SHIFT)

/*****************************************************************************/
/* Register description for SRSZ_SCALE_HY_SHD */

/* Reset value of register CAM_SRSZ_SCALE_HY_SHD */
#define CAM_SRSZ_SCALE_HY_SHD_VALUE    0x0

/* Bits definition for register CAM_SRSZ_SCALE_HY_SHD */
#define CAM_SCALE_HY_SHD_SHIFT         0
#define CAM_SCALE_HY_SHD_FIELD         (0xFFFFFFFF - (0x3FFFUL<<CAM_SCALE_HY_SHD_SHIFT))
#define CAM_SCALE_HY_SHD_0             (0x0UL<<CAM_SCALE_HY_SHD_SHIFT)

/*****************************************************************************/
/* Register description for SRSZ_SCALE_HCB_SHD */

/* Reset value of register CAM_SRSZ_SCALE_HCB_SHD */
#define CAM_SRSZ_SCALE_HCB_SHD_VALUE   0x0

/* Bits definition for register CAM_SRSZ_SCALE_HCB_SHD */
#define CAM_SCALE_HCB_SHD_SHIFT        0
#define CAM_SCALE_HCB_SHD_FIELD        (0xFFFFFFFF - (0x3FFFUL<<CAM_SCALE_HCB_SHD_SHIFT))
#define CAM_SCALE_HCB_SHD_0            (0x0UL<<CAM_SCALE_HCB_SHD_SHIFT)

/*****************************************************************************/
/* Register description for SRSZ_SCALE_HCR_SHD */

/* Reset value of register CAM_SRSZ_SCALE_HCR_SHD */
#define CAM_SRSZ_SCALE_HCR_SHD_VALUE   0x0

/* Bits definition for register CAM_SRSZ_SCALE_HCR_SHD */
#define CAM_SCALE_HCR_SHD_SHIFT        0
#define CAM_SCALE_HCR_SHD_FIELD        (0xFFFFFFFF - (0x3FFFUL<<CAM_SCALE_HCR_SHD_SHIFT))
#define CAM_SCALE_HCR_SHD_0            (0x0UL<<CAM_SCALE_HCR_SHD_SHIFT)

/*****************************************************************************/
/* Register description for SRSZ_SCALE_VY_SHD */

/* Reset value of register CAM_SRSZ_SCALE_VY_SHD */
#define CAM_SRSZ_SCALE_VY_SHD_VALUE    0x0

/* Bits definition for register CAM_SRSZ_SCALE_VY_SHD */
#define CAM_SCALE_VY_SHD_SHIFT         0
#define CAM_SCALE_VY_SHD_FIELD         (0xFFFFFFFF - (0x3FFFUL<<CAM_SCALE_VY_SHD_SHIFT))
#define CAM_SCALE_VY_SHD_0             (0x0UL<<CAM_SCALE_VY_SHD_SHIFT)

/*****************************************************************************/
/* Register description for SRSZ_SCALE_VC_SHD */

/* Reset value of register CAM_SRSZ_SCALE_VC_SHD */
#define CAM_SRSZ_SCALE_VC_SHD_VALUE    0x0

/* Bits definition for register CAM_SRSZ_SCALE_VC_SHD */
#define CAM_SCALE_VC_SHD_SHIFT         0
#define CAM_SCALE_VC_SHD_FIELD         (0xFFFFFFFF - (0x3FFFUL<<CAM_SCALE_VC_SHD_SHIFT))
#define CAM_SCALE_VC_SHD_0             (0x0UL<<CAM_SCALE_VC_SHD_SHIFT)

/*****************************************************************************/
/* Register description for SRSZ_PHASE_HY_SHD */

/* Reset value of register CAM_SRSZ_PHASE_HY_SHD */
#define CAM_SRSZ_PHASE_HY_SHD_VALUE    0x0

/* Bits definition for register CAM_SRSZ_PHASE_HY_SHD */
#define CAM_PHASE_HY_SHD_SHIFT         0
#define CAM_PHASE_HY_SHD_FIELD         (0xFFFFFFFF - (0x3FFFUL<<CAM_PHASE_HY_SHD_SHIFT))
#define CAM_PHASE_HY_SHD_0             (0x0UL<<CAM_PHASE_HY_SHD_SHIFT)

/*****************************************************************************/
/* Register description for SRSZ_PHASE_HC_SHD */

/* Reset value of register CAM_SRSZ_PHASE_HC_SHD */
#define CAM_SRSZ_PHASE_HC_SHD_VALUE    0x0

/* Bits definition for register CAM_SRSZ_PHASE_HC_SHD */
#define CAM_PHASE_HC_SHD_SHIFT         0
#define CAM_PHASE_HC_SHD_FIELD         (0xFFFFFFFF - (0x3FFFUL<<CAM_PHASE_HC_SHD_SHIFT))
#define CAM_PHASE_HC_SHD_0             (0x0UL<<CAM_PHASE_HC_SHD_SHIFT)

/*****************************************************************************/
/* Register description for SRSZ_PHASE_VY_SHD */

/* Reset value of register CAM_SRSZ_PHASE_VY_SHD */
#define CAM_SRSZ_PHASE_VY_SHD_VALUE    0x0

/* Bits definition for register CAM_SRSZ_PHASE_VY_SHD */
#define CAM_PHASE_VY_SHD_SHIFT         0
#define CAM_PHASE_VY_SHD_FIELD         (0xFFFFFFFF - (0x3FFFUL<<CAM_PHASE_VY_SHD_SHIFT))
#define CAM_PHASE_VY_SHD_0             (0x0UL<<CAM_PHASE_VY_SHD_SHIFT)

/*****************************************************************************/
/* Register description for SRSZ_PHASE_VC_SHD */

/* Reset value of register CAM_SRSZ_PHASE_VC_SHD */
#define CAM_SRSZ_PHASE_VC_SHD_VALUE    0x0

/* Bits definition for register CAM_SRSZ_PHASE_VC_SHD */
#define CAM_PHASE_VC_SHD_SHIFT         0
#define CAM_PHASE_VC_SHD_FIELD         (0xFFFFFFFF - (0x3FFFUL<<CAM_PHASE_VC_SHD_SHIFT))
#define CAM_PHASE_VC_SHD_0             (0x0UL<<CAM_PHASE_VC_SHD_SHIFT)

/*****************************************************************************/
/* Register description for MI_CTRL */

/* Reset value of register CAM_MI_CTRL */
#define CAM_MI_CTRL_VALUE              0x0

/* Bits definition for register CAM_MI_CTRL */
#define CAM_SP_OUTPUT_FORMAT_SHIFT     28
#define CAM_SP_OUTPUT_FORMAT_FIELD     (0xFFFFFFFF - (0x7UL<<CAM_SP_OUTPUT_FORMAT_SHIFT))
#define CAM_SP_OUTPUT_FORMAT_0         (0x0UL<<CAM_SP_OUTPUT_FORMAT_SHIFT)
#define CAM_SP_OUTPUT_FORMAT_1         (0x1UL<<CAM_SP_OUTPUT_FORMAT_SHIFT)
#define CAM_SP_OUTPUT_FORMAT_2         (0x2UL<<CAM_SP_OUTPUT_FORMAT_SHIFT)
#define CAM_SP_OUTPUT_FORMAT_3         (0x3UL<<CAM_SP_OUTPUT_FORMAT_SHIFT)
#define CAM_SP_OUTPUT_FORMAT_4         (0x4UL<<CAM_SP_OUTPUT_FORMAT_SHIFT)
#define CAM_SP_OUTPUT_FORMAT_5         (0x5UL<<CAM_SP_OUTPUT_FORMAT_SHIFT)
#define CAM_SP_OUTPUT_FORMAT_6         (0x6UL<<CAM_SP_OUTPUT_FORMAT_SHIFT)
#define CAM_SP_OUTPUT_FORMAT_7         (0x7UL<<CAM_SP_OUTPUT_FORMAT_SHIFT)
#define CAM_SP_INPUT_FORMAT_SHIFT      26
#define CAM_SP_INPUT_FORMAT_FIELD      (0xFFFFFFFF - (0x3UL<<CAM_SP_INPUT_FORMAT_SHIFT))
#define CAM_SP_INPUT_FORMAT_0          (0x0UL<<CAM_SP_INPUT_FORMAT_SHIFT)
#define CAM_SP_INPUT_FORMAT_1          (0x1UL<<CAM_SP_INPUT_FORMAT_SHIFT)
#define CAM_SP_INPUT_FORMAT_2          (0x2UL<<CAM_SP_INPUT_FORMAT_SHIFT)
#define CAM_SP_INPUT_FORMAT_3          (0x3UL<<CAM_SP_INPUT_FORMAT_SHIFT)
#define CAM_SP_WRITE_FORMAT_SHIFT      24
#define CAM_SP_WRITE_FORMAT_FIELD      (0xFFFFFFFF - (0x3UL<<CAM_SP_WRITE_FORMAT_SHIFT))
#define CAM_SP_WRITE_FORMAT_0          (0x0UL<<CAM_SP_WRITE_FORMAT_SHIFT)
#define CAM_SP_WRITE_FORMAT_1          (0x1UL<<CAM_SP_WRITE_FORMAT_SHIFT)
#define CAM_SP_WRITE_FORMAT_2          (0x2UL<<CAM_SP_WRITE_FORMAT_SHIFT)
#define CAM_SP_WRITE_FORMAT_3          (0x3UL<<CAM_SP_WRITE_FORMAT_SHIFT)
#define CAM_MP_WRITE_FORMAT_SHIFT      22
#define CAM_MP_WRITE_FORMAT_FIELD      (0xFFFFFFFF - (0x3UL<<CAM_MP_WRITE_FORMAT_SHIFT))
#define CAM_MP_WRITE_FORMAT_0          (0x0UL<<CAM_MP_WRITE_FORMAT_SHIFT)
#define CAM_MP_WRITE_FORMAT_1          (0x1UL<<CAM_MP_WRITE_FORMAT_SHIFT)
#define CAM_MP_WRITE_FORMAT_2          (0x2UL<<CAM_MP_WRITE_FORMAT_SHIFT)
#define CAM_MP_WRITE_FORMAT_3          (0x3UL<<CAM_MP_WRITE_FORMAT_SHIFT)
#define CAM_INIT_OFFSET_EN_SHIFT       21
#define CAM_INIT_OFFSET_EN_FIELD       (0xFFFFFFFF - (0x1UL<<CAM_INIT_OFFSET_EN_SHIFT))
#define CAM_INIT_OFFSET_EN_0           (0x0UL<<CAM_INIT_OFFSET_EN_SHIFT)
#define CAM_INIT_OFFSET_EN_1           (0x1UL<<CAM_INIT_OFFSET_EN_SHIFT)
#define CAM_INIT_OFFSET_EN             (0x1UL<<CAM_INIT_OFFSET_EN_SHIFT)
#define CAM_INIT_BASE_EN_SHIFT         20
#define CAM_INIT_BASE_EN_FIELD         (0xFFFFFFFF - (0x1UL<<CAM_INIT_BASE_EN_SHIFT))
#define CAM_INIT_BASE_EN_0             (0x0UL<<CAM_INIT_BASE_EN_SHIFT)
#define CAM_INIT_BASE_EN_1             (0x1UL<<CAM_INIT_BASE_EN_SHIFT)
#define CAM_INIT_BASE_EN               (0x1UL<<CAM_INIT_BASE_EN_SHIFT)
#define CAM_BURST_LEN_CHROM_SHIFT      18
#define CAM_BURST_LEN_CHROM_FIELD      (0xFFFFFFFF - (0x3UL<<CAM_BURST_LEN_CHROM_SHIFT))
#define CAM_BURST_LEN_CHROM_0          (0x0UL<<CAM_BURST_LEN_CHROM_SHIFT)
#define CAM_BURST_LEN_CHROM_1          (0x1UL<<CAM_BURST_LEN_CHROM_SHIFT)
#define CAM_BURST_LEN_CHROM_2          (0x2UL<<CAM_BURST_LEN_CHROM_SHIFT)
#define CAM_BURST_LEN_CHROM_3          (0x3UL<<CAM_BURST_LEN_CHROM_SHIFT)
#define CAM_BURST_LEN_LUM_SHIFT        16
#define CAM_BURST_LEN_LUM_FIELD        (0xFFFFFFFF - (0x3UL<<CAM_BURST_LEN_LUM_SHIFT))
#define CAM_BURST_LEN_LUM_0            (0x0UL<<CAM_BURST_LEN_LUM_SHIFT)
#define CAM_BURST_LEN_LUM_1            (0x1UL<<CAM_BURST_LEN_LUM_SHIFT)
#define CAM_BURST_LEN_LUM_2            (0x2UL<<CAM_BURST_LEN_LUM_SHIFT)
#define CAM_BURST_LEN_LUM_3            (0x3UL<<CAM_BURST_LEN_LUM_SHIFT)
#define CAM_422NONCOSITED_SHIFT        10
#define CAM_422NONCOSITED_FIELD        (0xFFFFFFFF - (0x1UL<<CAM_422NONCOSITED_SHIFT))
#define CAM_422NONCOSITED_0            (0x0UL<<CAM_422NONCOSITED_SHIFT)
#define CAM_422NONCOSITED_1            (0x1UL<<CAM_422NONCOSITED_SHIFT)
#define CAM_422NONCOSITED              (0x1UL<<CAM_422NONCOSITED_SHIFT)
#define CAM_CBCR_FULL_RANGE_SHIFT      9
#define CAM_CBCR_FULL_RANGE_FIELD      (0xFFFFFFFF - (0x1UL<<CAM_CBCR_FULL_RANGE_SHIFT))
#define CAM_CBCR_FULL_RANGE_0          (0x0UL<<CAM_CBCR_FULL_RANGE_SHIFT)
#define CAM_CBCR_FULL_RANGE_1          (0x1UL<<CAM_CBCR_FULL_RANGE_SHIFT)
#define CAM_CBCR_FULL_RANGE            (0x1UL<<CAM_CBCR_FULL_RANGE_SHIFT)
#define CAM_Y_FULL_RANGE_SHIFT         8
#define CAM_Y_FULL_RANGE_FIELD         (0xFFFFFFFF - (0x1UL<<CAM_Y_FULL_RANGE_SHIFT))
#define CAM_Y_FULL_RANGE_0             (0x0UL<<CAM_Y_FULL_RANGE_SHIFT)
#define CAM_Y_FULL_RANGE_1             (0x1UL<<CAM_Y_FULL_RANGE_SHIFT)
#define CAM_Y_FULL_RANGE               (0x1UL<<CAM_Y_FULL_RANGE_SHIFT)
#define CAM_BYTE_SWAP_SHIFT            7
#define CAM_BYTE_SWAP_FIELD            (0xFFFFFFFF - (0x1UL<<CAM_BYTE_SWAP_SHIFT))
#define CAM_BYTE_SWAP_0                (0x0UL<<CAM_BYTE_SWAP_SHIFT)
#define CAM_BYTE_SWAP_1                (0x1UL<<CAM_BYTE_SWAP_SHIFT)
#define CAM_BYTE_SWAP                  (0x1UL<<CAM_BYTE_SWAP_SHIFT)
#define CAM_ROT_SHIFT                  6
#define CAM_ROT_FIELD                  (0xFFFFFFFF - (0x1UL<<CAM_ROT_SHIFT))
#define CAM_ROT_0                      (0x0UL<<CAM_ROT_SHIFT)
#define CAM_ROT_1                      (0x1UL<<CAM_ROT_SHIFT)
#define CAM_ROT                        (0x1UL<<CAM_ROT_SHIFT)
#define CAM_V_FLIP_SHIFT               5
#define CAM_V_FLIP_FIELD               (0xFFFFFFFF - (0x1UL<<CAM_V_FLIP_SHIFT))
#define CAM_V_FLIP_0                   (0x0UL<<CAM_V_FLIP_SHIFT)
#define CAM_V_FLIP_1                   (0x1UL<<CAM_V_FLIP_SHIFT)
#define CAM_V_FLIP                     (0x1UL<<CAM_V_FLIP_SHIFT)
#define CAM_H_FLIP_SHIFT               4
#define CAM_H_FLIP_FIELD               (0xFFFFFFFF - (0x1UL<<CAM_H_FLIP_SHIFT))
#define CAM_H_FLIP_0                   (0x0UL<<CAM_H_FLIP_SHIFT)
#define CAM_H_FLIP_1                   (0x1UL<<CAM_H_FLIP_SHIFT)
#define CAM_H_FLIP                     (0x1UL<<CAM_H_FLIP_SHIFT)
#define CAM_RAW_ENABLE_SHIFT           3
#define CAM_RAW_ENABLE_FIELD           (0xFFFFFFFF - (0x1UL<<CAM_RAW_ENABLE_SHIFT))
#define CAM_RAW_ENABLE_0               (0x0UL<<CAM_RAW_ENABLE_SHIFT)
#define CAM_RAW_ENABLE_1               (0x1UL<<CAM_RAW_ENABLE_SHIFT)
#define CAM_RAW_ENABLE                 (0x1UL<<CAM_RAW_ENABLE_SHIFT)
#define CAM_JPEG_ENABLE_SHIFT          2
#define CAM_JPEG_ENABLE_FIELD          (0xFFFFFFFF - (0x1UL<<CAM_JPEG_ENABLE_SHIFT))
#define CAM_JPEG_ENABLE_0              (0x0UL<<CAM_JPEG_ENABLE_SHIFT)
#define CAM_JPEG_ENABLE_1              (0x1UL<<CAM_JPEG_ENABLE_SHIFT)
#define CAM_JPEG_ENABLE                (0x1UL<<CAM_JPEG_ENABLE_SHIFT)
#define CAM_SP_ENABLE_SHIFT            1
#define CAM_SP_ENABLE_FIELD            (0xFFFFFFFF - (0x1UL<<CAM_SP_ENABLE_SHIFT))
#define CAM_SP_ENABLE_0                (0x0UL<<CAM_SP_ENABLE_SHIFT)
#define CAM_SP_ENABLE_1                (0x1UL<<CAM_SP_ENABLE_SHIFT)
#define CAM_SP_ENABLE                  (0x1UL<<CAM_SP_ENABLE_SHIFT)
#define CAM_MP_ENABLE_SHIFT            0
#define CAM_MP_ENABLE_FIELD            (0xFFFFFFFF - (0x1UL<<CAM_MP_ENABLE_SHIFT))
#define CAM_MP_ENABLE_0                (0x0UL<<CAM_MP_ENABLE_SHIFT)
#define CAM_MP_ENABLE_1                (0x1UL<<CAM_MP_ENABLE_SHIFT)
#define CAM_MP_ENABLE                  (0x1UL<<CAM_MP_ENABLE_SHIFT)

/*****************************************************************************/
/* Register description for MI_INIT */

/* Reset value of register CAM_MI_INIT */
#define CAM_MI_INIT_VALUE              0x0

/* Bits definition for register CAM_MI_INIT */
#define CAM_MI_CFG_UP_SHIFT            4
#define CAM_MI_CFG_UP_FIELD            (0xFFFFFFFF - (0x1UL<<CAM_MI_CFG_UP_SHIFT))
#define CAM_MI_CFG_UP_0                (0x0UL<<CAM_MI_CFG_UP_SHIFT)
#define CAM_MI_CFG_UP_1                (0x1UL<<CAM_MI_CFG_UP_SHIFT)
#define CAM_MI_CFG_UP                  (0x1UL<<CAM_MI_CFG_UP_SHIFT)
#define CAM_SKIP_SHIFT                 2
#define CAM_SKIP_FIELD                 (0xFFFFFFFF - (0x1UL<<CAM_SKIP_SHIFT))
#define CAM_SKIP_0                     (0x0UL<<CAM_SKIP_SHIFT)
#define CAM_SKIP_1                     (0x1UL<<CAM_SKIP_SHIFT)
#define CAM_SKIP                       (0x1UL<<CAM_SKIP_SHIFT)

/*****************************************************************************/
/* Register description for MI_MP_Y_BASE_ADDR */

/* Reset value of register CAM_MI_MP_Y_BASE_ADDR */

/* Bits definition for register CAM_MI_MP_Y_BASE_ADDR */

/*****************************************************************************/
/* Register description for MI_MP_Y_SIZE */

/* Reset value of register CAM_MI_MP_Y_SIZE */
#define CAM_MI_MP_Y_SIZE_VALUE         0x0

/* Bits definition for register CAM_MI_MP_Y_SIZE */
#define CAM_BUF_SIZE_SHIFT             2
#define CAM_BUF_SIZE_FIELD             (0xFFFFFFFF - (0x3FFFFFUL<<CAM_BUF_SIZE_SHIFT))
#define CAM_BUF_SIZE_0                 (0x0UL<<CAM_BUF_SIZE_SHIFT)

/*****************************************************************************/
/* Register description for MI_MP_Y_OFFS */

/* Reset value of register CAM_MI_MP_Y_OFFS */
#define CAM_MI_MP_Y_OFFS_VALUE         0x0

/* Bits definition for register CAM_MI_MP_Y_OFFS */
#define CAM_OFFSET_SHIFT               2
#define CAM_OFFSET_FIELD               (0xFFFFFFFF - (0x3FFFFFUL<<CAM_OFFSET_SHIFT))
#define CAM_OFFSET_0                   (0x0UL<<CAM_OFFSET_SHIFT)

/*****************************************************************************/
/* Register description for MI_MP_Y_OFFS_START */

/* Reset value of register CAM_MI_MP_Y_OFFS_START */
#define CAM_MI_MP_Y_OFFS_START_VALUE   0x0

/* Bits definition for register CAM_MI_MP_Y_OFFS_START */
#define CAM_START_OFFSET_SHIFT         2
#define CAM_START_OFFSET_FIELD         (0xFFFFFFFF - (0x3FFFFFUL<<CAM_START_OFFSET_SHIFT))
#define CAM_START_OFFSET_0             (0x0UL<<CAM_START_OFFSET_SHIFT)

/*****************************************************************************/
/* Register description for MI_MP_Y_IRQ_OFFS */

/* Reset value of register CAM_MI_MP_Y_IRQ_OFFS */
#define CAM_MI_MP_Y_IRQ_OFFS_VALUE     0x0

/* Bits definition for register CAM_MI_MP_Y_IRQ_OFFS */
#define CAM_IRQ_OFFSET_SHIFT           2
#define CAM_IRQ_OFFSET_FIELD           (0xFFFFFFFF - (0x3FFFFFUL<<CAM_IRQ_OFFSET_SHIFT))
#define CAM_IRQ_OFFSET_0               (0x0UL<<CAM_IRQ_OFFSET_SHIFT)

/*****************************************************************************/
/* Register description for MI_MP_CB_BASE_ADDR */

/* Reset value of register CAM_MI_MP_CB_BASE_ADDR */

/* Bits definition for register CAM_MI_MP_CB_BASE_ADDR */

/*****************************************************************************/
/* Register description for MI_MP_CB_SIZE */

/* Reset value of register CAM_MI_MP_CB_SIZE */
#define CAM_MI_MP_CB_SIZE_VALUE        0x0

/* Bits definition for register CAM_MI_MP_CB_SIZE */
#define CAM_BUF_SIZE_SHIFT             2
#define CAM_BUF_SIZE_FIELD             (0xFFFFFFFF - (0x3FFFFFUL<<CAM_BUF_SIZE_SHIFT))
#define CAM_BUF_SIZE_0                 (0x0UL<<CAM_BUF_SIZE_SHIFT)

/*****************************************************************************/
/* Register description for MI_MP_CB_OFFS */

/* Reset value of register CAM_MI_MP_CB_OFFS */
#define CAM_MI_MP_CB_OFFS_VALUE        0x0

/* Bits definition for register CAM_MI_MP_CB_OFFS */
#define CAM_OFFSET_SHIFT               2
#define CAM_OFFSET_FIELD               (0xFFFFFFFF - (0x3FFFFFUL<<CAM_OFFSET_SHIFT))
#define CAM_OFFSET_0                   (0x0UL<<CAM_OFFSET_SHIFT)

/*****************************************************************************/
/* Register description for MI_MP_CB_OFFS_START */

/* Reset value of register CAM_MI_MP_CB_OFFS_START */
#define CAM_MI_MP_CB_OFFS_START_VALUE  0x0

/* Bits definition for register CAM_MI_MP_CB_OFFS_START */
#define CAM_START_OFFSET_SHIFT         2
#define CAM_START_OFFSET_FIELD         (0xFFFFFFFF - (0x3FFFFFUL<<CAM_START_OFFSET_SHIFT))
#define CAM_START_OFFSET_0             (0x0UL<<CAM_START_OFFSET_SHIFT)

/*****************************************************************************/
/* Register description for MI_MP_CR_BASE_ADDR */

/* Reset value of register CAM_MI_MP_CR_BASE_ADDR */

/* Bits definition for register CAM_MI_MP_CR_BASE_ADDR */

/*****************************************************************************/
/* Register description for MI_MP_CR_SIZE */

/* Reset value of register CAM_MI_MP_CR_SIZE */
#define CAM_MI_MP_CR_SIZE_VALUE        0x0

/* Bits definition for register CAM_MI_MP_CR_SIZE */
#define CAM_BUF_SIZE_SHIFT             2
#define CAM_BUF_SIZE_FIELD             (0xFFFFFFFF - (0x3FFFFFUL<<CAM_BUF_SIZE_SHIFT))
#define CAM_BUF_SIZE_0                 (0x0UL<<CAM_BUF_SIZE_SHIFT)

/*****************************************************************************/
/* Register description for MI_MP_CR_OFFS */

/* Reset value of register CAM_MI_MP_CR_OFFS */
#define CAM_MI_MP_CR_OFFS_VALUE        0x0

/* Bits definition for register CAM_MI_MP_CR_OFFS */
#define CAM_OFFSET_SHIFT               2
#define CAM_OFFSET_FIELD               (0xFFFFFFFF - (0x3FFFFFUL<<CAM_OFFSET_SHIFT))
#define CAM_OFFSET_0                   (0x0UL<<CAM_OFFSET_SHIFT)

/*****************************************************************************/
/* Register description for MI_MP_CR_OFFS_START */

/* Reset value of register CAM_MI_MP_CR_OFFS_START */
#define CAM_MI_MP_CR_OFFS_START_VALUE  0x0

/* Bits definition for register CAM_MI_MP_CR_OFFS_START */
#define CAM_START_OFFSET_SHIFT         2
#define CAM_START_OFFSET_FIELD         (0xFFFFFFFF - (0x3FFFFFUL<<CAM_START_OFFSET_SHIFT))
#define CAM_START_OFFSET_0             (0x0UL<<CAM_START_OFFSET_SHIFT)

/*****************************************************************************/
/* Register description for MI_SP_Y_BASE_ADDR */

/* Reset value of register CAM_MI_SP_Y_BASE_ADDR */

/* Bits definition for register CAM_MI_SP_Y_BASE_ADDR */

/*****************************************************************************/
/* Register description for MI_SP_Y_SIZE */

/* Reset value of register CAM_MI_SP_Y_SIZE */
#define CAM_MI_SP_Y_SIZE_VALUE         0x0

/* Bits definition for register CAM_MI_SP_Y_SIZE */
#define CAM_BUF_SIZE_SHIFT             2
#define CAM_BUF_SIZE_FIELD             (0xFFFFFFFF - (0x3FFFFFUL<<CAM_BUF_SIZE_SHIFT))
#define CAM_BUF_SIZE_0                 (0x0UL<<CAM_BUF_SIZE_SHIFT)

/*****************************************************************************/
/* Register description for MI_SP_Y_OFFS */

/* Reset value of register CAM_MI_SP_Y_OFFS */
#define CAM_MI_SP_Y_OFFS_VALUE         0x0

/* Bits definition for register CAM_MI_SP_Y_OFFS */
#define CAM_OFFSET_SHIFT               2
#define CAM_OFFSET_FIELD               (0xFFFFFFFF - (0x3FFFFFUL<<CAM_OFFSET_SHIFT))
#define CAM_OFFSET_0                   (0x0UL<<CAM_OFFSET_SHIFT)

/*****************************************************************************/
/* Register description for MI_SP_Y_OFFS_START */

/* Reset value of register CAM_MI_SP_Y_OFFS_START */
#define CAM_MI_SP_Y_OFFS_START_VALUE   0x0

/* Bits definition for register CAM_MI_SP_Y_OFFS_START */
#define CAM_START_OFFSET_SHIFT         2
#define CAM_START_OFFSET_FIELD         (0xFFFFFFFF - (0x3FFFFFUL<<CAM_START_OFFSET_SHIFT))
#define CAM_START_OFFSET_0             (0x0UL<<CAM_START_OFFSET_SHIFT)

/*****************************************************************************/
/* Register description for MI_SP_Y_LLENGTH */

/* Reset value of register CAM_MI_SP_Y_LLENGTH */
#define CAM_MI_SP_Y_LLENGTH_VALUE      0x0

/* Bits definition for register CAM_MI_SP_Y_LLENGTH */
#define CAM_SP_Y_LENGTH_SHIFT          0
#define CAM_SP_Y_LENGTH_FIELD          (0xFFFFFFFF - (0xFFFUL<<CAM_SP_Y_LENGTH_SHIFT))
#define CAM_SP_Y_LENGTH_0              (0x0UL<<CAM_SP_Y_LENGTH_SHIFT)

/*****************************************************************************/
/* Register description for MI_SP_CB_BASE_ADDR */

/* Reset value of register CAM_MI_SP_CB_BASE_ADDR */

/* Bits definition for register CAM_MI_SP_CB_BASE_ADDR */

/*****************************************************************************/
/* Register description for MI_SP_CB_SIZE */

/* Reset value of register CAM_MI_SP_CB_SIZE */
#define CAM_MI_SP_CB_SIZE_VALUE        0x0

/* Bits definition for register CAM_MI_SP_CB_SIZE */
#define CAM_BUF_SIZE_SHIFT             2
#define CAM_BUF_SIZE_FIELD             (0xFFFFFFFF - (0x3FFFFFUL<<CAM_BUF_SIZE_SHIFT))
#define CAM_BUF_SIZE_0                 (0x0UL<<CAM_BUF_SIZE_SHIFT)

/*****************************************************************************/
/* Register description for MI_SP_CB_OFFS */

/* Reset value of register CAM_MI_SP_CB_OFFS */
#define CAM_MI_SP_CB_OFFS_VALUE        0x0

/* Bits definition for register CAM_MI_SP_CB_OFFS */
#define CAM_OFFSET_SHIFT               2
#define CAM_OFFSET_FIELD               (0xFFFFFFFF - (0x3FFFFFUL<<CAM_OFFSET_SHIFT))
#define CAM_OFFSET_0                   (0x0UL<<CAM_OFFSET_SHIFT)

/*****************************************************************************/
/* Register description for MI_SP_CB_OFFS_START */

/* Reset value of register CAM_MI_SP_CB_OFFS_START */
#define CAM_MI_SP_CB_OFFS_START_VALUE  0x0

/* Bits definition for register CAM_MI_SP_CB_OFFS_START */
#define CAM_START_OFFSET_SHIFT         2
#define CAM_START_OFFSET_FIELD         (0xFFFFFFFF - (0x3FFFFFUL<<CAM_START_OFFSET_SHIFT))
#define CAM_START_OFFSET_0             (0x0UL<<CAM_START_OFFSET_SHIFT)

/*****************************************************************************/
/* Register description for MI_SP_CR_BASE_ADDR */

/* Reset value of register CAM_MI_SP_CR_BASE_ADDR */

/* Bits definition for register CAM_MI_SP_CR_BASE_ADDR */

/*****************************************************************************/
/* Register description for MI_SP_CR_SIZE */

/* Reset value of register CAM_MI_SP_CR_SIZE */
#define CAM_MI_SP_CR_SIZE_VALUE        0x0

/* Bits definition for register CAM_MI_SP_CR_SIZE */
#define CAM_BUF_SIZE_SHIFT             2
#define CAM_BUF_SIZE_FIELD             (0xFFFFFFFF - (0x3FFFFFUL<<CAM_BUF_SIZE_SHIFT))
#define CAM_BUF_SIZE_0                 (0x0UL<<CAM_BUF_SIZE_SHIFT)

/*****************************************************************************/
/* Register description for MI_SP_CR_OFFS */

/* Reset value of register CAM_MI_SP_CR_OFFS */
#define CAM_MI_SP_CR_OFFS_VALUE        0x0

/* Bits definition for register CAM_MI_SP_CR_OFFS */
#define CAM_OFFSET_SHIFT               2
#define CAM_OFFSET_FIELD               (0xFFFFFFFF - (0x3FFFFFUL<<CAM_OFFSET_SHIFT))
#define CAM_OFFSET_0                   (0x0UL<<CAM_OFFSET_SHIFT)

/*****************************************************************************/
/* Register description for MI_SP_CR_OFFS_START */

/* Reset value of register CAM_MI_SP_CR_OFFS_START */
#define CAM_MI_SP_CR_OFFS_START_VALUE  0x0

/* Bits definition for register CAM_MI_SP_CR_OFFS_START */
#define CAM_START_OFFSET_SHIFT         2
#define CAM_START_OFFSET_FIELD         (0xFFFFFFFF - (0x3FFFFFUL<<CAM_START_OFFSET_SHIFT))
#define CAM_START_OFFSET_0             (0x0UL<<CAM_START_OFFSET_SHIFT)

/*****************************************************************************/
/* Register description for MI_BYTE_CNT */

/* Reset value of register CAM_MI_BYTE_CNT */
#define CAM_MI_BYTE_CNT_VALUE          0x0

/* Bits definition for register CAM_MI_BYTE_CNT */
#define CAM_BYTE_CNT_SHIFT             0
#define CAM_BYTE_CNT_FIELD             (0xFFFFFFFF - (0xFFFFFFUL<<CAM_BYTE_CNT_SHIFT))
#define CAM_BYTE_CNT_0                 (0x0UL<<CAM_BYTE_CNT_SHIFT)

/*****************************************************************************/
/* Register description for MI_CTRL_SHD */

/* Reset value of register CAM_MI_CTRL_SHD */
#define CAM_MI_CTRL_SHD_VALUE          0x0

/* Bits definition for register CAM_MI_CTRL_SHD */
#define CAM_RAW_ENABLE_OUT_SHIFT       19
#define CAM_RAW_ENABLE_OUT_FIELD       (0xFFFFFFFF - (0x1UL<<CAM_RAW_ENABLE_OUT_SHIFT))
#define CAM_RAW_ENABLE_OUT_0           (0x0UL<<CAM_RAW_ENABLE_OUT_SHIFT)
#define CAM_RAW_ENABLE_OUT_1           (0x1UL<<CAM_RAW_ENABLE_OUT_SHIFT)
#define CAM_RAW_ENABLE_OUT             (0x1UL<<CAM_RAW_ENABLE_OUT_SHIFT)
#define CAM_JPEG_ENABLE_OUT_SHIFT      18
#define CAM_JPEG_ENABLE_OUT_FIELD      (0xFFFFFFFF - (0x1UL<<CAM_JPEG_ENABLE_OUT_SHIFT))
#define CAM_JPEG_ENABLE_OUT_0          (0x0UL<<CAM_JPEG_ENABLE_OUT_SHIFT)
#define CAM_JPEG_ENABLE_OUT_1          (0x1UL<<CAM_JPEG_ENABLE_OUT_SHIFT)
#define CAM_JPEG_ENABLE_OUT            (0x1UL<<CAM_JPEG_ENABLE_OUT_SHIFT)
#define CAM_SP_ENABLE_OUT_SHIFT        17
#define CAM_SP_ENABLE_OUT_FIELD        (0xFFFFFFFF - (0x1UL<<CAM_SP_ENABLE_OUT_SHIFT))
#define CAM_SP_ENABLE_OUT_0            (0x0UL<<CAM_SP_ENABLE_OUT_SHIFT)
#define CAM_SP_ENABLE_OUT_1            (0x1UL<<CAM_SP_ENABLE_OUT_SHIFT)
#define CAM_SP_ENABLE_OUT              (0x1UL<<CAM_SP_ENABLE_OUT_SHIFT)
#define CAM_MP_ENABLE_OUT_SHIFT        16
#define CAM_MP_ENABLE_OUT_FIELD        (0xFFFFFFFF - (0x1UL<<CAM_MP_ENABLE_OUT_SHIFT))
#define CAM_MP_ENABLE_OUT_0            (0x0UL<<CAM_MP_ENABLE_OUT_SHIFT)
#define CAM_MP_ENABLE_OUT_1            (0x1UL<<CAM_MP_ENABLE_OUT_SHIFT)
#define CAM_MP_ENABLE_OUT              (0x1UL<<CAM_MP_ENABLE_OUT_SHIFT)
#define CAM_RAW_ENABLE_IN_SHIFT        5
#define CAM_RAW_ENABLE_IN_FIELD        (0xFFFFFFFF - (0x1UL<<CAM_RAW_ENABLE_IN_SHIFT))
#define CAM_RAW_ENABLE_IN_0            (0x0UL<<CAM_RAW_ENABLE_IN_SHIFT)
#define CAM_RAW_ENABLE_IN_1            (0x1UL<<CAM_RAW_ENABLE_IN_SHIFT)
#define CAM_RAW_ENABLE_IN              (0x1UL<<CAM_RAW_ENABLE_IN_SHIFT)
#define CAM_JPEG_ENABLE_IN_SHIFT       4
#define CAM_JPEG_ENABLE_IN_FIELD       (0xFFFFFFFF - (0x1UL<<CAM_JPEG_ENABLE_IN_SHIFT))
#define CAM_JPEG_ENABLE_IN_0           (0x0UL<<CAM_JPEG_ENABLE_IN_SHIFT)
#define CAM_JPEG_ENABLE_IN_1           (0x1UL<<CAM_JPEG_ENABLE_IN_SHIFT)
#define CAM_JPEG_ENABLE_IN             (0x1UL<<CAM_JPEG_ENABLE_IN_SHIFT)
#define CAM_SP_ENABLE_IN_SHIFT         2
#define CAM_SP_ENABLE_IN_FIELD         (0xFFFFFFFF - (0x1UL<<CAM_SP_ENABLE_IN_SHIFT))
#define CAM_SP_ENABLE_IN_0             (0x0UL<<CAM_SP_ENABLE_IN_SHIFT)
#define CAM_SP_ENABLE_IN_1             (0x1UL<<CAM_SP_ENABLE_IN_SHIFT)
#define CAM_SP_ENABLE_IN               (0x1UL<<CAM_SP_ENABLE_IN_SHIFT)
#define CAM_MP_ENABLE_IN_SHIFT         0
#define CAM_MP_ENABLE_IN_FIELD         (0xFFFFFFFF - (0x1UL<<CAM_MP_ENABLE_IN_SHIFT))
#define CAM_MP_ENABLE_IN_0             (0x0UL<<CAM_MP_ENABLE_IN_SHIFT)
#define CAM_MP_ENABLE_IN_1             (0x1UL<<CAM_MP_ENABLE_IN_SHIFT)
#define CAM_MP_ENABLE_IN               (0x1UL<<CAM_MP_ENABLE_IN_SHIFT)

/*****************************************************************************/
/* Register description for MI_MP_Y_BASE_ADDR_SHD */

/* Reset value of register CAM_MI_MP_Y_BASE_ADDR_SHD */

/* Bits definition for register CAM_MI_MP_Y_BASE_ADDR_SHD */

/*****************************************************************************/
/* Register description for MI_MP_Y_SIZE_SHD */

/* Reset value of register CAM_MI_MP_Y_SIZE_SHD */
#define CAM_MI_MP_Y_SIZE_SHD_VALUE     0x0

/* Bits definition for register CAM_MI_MP_Y_SIZE_SHD */
#define CAM_BUF_SIZE_SHIFT             2
#define CAM_BUF_SIZE_FIELD             (0xFFFFFFFF - (0x3FFFFFUL<<CAM_BUF_SIZE_SHIFT))
#define CAM_BUF_SIZE_0                 (0x0UL<<CAM_BUF_SIZE_SHIFT)

/*****************************************************************************/
/* Register description for MI_MP_Y_OFFS_SHD */

/* Reset value of register CAM_MI_MP_Y_OFFS_SHD */
#define CAM_MI_MP_Y_OFFS_SHD_VALUE     0x0

/* Bits definition for register CAM_MI_MP_Y_OFFS_SHD */
#define CAM_OFFSET_SHIFT               2
#define CAM_OFFSET_FIELD               (0xFFFFFFFF - (0x3FFFFFUL<<CAM_OFFSET_SHIFT))
#define CAM_OFFSET_0                   (0x0UL<<CAM_OFFSET_SHIFT)

/*****************************************************************************/
/* Register description for MI_MP_Y_IRQ_OFFS_SHD */

/* Reset value of register CAM_MI_MP_Y_IRQ_OFFS_SHD */
#define CAM_MI_MP_Y_IRQ_OFFS_SHD_VALUE 0x0

/* Bits definition for register CAM_MI_MP_Y_IRQ_OFFS_SHD */
#define CAM_IRQ_OFFSET_SHIFT           2
#define CAM_IRQ_OFFSET_FIELD           (0xFFFFFFFF - (0x3FFFFFUL<<CAM_IRQ_OFFSET_SHIFT))
#define CAM_IRQ_OFFSET_0               (0x0UL<<CAM_IRQ_OFFSET_SHIFT)

/*****************************************************************************/
/* Register description for MI_MP_CB_BASE_ADDR_SHD */

/* Reset value of register CAM_MI_MP_CB_BASE_ADDR_SHD */

/* Bits definition for register CAM_MI_MP_CB_BASE_ADDR_SHD */

/*****************************************************************************/
/* Register description for MI_MP_CB_SIZE_SHD */

/* Reset value of register CAM_MI_MP_CB_SIZE_SHD */
#define CAM_MI_MP_CB_SIZE_SHD_VALUE    0x0

/* Bits definition for register CAM_MI_MP_CB_SIZE_SHD */
#define CAM_BUF_SIZE_SHIFT             2
#define CAM_BUF_SIZE_FIELD             (0xFFFFFFFF - (0x3FFFFFUL<<CAM_BUF_SIZE_SHIFT))
#define CAM_BUF_SIZE_0                 (0x0UL<<CAM_BUF_SIZE_SHIFT)

/*****************************************************************************/
/* Register description for MI_MP_CB_OFFS_SHD */

/* Reset value of register CAM_MI_MP_CB_OFFS_SHD */
#define CAM_MI_MP_CB_OFFS_SHD_VALUE    0x0

/* Bits definition for register CAM_MI_MP_CB_OFFS_SHD */
#define CAM_OFFSET_SHIFT               2
#define CAM_OFFSET_FIELD               (0xFFFFFFFF - (0x3FFFFFUL<<CAM_OFFSET_SHIFT))
#define CAM_OFFSET_0                   (0x0UL<<CAM_OFFSET_SHIFT)

/*****************************************************************************/
/* Register description for MI_MP_CR_BASE_ADDR_SHD */

/* Reset value of register CAM_MI_MP_CR_BASE_ADDR_SHD */

/* Bits definition for register CAM_MI_MP_CR_BASE_ADDR_SHD */

/*****************************************************************************/
/* Register description for MI_MP_CR_SIZE_SHD */

/* Reset value of register CAM_MI_MP_CR_SIZE_SHD */
#define CAM_MI_MP_CR_SIZE_SHD_VALUE    0x0

/* Bits definition for register CAM_MI_MP_CR_SIZE_SHD */
#define CAM_BUF_SIZE_SHIFT             2
#define CAM_BUF_SIZE_FIELD             (0xFFFFFFFF - (0x3FFFFFUL<<CAM_BUF_SIZE_SHIFT))
#define CAM_BUF_SIZE_0                 (0x0UL<<CAM_BUF_SIZE_SHIFT)

/*****************************************************************************/
/* Register description for MI_MP_CR_OFFS_SHD */

/* Reset value of register CAM_MI_MP_CR_OFFS_SHD */
#define CAM_MI_MP_CR_OFFS_SHD_VALUE    0x0

/* Bits definition for register CAM_MI_MP_CR_OFFS_SHD */
#define CAM_OFFSET_SHIFT               2
#define CAM_OFFSET_FIELD               (0xFFFFFFFF - (0x3FFFFFUL<<CAM_OFFSET_SHIFT))
#define CAM_OFFSET_0                   (0x0UL<<CAM_OFFSET_SHIFT)

/*****************************************************************************/
/* Register description for MI_SP_Y_BASE_ADDR_SHD */

/* Reset value of register CAM_MI_SP_Y_BASE_ADDR_SHD */

/* Bits definition for register CAM_MI_SP_Y_BASE_ADDR_SHD */

/*****************************************************************************/
/* Register description for MI_SP_Y_SIZE_SHD */

/* Reset value of register CAM_MI_SP_Y_SIZE_SHD */
#define CAM_MI_SP_Y_SIZE_SHD_VALUE     0x0

/* Bits definition for register CAM_MI_SP_Y_SIZE_SHD */
#define CAM_BUF_SIZE_SHIFT             2
#define CAM_BUF_SIZE_FIELD             (0xFFFFFFFF - (0x3FFFFFUL<<CAM_BUF_SIZE_SHIFT))
#define CAM_BUF_SIZE_0                 (0x0UL<<CAM_BUF_SIZE_SHIFT)

/*****************************************************************************/
/* Register description for MI_SP_Y_OFFS_SHD */

/* Reset value of register CAM_MI_SP_Y_OFFS_SHD */
#define CAM_MI_SP_Y_OFFS_SHD_VALUE     0x0

/* Bits definition for register CAM_MI_SP_Y_OFFS_SHD */
#define CAM_OFFSET_SHIFT               2
#define CAM_OFFSET_FIELD               (0xFFFFFFFF - (0x3FFFFFUL<<CAM_OFFSET_SHIFT))
#define CAM_OFFSET_0                   (0x0UL<<CAM_OFFSET_SHIFT)

/*****************************************************************************/
/* Register description for MI_SP_CB_BASE_ADDR_SHD */

/* Reset value of register CAM_MI_SP_CB_BASE_ADDR_SHD */

/* Bits definition for register CAM_MI_SP_CB_BASE_ADDR_SHD */

/*****************************************************************************/
/* Register description for MI_SP_CB_SIZE_SHD */

/* Reset value of register CAM_MI_SP_CB_SIZE_SHD */
#define CAM_MI_SP_CB_SIZE_SHD_VALUE    0x0

/* Bits definition for register CAM_MI_SP_CB_SIZE_SHD */
#define CAM_BUF_SIZE_SHIFT             2
#define CAM_BUF_SIZE_FIELD             (0xFFFFFFFF - (0x3FFFFFUL<<CAM_BUF_SIZE_SHIFT))
#define CAM_BUF_SIZE_0                 (0x0UL<<CAM_BUF_SIZE_SHIFT)

/*****************************************************************************/
/* Register description for MI_SP_CB_OFFS_SHD */

/* Reset value of register CAM_MI_SP_CB_OFFS_SHD */
#define CAM_MI_SP_CB_OFFS_SHD_VALUE    0x0

/* Bits definition for register CAM_MI_SP_CB_OFFS_SHD */
#define CAM_OFFSET_SHIFT               2
#define CAM_OFFSET_FIELD               (0xFFFFFFFF - (0x3FFFFFUL<<CAM_OFFSET_SHIFT))
#define CAM_OFFSET_0                   (0x0UL<<CAM_OFFSET_SHIFT)

/*****************************************************************************/
/* Register description for MI_SP_CR_BASE_ADDR_SHD */

/* Reset value of register CAM_MI_SP_CR_BASE_ADDR_SHD */

/* Bits definition for register CAM_MI_SP_CR_BASE_ADDR_SHD */

/*****************************************************************************/
/* Register description for MI_SP_CR_SIZE_SHD */

/* Reset value of register CAM_MI_SP_CR_SIZE_SHD */
#define CAM_MI_SP_CR_SIZE_SHD_VALUE    0x0

/* Bits definition for register CAM_MI_SP_CR_SIZE_SHD */
#define CAM_BUF_SIZE_SHIFT             2
#define CAM_BUF_SIZE_FIELD             (0xFFFFFFFF - (0x3FFFFFUL<<CAM_BUF_SIZE_SHIFT))
#define CAM_BUF_SIZE_0                 (0x0UL<<CAM_BUF_SIZE_SHIFT)

/*****************************************************************************/
/* Register description for MI_SP_CR_OFFS_SHD */

/* Reset value of register CAM_MI_SP_CR_OFFS_SHD */
#define CAM_MI_SP_CR_OFFS_SHD_VALUE    0x0

/* Bits definition for register CAM_MI_SP_CR_OFFS_SHD */
#define CAM_OFFSET_SHIFT               2
#define CAM_OFFSET_FIELD               (0xFFFFFFFF - (0x3FFFFFUL<<CAM_OFFSET_SHIFT))
#define CAM_OFFSET_0                   (0x0UL<<CAM_OFFSET_SHIFT)

/*****************************************************************************/
/* Register description for MI_DMA_Y_PIC_START_ADDR */

/* Reset value of register CAM_MI_DMA_Y_PIC_START_ADDR */
#define CAM_MI_DMA_Y_PIC_START_ADDR_VALUE          0x0

/* Bits definition for register CAM_MI_DMA_Y_PIC_START_ADDR */
#define CAM_DMA_Y_START_ADDR_SHIFT     0
#define CAM_DMA_Y_START_ADDR_FIELD     (0xFFFFFFFF - (0x7FFFFFFFUL<<CAM_DMA_Y_START_ADDR_SHIFT))
#define CAM_DMA_Y_START_ADDR_0         (0x0UL<<CAM_DMA_Y_START_ADDR_SHIFT)

/*****************************************************************************/
/* Register description for MI_DMA_Y_PIC_WIDTH */

/* Reset value of register CAM_MI_DMA_Y_PIC_WIDTH */
#define CAM_MI_DMA_Y_PIC_WIDTH_VALUE   0x0

/* Bits definition for register CAM_MI_DMA_Y_PIC_WIDTH */
#define CAM_DMA_Y_WIDTH_SHIFT          0
#define CAM_DMA_Y_WIDTH_FIELD          (0xFFFFFFFF - (0xFFFUL<<CAM_DMA_Y_WIDTH_SHIFT))
#define CAM_DMA_Y_WIDTH_0              (0x0UL<<CAM_DMA_Y_WIDTH_SHIFT)

/*****************************************************************************/
/* Register description for MI_DMA_Y_LLENGTH */

/* Reset value of register CAM_MI_DMA_Y_LLENGTH */
#define CAM_MI_DMA_Y_LLENGTH_VALUE     0x0

/* Bits definition for register CAM_MI_DMA_Y_LLENGTH */
#define CAM_DMA_Y_LLENGTH_SHIFT        0
#define CAM_DMA_Y_LLENGTH_FIELD        (0xFFFFFFFF - (0xFFFUL<<CAM_DMA_Y_LLENGTH_SHIFT))
#define CAM_DMA_Y_LLENGTH_0            (0x0UL<<CAM_DMA_Y_LLENGTH_SHIFT)

/*****************************************************************************/
/* Register description for MI_DMA_Y_PIC_SIZE */

/* Reset value of register CAM_MI_DMA_Y_PIC_SIZE */
#define CAM_MI_DMA_Y_PIC_SIZE_VALUE    0x0

/* Bits definition for register CAM_MI_DMA_Y_PIC_SIZE */
#define CAM_DMA_Y_SIZE_SHIFT           0
#define CAM_DMA_Y_SIZE_FIELD           (0xFFFFFFFF - (0xFFFFFFUL<<CAM_DMA_Y_SIZE_SHIFT))
#define CAM_DMA_Y_SIZE_0               (0x0UL<<CAM_DMA_Y_SIZE_SHIFT)

/*****************************************************************************/
/* Register description for MI_DMA_CB_PIC_START_ADDR */

/* Reset value of register CAM_MI_DMA_CB_PIC_START_ADDR */
#define CAM_MI_DMA_CB_PIC_START_ADDR_VALUE         0x0

/* Bits definition for register CAM_MI_DMA_CB_PIC_START_ADDR */
#define CAM_DMA_CB_START_ADDR_SHIFT    0
#define CAM_DMA_CB_START_ADDR_FIELD    (0xFFFFFFFF - (0x7FFFFFFFUL<<CAM_DMA_CB_START_ADDR_SHIFT))
#define CAM_DMA_CB_START_ADDR_0        (0x0UL<<CAM_DMA_CB_START_ADDR_SHIFT)

/*****************************************************************************/
/* Register description for MI_DMA_CR_PIC_START_ADDR */

/* Reset value of register CAM_MI_DMA_CR_PIC_START_ADDR */
#define CAM_MI_DMA_CR_PIC_START_ADDR_VALUE         0x0

/* Bits definition for register CAM_MI_DMA_CR_PIC_START_ADDR */
#define CAM_DMA_CR_START_ADDR_SHIFT    0
#define CAM_DMA_CR_START_ADDR_FIELD    (0xFFFFFFFF - (0x7FFFFFFFUL<<CAM_DMA_CR_START_ADDR_SHIFT))
#define CAM_DMA_CR_START_ADDR_0        (0x0UL<<CAM_DMA_CR_START_ADDR_SHIFT)

/*****************************************************************************/
/* Register description for MI_IMSC */

/* Reset value of register CAM_MI_IMSC */
#define CAM_MI_IMSC_VALUE              0x0

/* Bits definition for register CAM_MI_IMSC */
#define CAM_IMSC_DMA_READY_SHIFT       11
#define CAM_IMSC_DMA_READY_FIELD       (0xFFFFFFFF - (0x1UL<<CAM_IMSC_DMA_READY_SHIFT))
#define CAM_IMSC_DMA_READY_0           (0x0UL<<CAM_IMSC_DMA_READY_SHIFT)
#define CAM_IMSC_DMA_READY_1           (0x1UL<<CAM_IMSC_DMA_READY_SHIFT)
#define CAM_IMSC_DMA_READY             (0x1UL<<CAM_IMSC_DMA_READY_SHIFT)
#define CAM_IMSC_AHB_ERR_SHIFT         10
#define CAM_IMSC_AHB_ERR_FIELD         (0xFFFFFFFF - (0x1UL<<CAM_IMSC_AHB_ERR_SHIFT))
#define CAM_IMSC_AHB_ERR_0             (0x0UL<<CAM_IMSC_AHB_ERR_SHIFT)
#define CAM_IMSC_AHB_ERR_1             (0x1UL<<CAM_IMSC_AHB_ERR_SHIFT)
#define CAM_IMSC_AHB_ERR               (0x1UL<<CAM_IMSC_AHB_ERR_SHIFT)
#define CAM_IMSC_WRP_S_CR_SHIFT        9
#define CAM_IMSC_WRP_S_CR_FIELD        (0xFFFFFFFF - (0x1UL<<CAM_IMSC_WRP_S_CR_SHIFT))
#define CAM_IMSC_WRP_S_CR_0            (0x0UL<<CAM_IMSC_WRP_S_CR_SHIFT)
#define CAM_IMSC_WRP_S_CR_1            (0x1UL<<CAM_IMSC_WRP_S_CR_SHIFT)
#define CAM_IMSC_WRP_S_CR              (0x1UL<<CAM_IMSC_WRP_S_CR_SHIFT)
#define CAM_IMSC_WRP_S_CB_SHIFT        8
#define CAM_IMSC_WRP_S_CB_FIELD        (0xFFFFFFFF - (0x1UL<<CAM_IMSC_WRP_S_CB_SHIFT))
#define CAM_IMSC_WRP_S_CB_0            (0x0UL<<CAM_IMSC_WRP_S_CB_SHIFT)
#define CAM_IMSC_WRP_S_CB_1            (0x1UL<<CAM_IMSC_WRP_S_CB_SHIFT)
#define CAM_IMSC_WRP_S_CB              (0x1UL<<CAM_IMSC_WRP_S_CB_SHIFT)
#define CAM_IMSC_WRP_S_Y_SHIFT         7
#define CAM_IMSC_WRP_S_Y_FIELD         (0xFFFFFFFF - (0x1UL<<CAM_IMSC_WRP_S_Y_SHIFT))
#define CAM_IMSC_WRP_S_Y_0             (0x0UL<<CAM_IMSC_WRP_S_Y_SHIFT)
#define CAM_IMSC_WRP_S_Y_1             (0x1UL<<CAM_IMSC_WRP_S_Y_SHIFT)
#define CAM_IMSC_WRP_S_Y               (0x1UL<<CAM_IMSC_WRP_S_Y_SHIFT)
#define CAM_IMSC_WRP_M_CR_SHIFT        6
#define CAM_IMSC_WRP_M_CR_FIELD        (0xFFFFFFFF - (0x1UL<<CAM_IMSC_WRP_M_CR_SHIFT))
#define CAM_IMSC_WRP_M_CR_0            (0x0UL<<CAM_IMSC_WRP_M_CR_SHIFT)
#define CAM_IMSC_WRP_M_CR_1            (0x1UL<<CAM_IMSC_WRP_M_CR_SHIFT)
#define CAM_IMSC_WRP_M_CR              (0x1UL<<CAM_IMSC_WRP_M_CR_SHIFT)
#define CAM_IMSC_WRP_M_CB_SHIFT        5
#define CAM_IMSC_WRP_M_CB_FIELD        (0xFFFFFFFF - (0x1UL<<CAM_IMSC_WRP_M_CB_SHIFT))
#define CAM_IMSC_WRP_M_CB_0            (0x0UL<<CAM_IMSC_WRP_M_CB_SHIFT)
#define CAM_IMSC_WRP_M_CB_1            (0x1UL<<CAM_IMSC_WRP_M_CB_SHIFT)
#define CAM_IMSC_WRP_M_CB              (0x1UL<<CAM_IMSC_WRP_M_CB_SHIFT)
#define CAM_IMSC_WRP_M_Y_SHIFT         4
#define CAM_IMSC_WRP_M_Y_FIELD         (0xFFFFFFFF - (0x1UL<<CAM_IMSC_WRP_M_Y_SHIFT))
#define CAM_IMSC_WRP_M_Y_0             (0x0UL<<CAM_IMSC_WRP_M_Y_SHIFT)
#define CAM_IMSC_WRP_M_Y_1             (0x1UL<<CAM_IMSC_WRP_M_Y_SHIFT)
#define CAM_IMSC_WRP_M_Y               (0x1UL<<CAM_IMSC_WRP_M_Y_SHIFT)
#define CAM_IMSC_FILL_M_Y_SHIFT        3
#define CAM_IMSC_FILL_M_Y_FIELD        (0xFFFFFFFF - (0x1UL<<CAM_IMSC_FILL_M_Y_SHIFT))
#define CAM_IMSC_FILL_M_Y_0            (0x0UL<<CAM_IMSC_FILL_M_Y_SHIFT)
#define CAM_IMSC_FILL_M_Y_1            (0x1UL<<CAM_IMSC_FILL_M_Y_SHIFT)
#define CAM_IMSC_FILL_M_Y              (0x1UL<<CAM_IMSC_FILL_M_Y_SHIFT)
#define CAM_IMSC_MBLK_LINE_SHIFT       2
#define CAM_IMSC_MBLK_LINE_FIELD       (0xFFFFFFFF - (0x1UL<<CAM_IMSC_MBLK_LINE_SHIFT))
#define CAM_IMSC_MBLK_LINE_0           (0x0UL<<CAM_IMSC_MBLK_LINE_SHIFT)
#define CAM_IMSC_MBLK_LINE_1           (0x1UL<<CAM_IMSC_MBLK_LINE_SHIFT)
#define CAM_IMSC_MBLK_LINE             (0x1UL<<CAM_IMSC_MBLK_LINE_SHIFT)
#define CAM_IMSC_SP_FRAME_END_SHIFT    1
#define CAM_IMSC_SP_FRAME_END_FIELD    (0xFFFFFFFF - (0x1UL<<CAM_IMSC_SP_FRAME_END_SHIFT))
#define CAM_IMSC_SP_FRAME_END_0        (0x0UL<<CAM_IMSC_SP_FRAME_END_SHIFT)
#define CAM_IMSC_SP_FRAME_END_1        (0x1UL<<CAM_IMSC_SP_FRAME_END_SHIFT)
#define CAM_IMSC_SP_FRAME_END          (0x1UL<<CAM_IMSC_SP_FRAME_END_SHIFT)
#define CAM_IMSC_MP_FRAME_END_SHIFT    0
#define CAM_IMSC_MP_FRAME_END_FIELD    (0xFFFFFFFF - (0x1UL<<CAM_IMSC_MP_FRAME_END_SHIFT))
#define CAM_IMSC_MP_FRAME_END_0        (0x0UL<<CAM_IMSC_MP_FRAME_END_SHIFT)
#define CAM_IMSC_MP_FRAME_END_1        (0x1UL<<CAM_IMSC_MP_FRAME_END_SHIFT)
#define CAM_IMSC_MP_FRAME_END          (0x1UL<<CAM_IMSC_MP_FRAME_END_SHIFT)

/*****************************************************************************/
/* Register description for MI_RIS */

/* Reset value of register CAM_MI_RIS */
#define CAM_MI_RIS_VALUE               0x0

/* Bits definition for register CAM_MI_RIS */
#define CAM_RIS_DMA_READY_SHIFT        11
#define CAM_RIS_DMA_READY_FIELD        (0xFFFFFFFF - (0x1UL<<CAM_RIS_DMA_READY_SHIFT))
#define CAM_RIS_DMA_READY_0            (0x0UL<<CAM_RIS_DMA_READY_SHIFT)
#define CAM_RIS_DMA_READY_1            (0x1UL<<CAM_RIS_DMA_READY_SHIFT)
#define CAM_RIS_DMA_READY              (0x1UL<<CAM_RIS_DMA_READY_SHIFT)
#define CAM_RIS_AHB_ERR_SHIFT          10
#define CAM_RIS_AHB_ERR_FIELD          (0xFFFFFFFF - (0x1UL<<CAM_RIS_AHB_ERR_SHIFT))
#define CAM_RIS_AHB_ERR_0              (0x0UL<<CAM_RIS_AHB_ERR_SHIFT)
#define CAM_RIS_AHB_ERR_1              (0x1UL<<CAM_RIS_AHB_ERR_SHIFT)
#define CAM_RIS_AHB_ERR                (0x1UL<<CAM_RIS_AHB_ERR_SHIFT)
#define CAM_RIS_WRP_S_CR_SHIFT         9
#define CAM_RIS_WRP_S_CR_FIELD         (0xFFFFFFFF - (0x1UL<<CAM_RIS_WRP_S_CR_SHIFT))
#define CAM_RIS_WRP_S_CR_0             (0x0UL<<CAM_RIS_WRP_S_CR_SHIFT)
#define CAM_RIS_WRP_S_CR_1             (0x1UL<<CAM_RIS_WRP_S_CR_SHIFT)
#define CAM_RIS_WRP_S_CR               (0x1UL<<CAM_RIS_WRP_S_CR_SHIFT)
#define CAM_RIS_WRP_S_CB_SHIFT         8
#define CAM_RIS_WRP_S_CB_FIELD         (0xFFFFFFFF - (0x1UL<<CAM_RIS_WRP_S_CB_SHIFT))
#define CAM_RIS_WRP_S_CB_0             (0x0UL<<CAM_RIS_WRP_S_CB_SHIFT)
#define CAM_RIS_WRP_S_CB_1             (0x1UL<<CAM_RIS_WRP_S_CB_SHIFT)
#define CAM_RIS_WRP_S_CB               (0x1UL<<CAM_RIS_WRP_S_CB_SHIFT)
#define CAM_RIS_WRP_S_Y_SHIFT          7
#define CAM_RIS_WRP_S_Y_FIELD          (0xFFFFFFFF - (0x1UL<<CAM_RIS_WRP_S_Y_SHIFT))
#define CAM_RIS_WRP_S_Y_0              (0x0UL<<CAM_RIS_WRP_S_Y_SHIFT)
#define CAM_RIS_WRP_S_Y_1              (0x1UL<<CAM_RIS_WRP_S_Y_SHIFT)
#define CAM_RIS_WRP_S_Y                (0x1UL<<CAM_RIS_WRP_S_Y_SHIFT)
#define CAM_RIS_WRP_M_CR_SHIFT         6
#define CAM_RIS_WRP_M_CR_FIELD         (0xFFFFFFFF - (0x1UL<<CAM_RIS_WRP_M_CR_SHIFT))
#define CAM_RIS_WRP_M_CR_0             (0x0UL<<CAM_RIS_WRP_M_CR_SHIFT)
#define CAM_RIS_WRP_M_CR_1             (0x1UL<<CAM_RIS_WRP_M_CR_SHIFT)
#define CAM_RIS_WRP_M_CR               (0x1UL<<CAM_RIS_WRP_M_CR_SHIFT)
#define CAM_RIS_WRP_M_CB_SHIFT         5
#define CAM_RIS_WRP_M_CB_FIELD         (0xFFFFFFFF - (0x1UL<<CAM_RIS_WRP_M_CB_SHIFT))
#define CAM_RIS_WRP_M_CB_0             (0x0UL<<CAM_RIS_WRP_M_CB_SHIFT)
#define CAM_RIS_WRP_M_CB_1             (0x1UL<<CAM_RIS_WRP_M_CB_SHIFT)
#define CAM_RIS_WRP_M_CB               (0x1UL<<CAM_RIS_WRP_M_CB_SHIFT)
#define CAM_RIS_WRP_M_Y_SHIFT          4
#define CAM_RIS_WRP_M_Y_FIELD          (0xFFFFFFFF - (0x1UL<<CAM_RIS_WRP_M_Y_SHIFT))
#define CAM_RIS_WRP_M_Y_0              (0x0UL<<CAM_RIS_WRP_M_Y_SHIFT)
#define CAM_RIS_WRP_M_Y_1              (0x1UL<<CAM_RIS_WRP_M_Y_SHIFT)
#define CAM_RIS_WRP_M_Y                (0x1UL<<CAM_RIS_WRP_M_Y_SHIFT)
#define CAM_RIS_FILL_M_Y_SHIFT         3
#define CAM_RIS_FILL_M_Y_FIELD         (0xFFFFFFFF - (0x1UL<<CAM_RIS_FILL_M_Y_SHIFT))
#define CAM_RIS_FILL_M_Y_0             (0x0UL<<CAM_RIS_FILL_M_Y_SHIFT)
#define CAM_RIS_FILL_M_Y_1             (0x1UL<<CAM_RIS_FILL_M_Y_SHIFT)
#define CAM_RIS_FILL_M_Y               (0x1UL<<CAM_RIS_FILL_M_Y_SHIFT)
#define CAM_RIS_MBLK_LINE_SHIFT        2
#define CAM_RIS_MBLK_LINE_FIELD        (0xFFFFFFFF - (0x1UL<<CAM_RIS_MBLK_LINE_SHIFT))
#define CAM_RIS_MBLK_LINE_0            (0x0UL<<CAM_RIS_MBLK_LINE_SHIFT)
#define CAM_RIS_MBLK_LINE_1            (0x1UL<<CAM_RIS_MBLK_LINE_SHIFT)
#define CAM_RIS_MBLK_LINE              (0x1UL<<CAM_RIS_MBLK_LINE_SHIFT)
#define CAM_RIS_SP_FRAME_END_SHIFT     1
#define CAM_RIS_SP_FRAME_END_FIELD     (0xFFFFFFFF - (0x1UL<<CAM_RIS_SP_FRAME_END_SHIFT))
#define CAM_RIS_SP_FRAME_END_0         (0x0UL<<CAM_RIS_SP_FRAME_END_SHIFT)
#define CAM_RIS_SP_FRAME_END_1         (0x1UL<<CAM_RIS_SP_FRAME_END_SHIFT)
#define CAM_RIS_SP_FRAME_END           (0x1UL<<CAM_RIS_SP_FRAME_END_SHIFT)
#define CAM_RIS_MP_FRAME_END_SHIFT     0
#define CAM_RIS_MP_FRAME_END_FIELD     (0xFFFFFFFF - (0x1UL<<CAM_RIS_MP_FRAME_END_SHIFT))
#define CAM_RIS_MP_FRAME_END_0         (0x0UL<<CAM_RIS_MP_FRAME_END_SHIFT)
#define CAM_RIS_MP_FRAME_END_1         (0x1UL<<CAM_RIS_MP_FRAME_END_SHIFT)
#define CAM_RIS_MP_FRAME_END           (0x1UL<<CAM_RIS_MP_FRAME_END_SHIFT)

/*****************************************************************************/
/* Register description for MI_MIS */

/* Reset value of register CAM_MI_MIS */
#define CAM_MI_MIS_VALUE               0x0

/* Bits definition for register CAM_MI_MIS */
#define CAM_MIS_DMA_READY_SHIFT        11
#define CAM_MIS_DMA_READY_FIELD        (0xFFFFFFFF - (0x1UL<<CAM_MIS_DMA_READY_SHIFT))
#define CAM_MIS_DMA_READY_0            (0x0UL<<CAM_MIS_DMA_READY_SHIFT)
#define CAM_MIS_DMA_READY_1            (0x1UL<<CAM_MIS_DMA_READY_SHIFT)
#define CAM_MIS_DMA_READY              (0x1UL<<CAM_MIS_DMA_READY_SHIFT)
#define CAM_MIS_AHB_ERR_SHIFT          10
#define CAM_MIS_AHB_ERR_FIELD          (0xFFFFFFFF - (0x1UL<<CAM_MIS_AHB_ERR_SHIFT))
#define CAM_MIS_AHB_ERR_0              (0x0UL<<CAM_MIS_AHB_ERR_SHIFT)
#define CAM_MIS_AHB_ERR_1              (0x1UL<<CAM_MIS_AHB_ERR_SHIFT)
#define CAM_MIS_AHB_ERR                (0x1UL<<CAM_MIS_AHB_ERR_SHIFT)
#define CAM_MIS_WRP_S_CR_SHIFT         9
#define CAM_MIS_WRP_S_CR_FIELD         (0xFFFFFFFF - (0x1UL<<CAM_MIS_WRP_S_CR_SHIFT))
#define CAM_MIS_WRP_S_CR_0             (0x0UL<<CAM_MIS_WRP_S_CR_SHIFT)
#define CAM_MIS_WRP_S_CR_1             (0x1UL<<CAM_MIS_WRP_S_CR_SHIFT)
#define CAM_MIS_WRP_S_CR               (0x1UL<<CAM_MIS_WRP_S_CR_SHIFT)
#define CAM_MIS_WRP_S_CB_SHIFT         8
#define CAM_MIS_WRP_S_CB_FIELD         (0xFFFFFFFF - (0x1UL<<CAM_MIS_WRP_S_CB_SHIFT))
#define CAM_MIS_WRP_S_CB_0             (0x0UL<<CAM_MIS_WRP_S_CB_SHIFT)
#define CAM_MIS_WRP_S_CB_1             (0x1UL<<CAM_MIS_WRP_S_CB_SHIFT)
#define CAM_MIS_WRP_S_CB               (0x1UL<<CAM_MIS_WRP_S_CB_SHIFT)
#define CAM_MIS_WRP_S_Y_SHIFT          7
#define CAM_MIS_WRP_S_Y_FIELD          (0xFFFFFFFF - (0x1UL<<CAM_MIS_WRP_S_Y_SHIFT))
#define CAM_MIS_WRP_S_Y_0              (0x0UL<<CAM_MIS_WRP_S_Y_SHIFT)
#define CAM_MIS_WRP_S_Y_1              (0x1UL<<CAM_MIS_WRP_S_Y_SHIFT)
#define CAM_MIS_WRP_S_Y                (0x1UL<<CAM_MIS_WRP_S_Y_SHIFT)
#define CAM_MIS_WRP_M_CR_SHIFT         6
#define CAM_MIS_WRP_M_CR_FIELD         (0xFFFFFFFF - (0x1UL<<CAM_MIS_WRP_M_CR_SHIFT))
#define CAM_MIS_WRP_M_CR_0             (0x0UL<<CAM_MIS_WRP_M_CR_SHIFT)
#define CAM_MIS_WRP_M_CR_1             (0x1UL<<CAM_MIS_WRP_M_CR_SHIFT)
#define CAM_MIS_WRP_M_CR               (0x1UL<<CAM_MIS_WRP_M_CR_SHIFT)
#define CAM_MIS_WRP_M_CB_SHIFT         5
#define CAM_MIS_WRP_M_CB_FIELD         (0xFFFFFFFF - (0x1UL<<CAM_MIS_WRP_M_CB_SHIFT))
#define CAM_MIS_WRP_M_CB_0             (0x0UL<<CAM_MIS_WRP_M_CB_SHIFT)
#define CAM_MIS_WRP_M_CB_1             (0x1UL<<CAM_MIS_WRP_M_CB_SHIFT)
#define CAM_MIS_WRP_M_CB               (0x1UL<<CAM_MIS_WRP_M_CB_SHIFT)
#define CAM_MIS_WRP_M_Y_SHIFT          4
#define CAM_MIS_WRP_M_Y_FIELD          (0xFFFFFFFF - (0x1UL<<CAM_MIS_WRP_M_Y_SHIFT))
#define CAM_MIS_WRP_M_Y_0              (0x0UL<<CAM_MIS_WRP_M_Y_SHIFT)
#define CAM_MIS_WRP_M_Y_1              (0x1UL<<CAM_MIS_WRP_M_Y_SHIFT)
#define CAM_MIS_WRP_M_Y                (0x1UL<<CAM_MIS_WRP_M_Y_SHIFT)
#define CAM_MIS_FILL_M_Y_SHIFT         3
#define CAM_MIS_FILL_M_Y_FIELD         (0xFFFFFFFF - (0x1UL<<CAM_MIS_FILL_M_Y_SHIFT))
#define CAM_MIS_FILL_M_Y_0             (0x0UL<<CAM_MIS_FILL_M_Y_SHIFT)
#define CAM_MIS_FILL_M_Y_1             (0x1UL<<CAM_MIS_FILL_M_Y_SHIFT)
#define CAM_MIS_FILL_M_Y               (0x1UL<<CAM_MIS_FILL_M_Y_SHIFT)
#define CAM_MIS_MBLK_LINE_SHIFT        2
#define CAM_MIS_MBLK_LINE_FIELD        (0xFFFFFFFF - (0x1UL<<CAM_MIS_MBLK_LINE_SHIFT))
#define CAM_MIS_MBLK_LINE_0            (0x0UL<<CAM_MIS_MBLK_LINE_SHIFT)
#define CAM_MIS_MBLK_LINE_1            (0x1UL<<CAM_MIS_MBLK_LINE_SHIFT)
#define CAM_MIS_MBLK_LINE              (0x1UL<<CAM_MIS_MBLK_LINE_SHIFT)
#define CAM_MIS_SP_FRAME_END_SHIFT     1
#define CAM_MIS_SP_FRAME_END_FIELD     (0xFFFFFFFF - (0x1UL<<CAM_MIS_SP_FRAME_END_SHIFT))
#define CAM_MIS_SP_FRAME_END_0         (0x0UL<<CAM_MIS_SP_FRAME_END_SHIFT)
#define CAM_MIS_SP_FRAME_END_1         (0x1UL<<CAM_MIS_SP_FRAME_END_SHIFT)
#define CAM_MIS_SP_FRAME_END           (0x1UL<<CAM_MIS_SP_FRAME_END_SHIFT)
#define CAM_MIS_MP_FRAME_END_SHIFT     0
#define CAM_MIS_MP_FRAME_END_FIELD     (0xFFFFFFFF - (0x1UL<<CAM_MIS_MP_FRAME_END_SHIFT))
#define CAM_MIS_MP_FRAME_END_0         (0x0UL<<CAM_MIS_MP_FRAME_END_SHIFT)
#define CAM_MIS_MP_FRAME_END_1         (0x1UL<<CAM_MIS_MP_FRAME_END_SHIFT)
#define CAM_MIS_MP_FRAME_END           (0x1UL<<CAM_MIS_MP_FRAME_END_SHIFT)

/*****************************************************************************/
/* Register description for MI_ICR */

/* Reset value of register CAM_MI_ICR */
#define CAM_MI_ICR_VALUE               0x0

/* Bits definition for register CAM_MI_ICR */
#define CAM_ICR_DMA_READY_SHIFT        11
#define CAM_ICR_DMA_READY_FIELD        (0xFFFFFFFF - (0x1UL<<CAM_ICR_DMA_READY_SHIFT))
#define CAM_ICR_DMA_READY              (0x1UL<<CAM_ICR_DMA_READY_SHIFT)
#define CAM_ICR_AHB_ERR_SHIFT          10
#define CAM_ICR_AHB_ERR_FIELD          (0xFFFFFFFF - (0x1UL<<CAM_ICR_AHB_ERR_SHIFT))
#define CAM_ICR_AHB_ERR                (0x1UL<<CAM_ICR_AHB_ERR_SHIFT)
#define CAM_ICR_WRP_S_CR_SHIFT         9
#define CAM_ICR_WRP_S_CR_FIELD         (0xFFFFFFFF - (0x1UL<<CAM_ICR_WRP_S_CR_SHIFT))
#define CAM_ICR_WRP_S_CR               (0x1UL<<CAM_ICR_WRP_S_CR_SHIFT)
#define CAM_ICR_WRP_S_CB_SHIFT         8
#define CAM_ICR_WRP_S_CB_FIELD         (0xFFFFFFFF - (0x1UL<<CAM_ICR_WRP_S_CB_SHIFT))
#define CAM_ICR_WRP_S_CB               (0x1UL<<CAM_ICR_WRP_S_CB_SHIFT)
#define CAM_ICR_WRP_S_Y_SHIFT          7
#define CAM_ICR_WRP_S_Y_FIELD          (0xFFFFFFFF - (0x1UL<<CAM_ICR_WRP_S_Y_SHIFT))
#define CAM_ICR_WRP_S_Y                (0x1UL<<CAM_ICR_WRP_S_Y_SHIFT)
#define CAM_ICR_WRP_M_CR_SHIFT         6
#define CAM_ICR_WRP_M_CR_FIELD         (0xFFFFFFFF - (0x1UL<<CAM_ICR_WRP_M_CR_SHIFT))
#define CAM_ICR_WRP_M_CR               (0x1UL<<CAM_ICR_WRP_M_CR_SHIFT)
#define CAM_ICR_WRP_M_CB_SHIFT         5
#define CAM_ICR_WRP_M_CB_FIELD         (0xFFFFFFFF - (0x1UL<<CAM_ICR_WRP_M_CB_SHIFT))
#define CAM_ICR_WRP_M_CB               (0x1UL<<CAM_ICR_WRP_M_CB_SHIFT)
#define CAM_ICR_WRP_M_Y_SHIFT          4
#define CAM_ICR_WRP_M_Y_FIELD          (0xFFFFFFFF - (0x1UL<<CAM_ICR_WRP_M_Y_SHIFT))
#define CAM_ICR_WRP_M_Y                (0x1UL<<CAM_ICR_WRP_M_Y_SHIFT)
#define CAM_ICR_FILL_M_Y_SHIFT         3
#define CAM_ICR_FILL_M_Y_FIELD         (0xFFFFFFFF - (0x1UL<<CAM_ICR_FILL_M_Y_SHIFT))
#define CAM_ICR_FILL_M_Y               (0x1UL<<CAM_ICR_FILL_M_Y_SHIFT)
#define CAM_ICR_MBLK_LINE_SHIFT        2
#define CAM_ICR_MBLK_LINE_FIELD        (0xFFFFFFFF - (0x1UL<<CAM_ICR_MBLK_LINE_SHIFT))
#define CAM_ICR_MBLK_LINE              (0x1UL<<CAM_ICR_MBLK_LINE_SHIFT)
#define CAM_ICR_SP_FRAME_END_SHIFT     1
#define CAM_ICR_SP_FRAME_END_FIELD     (0xFFFFFFFF - (0x1UL<<CAM_ICR_SP_FRAME_END_SHIFT))
#define CAM_ICR_SP_FRAME_END           (0x1UL<<CAM_ICR_SP_FRAME_END_SHIFT)
#define CAM_ICR_MP_FRAME_END_SHIFT     0
#define CAM_ICR_MP_FRAME_END_FIELD     (0xFFFFFFFF - (0x1UL<<CAM_ICR_MP_FRAME_END_SHIFT))
#define CAM_ICR_MP_FRAME_END           (0x1UL<<CAM_ICR_MP_FRAME_END_SHIFT)

/*****************************************************************************/
/* Register description for MI_ISR */

/* Reset value of register CAM_MI_ISR */
#define CAM_MI_ISR_VALUE               0x0

/* Bits definition for register CAM_MI_ISR */
#define CAM_ISR_DMA_READY_SHIFT        11
#define CAM_ISR_DMA_READY_FIELD        (0xFFFFFFFF - (0x1UL<<CAM_ISR_DMA_READY_SHIFT))
#define CAM_ISR_DMA_READY              (0x1UL<<CAM_ISR_DMA_READY_SHIFT)
#define CAM_ISR_AHB_ERR_SHIFT          10
#define CAM_ISR_AHB_ERR_FIELD          (0xFFFFFFFF - (0x1UL<<CAM_ISR_AHB_ERR_SHIFT))
#define CAM_ISR_AHB_ERR                (0x1UL<<CAM_ISR_AHB_ERR_SHIFT)
#define CAM_ISR_WRP_S_CR_SHIFT         9
#define CAM_ISR_WRP_S_CR_FIELD         (0xFFFFFFFF - (0x1UL<<CAM_ISR_WRP_S_CR_SHIFT))
#define CAM_ISR_WRP_S_CR               (0x1UL<<CAM_ISR_WRP_S_CR_SHIFT)
#define CAM_ISR_WRP_S_CB_SHIFT         8
#define CAM_ISR_WRP_S_CB_FIELD         (0xFFFFFFFF - (0x1UL<<CAM_ISR_WRP_S_CB_SHIFT))
#define CAM_ISR_WRP_S_CB               (0x1UL<<CAM_ISR_WRP_S_CB_SHIFT)
#define CAM_ISR_WRP_S_Y_SHIFT          7
#define CAM_ISR_WRP_S_Y_FIELD          (0xFFFFFFFF - (0x1UL<<CAM_ISR_WRP_S_Y_SHIFT))
#define CAM_ISR_WRP_S_Y                (0x1UL<<CAM_ISR_WRP_S_Y_SHIFT)
#define CAM_ISR_WRP_M_CR_SHIFT         6
#define CAM_ISR_WRP_M_CR_FIELD         (0xFFFFFFFF - (0x1UL<<CAM_ISR_WRP_M_CR_SHIFT))
#define CAM_ISR_WRP_M_CR               (0x1UL<<CAM_ISR_WRP_M_CR_SHIFT)
#define CAM_ISR_WRP_M_CB_SHIFT         5
#define CAM_ISR_WRP_M_CB_FIELD         (0xFFFFFFFF - (0x1UL<<CAM_ISR_WRP_M_CB_SHIFT))
#define CAM_ISR_WRP_M_CB               (0x1UL<<CAM_ISR_WRP_M_CB_SHIFT)
#define CAM_ISR_WRP_M_Y_SHIFT          4
#define CAM_ISR_WRP_M_Y_FIELD          (0xFFFFFFFF - (0x1UL<<CAM_ISR_WRP_M_Y_SHIFT))
#define CAM_ISR_WRP_M_Y                (0x1UL<<CAM_ISR_WRP_M_Y_SHIFT)
#define CAM_ISR_FILL_M_Y_SHIFT         3
#define CAM_ISR_FILL_M_Y_FIELD         (0xFFFFFFFF - (0x1UL<<CAM_ISR_FILL_M_Y_SHIFT))
#define CAM_ISR_FILL_M_Y               (0x1UL<<CAM_ISR_FILL_M_Y_SHIFT)
#define CAM_ISR_MBLK_LINE_SHIFT        2
#define CAM_ISR_MBLK_LINE_FIELD        (0xFFFFFFFF - (0x1UL<<CAM_ISR_MBLK_LINE_SHIFT))
#define CAM_ISR_MBLK_LINE              (0x1UL<<CAM_ISR_MBLK_LINE_SHIFT)
#define CAM_ISR_SP_FRAME_END_SHIFT     1
#define CAM_ISR_SP_FRAME_END_FIELD     (0xFFFFFFFF - (0x1UL<<CAM_ISR_SP_FRAME_END_SHIFT))
#define CAM_ISR_SP_FRAME_END           (0x1UL<<CAM_ISR_SP_FRAME_END_SHIFT)
#define CAM_ISR_MP_FRAME_END_SHIFT     0
#define CAM_ISR_MP_FRAME_END_FIELD     (0xFFFFFFFF - (0x1UL<<CAM_ISR_MP_FRAME_END_SHIFT))
#define CAM_ISR_MP_FRAME_END           (0x1UL<<CAM_ISR_MP_FRAME_END_SHIFT)

/*****************************************************************************/
/* Register description for MI_STATUS */

/* Reset value of register CAM_MI_STATUS */
#define CAM_MI_STATUS_VALUE            0x0

/* Bits definition for register CAM_MI_STATUS */
#define CAM_AHB_READ_ERROR_SHIFT       9
#define CAM_AHB_READ_ERROR_FIELD       (0xFFFFFFFF - (0x1UL<<CAM_AHB_READ_ERROR_SHIFT))
#define CAM_AHB_READ_ERROR_0           (0x0UL<<CAM_AHB_READ_ERROR_SHIFT)
#define CAM_AHB_READ_ERROR_1           (0x1UL<<CAM_AHB_READ_ERROR_SHIFT)
#define CAM_AHB_READ_ERROR             (0x1UL<<CAM_AHB_READ_ERROR_SHIFT)
#define CAM_AHB_WRITE_ERROR_SHIFT      8
#define CAM_AHB_WRITE_ERROR_FIELD      (0xFFFFFFFF - (0x1UL<<CAM_AHB_WRITE_ERROR_SHIFT))
#define CAM_AHB_WRITE_ERROR_0          (0x0UL<<CAM_AHB_WRITE_ERROR_SHIFT)
#define CAM_AHB_WRITE_ERROR_1          (0x1UL<<CAM_AHB_WRITE_ERROR_SHIFT)
#define CAM_AHB_WRITE_ERROR            (0x1UL<<CAM_AHB_WRITE_ERROR_SHIFT)
#define CAM_S_CR_FIFO_FULL_SHIFT       6
#define CAM_S_CR_FIFO_FULL_FIELD       (0xFFFFFFFF - (0x1UL<<CAM_S_CR_FIFO_FULL_SHIFT))
#define CAM_S_CR_FIFO_FULL_0           (0x0UL<<CAM_S_CR_FIFO_FULL_SHIFT)
#define CAM_S_CR_FIFO_FULL_1           (0x1UL<<CAM_S_CR_FIFO_FULL_SHIFT)
#define CAM_S_CR_FIFO_FULL             (0x1UL<<CAM_S_CR_FIFO_FULL_SHIFT)
#define CAM_S_CB_FIFO_FULL_SHIFT       5
#define CAM_S_CB_FIFO_FULL_FIELD       (0xFFFFFFFF - (0x1UL<<CAM_S_CB_FIFO_FULL_SHIFT))
#define CAM_S_CB_FIFO_FULL_0           (0x0UL<<CAM_S_CB_FIFO_FULL_SHIFT)
#define CAM_S_CB_FIFO_FULL_1           (0x1UL<<CAM_S_CB_FIFO_FULL_SHIFT)
#define CAM_S_CB_FIFO_FULL             (0x1UL<<CAM_S_CB_FIFO_FULL_SHIFT)
#define CAM_S_Y_FIFO_FULL_SHIFT        4
#define CAM_S_Y_FIFO_FULL_FIELD        (0xFFFFFFFF - (0x1UL<<CAM_S_Y_FIFO_FULL_SHIFT))
#define CAM_S_Y_FIFO_FULL_0            (0x0UL<<CAM_S_Y_FIFO_FULL_SHIFT)
#define CAM_S_Y_FIFO_FULL_1            (0x1UL<<CAM_S_Y_FIFO_FULL_SHIFT)
#define CAM_S_Y_FIFO_FULL              (0x1UL<<CAM_S_Y_FIFO_FULL_SHIFT)
#define CAM_M_CR_FIFO_FULL_SHIFT       2
#define CAM_M_CR_FIFO_FULL_FIELD       (0xFFFFFFFF - (0x1UL<<CAM_M_CR_FIFO_FULL_SHIFT))
#define CAM_M_CR_FIFO_FULL_0           (0x0UL<<CAM_M_CR_FIFO_FULL_SHIFT)
#define CAM_M_CR_FIFO_FULL_1           (0x1UL<<CAM_M_CR_FIFO_FULL_SHIFT)
#define CAM_M_CR_FIFO_FULL             (0x1UL<<CAM_M_CR_FIFO_FULL_SHIFT)
#define CAM_M_CB_FIFO_FULL_SHIFT       1
#define CAM_M_CB_FIFO_FULL_FIELD       (0xFFFFFFFF - (0x1UL<<CAM_M_CB_FIFO_FULL_SHIFT))
#define CAM_M_CB_FIFO_FULL_0           (0x0UL<<CAM_M_CB_FIFO_FULL_SHIFT)
#define CAM_M_CB_FIFO_FULL_1           (0x1UL<<CAM_M_CB_FIFO_FULL_SHIFT)
#define CAM_M_CB_FIFO_FULL             (0x1UL<<CAM_M_CB_FIFO_FULL_SHIFT)
#define CAM_M_Y_FIFO_FULL_SHIFT        0
#define CAM_M_Y_FIFO_FULL_FIELD        (0xFFFFFFFF - (0x1UL<<CAM_M_Y_FIFO_FULL_SHIFT))
#define CAM_M_Y_FIFO_FULL_0            (0x0UL<<CAM_M_Y_FIFO_FULL_SHIFT)
#define CAM_M_Y_FIFO_FULL_1            (0x1UL<<CAM_M_Y_FIFO_FULL_SHIFT)
#define CAM_M_Y_FIFO_FULL              (0x1UL<<CAM_M_Y_FIFO_FULL_SHIFT)

/*****************************************************************************/
/* Register description for MI_STATUS_CLR */

/* Reset value of register CAM_MI_STATUS_CLR */
#define CAM_MI_STATUS_CLR_VALUE        0x0

/* Bits definition for register CAM_MI_STATUS_CLR */
#define CAM_AHB_READ_ERROR_SHIFT       9
#define CAM_AHB_READ_ERROR_FIELD       (0xFFFFFFFF - (0x1UL<<CAM_AHB_READ_ERROR_SHIFT))
#define CAM_AHB_READ_ERROR_0           (0x0UL<<CAM_AHB_READ_ERROR_SHIFT)
#define CAM_AHB_READ_ERROR_1           (0x1UL<<CAM_AHB_READ_ERROR_SHIFT)
#define CAM_AHB_READ_ERROR             (0x1UL<<CAM_AHB_READ_ERROR_SHIFT)
#define CAM_AHB_WRITE_ERROR_SHIFT      8
#define CAM_AHB_WRITE_ERROR_FIELD      (0xFFFFFFFF - (0x1UL<<CAM_AHB_WRITE_ERROR_SHIFT))
#define CAM_AHB_WRITE_ERROR_0          (0x0UL<<CAM_AHB_WRITE_ERROR_SHIFT)
#define CAM_AHB_WRITE_ERROR_1          (0x1UL<<CAM_AHB_WRITE_ERROR_SHIFT)
#define CAM_AHB_WRITE_ERROR            (0x1UL<<CAM_AHB_WRITE_ERROR_SHIFT)
#define CAM_S_CR_FIFO_FULL_SHIFT       6
#define CAM_S_CR_FIFO_FULL_FIELD       (0xFFFFFFFF - (0x1UL<<CAM_S_CR_FIFO_FULL_SHIFT))
#define CAM_S_CR_FIFO_FULL_0           (0x0UL<<CAM_S_CR_FIFO_FULL_SHIFT)
#define CAM_S_CR_FIFO_FULL_1           (0x1UL<<CAM_S_CR_FIFO_FULL_SHIFT)
#define CAM_S_CR_FIFO_FULL             (0x1UL<<CAM_S_CR_FIFO_FULL_SHIFT)
#define CAM_S_CB_FIFO_FULL_SHIFT       5
#define CAM_S_CB_FIFO_FULL_FIELD       (0xFFFFFFFF - (0x1UL<<CAM_S_CB_FIFO_FULL_SHIFT))
#define CAM_S_CB_FIFO_FULL_0           (0x0UL<<CAM_S_CB_FIFO_FULL_SHIFT)
#define CAM_S_CB_FIFO_FULL_1           (0x1UL<<CAM_S_CB_FIFO_FULL_SHIFT)
#define CAM_S_CB_FIFO_FULL             (0x1UL<<CAM_S_CB_FIFO_FULL_SHIFT)
#define CAM_S_Y_FIFO_FULL_SHIFT        4
#define CAM_S_Y_FIFO_FULL_FIELD        (0xFFFFFFFF - (0x1UL<<CAM_S_Y_FIFO_FULL_SHIFT))
#define CAM_S_Y_FIFO_FULL_0            (0x0UL<<CAM_S_Y_FIFO_FULL_SHIFT)
#define CAM_S_Y_FIFO_FULL_1            (0x1UL<<CAM_S_Y_FIFO_FULL_SHIFT)
#define CAM_S_Y_FIFO_FULL              (0x1UL<<CAM_S_Y_FIFO_FULL_SHIFT)
#define CAM_M_CR_FIFO_FULL_SHIFT       2
#define CAM_M_CR_FIFO_FULL_FIELD       (0xFFFFFFFF - (0x1UL<<CAM_M_CR_FIFO_FULL_SHIFT))
#define CAM_M_CR_FIFO_FULL_0           (0x0UL<<CAM_M_CR_FIFO_FULL_SHIFT)
#define CAM_M_CR_FIFO_FULL_1           (0x1UL<<CAM_M_CR_FIFO_FULL_SHIFT)
#define CAM_M_CR_FIFO_FULL             (0x1UL<<CAM_M_CR_FIFO_FULL_SHIFT)
#define CAM_M_CB_FIFO_FULL_SHIFT       1
#define CAM_M_CB_FIFO_FULL_FIELD       (0xFFFFFFFF - (0x1UL<<CAM_M_CB_FIFO_FULL_SHIFT))
#define CAM_M_CB_FIFO_FULL_0           (0x0UL<<CAM_M_CB_FIFO_FULL_SHIFT)
#define CAM_M_CB_FIFO_FULL_1           (0x1UL<<CAM_M_CB_FIFO_FULL_SHIFT)
#define CAM_M_CB_FIFO_FULL             (0x1UL<<CAM_M_CB_FIFO_FULL_SHIFT)
#define CAM_M_Y_FIFO_FULL_SHIFT        0
#define CAM_M_Y_FIFO_FULL_FIELD        (0xFFFFFFFF - (0x1UL<<CAM_M_Y_FIFO_FULL_SHIFT))
#define CAM_M_Y_FIFO_FULL_0            (0x0UL<<CAM_M_Y_FIFO_FULL_SHIFT)
#define CAM_M_Y_FIFO_FULL_1            (0x1UL<<CAM_M_Y_FIFO_FULL_SHIFT)
#define CAM_M_Y_FIFO_FULL              (0x1UL<<CAM_M_Y_FIFO_FULL_SHIFT)

/*****************************************************************************/
/* Register description for MI_SP_Y_PIC_WIDTH */

/* Reset value of register CAM_MI_SP_Y_PIC_WIDTH */
#define CAM_MI_SP_Y_PIC_WIDTH_VALUE    0x0

/* Bits definition for register CAM_MI_SP_Y_PIC_WIDTH */
#define CAM_SP_Y_PIC_WIDTH_SHIFT       0
#define CAM_SP_Y_PIC_WIDTH_FIELD       (0xFFFFFFFF - (0xFFFUL<<CAM_SP_Y_PIC_WIDTH_SHIFT))

/*****************************************************************************/
/* Register description for MI_SP_Y_PIC_HEIGHT */

/* Reset value of register CAM_MI_SP_Y_PIC_HEIGHT */
#define CAM_MI_SP_Y_PIC_HEIGHT_VALUE   0x0

/* Bits definition for register CAM_MI_SP_Y_PIC_HEIGHT */
#define CAM_SP_Y_PIC_HEIGHT_SHIFT      0
#define CAM_SP_Y_PIC_HEIGHT_FIELD      (0xFFFFFFFF - (0xFFFUL<<CAM_SP_Y_PIC_HEIGHT_SHIFT))

/*****************************************************************************/
/* Register description for MI_SP_Y_PIC_SIZE */

/* Reset value of register CAM_MI_SP_Y_PIC_SIZE */
#define CAM_MI_SP_Y_PIC_SIZE_VALUE     0x0

/* Bits definition for register CAM_MI_SP_Y_PIC_SIZE */
#define CAM_DMA_Y_SIZE_SHIFT           0
#define CAM_DMA_Y_SIZE_FIELD           (0xFFFFFFFF - (0xFFFFFFUL<<CAM_DMA_Y_SIZE_SHIFT))
#define CAM_DMA_Y_SIZE_0               (0x0UL<<CAM_DMA_Y_SIZE_SHIFT)

/*****************************************************************************/
/* Register description for MI_DMA_CTRL */

/* Reset value of register CAM_MI_DMA_CTRL */
#define CAM_MI_DMA_CTRL_VALUE          0x0

/* Bits definition for register CAM_MI_DMA_CTRL */
#define CAM_DMA_FRAME_END_DIS_SHIFT    10
#define CAM_DMA_FRAME_END_DIS_FIELD    (0xFFFFFFFF - (0x1UL<<CAM_DMA_FRAME_END_DIS_SHIFT))
#define CAM_DMA_FRAME_END_DIS_0        (0x0UL<<CAM_DMA_FRAME_END_DIS_SHIFT)
#define CAM_DMA_FRAME_END_DIS_1        (0x1UL<<CAM_DMA_FRAME_END_DIS_SHIFT)
#define CAM_DMA_FRAME_END_DIS          (0x1UL<<CAM_DMA_FRAME_END_DIS_SHIFT)
#define CAM_DMA_CONTINUOUS_EN_SHIFT    9
#define CAM_DMA_CONTINUOUS_EN_FIELD    (0xFFFFFFFF - (0x1UL<<CAM_DMA_CONTINUOUS_EN_SHIFT))
#define CAM_DMA_CONTINUOUS_EN_0        (0x0UL<<CAM_DMA_CONTINUOUS_EN_SHIFT)
#define CAM_DMA_CONTINUOUS_EN_1        (0x1UL<<CAM_DMA_CONTINUOUS_EN_SHIFT)
#define CAM_DMA_CONTINUOUS_EN          (0x1UL<<CAM_DMA_CONTINUOUS_EN_SHIFT)
#define CAM_DMA_BYTE_SWAP_SHIFT        8
#define CAM_DMA_BYTE_SWAP_FIELD        (0xFFFFFFFF - (0x1UL<<CAM_DMA_BYTE_SWAP_SHIFT))
#define CAM_DMA_BYTE_SWAP_0            (0x0UL<<CAM_DMA_BYTE_SWAP_SHIFT)
#define CAM_DMA_BYTE_SWAP_1            (0x1UL<<CAM_DMA_BYTE_SWAP_SHIFT)
#define CAM_DMA_BYTE_SWAP              (0x1UL<<CAM_DMA_BYTE_SWAP_SHIFT)
#define CAM_DMA_READ_INOUT_SHIFT       6
#define CAM_DMA_READ_INOUT_FIELD       (0xFFFFFFFF - (0x3UL<<CAM_DMA_READ_INOUT_SHIFT))
#define CAM_DMA_READ_INOUT_0           (0x0UL<<CAM_DMA_READ_INOUT_SHIFT)
#define CAM_DMA_READ_INOUT_1           (0x1UL<<CAM_DMA_READ_INOUT_SHIFT)
#define CAM_DMA_READ_INOUT_2           (0x2UL<<CAM_DMA_READ_INOUT_SHIFT)
#define CAM_DMA_READ_INOUT_3           (0x3UL<<CAM_DMA_READ_INOUT_SHIFT)
#define CAM_DMA_READ_FORMAT_SHIFT      4
#define CAM_DMA_READ_FORMAT_FIELD      (0xFFFFFFFF - (0x3UL<<CAM_DMA_READ_FORMAT_SHIFT))
#define CAM_DMA_READ_FORMAT_0          (0x0UL<<CAM_DMA_READ_FORMAT_SHIFT)
#define CAM_DMA_READ_FORMAT_1          (0x1UL<<CAM_DMA_READ_FORMAT_SHIFT)
#define CAM_DMA_READ_FORMAT_2          (0x2UL<<CAM_DMA_READ_FORMAT_SHIFT)
#define CAM_DMA_READ_FORMAT_3          (0x3UL<<CAM_DMA_READ_FORMAT_SHIFT)
#define CAM_DMA_BURST_LEN_CHROM_SHIFT  2
#define CAM_DMA_BURST_LEN_CHROM_FIELD  (0xFFFFFFFF - (0x3UL<<CAM_DMA_BURST_LEN_CHROM_SHIFT))
#define CAM_DMA_BURST_LEN_CHROM_0      (0x0UL<<CAM_DMA_BURST_LEN_CHROM_SHIFT)
#define CAM_DMA_BURST_LEN_CHROM_1      (0x1UL<<CAM_DMA_BURST_LEN_CHROM_SHIFT)
#define CAM_DMA_BURST_LEN_CHROM_2      (0x2UL<<CAM_DMA_BURST_LEN_CHROM_SHIFT)
#define CAM_DMA_BURST_LEN_CHROM_3      (0x3UL<<CAM_DMA_BURST_LEN_CHROM_SHIFT)
#define CAM_DMA_BURST_LEN_LUM_SHIFT    0
#define CAM_DMA_BURST_LEN_LUM_FIELD    (0xFFFFFFFF - (0x3UL<<CAM_DMA_BURST_LEN_LUM_SHIFT))
#define CAM_DMA_BURST_LEN_LUM_0        (0x0UL<<CAM_DMA_BURST_LEN_LUM_SHIFT)
#define CAM_DMA_BURST_LEN_LUM_1        (0x1UL<<CAM_DMA_BURST_LEN_LUM_SHIFT)
#define CAM_DMA_BURST_LEN_LUM_2        (0x2UL<<CAM_DMA_BURST_LEN_LUM_SHIFT)
#define CAM_DMA_BURST_LEN_LUM_3        (0x3UL<<CAM_DMA_BURST_LEN_LUM_SHIFT)

/*****************************************************************************/
/* Register description for MI_DMA_START */

/* Reset value of register CAM_MI_DMA_START */
#define CAM_MI_DMA_START_VALUE         0x0

/* Bits definition for register CAM_MI_DMA_START */
#define CAM_START_SHIFT                0
#define CAM_START_FIELD                (0xFFFFFFFF - (0x1UL<<CAM_START_SHIFT))
#define CAM_START_0                    (0x0UL<<CAM_START_SHIFT)
#define CAM_START_1                    (0x1UL<<CAM_START_SHIFT)
#define CAM_START                      (0x1UL<<CAM_START_SHIFT)

/*****************************************************************************/
/* Register description for MI_DMA_STATUS */

/* Reset value of register CAM_MI_DMA_STATUS */
#define CAM_MI_DMA_STATUS_VALUE        0x0

/* Bits definition for register CAM_MI_DMA_STATUS */
#define CAM_DMA_ACTIVE_SHIFT           0
#define CAM_DMA_ACTIVE_FIELD           (0xFFFFFFFF - (0x1UL<<CAM_DMA_ACTIVE_SHIFT))
#define CAM_DMA_ACTIVE_0               (0x0UL<<CAM_DMA_ACTIVE_SHIFT)
#define CAM_DMA_ACTIVE_1               (0x1UL<<CAM_DMA_ACTIVE_SHIFT)
#define CAM_DMA_ACTIVE                 (0x1UL<<CAM_DMA_ACTIVE_SHIFT)

/*****************************************************************************/
/* Register description for JPE_GEN_HEADER */

/* Reset value of register CAM_JPE_GEN_HEADER */
#define CAM_JPE_GEN_HEADER_VALUE       0x0

/* Bits definition for register CAM_JPE_GEN_HEADER */
#define CAM_GEN_HEADER_SHIFT           0
#define CAM_GEN_HEADER_FIELD           (0xFFFFFFFF - (0x1UL<<CAM_GEN_HEADER_SHIFT))
#define CAM_GEN_HEADER_0               (0x0UL<<CAM_GEN_HEADER_SHIFT)
#define CAM_GEN_HEADER_1               (0x1UL<<CAM_GEN_HEADER_SHIFT)
#define CAM_GEN_HEADER                 (0x1UL<<CAM_GEN_HEADER_SHIFT)

/*****************************************************************************/
/* Register description for JPE_ENCODE */

/* Reset value of register CAM_JPE_ENCODE */
#define CAM_JPE_ENCODE_VALUE           0x0

/* Bits definition for register CAM_JPE_ENCODE */
#define CAM_CONT_MODE_SHIFT            4
#define CAM_CONT_MODE_FIELD            (0xFFFFFFFF - (0x3UL<<CAM_CONT_MODE_SHIFT))
#define CAM_CONT_MODE_0                (0x0UL<<CAM_CONT_MODE_SHIFT)
#define CAM_CONT_MODE_1                (0x1UL<<CAM_CONT_MODE_SHIFT)
#define CAM_CONT_MODE_2                (0x2UL<<CAM_CONT_MODE_SHIFT)
#define CAM_CONT_MODE_3                (0x3UL<<CAM_CONT_MODE_SHIFT)
#define CAM_ENCODE_SHIFT               0
#define CAM_ENCODE_FIELD               (0xFFFFFFFF - (0x1UL<<CAM_ENCODE_SHIFT))
#define CAM_ENCODE_0                   (0x0UL<<CAM_ENCODE_SHIFT)
#define CAM_ENCODE_1                   (0x1UL<<CAM_ENCODE_SHIFT)
#define CAM_ENCODE                     (0x1UL<<CAM_ENCODE_SHIFT)

/*****************************************************************************/
/* Register description for JPE_INIT */

/* Reset value of register CAM_JPE_INIT */
#define CAM_JPE_INIT_VALUE             0x0

/* Bits definition for register CAM_JPE_INIT */
#define CAM_JP_INIT_SHIFT              0
#define CAM_JP_INIT_FIELD              (0xFFFFFFFF - (0x1UL<<CAM_JP_INIT_SHIFT))
#define CAM_JP_INIT_0                  (0x0UL<<CAM_JP_INIT_SHIFT)
#define CAM_JP_INIT_1                  (0x1UL<<CAM_JP_INIT_SHIFT)
#define CAM_JP_INIT                    (0x1UL<<CAM_JP_INIT_SHIFT)

/*****************************************************************************/
/* Register description for JPE_Y_SCALE_EN */

/* Reset value of register CAM_JPE_Y_SCALE_EN */
#define CAM_JPE_Y_SCALE_EN_VALUE       0x0

/* Bits definition for register CAM_JPE_Y_SCALE_EN */
#define CAM_Y_SCALE_EN_SHIFT           0
#define CAM_Y_SCALE_EN_FIELD           (0xFFFFFFFF - (0x1UL<<CAM_Y_SCALE_EN_SHIFT))
#define CAM_Y_SCALE_EN_0               (0x0UL<<CAM_Y_SCALE_EN_SHIFT)
#define CAM_Y_SCALE_EN_1               (0x1UL<<CAM_Y_SCALE_EN_SHIFT)
#define CAM_Y_SCALE_EN                 (0x1UL<<CAM_Y_SCALE_EN_SHIFT)

/*****************************************************************************/
/* Register description for JPE_CBCR_SCALE_EN */

/* Reset value of register CAM_JPE_CBCR_SCALE_EN */
#define CAM_JPE_CBCR_SCALE_EN_VALUE    0x0

/* Bits definition for register CAM_JPE_CBCR_SCALE_EN */
#define CAM_CBCR_SCALE_EN_SHIFT        0
#define CAM_CBCR_SCALE_EN_FIELD        (0xFFFFFFFF - (0x1UL<<CAM_CBCR_SCALE_EN_SHIFT))
#define CAM_CBCR_SCALE_EN_0            (0x0UL<<CAM_CBCR_SCALE_EN_SHIFT)
#define CAM_CBCR_SCALE_EN_1            (0x1UL<<CAM_CBCR_SCALE_EN_SHIFT)
#define CAM_CBCR_SCALE_EN              (0x1UL<<CAM_CBCR_SCALE_EN_SHIFT)

/*****************************************************************************/
/* Register description for JPE_TABLE_FLUSH */

/* Reset value of register CAM_JPE_TABLE_FLUSH */
#define CAM_JPE_TABLE_FLUSH_VALUE      0x0

/* Bits definition for register CAM_JPE_TABLE_FLUSH */
#define CAM_TABLE_FLUSH_EN_SHIFT       0
#define CAM_TABLE_FLUSH_EN_FIELD       (0xFFFFFFFF - (0x1UL<<CAM_TABLE_FLUSH_EN_SHIFT))
#define CAM_TABLE_FLUSH_EN_0           (0x0UL<<CAM_TABLE_FLUSH_EN_SHIFT)
#define CAM_TABLE_FLUSH_EN_1           (0x1UL<<CAM_TABLE_FLUSH_EN_SHIFT)
#define CAM_TABLE_FLUSH_EN             (0x1UL<<CAM_TABLE_FLUSH_EN_SHIFT)

/*****************************************************************************/
/* Register description for JPE_ENC_HSIZE */

/* Reset value of register CAM_JPE_ENC_HSIZE */
#define CAM_JPE_ENC_HSIZE_VALUE        0x0

/* Bits definition for register CAM_JPE_ENC_HSIZE */
#define CAM_IMG_HSIZE_SHIFT            0
#define CAM_IMG_HSIZE_FIELD            (0xFFFFFFFF - (0x1FFFUL<<CAM_IMG_HSIZE_SHIFT))
#define CAM_IMG_HSIZE_0                (0x0UL<<CAM_IMG_HSIZE_SHIFT)

/*****************************************************************************/
/* Register description for JPE_ENC_VSIZE */

/* Reset value of register CAM_JPE_ENC_VSIZE */
#define CAM_JPE_ENC_VSIZE_VALUE        0x0

/* Bits definition for register CAM_JPE_ENC_VSIZE */
#define CAM_IMG_VSIZE_SHIFT            0
#define CAM_IMG_VSIZE_FIELD            (0xFFFFFFFF - (0xFFFUL<<CAM_IMG_VSIZE_SHIFT))
#define CAM_IMG_VSIZE_0                (0x0UL<<CAM_IMG_VSIZE_SHIFT)

/*****************************************************************************/
/* Register description for JPE_PIC_FORMAT */

/* Reset value of register CAM_JPE_PIC_FORMAT */
#define CAM_JPE_PIC_FORMAT_VALUE       0x1

/* Bits definition for register CAM_JPE_PIC_FORMAT */
#define CAM_PIC_ENC_FORMAT_SHIFT       0
#define CAM_PIC_ENC_FORMAT_FIELD       (0xFFFFFFFF - (0x7UL<<CAM_PIC_ENC_FORMAT_SHIFT))
#define CAM_PIC_ENC_FORMAT_0           (0x0UL<<CAM_PIC_ENC_FORMAT_SHIFT)
#define CAM_PIC_ENC_FORMAT_1           (0x1UL<<CAM_PIC_ENC_FORMAT_SHIFT)
#define CAM_PIC_ENC_FORMAT_4           (0x4UL<<CAM_PIC_ENC_FORMAT_SHIFT)
#define CAM_PIC_ENC_FORMAT_5           (0x5UL<<CAM_PIC_ENC_FORMAT_SHIFT)
#define CAM_PIC_ENC_FORMAT_6           (0x6UL<<CAM_PIC_ENC_FORMAT_SHIFT)
#define CAM_PIC_ENC_FORMAT_7           (0x7UL<<CAM_PIC_ENC_FORMAT_SHIFT)

/*****************************************************************************/
/* Register description for JPE_RESTART_INTERVAL */

/* Reset value of register CAM_JPE_RESTART_INTERVAL */
#define CAM_JPE_RESTART_INTERVAL_VALUE 0x0

/* Bits definition for register CAM_JPE_RESTART_INTERVAL */
#define CAM_RESTART_INTERVAL_SHIFT     0
#define CAM_RESTART_INTERVAL_FIELD     (0xFFFFFFFF - (0xFFFFUL<<CAM_RESTART_INTERVAL_SHIFT))
#define CAM_RESTART_INTERVAL_0         (0x0UL<<CAM_RESTART_INTERVAL_SHIFT)

/*****************************************************************************/
/* Register description for JPE_TQ_Y_SELECT */

/* Reset value of register CAM_JPE_TQ_Y_SELECT */
#define CAM_JPE_TQ_Y_SELECT_VALUE      0x0

/* Bits definition for register CAM_JPE_TQ_Y_SELECT */
#define CAM_TQ_Y_SELECT_SHIFT          0
#define CAM_TQ_Y_SELECT_FIELD          (0xFFFFFFFF - (0x3UL<<CAM_TQ_Y_SELECT_SHIFT))
#define CAM_TQ_Y_SELECT_0              (0x0UL<<CAM_TQ_Y_SELECT_SHIFT)
#define CAM_TQ_Y_SELECT_1              (0x1UL<<CAM_TQ_Y_SELECT_SHIFT)
#define CAM_TQ_Y_SELECT_2              (0x2UL<<CAM_TQ_Y_SELECT_SHIFT)
#define CAM_TQ_Y_SELECT_3              (0x3UL<<CAM_TQ_Y_SELECT_SHIFT)

/*****************************************************************************/
/* Register description for JPE_TQ_U_SELECT */

/* Reset value of register CAM_JPE_TQ_U_SELECT */
#define CAM_JPE_TQ_U_SELECT_VALUE      0x1

/* Bits definition for register CAM_JPE_TQ_U_SELECT */
#define CAM_TQ_U_SELECT_SHIFT          0
#define CAM_TQ_U_SELECT_FIELD          (0xFFFFFFFF - (0x3UL<<CAM_TQ_U_SELECT_SHIFT))
#define CAM_TQ_U_SELECT_0              (0x0UL<<CAM_TQ_U_SELECT_SHIFT)
#define CAM_TQ_U_SELECT_1              (0x1UL<<CAM_TQ_U_SELECT_SHIFT)
#define CAM_TQ_U_SELECT_2              (0x2UL<<CAM_TQ_U_SELECT_SHIFT)
#define CAM_TQ_U_SELECT_3              (0x3UL<<CAM_TQ_U_SELECT_SHIFT)

/*****************************************************************************/
/* Register description for JPE_TQ_V_SELECT */

/* Reset value of register CAM_JPE_TQ_V_SELECT */
#define CAM_JPE_TQ_V_SELECT_VALUE      0x1

/* Bits definition for register CAM_JPE_TQ_V_SELECT */
#define CAM_TQ_V_SELECT_SHIFT          0
#define CAM_TQ_V_SELECT_FIELD          (0xFFFFFFFF - (0x3UL<<CAM_TQ_V_SELECT_SHIFT))
#define CAM_TQ_V_SELECT_0              (0x0UL<<CAM_TQ_V_SELECT_SHIFT)
#define CAM_TQ_V_SELECT_1              (0x1UL<<CAM_TQ_V_SELECT_SHIFT)
#define CAM_TQ_V_SELECT_2              (0x2UL<<CAM_TQ_V_SELECT_SHIFT)
#define CAM_TQ_V_SELECT_3              (0x3UL<<CAM_TQ_V_SELECT_SHIFT)

/*****************************************************************************/
/* Register description for JPE_DC_TABLE_SELECT */

/* Reset value of register CAM_JPE_DC_TABLE_SELECT */
#define CAM_JPE_DC_TABLE_SELECT_VALUE  0x6

/* Bits definition for register CAM_JPE_DC_TABLE_SELECT */
#define CAM_DC_V_SELECT_SHIFT          2
#define CAM_DC_V_SELECT_FIELD          (0xFFFFFFFF - (0x1UL<<CAM_DC_V_SELECT_SHIFT))
#define CAM_DC_V_SELECT_0              (0x0UL<<CAM_DC_V_SELECT_SHIFT)
#define CAM_DC_V_SELECT_1              (0x1UL<<CAM_DC_V_SELECT_SHIFT)
#define CAM_DC_V_SELECT                (0x1UL<<CAM_DC_V_SELECT_SHIFT)
#define CAM_DC_U_SELECT_SHIFT          1
#define CAM_DC_U_SELECT_FIELD          (0xFFFFFFFF - (0x1UL<<CAM_DC_U_SELECT_SHIFT))
#define CAM_DC_U_SELECT_0              (0x0UL<<CAM_DC_U_SELECT_SHIFT)
#define CAM_DC_U_SELECT_1              (0x1UL<<CAM_DC_U_SELECT_SHIFT)
#define CAM_DC_U_SELECT                (0x1UL<<CAM_DC_U_SELECT_SHIFT)
#define CAM_DC_Y_SELECT_SHIFT          0
#define CAM_DC_Y_SELECT_FIELD          (0xFFFFFFFF - (0x1UL<<CAM_DC_Y_SELECT_SHIFT))
#define CAM_DC_Y_SELECT_0              (0x0UL<<CAM_DC_Y_SELECT_SHIFT)
#define CAM_DC_Y_SELECT_1              (0x1UL<<CAM_DC_Y_SELECT_SHIFT)
#define CAM_DC_Y_SELECT                (0x1UL<<CAM_DC_Y_SELECT_SHIFT)

/*****************************************************************************/
/* Register description for JPE_AC_TABLE_SELECT */

/* Reset value of register CAM_JPE_AC_TABLE_SELECT */
#define CAM_JPE_AC_TABLE_SELECT_VALUE  0x6

/* Bits definition for register CAM_JPE_AC_TABLE_SELECT */
#define CAM_AC_V_SELECT_SHIFT          2
#define CAM_AC_V_SELECT_FIELD          (0xFFFFFFFF - (0x1UL<<CAM_AC_V_SELECT_SHIFT))
#define CAM_AC_V_SELECT_0              (0x0UL<<CAM_AC_V_SELECT_SHIFT)
#define CAM_AC_V_SELECT_1              (0x1UL<<CAM_AC_V_SELECT_SHIFT)
#define CAM_AC_V_SELECT                (0x1UL<<CAM_AC_V_SELECT_SHIFT)
#define CAM_AC_U_SELECT_SHIFT          1
#define CAM_AC_U_SELECT_FIELD          (0xFFFFFFFF - (0x1UL<<CAM_AC_U_SELECT_SHIFT))
#define CAM_AC_U_SELECT_0              (0x0UL<<CAM_AC_U_SELECT_SHIFT)
#define CAM_AC_U_SELECT_1              (0x1UL<<CAM_AC_U_SELECT_SHIFT)
#define CAM_AC_U_SELECT                (0x1UL<<CAM_AC_U_SELECT_SHIFT)
#define CAM_AC_Y_SELECT_SHIFT          0
#define CAM_AC_Y_SELECT_FIELD          (0xFFFFFFFF - (0x1UL<<CAM_AC_Y_SELECT_SHIFT))
#define CAM_AC_Y_SELECT_0              (0x0UL<<CAM_AC_Y_SELECT_SHIFT)
#define CAM_AC_Y_SELECT_1              (0x1UL<<CAM_AC_Y_SELECT_SHIFT)
#define CAM_AC_Y_SELECT                (0x1UL<<CAM_AC_Y_SELECT_SHIFT)

/*****************************************************************************/
/* Register description for JPE_TABLE_DATA */

/* Reset value of register CAM_JPE_TABLE_DATA */
#define CAM_JPE_TABLE_DATA_VALUE       0x0

/* Bits definition for register CAM_JPE_TABLE_DATA */
#define CAM_TABLE_DATA_HIGH_SHIFT      8
#define CAM_TABLE_DATA_HIGH_FIELD      (0xFFFFFFFF - (0xFFUL<<CAM_TABLE_DATA_HIGH_SHIFT))
#define CAM_TABLE_DATA_HIGH_0          (0x0UL<<CAM_TABLE_DATA_HIGH_SHIFT)
#define CAM_TABLE_DATA_LOW_SHIFT       0
#define CAM_TABLE_DATA_LOW_FIELD       (0xFFFFFFFF - (0xFFUL<<CAM_TABLE_DATA_LOW_SHIFT))
#define CAM_TABLE_DATA_LOW_0           (0x0UL<<CAM_TABLE_DATA_LOW_SHIFT)

/*****************************************************************************/
/* Register description for JPE_TABLE_ID */

/* Reset value of register CAM_JPE_TABLE_ID */
#define CAM_JPE_TABLE_ID_VALUE         0x0

/* Bits definition for register CAM_JPE_TABLE_ID */
#define CAM_TABLE_ID_SHIFT             0
#define CAM_TABLE_ID_FIELD             (0xFFFFFFFF - (0xFUL<<CAM_TABLE_ID_SHIFT))
#define CAM_TABLE_ID_0                 (0x0UL<<CAM_TABLE_ID_SHIFT)
#define CAM_TABLE_ID_1                 (0x1UL<<CAM_TABLE_ID_SHIFT)
#define CAM_TABLE_ID_2                 (0x2UL<<CAM_TABLE_ID_SHIFT)
#define CAM_TABLE_ID_3                 (0x3UL<<CAM_TABLE_ID_SHIFT)
#define CAM_TABLE_ID_4                 (0x4UL<<CAM_TABLE_ID_SHIFT)
#define CAM_TABLE_ID_5                 (0x5UL<<CAM_TABLE_ID_SHIFT)
#define CAM_TABLE_ID_6                 (0x6UL<<CAM_TABLE_ID_SHIFT)
#define CAM_TABLE_ID_7                 (0x7UL<<CAM_TABLE_ID_SHIFT)

/*****************************************************************************/
/* Register description for JPE_TAC[1:0]_LEN */

/* Reset value of register CAM_JPE_TAC[1:0]_LEN */
#define CAM_JPE_TAC0_LEN_VALUE         0xB2
#define CAM_JPE_TAC1_LEN_VALUE         0xB2

/* Bits definition for register CAM_JPE_TAC[1:0]_LEN */
#define CAM_TAC_LEN_SHIFT              0
#define CAM_TAC_LEN_FIELD              (0xFFFFFFFF - (0xFFUL<<CAM_TAC_LEN_SHIFT))
#define CAM_TAC_LEN_B2                 (0xB2UL<<CAM_TAC_LEN_SHIFT)

/*****************************************************************************/
/* Register description for JPE_TDC[1:0]_LEN */

/* Reset value of register CAM_JPE_TDC[1:0]_LEN */
#define CAM_JPE_TDC0_LEN_VALUE         0x1C
#define CAM_JPE_TDC1_LEN_VALUE         0x1C

/* Bits definition for register CAM_JPE_TDC[1:0]_LEN */
#define CAM_TDC_LEN_SHIFT              0
#define CAM_TDC_LEN_FIELD              (0xFFFFFFFF - (0xFFUL<<CAM_TDC_LEN_SHIFT))
#define CAM_TDC_LEN_1C                 (0x1CUL<<CAM_TDC_LEN_SHIFT)

/*****************************************************************************/
/* Register description for JPE_ENCODER_BUSY */

/* Reset value of register CAM_JPE_ENCODER_BUSY */
#define CAM_JPE_ENCODER_BUSY_VALUE     0x0

/* Bits definition for register CAM_JPE_ENCODER_BUSY */
#define CAM_BUSY_SHIFT                 0
#define CAM_BUSY_FIELD                 (0xFFFFFFFF - (0x1UL<<CAM_BUSY_SHIFT))
#define CAM_BUSY_0                     (0x0UL<<CAM_BUSY_SHIFT)
#define CAM_BUSY_1                     (0x1UL<<CAM_BUSY_SHIFT)
#define CAM_BUSY                       (0x1UL<<CAM_BUSY_SHIFT)

/*****************************************************************************/
/* Register description for JPE_HEADER_MODE */

/* Reset value of register CAM_JPE_HEADER_MODE */
#define CAM_JPE_HEADER_MODE_VALUE      0x0

/* Bits definition for register CAM_JPE_HEADER_MODE */
#define CAM_HEADER_MODE_SHIFT          0
#define CAM_HEADER_MODE_FIELD          (0xFFFFFFFF - (0x3UL<<CAM_HEADER_MODE_SHIFT))
#define CAM_HEADER_MODE_0              (0x0UL<<CAM_HEADER_MODE_SHIFT)
#define CAM_HEADER_MODE_1              (0x1UL<<CAM_HEADER_MODE_SHIFT)
#define CAM_HEADER_MODE_2              (0x2UL<<CAM_HEADER_MODE_SHIFT)
#define CAM_HEADER_MODE_3              (0x3UL<<CAM_HEADER_MODE_SHIFT)

/*****************************************************************************/
/* Register description for JPE_ENCODE_MODE */

/* Reset value of register CAM_JPE_ENCODE_MODE */
#define CAM_JPE_ENCODE_MODE_VALUE      0x1

/* Bits definition for register CAM_JPE_ENCODE_MODE */
#define CAM_ENCODE_MODE_SHIFT          0
#define CAM_ENCODE_MODE_FIELD          (0xFFFFFFFF - (0x1UL<<CAM_ENCODE_MODE_SHIFT))
#define CAM_ENCODE_MODE_1              (0x1UL<<CAM_ENCODE_MODE_SHIFT)
#define CAM_ENCODE_MODE_0              (0x0UL<<CAM_ENCODE_MODE_SHIFT)
#define CAM_ENCODE_MODE                (0x1UL<<CAM_ENCODE_MODE_SHIFT)

/*****************************************************************************/
/* Register description for JPE_DEBUG */

/* Reset value of register CAM_JPE_DEBUG */
#define CAM_JPE_DEBUG_VALUE            0x0

/* Bits definition for register CAM_JPE_DEBUG */
#define CAM_DEB_BAD_TABLE_ACCESS_SHIFT 8
#define CAM_DEB_BAD_TABLE_ACCESS_FIELD (0xFFFFFFFF - (0x1UL<<CAM_DEB_BAD_TABLE_ACCESS_SHIFT))
#define CAM_DEB_BAD_TABLE_ACCESS_0     (0x0UL<<CAM_DEB_BAD_TABLE_ACCESS_SHIFT)
#define CAM_DEB_BAD_TABLE_ACCESS_1     (0x1UL<<CAM_DEB_BAD_TABLE_ACCESS_SHIFT)
#define CAM_DEB_BAD_TABLE_ACCESS       (0x1UL<<CAM_DEB_BAD_TABLE_ACCESS_SHIFT)
#define CAM_DEB_VLC_TABLE_BUSY_SHIFT   5
#define CAM_DEB_VLC_TABLE_BUSY_FIELD   (0xFFFFFFFF - (0x1UL<<CAM_DEB_VLC_TABLE_BUSY_SHIFT))
#define CAM_DEB_VLC_TABLE_BUSY_0       (0x0UL<<CAM_DEB_VLC_TABLE_BUSY_SHIFT)
#define CAM_DEB_VLC_TABLE_BUSY_1       (0x1UL<<CAM_DEB_VLC_TABLE_BUSY_SHIFT)
#define CAM_DEB_VLC_TABLE_BUSY         (0x1UL<<CAM_DEB_VLC_TABLE_BUSY_SHIFT)
#define CAM_DEB_R2B_MEMORY_FULL_SHIFT  4
#define CAM_DEB_R2B_MEMORY_FULL_FIELD  (0xFFFFFFFF - (0x1UL<<CAM_DEB_R2B_MEMORY_FULL_SHIFT))
#define CAM_DEB_R2B_MEMORY_FULL_0      (0x0UL<<CAM_DEB_R2B_MEMORY_FULL_SHIFT)
#define CAM_DEB_R2B_MEMORY_FULL_1      (0x1UL<<CAM_DEB_R2B_MEMORY_FULL_SHIFT)
#define CAM_DEB_R2B_MEMORY_FULL        (0x1UL<<CAM_DEB_R2B_MEMORY_FULL_SHIFT)
#define CAM_DEB_VLC_ENCODE_BUSY_SHIFT  3
#define CAM_DEB_VLC_ENCODE_BUSY_FIELD  (0xFFFFFFFF - (0x1UL<<CAM_DEB_VLC_ENCODE_BUSY_SHIFT))
#define CAM_DEB_VLC_ENCODE_BUSY_0      (0x0UL<<CAM_DEB_VLC_ENCODE_BUSY_SHIFT)
#define CAM_DEB_VLC_ENCODE_BUSY_1      (0x1UL<<CAM_DEB_VLC_ENCODE_BUSY_SHIFT)
#define CAM_DEB_VLC_ENCODE_BUSY        (0x1UL<<CAM_DEB_VLC_ENCODE_BUSY_SHIFT)
#define CAM_DEB_QIQ_TABLE_ACC_SHIFT    2
#define CAM_DEB_QIQ_TABLE_ACC_FIELD    (0xFFFFFFFF - (0x1UL<<CAM_DEB_QIQ_TABLE_ACC_SHIFT))
#define CAM_DEB_QIQ_TABLE_ACC_0        (0x0UL<<CAM_DEB_QIQ_TABLE_ACC_SHIFT)
#define CAM_DEB_QIQ_TABLE_ACC_1        (0x1UL<<CAM_DEB_QIQ_TABLE_ACC_SHIFT)
#define CAM_DEB_QIQ_TABLE_ACC          (0x1UL<<CAM_DEB_QIQ_TABLE_ACC_SHIFT)

/*****************************************************************************/
/* Register description for JPE_ERROR_IMSC */

/* Reset value of register CAM_JPE_ERROR_IMSC */
#define CAM_JPE_ERROR_IMSC_VALUE       0x0

/* Bits definition for register CAM_JPE_ERROR_IMSC */
#define CAM_IMSC_VLC_TABLE_ERR_SHIFT   10
#define CAM_IMSC_VLC_TABLE_ERR_FIELD   (0xFFFFFFFF - (0x1UL<<CAM_IMSC_VLC_TABLE_ERR_SHIFT))
#define CAM_IMSC_VLC_TABLE_ERR_0       (0x0UL<<CAM_IMSC_VLC_TABLE_ERR_SHIFT)
#define CAM_IMSC_VLC_TABLE_ERR_1       (0x1UL<<CAM_IMSC_VLC_TABLE_ERR_SHIFT)
#define CAM_IMSC_VLC_TABLE_ERR         (0x1UL<<CAM_IMSC_VLC_TABLE_ERR_SHIFT)
#define CAM_IMSC_SIZE_ERR_SHIFT        9
#define CAM_IMSC_SIZE_ERR_FIELD        (0xFFFFFFFF - (0x1UL<<CAM_IMSC_SIZE_ERR_SHIFT))
#define CAM_IMSC_SIZE_ERR_0            (0x0UL<<CAM_IMSC_SIZE_ERR_SHIFT)
#define CAM_IMSC_SIZE_ERR_1            (0x1UL<<CAM_IMSC_SIZE_ERR_SHIFT)
#define CAM_IMSC_SIZE_ERR              (0x1UL<<CAM_IMSC_SIZE_ERR_SHIFT)
#define CAM_IMSC_DCT_ERR_SHIFT         7
#define CAM_IMSC_DCT_ERR_FIELD         (0xFFFFFFFF - (0x1UL<<CAM_IMSC_DCT_ERR_SHIFT))
#define CAM_IMSC_DCT_ERR_0             (0x0UL<<CAM_IMSC_DCT_ERR_SHIFT)
#define CAM_IMSC_DCT_ERR_1             (0x1UL<<CAM_IMSC_DCT_ERR_SHIFT)
#define CAM_IMSC_DCT_ERR               (0x1UL<<CAM_IMSC_DCT_ERR_SHIFT)
#define CAM_IMSC_VLC_SYM_ERR_SHIFT     4
#define CAM_IMSC_VLC_SYM_ERR_FIELD     (0xFFFFFFFF - (0x1UL<<CAM_IMSC_VLC_SYM_ERR_SHIFT))
#define CAM_IMSC_VLC_SYM_ERR_0         (0x0UL<<CAM_IMSC_VLC_SYM_ERR_SHIFT)
#define CAM_IMSC_VLC_SYM_ERR_1         (0x1UL<<CAM_IMSC_VLC_SYM_ERR_SHIFT)
#define CAM_IMSC_VLC_SYM_ERR           (0x1UL<<CAM_IMSC_VLC_SYM_ERR_SHIFT)

/*****************************************************************************/
/* Register description for JPE_ERROR_RIS */

/* Reset value of register CAM_JPE_ERROR_RIS */
#define CAM_JPE_ERROR_RIS_VALUE        0x0

/* Bits definition for register CAM_JPE_ERROR_RIS */
#define CAM_RIS_VLC_TABLE_ERR_SHIFT    10
#define CAM_RIS_VLC_TABLE_ERR_FIELD    (0xFFFFFFFF - (0x1UL<<CAM_RIS_VLC_TABLE_ERR_SHIFT))
#define CAM_RIS_VLC_TABLE_ERR_0        (0x0UL<<CAM_RIS_VLC_TABLE_ERR_SHIFT)
#define CAM_RIS_VLC_TABLE_ERR_1        (0x1UL<<CAM_RIS_VLC_TABLE_ERR_SHIFT)
#define CAM_RIS_VLC_TABLE_ERR          (0x1UL<<CAM_RIS_VLC_TABLE_ERR_SHIFT)
#define CAM_RIS_SIZE_ERR_SHIFT         9
#define CAM_RIS_SIZE_ERR_FIELD         (0xFFFFFFFF - (0x1UL<<CAM_RIS_SIZE_ERR_SHIFT))
#define CAM_RIS_SIZE_ERR_0             (0x0UL<<CAM_RIS_SIZE_ERR_SHIFT)
#define CAM_RIS_SIZE_ERR_1             (0x1UL<<CAM_RIS_SIZE_ERR_SHIFT)
#define CAM_RIS_SIZE_ERR               (0x1UL<<CAM_RIS_SIZE_ERR_SHIFT)
#define CAM_RIS_DCT_ERR_SHIFT          7
#define CAM_RIS_DCT_ERR_FIELD          (0xFFFFFFFF - (0x1UL<<CAM_RIS_DCT_ERR_SHIFT))
#define CAM_RIS_DCT_ERR_0              (0x0UL<<CAM_RIS_DCT_ERR_SHIFT)
#define CAM_RIS_DCT_ERR_1              (0x1UL<<CAM_RIS_DCT_ERR_SHIFT)
#define CAM_RIS_DCT_ERR                (0x1UL<<CAM_RIS_DCT_ERR_SHIFT)
#define CAM_RIS_VLC_SYM_ERR_SHIFT      4
#define CAM_RIS_VLC_SYM_ERR_FIELD      (0xFFFFFFFF - (0x1UL<<CAM_RIS_VLC_SYM_ERR_SHIFT))
#define CAM_RIS_VLC_SYM_ERR_0          (0x0UL<<CAM_RIS_VLC_SYM_ERR_SHIFT)
#define CAM_RIS_VLC_SYM_ERR_1          (0x1UL<<CAM_RIS_VLC_SYM_ERR_SHIFT)
#define CAM_RIS_VLC_SYM_ERR            (0x1UL<<CAM_RIS_VLC_SYM_ERR_SHIFT)

/*****************************************************************************/
/* Register description for JPE_ERROR_MIS */

/* Reset value of register CAM_JPE_ERROR_MIS */
#define CAM_JPE_ERROR_MIS_VALUE        0x0

/* Bits definition for register CAM_JPE_ERROR_MIS */
#define CAM_MIS_VLC_TABLE_ERR_SHIFT    10
#define CAM_MIS_VLC_TABLE_ERR_FIELD    (0xFFFFFFFF - (0x1UL<<CAM_MIS_VLC_TABLE_ERR_SHIFT))
#define CAM_MIS_VLC_TABLE_ERR_0        (0x0UL<<CAM_MIS_VLC_TABLE_ERR_SHIFT)
#define CAM_MIS_VLC_TABLE_ERR_1        (0x1UL<<CAM_MIS_VLC_TABLE_ERR_SHIFT)
#define CAM_MIS_VLC_TABLE_ERR          (0x1UL<<CAM_MIS_VLC_TABLE_ERR_SHIFT)
#define CAM_MIS_SIZE_ERR_SHIFT         9
#define CAM_MIS_SIZE_ERR_FIELD         (0xFFFFFFFF - (0x1UL<<CAM_MIS_SIZE_ERR_SHIFT))
#define CAM_MIS_SIZE_ERR_0             (0x0UL<<CAM_MIS_SIZE_ERR_SHIFT)
#define CAM_MIS_SIZE_ERR_1             (0x1UL<<CAM_MIS_SIZE_ERR_SHIFT)
#define CAM_MIS_SIZE_ERR               (0x1UL<<CAM_MIS_SIZE_ERR_SHIFT)
#define CAM_MIS_DCT_ERR_SHIFT          7
#define CAM_MIS_DCT_ERR_FIELD          (0xFFFFFFFF - (0x1UL<<CAM_MIS_DCT_ERR_SHIFT))
#define CAM_MIS_DCT_ERR_0              (0x0UL<<CAM_MIS_DCT_ERR_SHIFT)
#define CAM_MIS_DCT_ERR_1              (0x1UL<<CAM_MIS_DCT_ERR_SHIFT)
#define CAM_MIS_DCT_ERR                (0x1UL<<CAM_MIS_DCT_ERR_SHIFT)
#define CAM_MIS_VLC_SYM_ERR_SHIFT      4
#define CAM_MIS_VLC_SYM_ERR_FIELD      (0xFFFFFFFF - (0x1UL<<CAM_MIS_VLC_SYM_ERR_SHIFT))
#define CAM_MIS_VLC_SYM_ERR_0          (0x0UL<<CAM_MIS_VLC_SYM_ERR_SHIFT)
#define CAM_MIS_VLC_SYM_ERR_1          (0x1UL<<CAM_MIS_VLC_SYM_ERR_SHIFT)
#define CAM_MIS_VLC_SYM_ERR            (0x1UL<<CAM_MIS_VLC_SYM_ERR_SHIFT)

/*****************************************************************************/
/* Register description for JPE_ERROR_ICR */

/* Reset value of register CAM_JPE_ERROR_ICR */
#define CAM_JPE_ERROR_ICR_VALUE        0x0

/* Bits definition for register CAM_JPE_ERROR_ICR */
#define CAM_ICR_VLC_TABLE_ERR_SHIFT    10
#define CAM_ICR_VLC_TABLE_ERR_FIELD    (0xFFFFFFFF - (0x1UL<<CAM_ICR_VLC_TABLE_ERR_SHIFT))
#define CAM_ICR_VLC_TABLE_ERR          (0x1UL<<CAM_ICR_VLC_TABLE_ERR_SHIFT)
#define CAM_ICR_SIZE_ERR_SHIFT         9
#define CAM_ICR_SIZE_ERR_FIELD         (0xFFFFFFFF - (0x1UL<<CAM_ICR_SIZE_ERR_SHIFT))
#define CAM_ICR_SIZE_ERR               (0x1UL<<CAM_ICR_SIZE_ERR_SHIFT)
#define CAM_ICR_DCT_ERR_SHIFT          7
#define CAM_ICR_DCT_ERR_FIELD          (0xFFFFFFFF - (0x1UL<<CAM_ICR_DCT_ERR_SHIFT))
#define CAM_ICR_DCT_ERR                (0x1UL<<CAM_ICR_DCT_ERR_SHIFT)
#define CAM_ICR_VLC_SYM_ERR_SHIFT      4
#define CAM_ICR_VLC_SYM_ERR_FIELD      (0xFFFFFFFF - (0x1UL<<CAM_ICR_VLC_SYM_ERR_SHIFT))
#define CAM_ICR_VLC_SYM_ERR            (0x1UL<<CAM_ICR_VLC_SYM_ERR_SHIFT)

/*****************************************************************************/
/* Register description for JPE_ERROR_ISR */

/* Reset value of register CAM_JPE_ERROR_ISR */
#define CAM_JPE_ERROR_ISR_VALUE        0x0

/* Bits definition for register CAM_JPE_ERROR_ISR */
#define CAM_ISR_VLC_TABLE_ERR_SHIFT    10
#define CAM_ISR_VLC_TABLE_ERR_FIELD    (0xFFFFFFFF - (0x1UL<<CAM_ISR_VLC_TABLE_ERR_SHIFT))
#define CAM_ISR_VLC_TABLE_ERR          (0x1UL<<CAM_ISR_VLC_TABLE_ERR_SHIFT)
#define CAM_ISR_SIZE_ERR_SHIFT         9
#define CAM_ISR_SIZE_ERR_FIELD         (0xFFFFFFFF - (0x1UL<<CAM_ISR_SIZE_ERR_SHIFT))
#define CAM_ISR_SIZE_ERR               (0x1UL<<CAM_ISR_SIZE_ERR_SHIFT)
#define CAM_ISR_DCT_ERR_SHIFT          7
#define CAM_ISR_DCT_ERR_FIELD          (0xFFFFFFFF - (0x1UL<<CAM_ISR_DCT_ERR_SHIFT))
#define CAM_ISR_DCT_ERR                (0x1UL<<CAM_ISR_DCT_ERR_SHIFT)
#define CAM_ISR_VLC_SYM_ERR_SHIFT      4
#define CAM_ISR_VLC_SYM_ERR_FIELD      (0xFFFFFFFF - (0x1UL<<CAM_ISR_VLC_SYM_ERR_SHIFT))
#define CAM_ISR_VLC_SYM_ERR            (0x1UL<<CAM_ISR_VLC_SYM_ERR_SHIFT)

/*****************************************************************************/
/* Register description for JPE_STATUS_IMSC */

/* Reset value of register CAM_JPE_STATUS_IMSC */
#define CAM_JPE_STATUS_IMSC_VALUE      0x0

/* Bits definition for register CAM_JPE_STATUS_IMSC */
#define CAM_IMSC_GEN_HEADER_DONE_SHIFT 5
#define CAM_IMSC_GEN_HEADER_DONE_FIELD (0xFFFFFFFF - (0x1UL<<CAM_IMSC_GEN_HEADER_DONE_SHIFT))
#define CAM_IMSC_GEN_HEADER_DONE_0     (0x0UL<<CAM_IMSC_GEN_HEADER_DONE_SHIFT)
#define CAM_IMSC_GEN_HEADER_DONE_1     (0x1UL<<CAM_IMSC_GEN_HEADER_DONE_SHIFT)
#define CAM_IMSC_GEN_HEADER_DONE       (0x1UL<<CAM_IMSC_GEN_HEADER_DONE_SHIFT)
#define CAM_IMSC_ENCODE_DONE_SHIFT     4
#define CAM_IMSC_ENCODE_DONE_FIELD     (0xFFFFFFFF - (0x1UL<<CAM_IMSC_ENCODE_DONE_SHIFT))
#define CAM_IMSC_ENCODE_DONE_0         (0x0UL<<CAM_IMSC_ENCODE_DONE_SHIFT)
#define CAM_IMSC_ENCODE_DONE_1         (0x1UL<<CAM_IMSC_ENCODE_DONE_SHIFT)
#define CAM_IMSC_ENCODE_DONE           (0x1UL<<CAM_IMSC_ENCODE_DONE_SHIFT)

/*****************************************************************************/
/* Register description for JPE_STATUS_RIS */

/* Reset value of register CAM_JPE_STATUS_RIS */
#define CAM_JPE_STATUS_RIS_VALUE       0x0

/* Bits definition for register CAM_JPE_STATUS_RIS */
#define CAM_RIS_GEN_HEADER_DONE_SHIFT  5
#define CAM_RIS_GEN_HEADER_DONE_FIELD  (0xFFFFFFFF - (0x1UL<<CAM_RIS_GEN_HEADER_DONE_SHIFT))
#define CAM_RIS_GEN_HEADER_DONE        (0x1UL<<CAM_RIS_GEN_HEADER_DONE_SHIFT)
#define CAM_RIS_ENCODE_DONE_SHIFT      4
#define CAM_RIS_ENCODE_DONE_FIELD      (0xFFFFFFFF - (0x1UL<<CAM_RIS_ENCODE_DONE_SHIFT))
#define CAM_RIS_ENCODE_DONE            (0x1UL<<CAM_RIS_ENCODE_DONE_SHIFT)

/*****************************************************************************/
/* Register description for JPE_STATUS_MIS */

/* Reset value of register CAM_JPE_STATUS_MIS */
#define CAM_JPE_STATUS_MIS_VALUE       0x0

/* Bits definition for register CAM_JPE_STATUS_MIS */
#define CAM_MIS_GEN_HEADER_DONE_SHIFT  5
#define CAM_MIS_GEN_HEADER_DONE_FIELD  (0xFFFFFFFF - (0x1UL<<CAM_MIS_GEN_HEADER_DONE_SHIFT))
#define CAM_MIS_GEN_HEADER_DONE        (0x1UL<<CAM_MIS_GEN_HEADER_DONE_SHIFT)
#define CAM_MIS_ENCODE_DONE_SHIFT      4
#define CAM_MIS_ENCODE_DONE_FIELD      (0xFFFFFFFF - (0x1UL<<CAM_MIS_ENCODE_DONE_SHIFT))
#define CAM_MIS_ENCODE_DONE            (0x1UL<<CAM_MIS_ENCODE_DONE_SHIFT)

/*****************************************************************************/
/* Register description for JPE_STATUS_ICR */

/* Reset value of register CAM_JPE_STATUS_ICR */
#define CAM_JPE_STATUS_ICR_VALUE       0x0

/* Bits definition for register CAM_JPE_STATUS_ICR */
#define CAM_ICR_GEN_HEADER_DONE_SHIFT  5
#define CAM_ICR_GEN_HEADER_DONE_FIELD  (0xFFFFFFFF - (0x1UL<<CAM_ICR_GEN_HEADER_DONE_SHIFT))
#define CAM_ICR_GEN_HEADER_DONE        (0x1UL<<CAM_ICR_GEN_HEADER_DONE_SHIFT)
#define CAM_ICR_ENCODE_DONE_SHIFT      4
#define CAM_ICR_ENCODE_DONE_FIELD      (0xFFFFFFFF - (0x1UL<<CAM_ICR_ENCODE_DONE_SHIFT))
#define CAM_ICR_ENCODE_DONE            (0x1UL<<CAM_ICR_ENCODE_DONE_SHIFT)

/*****************************************************************************/
/* Register description for JPE_STATUS_ISR */

/* Reset value of register CAM_JPE_STATUS_ISR */
#define CAM_JPE_STATUS_ISR_VALUE       0x0

/* Bits definition for register CAM_JPE_STATUS_ISR */
#define CAM_ISR_GEN_HEADER_DONE_SHIFT  5
#define CAM_ISR_GEN_HEADER_DONE_FIELD  (0xFFFFFFFF - (0x1UL<<CAM_ISR_GEN_HEADER_DONE_SHIFT))
#define CAM_ISR_GEN_HEADER_DONE        (0x1UL<<CAM_ISR_GEN_HEADER_DONE_SHIFT)
#define CAM_ISR_ENCODE_DONE_SHIFT      4
#define CAM_ISR_ENCODE_DONE_FIELD      (0xFFFFFFFF - (0x1UL<<CAM_ISR_ENCODE_DONE_SHIFT))
#define CAM_ISR_ENCODE_DONE            (0x1UL<<CAM_ISR_ENCODE_DONE_SHIFT)

/*****************************************************************************/
/* Register description for ISP_AFM_CTRL */

/* Reset value of register CAM_ISP_AFM_CTRL */
#define CAM_ISP_AFM_CTRL_VALUE         0x0

/* Bits definition for register CAM_ISP_AFM_CTRL */
#define CAM_AFM_EN_SHIFT               0
#define CAM_AFM_EN_FIELD               (0xFFFFFFFF - (0x1UL<<CAM_AFM_EN_SHIFT))
#define CAM_AFM_EN_0                   (0x0UL<<CAM_AFM_EN_SHIFT)
#define CAM_AFM_EN_1                   (0x1UL<<CAM_AFM_EN_SHIFT)
#define CAM_AFM_EN                     (0x1UL<<CAM_AFM_EN_SHIFT)

/*****************************************************************************/
/* Register description for ISP_AFM_LT_A */

/* Reset value of register CAM_ISP_AFM_LT_A */
#define CAM_ISP_AFM_LT_A_VALUE         0x0

/* Bits definition for register CAM_ISP_AFM_LT_A */
#define CAM_A_H_L_SHIFT                16
#define CAM_A_H_L_FIELD                (0xFFFFFFFF - (0xFFFUL<<CAM_A_H_L_SHIFT))
#define CAM_A_H_L_0                    (0x0UL<<CAM_A_H_L_SHIFT)
#define CAM_A_V_T_SHIFT                0
#define CAM_A_V_T_FIELD                (0xFFFFFFFF - (0x7FFUL<<CAM_A_V_T_SHIFT))
#define CAM_A_V_T_0                    (0x0UL<<CAM_A_V_T_SHIFT)

/*****************************************************************************/
/* Register description for ISP_AFM_RB_A */

/* Reset value of register CAM_ISP_AFM_RB_A */
#define CAM_ISP_AFM_RB_A_VALUE         0x0

/* Bits definition for register CAM_ISP_AFM_RB_A */
#define CAM_A_H_R_SHIFT                16
#define CAM_A_H_R_FIELD                (0xFFFFFFFF - (0xFFFUL<<CAM_A_H_R_SHIFT))
#define CAM_A_H_R_0                    (0x0UL<<CAM_A_H_R_SHIFT)
#define CAM_A_V_B_SHIFT                0
#define CAM_A_V_B_FIELD                (0xFFFFFFFF - (0x7FFUL<<CAM_A_V_B_SHIFT))
#define CAM_A_V_B_0                    (0x0UL<<CAM_A_V_B_SHIFT)

/*****************************************************************************/
/* Register description for ISP_AFM_LT_B */

/* Reset value of register CAM_ISP_AFM_LT_B */
#define CAM_ISP_AFM_LT_B_VALUE         0x0

/* Bits definition for register CAM_ISP_AFM_LT_B */
#define CAM_B_H_L_SHIFT                16
#define CAM_B_H_L_FIELD                (0xFFFFFFFF - (0xFFFUL<<CAM_B_H_L_SHIFT))
#define CAM_B_H_L_0                    (0x0UL<<CAM_B_H_L_SHIFT)
#define CAM_B_V_T_SHIFT                0
#define CAM_B_V_T_FIELD                (0xFFFFFFFF - (0x7FFUL<<CAM_B_V_T_SHIFT))
#define CAM_B_V_T_0                    (0x0UL<<CAM_B_V_T_SHIFT)

/*****************************************************************************/
/* Register description for ISP_AFM_RB_B */

/* Reset value of register CAM_ISP_AFM_RB_B */
#define CAM_ISP_AFM_RB_B_VALUE         0x0

/* Bits definition for register CAM_ISP_AFM_RB_B */
#define CAM_B_H_R_SHIFT                16
#define CAM_B_H_R_FIELD                (0xFFFFFFFF - (0xFFFUL<<CAM_B_H_R_SHIFT))
#define CAM_B_H_R_0                    (0x0UL<<CAM_B_H_R_SHIFT)
#define CAM_B_V_B_SHIFT                0
#define CAM_B_V_B_FIELD                (0xFFFFFFFF - (0x7FFUL<<CAM_B_V_B_SHIFT))
#define CAM_B_V_B_0                    (0x0UL<<CAM_B_V_B_SHIFT)

/*****************************************************************************/
/* Register description for ISP_AFM_LT_C */

/* Reset value of register CAM_ISP_AFM_LT_C */
#define CAM_ISP_AFM_LT_C_VALUE         0x0

/* Bits definition for register CAM_ISP_AFM_LT_C */
#define CAM_C_H_L_SHIFT                16
#define CAM_C_H_L_FIELD                (0xFFFFFFFF - (0xFFFUL<<CAM_C_H_L_SHIFT))
#define CAM_C_H_L_0                    (0x0UL<<CAM_C_H_L_SHIFT)
#define CAM_C_V_T_SHIFT                0
#define CAM_C_V_T_FIELD                (0xFFFFFFFF - (0x7FFUL<<CAM_C_V_T_SHIFT))
#define CAM_C_V_T_0                    (0x0UL<<CAM_C_V_T_SHIFT)

/*****************************************************************************/
/* Register description for ISP_AFM_RB_C */

/* Reset value of register CAM_ISP_AFM_RB_C */
#define CAM_ISP_AFM_RB_C_VALUE         0x0

/* Bits definition for register CAM_ISP_AFM_RB_C */
#define CAM_C_H_R_SHIFT                16
#define CAM_C_H_R_FIELD                (0xFFFFFFFF - (0xFFFUL<<CAM_C_H_R_SHIFT))
#define CAM_C_H_R_0                    (0x0UL<<CAM_C_H_R_SHIFT)
#define CAM_C_V_B_SHIFT                0
#define CAM_C_V_B_FIELD                (0xFFFFFFFF - (0x7FFUL<<CAM_C_V_B_SHIFT))
#define CAM_C_V_B_0                    (0x0UL<<CAM_C_V_B_SHIFT)

/*****************************************************************************/
/* Register description for ISP_AFM_THRE */

/* Reset value of register CAM_ISP_AFM_THRE */
#define CAM_ISP_AFM_THRE_VALUE         0x0

/* Bits definition for register CAM_ISP_AFM_THRE */
#define CAM_AFM_THRES_SHIFT            0
#define CAM_AFM_THRES_FIELD            (0xFFFFFFFF - (0xFFFFUL<<CAM_AFM_THRES_SHIFT))
#define CAM_AFM_THRES_0                (0x0UL<<CAM_AFM_THRES_SHIFT)

/*****************************************************************************/
/* Register description for ISP_AFM_VAR_SHIFT */

/* Reset value of register CAM_ISP_AFM_VAR_SHIFT */
#define CAM_ISP_AFM_VAR_SHIFT_VALUE    0x0

/* Bits definition for register CAM_ISP_AFM_VAR_SHIFT */
#define CAM_LUM_VAR_SHIFT_SHIFT        16
#define CAM_LUM_VAR_SHIFT_FIELD        (0xFFFFFFFF - (0x7UL<<CAM_LUM_VAR_SHIFT_SHIFT))
#define CAM_LUM_VAR_SHIFT_0            (0x0UL<<CAM_LUM_VAR_SHIFT_SHIFT)
#define CAM_AFM_VAR_SHIFT_SHIFT        0
#define CAM_AFM_VAR_SHIFT_FIELD        (0xFFFFFFFF - (0x7UL<<CAM_AFM_VAR_SHIFT_SHIFT))
#define CAM_AFM_VAR_SHIFT_0            (0x0UL<<CAM_AFM_VAR_SHIFT_SHIFT)

/*****************************************************************************/
/* Register description for ISP_AFM_SUM_A */

/* Reset value of register CAM_ISP_AFM_SUM_A */
#define CAM_ISP_AFM_SUM_A_VALUE        0x0

/* Bits definition for register CAM_ISP_AFM_SUM_A */
#define CAM_AFM_SUM_A_SHIFT            0
#define CAM_AFM_SUM_A_FIELD            (0xFFFFFFFF - (0x7FFFFFFFUL<<CAM_AFM_SUM_A_SHIFT))
#define CAM_AFM_SUM_A_0                (0x0UL<<CAM_AFM_SUM_A_SHIFT)

/*****************************************************************************/
/* Register description for ISP_AFM_SUM_B */

/* Reset value of register CAM_ISP_AFM_SUM_B */
#define CAM_ISP_AFM_SUM_B_VALUE        0x0

/* Bits definition for register CAM_ISP_AFM_SUM_B */
#define CAM_AFM_SUM_B_SHIFT            0
#define CAM_AFM_SUM_B_FIELD            (0xFFFFFFFF - (0x7FFFFFFFUL<<CAM_AFM_SUM_B_SHIFT))
#define CAM_AFM_SUM_B_0                (0x0UL<<CAM_AFM_SUM_B_SHIFT)

/*****************************************************************************/
/* Register description for ISP_AFM_SUM_C */

/* Reset value of register CAM_ISP_AFM_SUM_C */
#define CAM_ISP_AFM_SUM_C_VALUE        0x0

/* Bits definition for register CAM_ISP_AFM_SUM_C */
#define CAM_AFM_SUM_C_SHIFT            0
#define CAM_AFM_SUM_C_FIELD            (0xFFFFFFFF - (0x7FFFFFFFUL<<CAM_AFM_SUM_C_SHIFT))
#define CAM_AFM_SUM_C_0                (0x0UL<<CAM_AFM_SUM_C_SHIFT)

/*****************************************************************************/
/* Register description for ISP_AFM_LUM_A */

/* Reset value of register CAM_ISP_AFM_LUM_A */
#define CAM_ISP_AFM_LUM_A_VALUE        0x0

/* Bits definition for register CAM_ISP_AFM_LUM_A */
#define CAM_AFM_LUM_A_SHIFT            0
#define CAM_AFM_LUM_A_FIELD            (0xFFFFFFFF - (0xFFFFFFUL<<CAM_AFM_LUM_A_SHIFT))
#define CAM_AFM_LUM_A_0                (0x0UL<<CAM_AFM_LUM_A_SHIFT)

/*****************************************************************************/
/* Register description for ISP_AFM_LUM_B */

/* Reset value of register CAM_ISP_AFM_LUM_B */
#define CAM_ISP_AFM_LUM_B_VALUE        0x0

/* Bits definition for register CAM_ISP_AFM_LUM_B */
#define CAM_AFM_LUM_B_SHIFT            0
#define CAM_AFM_LUM_B_FIELD            (0xFFFFFFFF - (0xFFFFFFUL<<CAM_AFM_LUM_B_SHIFT))
#define CAM_AFM_LUM_B_0                (0x0UL<<CAM_AFM_LUM_B_SHIFT)

/*****************************************************************************/
/* Register description for ISP_AFM_LUM_C */

/* Reset value of register CAM_ISP_AFM_LUM_C */
#define CAM_ISP_AFM_LUM_C_VALUE        0x0

/* Bits definition for register CAM_ISP_AFM_LUM_C */
#define CAM_AFM_LUM_C_SHIFT            0
#define CAM_AFM_LUM_C_FIELD            (0xFFFFFFFF - (0xFFFFFFUL<<CAM_AFM_LUM_C_SHIFT))
#define CAM_AFM_LUM_C_0                (0x0UL<<CAM_AFM_LUM_C_SHIFT)

/*****************************************************************************/
/* Register description for ISP_BP_CTRL */

/* Reset value of register CAM_ISP_BP_CTRL */
#define CAM_ISP_BP_CTRL_VALUE          0x0

/* Bits definition for register CAM_ISP_BP_CTRL */
#define CAM_COR_TYPE_SHIFT             4
#define CAM_COR_TYPE_FIELD             (0xFFFFFFFF - (0x1UL<<CAM_COR_TYPE_SHIFT))
#define CAM_COR_TYPE_0                 (0x0UL<<CAM_COR_TYPE_SHIFT)
#define CAM_COR_TYPE_1                 (0x1UL<<CAM_COR_TYPE_SHIFT)
#define CAM_COR_TYPE                   (0x1UL<<CAM_COR_TYPE_SHIFT)
#define CAM_REP_MODE_SHIFT             3
#define CAM_REP_MODE_FIELD             (0xFFFFFFFF - (0x1UL<<CAM_REP_MODE_SHIFT))
#define CAM_REP_MODE_0                 (0x0UL<<CAM_REP_MODE_SHIFT)
#define CAM_REP_MODE_1                 (0x1UL<<CAM_REP_MODE_SHIFT)
#define CAM_REP_MODE                   (0x1UL<<CAM_REP_MODE_SHIFT)
#define CAM_DEAD_COR_EN_SHIFT          2
#define CAM_DEAD_COR_EN_FIELD          (0xFFFFFFFF - (0x1UL<<CAM_DEAD_COR_EN_SHIFT))
#define CAM_DEAD_COR_EN_0              (0x0UL<<CAM_DEAD_COR_EN_SHIFT)
#define CAM_DEAD_COR_EN_1              (0x1UL<<CAM_DEAD_COR_EN_SHIFT)
#define CAM_DEAD_COR_EN                (0x1UL<<CAM_DEAD_COR_EN_SHIFT)
#define CAM_HOT_COR_EN_SHIFT           1
#define CAM_HOT_COR_EN_FIELD           (0xFFFFFFFF - (0x1UL<<CAM_HOT_COR_EN_SHIFT))
#define CAM_HOT_COR_EN_0               (0x0UL<<CAM_HOT_COR_EN_SHIFT)
#define CAM_HOT_COR_EN_1               (0x1UL<<CAM_HOT_COR_EN_SHIFT)
#define CAM_HOT_COR_EN                 (0x1UL<<CAM_HOT_COR_EN_SHIFT)
#define CAM_BP_DET_EN_SHIFT            0
#define CAM_BP_DET_EN_FIELD            (0xFFFFFFFF - (0x1UL<<CAM_BP_DET_EN_SHIFT))
#define CAM_BP_DET_EN_0                (0x0UL<<CAM_BP_DET_EN_SHIFT)
#define CAM_BP_DET_EN_1                (0x1UL<<CAM_BP_DET_EN_SHIFT)
#define CAM_BP_DET_EN                  (0x1UL<<CAM_BP_DET_EN_SHIFT)

/*****************************************************************************/
/* Register description for ISP_BP_CFG1 */

/* Reset value of register CAM_ISP_BP_CFG1 */
#define CAM_ISP_BP_CFG1_VALUE          0x0

/* Bits definition for register CAM_ISP_BP_CFG1 */
#define CAM_HOT_THRES_SHIFT            16
#define CAM_HOT_THRES_FIELD            (0xFFFFFFFF - (0xFFFUL<<CAM_HOT_THRES_SHIFT))
#define CAM_HOT_THRES_0                (0x0UL<<CAM_HOT_THRES_SHIFT)
#define CAM_DEAD_THRES_SHIFT           0
#define CAM_DEAD_THRES_FIELD           (0xFFFFFFFF - (0xFFFUL<<CAM_DEAD_THRES_SHIFT))
#define CAM_DEAD_THRES_0               (0x0UL<<CAM_DEAD_THRES_SHIFT)

/*****************************************************************************/
/* Register description for ISP_BP_CFG2 */

/* Reset value of register CAM_ISP_BP_CFG2 */
#define CAM_ISP_BP_CFG2_VALUE          0x0

/* Bits definition for register CAM_ISP_BP_CFG2 */
#define CAM_DEV_HOT_THRES_SHIFT        16
#define CAM_DEV_HOT_THRES_FIELD        (0xFFFFFFFF - (0xFFFUL<<CAM_DEV_HOT_THRES_SHIFT))
#define CAM_DEV_HOT_THRES_0            (0x0UL<<CAM_DEV_HOT_THRES_SHIFT)
#define CAM_DEV_DEAD_THRES_SHIFT       0
#define CAM_DEV_DEAD_THRES_FIELD       (0xFFFFFFFF - (0xFFFUL<<CAM_DEV_DEAD_THRES_SHIFT))
#define CAM_DEV_DEAD_THRES_0           (0x0UL<<CAM_DEV_DEAD_THRES_SHIFT)

/*****************************************************************************/
/* Register description for ISP_BP_NUMBER */

/* Reset value of register CAM_ISP_BP_NUMBER */
#define CAM_ISP_BP_NUMBER_VALUE        0x0

/* Bits definition for register CAM_ISP_BP_NUMBER */
#define CAM_BP_NUMBER_SHIFT            0
#define CAM_BP_NUMBER_FIELD            (0xFFFFFFFF - (0x1FFUL<<CAM_BP_NUMBER_SHIFT))
#define CAM_BP_NUMBER_0                (0x0UL<<CAM_BP_NUMBER_SHIFT)

/*****************************************************************************/
/* Register description for ISP_BP_TABLE_ADDR */

/* Reset value of register CAM_ISP_BP_TABLE_ADDR */
#define CAM_ISP_BP_TABLE_ADDR_VALUE    0x0

/* Bits definition for register CAM_ISP_BP_TABLE_ADDR */
#define CAM_BP_TABLE_ADDR_SHIFT        0
#define CAM_BP_TABLE_ADDR_FIELD        (0xFFFFFFFF - (0x1FFUL<<CAM_BP_TABLE_ADDR_SHIFT))
#define CAM_BP_TABLE_ADDR_0            (0x0UL<<CAM_BP_TABLE_ADDR_SHIFT)

/*****************************************************************************/
/* Register description for ISP_BP_TABLE_DATA */

/* Reset value of register CAM_ISP_BP_TABLE_DATA */
#define CAM_ISP_BP_TABLE_DATA_VALUE    0x0

/* Bits definition for register CAM_ISP_BP_TABLE_DATA */
#define CAM_PIX_TYPE_SHIFT             31
#define CAM_PIX_TYPE_FIELD             (0xFFFFFFFF - (0x1UL<<CAM_PIX_TYPE_SHIFT))
#define CAM_PIX_TYPE_0                 (0x0UL<<CAM_PIX_TYPE_SHIFT)
#define CAM_PIX_TYPE_1                 (0x1UL<<CAM_PIX_TYPE_SHIFT)
#define CAM_PIX_TYPE                   (0x1UL<<CAM_PIX_TYPE_SHIFT)
#define CAM_V_ADDR_SHIFT               16
#define CAM_V_ADDR_FIELD               (0xFFFFFFFF - (0x7FFUL<<CAM_V_ADDR_SHIFT))
#define CAM_V_ADDR_0                   (0x0UL<<CAM_V_ADDR_SHIFT)
#define CAM_H_ADDR_SHIFT               0
#define CAM_H_ADDR_FIELD               (0xFFFFFFFF - (0xFFFUL<<CAM_H_ADDR_SHIFT))
#define CAM_H_ADDR_0                   (0x0UL<<CAM_H_ADDR_SHIFT)

/*****************************************************************************/
/* Register description for ISP_BP_NEW_NUMBER */

/* Reset value of register CAM_ISP_BP_NEW_NUMBER */
#define CAM_ISP_BP_NEW_NUMBER_VALUE    0x0

/* Bits definition for register CAM_ISP_BP_NEW_NUMBER */
#define CAM_BP_NEW_NUMBER_SHIFT        0
#define CAM_BP_NEW_NUMBER_FIELD        (0xFFFFFFFF - (0xFFUL<<CAM_BP_NEW_NUMBER_SHIFT))
#define CAM_BP_NEW_NUMBER_0            (0x0UL<<CAM_BP_NEW_NUMBER_SHIFT)

/*****************************************************************************/
/* Register description for ISP_BP_NEW_TABLE[0:7] */

/* Reset value of register CAM_ISP_BP_NEW_TABLE[0:7] */
#define CAM_ISP_BP_NEW_TABLE0_VALUE    0x0
#define CAM_ISP_BP_NEW_TABLE1_VALUE    0x0
#define CAM_ISP_BP_NEW_TABLE2_VALUE    0x0
#define CAM_ISP_BP_NEW_TABLE3_VALUE    0x0
#define CAM_ISP_BP_NEW_TABLE4_VALUE    0x0
#define CAM_ISP_BP_NEW_TABLE5_VALUE    0x0
#define CAM_ISP_BP_NEW_TABLE6_VALUE    0x0
#define CAM_ISP_BP_NEW_TABLE7_VALUE    0x0

/* Bits definition for register CAM_ISP_BP_NEW_TABLE[0:7] */
#define CAM_NEW_VALUE_SHIFT            27
#define CAM_NEW_VALUE_FIELD            (0xFFFFFFFF - (0x1FUL<<CAM_NEW_VALUE_SHIFT))
#define CAM_NEW_VALUE_0                (0x0UL<<CAM_NEW_VALUE_SHIFT)
#define CAM_V_ADDR_SHIFT               16
#define CAM_V_ADDR_FIELD               (0xFFFFFFFF - (0x7FFUL<<CAM_V_ADDR_SHIFT))
#define CAM_V_ADDR_0                   (0x0UL<<CAM_V_ADDR_SHIFT)
#define CAM_H_ADDR_SHIFT               0
#define CAM_H_ADDR_FIELD               (0xFFFFFFFF - (0xFFFUL<<CAM_H_ADDR_SHIFT))
#define CAM_H_ADDR_0                   (0x0UL<<CAM_H_ADDR_SHIFT)

/*****************************************************************************/
/* Register description for ISP_LSC_CTRL */

/* Reset value of register CAM_ISP_LSC_CTRL */
#define CAM_ISP_LSC_CTRL_VALUE         0x0

/* Bits definition for register CAM_ISP_LSC_CTRL */
#define CAM_LSC_EN_SHIFT               0
#define CAM_LSC_EN_FIELD               (0xFFFFFFFF - (0x1UL<<CAM_LSC_EN_SHIFT))
#define CAM_LSC_EN_0                   (0x0UL<<CAM_LSC_EN_SHIFT)
#define CAM_LSC_EN_1                   (0x1UL<<CAM_LSC_EN_SHIFT)
#define CAM_LSC_EN                     (0x1UL<<CAM_LSC_EN_SHIFT)

/*****************************************************************************/
/* Register description for ISP_LSC_R_RAM_ADDR */

/* Reset value of register CAM_ISP_LSC_R_RAM_ADDR */
#define CAM_ISP_LSC_R_RAM_ADDR_VALUE   0x0

/* Bits definition for register CAM_ISP_LSC_R_RAM_ADDR */
#define CAM_R_RAM_ADDR_SHIFT           0
#define CAM_R_RAM_ADDR_FIELD           (0xFFFFFFFF - (0xFFUL<<CAM_R_RAM_ADDR_SHIFT))
#define CAM_R_RAM_ADDR_0               (0x0UL<<CAM_R_RAM_ADDR_SHIFT)

/*****************************************************************************/
/* Register description for ISP_LSC_G_RAM_ADDR */

/* Reset value of register CAM_ISP_LSC_G_RAM_ADDR */
#define CAM_ISP_LSC_G_RAM_ADDR_VALUE   0x0

/* Bits definition for register CAM_ISP_LSC_G_RAM_ADDR */
#define CAM_G_RAM_ADDR_SHIFT           0
#define CAM_G_RAM_ADDR_FIELD           (0xFFFFFFFF - (0xFFUL<<CAM_G_RAM_ADDR_SHIFT))
#define CAM_G_RAM_ADDR_0               (0x0UL<<CAM_G_RAM_ADDR_SHIFT)

/*****************************************************************************/
/* Register description for ISP_LSC_B_RAM_ADDR */

/* Reset value of register CAM_ISP_LSC_B_RAM_ADDR */
#define CAM_ISP_LSC_B_RAM_ADDR_VALUE   0x0

/* Bits definition for register CAM_ISP_LSC_B_RAM_ADDR */
#define CAM_B_RAM_ADDR_SHIFT           0
#define CAM_B_RAM_ADDR_FIELD           (0xFFFFFFFF - (0xFFUL<<CAM_B_RAM_ADDR_SHIFT))
#define CAM_B_RAM_ADDR_0               (0x0UL<<CAM_B_RAM_ADDR_SHIFT)

/*****************************************************************************/
/* Register description for ISP_LSC_R_SAMP_TBL */

/* Reset value of register CAM_ISP_LSC_R_SAMP_TBL */
#define CAM_ISP_LSC_R_SAMP_TBL_VALUE   0x0

/* Bits definition for register CAM_ISP_LSC_R_SAMP_TBL */
#define CAM_R_SAMPLE_1_SHIFT           12
#define CAM_R_SAMPLE_1_FIELD           (0xFFFFFFFF - (0xFFFUL<<CAM_R_SAMPLE_1_SHIFT))
#define CAM_R_SAMPLE_1_0               (0x0UL<<CAM_R_SAMPLE_1_SHIFT)
#define CAM_R_SAMPLE_0_SHIFT           0
#define CAM_R_SAMPLE_0_FIELD           (0xFFFFFFFF - (0xFFFUL<<CAM_R_SAMPLE_0_SHIFT))
#define CAM_R_SAMPLE_0_0               (0x0UL<<CAM_R_SAMPLE_0_SHIFT)

/*****************************************************************************/
/* Register description for ISP_LSC_G_SAMP_TBL */

/* Reset value of register CAM_ISP_LSC_G_SAMP_TBL */
#define CAM_ISP_LSC_G_SAMP_TBL_VALUE   0x0

/* Bits definition for register CAM_ISP_LSC_G_SAMP_TBL */
#define CAM_G_SAMPLE_1_SHIFT           12
#define CAM_G_SAMPLE_1_FIELD           (0xFFFFFFFF - (0xFFFUL<<CAM_G_SAMPLE_1_SHIFT))
#define CAM_G_SAMPLE_1_0               (0x0UL<<CAM_G_SAMPLE_1_SHIFT)
#define CAM_G_SAMPLE_0_SHIFT           0
#define CAM_G_SAMPLE_0_FIELD           (0xFFFFFFFF - (0xFFFUL<<CAM_G_SAMPLE_0_SHIFT))
#define CAM_G_SAMPLE_0_0               (0x0UL<<CAM_G_SAMPLE_0_SHIFT)

/*****************************************************************************/
/* Register description for ISP_LSC_B_SAMP_TBL */

/* Reset value of register CAM_ISP_LSC_B_SAMP_TBL */
#define CAM_ISP_LSC_B_SAMP_TBL_VALUE   0x0

/* Bits definition for register CAM_ISP_LSC_B_SAMP_TBL */
#define CAM_B_SAMPLE_1_SHIFT           12
#define CAM_B_SAMPLE_1_FIELD           (0xFFFFFFFF - (0xFFFUL<<CAM_B_SAMPLE_1_SHIFT))
#define CAM_B_SAMPLE_1_0               (0x0UL<<CAM_B_SAMPLE_1_SHIFT)
#define CAM_B_SAMPLE_0_SHIFT           0
#define CAM_B_SAMPLE_0_FIELD           (0xFFFFFFFF - (0xFFFUL<<CAM_B_SAMPLE_0_SHIFT))
#define CAM_B_SAMPLE_0_0               (0x0UL<<CAM_B_SAMPLE_0_SHIFT)

/*****************************************************************************/
/* Register description for ISP_LSC_XGRAD_01 */

/* Reset value of register CAM_ISP_LSC_XGRAD_01 */
#define CAM_ISP_LSC_XGRAD_01_VALUE     0x0

/* Bits definition for register CAM_ISP_LSC_XGRAD_01 */
#define CAM_XGRAD_1_SHIFT              16
#define CAM_XGRAD_1_FIELD              (0xFFFFFFFF - (0xFFFUL<<CAM_XGRAD_1_SHIFT))
#define CAM_XGRAD_1_0                  (0x0UL<<CAM_XGRAD_1_SHIFT)
#define CAM_XGRAD_0_SHIFT              0
#define CAM_XGRAD_0_FIELD              (0xFFFFFFFF - (0xFFFUL<<CAM_XGRAD_0_SHIFT))
#define CAM_XGRAD_0_0                  (0x0UL<<CAM_XGRAD_0_SHIFT)

/*****************************************************************************/
/* Register description for ISP_LSC_XGRAD_23 */

/* Reset value of register CAM_ISP_LSC_XGRAD_23 */
#define CAM_ISP_LSC_XGRAD_23_VALUE     0x0

/* Bits definition for register CAM_ISP_LSC_XGRAD_23 */
#define CAM_XGRAD_3_SHIFT              16
#define CAM_XGRAD_3_FIELD              (0xFFFFFFFF - (0xFFFUL<<CAM_XGRAD_3_SHIFT))
#define CAM_XGRAD_3_0                  (0x0UL<<CAM_XGRAD_3_SHIFT)
#define CAM_XGRAD_2_SHIFT              0
#define CAM_XGRAD_2_FIELD              (0xFFFFFFFF - (0xFFFUL<<CAM_XGRAD_2_SHIFT))
#define CAM_XGRAD_2_0                  (0x0UL<<CAM_XGRAD_2_SHIFT)

/*****************************************************************************/
/* Register description for ISP_LSC_XGRAD_45 */

/* Reset value of register CAM_ISP_LSC_XGRAD_45 */
#define CAM_ISP_LSC_XGRAD_45_VALUE     0x0

/* Bits definition for register CAM_ISP_LSC_XGRAD_45 */
#define CAM_XGRAD_5_SHIFT              16
#define CAM_XGRAD_5_FIELD              (0xFFFFFFFF - (0xFFFUL<<CAM_XGRAD_5_SHIFT))
#define CAM_XGRAD_5_0                  (0x0UL<<CAM_XGRAD_5_SHIFT)
#define CAM_XGRAD_4_SHIFT              0
#define CAM_XGRAD_4_FIELD              (0xFFFFFFFF - (0xFFFUL<<CAM_XGRAD_4_SHIFT))
#define CAM_XGRAD_4_0                  (0x0UL<<CAM_XGRAD_4_SHIFT)

/*****************************************************************************/
/* Register description for ISP_LSC_XGRAD_67 */

/* Reset value of register CAM_ISP_LSC_XGRAD_67 */
#define CAM_ISP_LSC_XGRAD_67_VALUE     0x0

/* Bits definition for register CAM_ISP_LSC_XGRAD_67 */
#define CAM_XGRAD_7_SHIFT              16
#define CAM_XGRAD_7_FIELD              (0xFFFFFFFF - (0xFFFUL<<CAM_XGRAD_7_SHIFT))
#define CAM_XGRAD_7_0                  (0x0UL<<CAM_XGRAD_7_SHIFT)
#define CAM_XGRAD_6_SHIFT              0
#define CAM_XGRAD_6_FIELD              (0xFFFFFFFF - (0xFFFUL<<CAM_XGRAD_6_SHIFT))
#define CAM_XGRAD_6_0                  (0x0UL<<CAM_XGRAD_6_SHIFT)

/*****************************************************************************/
/* Register description for ISP_LSC_YGRAD_01 */

/* Reset value of register CAM_ISP_LSC_YGRAD_01 */
#define CAM_ISP_LSC_YGRAD_01_VALUE     0x0

/* Bits definition for register CAM_ISP_LSC_YGRAD_01 */
#define CAM_YGRAD_1_SHIFT              16
#define CAM_YGRAD_1_FIELD              (0xFFFFFFFF - (0xFFFUL<<CAM_YGRAD_1_SHIFT))
#define CAM_YGRAD_1_0                  (0x0UL<<CAM_YGRAD_1_SHIFT)
#define CAM_YGRAD_0_SHIFT              0
#define CAM_YGRAD_0_FIELD              (0xFFFFFFFF - (0xFFFUL<<CAM_YGRAD_0_SHIFT))
#define CAM_YGRAD_0_0                  (0x0UL<<CAM_YGRAD_0_SHIFT)

/*****************************************************************************/
/* Register description for ISP_LSC_YGRAD_23 */

/* Reset value of register CAM_ISP_LSC_YGRAD_23 */
#define CAM_ISP_LSC_YGRAD_23_VALUE     0x0

/* Bits definition for register CAM_ISP_LSC_YGRAD_23 */
#define CAM_YGRAD_3_SHIFT              16
#define CAM_YGRAD_3_FIELD              (0xFFFFFFFF - (0xFFFUL<<CAM_YGRAD_3_SHIFT))
#define CAM_YGRAD_3_0                  (0x0UL<<CAM_YGRAD_3_SHIFT)
#define CAM_YGRAD_2_SHIFT              0
#define CAM_YGRAD_2_FIELD              (0xFFFFFFFF - (0xFFFUL<<CAM_YGRAD_2_SHIFT))
#define CAM_YGRAD_2_0                  (0x0UL<<CAM_YGRAD_2_SHIFT)

/*****************************************************************************/
/* Register description for ISP_LSC_YGRAD_45 */

/* Reset value of register CAM_ISP_LSC_YGRAD_45 */
#define CAM_ISP_LSC_YGRAD_45_VALUE     0x0

/* Bits definition for register CAM_ISP_LSC_YGRAD_45 */
#define CAM_YGRAD_5_SHIFT              16
#define CAM_YGRAD_5_FIELD              (0xFFFFFFFF - (0xFFFUL<<CAM_YGRAD_5_SHIFT))
#define CAM_YGRAD_5_0                  (0x0UL<<CAM_YGRAD_5_SHIFT)
#define CAM_YGRAD_4_SHIFT              0
#define CAM_YGRAD_4_FIELD              (0xFFFFFFFF - (0xFFFUL<<CAM_YGRAD_4_SHIFT))
#define CAM_YGRAD_4_0                  (0x0UL<<CAM_YGRAD_4_SHIFT)

/*****************************************************************************/
/* Register description for ISP_LSC_YGRAD_67 */

/* Reset value of register CAM_ISP_LSC_YGRAD_67 */
#define CAM_ISP_LSC_YGRAD_67_VALUE     0x0

/* Bits definition for register CAM_ISP_LSC_YGRAD_67 */
#define CAM_YGRAD_7_SHIFT              16
#define CAM_YGRAD_7_FIELD              (0xFFFFFFFF - (0xFFFUL<<CAM_YGRAD_7_SHIFT))
#define CAM_YGRAD_7_0                  (0x0UL<<CAM_YGRAD_7_SHIFT)
#define CAM_YGRAD_6_SHIFT              0
#define CAM_YGRAD_6_FIELD              (0xFFFFFFFF - (0xFFFUL<<CAM_YGRAD_6_SHIFT))
#define CAM_YGRAD_6_0                  (0x0UL<<CAM_YGRAD_6_SHIFT)

/*****************************************************************************/
/* Register description for ISP_LSC_XSIZE_01 */

/* Reset value of register CAM_ISP_LSC_XSIZE_01 */
#define CAM_ISP_LSC_XSIZE_01_VALUE     0x0

/* Bits definition for register CAM_ISP_LSC_XSIZE_01 */
#define CAM_X_SECT_SIZE_1_SHIFT        16
#define CAM_X_SECT_SIZE_1_FIELD        (0xFFFFFFFF - (0x3FFUL<<CAM_X_SECT_SIZE_1_SHIFT))
#define CAM_X_SECT_SIZE_1_0            (0x0UL<<CAM_X_SECT_SIZE_1_SHIFT)
#define CAM_X_SECT_SIZE_0_SHIFT        0
#define CAM_X_SECT_SIZE_0_FIELD        (0xFFFFFFFF - (0x3FFUL<<CAM_X_SECT_SIZE_0_SHIFT))
#define CAM_X_SECT_SIZE_0_0            (0x0UL<<CAM_X_SECT_SIZE_0_SHIFT)

/*****************************************************************************/
/* Register description for ISP_LSC_XSIZE_23 */

/* Reset value of register CAM_ISP_LSC_XSIZE_23 */
#define CAM_ISP_LSC_XSIZE_23_VALUE     0x0

/* Bits definition for register CAM_ISP_LSC_XSIZE_23 */
#define CAM_X_SECT_SIZE_3_SHIFT        16
#define CAM_X_SECT_SIZE_3_FIELD        (0xFFFFFFFF - (0x3FFUL<<CAM_X_SECT_SIZE_3_SHIFT))
#define CAM_X_SECT_SIZE_3_0            (0x0UL<<CAM_X_SECT_SIZE_3_SHIFT)
#define CAM_X_SECT_SIZE_2_SHIFT        0
#define CAM_X_SECT_SIZE_2_FIELD        (0xFFFFFFFF - (0x3FFUL<<CAM_X_SECT_SIZE_2_SHIFT))
#define CAM_X_SECT_SIZE_2_0            (0x0UL<<CAM_X_SECT_SIZE_2_SHIFT)

/*****************************************************************************/
/* Register description for ISP_LSC_XSIZE_45 */

/* Reset value of register CAM_ISP_LSC_XSIZE_45 */
#define CAM_ISP_LSC_XSIZE_45_VALUE     0x0

/* Bits definition for register CAM_ISP_LSC_XSIZE_45 */
#define CAM_X_SECT_SIZE_5_SHIFT        16
#define CAM_X_SECT_SIZE_5_FIELD        (0xFFFFFFFF - (0x3FFUL<<CAM_X_SECT_SIZE_5_SHIFT))
#define CAM_X_SECT_SIZE_5_0            (0x0UL<<CAM_X_SECT_SIZE_5_SHIFT)
#define CAM_X_SECT_SIZE_4_SHIFT        0
#define CAM_X_SECT_SIZE_4_FIELD        (0xFFFFFFFF - (0x3FFUL<<CAM_X_SECT_SIZE_4_SHIFT))
#define CAM_X_SECT_SIZE_4_0            (0x0UL<<CAM_X_SECT_SIZE_4_SHIFT)

/*****************************************************************************/
/* Register description for ISP_LSC_XSIZE_67 */

/* Reset value of register CAM_ISP_LSC_XSIZE_67 */
#define CAM_ISP_LSC_XSIZE_67_VALUE     0x0

/* Bits definition for register CAM_ISP_LSC_XSIZE_67 */
#define CAM_X_SECT_SIZE_7_SHIFT        16
#define CAM_X_SECT_SIZE_7_FIELD        (0xFFFFFFFF - (0x3FFUL<<CAM_X_SECT_SIZE_7_SHIFT))
#define CAM_X_SECT_SIZE_7_0            (0x0UL<<CAM_X_SECT_SIZE_7_SHIFT)
#define CAM_X_SECT_SIZE_6_SHIFT        0
#define CAM_X_SECT_SIZE_6_FIELD        (0xFFFFFFFF - (0x3FFUL<<CAM_X_SECT_SIZE_6_SHIFT))
#define CAM_X_SECT_SIZE_6_0            (0x0UL<<CAM_X_SECT_SIZE_6_SHIFT)

/*****************************************************************************/
/* Register description for ISP_LSC_YSIZE_01 */

/* Reset value of register CAM_ISP_LSC_YSIZE_01 */
#define CAM_ISP_LSC_YSIZE_01_VALUE     0x0

/* Bits definition for register CAM_ISP_LSC_YSIZE_01 */
#define CAM_Y_SECT_SIZE_1_SHIFT        16
#define CAM_Y_SECT_SIZE_1_FIELD        (0xFFFFFFFF - (0x3FFUL<<CAM_Y_SECT_SIZE_1_SHIFT))
#define CAM_Y_SECT_SIZE_1_0            (0x0UL<<CAM_Y_SECT_SIZE_1_SHIFT)
#define CAM_Y_SECT_SIZE_0_SHIFT        0
#define CAM_Y_SECT_SIZE_0_FIELD        (0xFFFFFFFF - (0x3FFUL<<CAM_Y_SECT_SIZE_0_SHIFT))
#define CAM_Y_SECT_SIZE_0_0            (0x0UL<<CAM_Y_SECT_SIZE_0_SHIFT)

/*****************************************************************************/
/* Register description for ISP_LSC_YSIZE_23 */

/* Reset value of register CAM_ISP_LSC_YSIZE_23 */
#define CAM_ISP_LSC_YSIZE_23_VALUE     0x0

/* Bits definition for register CAM_ISP_LSC_YSIZE_23 */
#define CAM_Y_SECT_SIZE_3_SHIFT        16
#define CAM_Y_SECT_SIZE_3_FIELD        (0xFFFFFFFF - (0x3FFUL<<CAM_Y_SECT_SIZE_3_SHIFT))
#define CAM_Y_SECT_SIZE_3_0            (0x0UL<<CAM_Y_SECT_SIZE_3_SHIFT)
#define CAM_Y_SECT_SIZE_2_SHIFT        0
#define CAM_Y_SECT_SIZE_2_FIELD        (0xFFFFFFFF - (0x3FFUL<<CAM_Y_SECT_SIZE_2_SHIFT))
#define CAM_Y_SECT_SIZE_2_0            (0x0UL<<CAM_Y_SECT_SIZE_2_SHIFT)

/*****************************************************************************/
/* Register description for ISP_LSC_YSIZE_45 */

/* Reset value of register CAM_ISP_LSC_YSIZE_45 */
#define CAM_ISP_LSC_YSIZE_45_VALUE     0x0

/* Bits definition for register CAM_ISP_LSC_YSIZE_45 */
#define CAM_Y_SECT_SIZE_5_SHIFT        16
#define CAM_Y_SECT_SIZE_5_FIELD        (0xFFFFFFFF - (0x3FFUL<<CAM_Y_SECT_SIZE_5_SHIFT))
#define CAM_Y_SECT_SIZE_5_0            (0x0UL<<CAM_Y_SECT_SIZE_5_SHIFT)
#define CAM_Y_SECT_SIZE_4_SHIFT        0
#define CAM_Y_SECT_SIZE_4_FIELD        (0xFFFFFFFF - (0x3FFUL<<CAM_Y_SECT_SIZE_4_SHIFT))
#define CAM_Y_SECT_SIZE_4_0            (0x0UL<<CAM_Y_SECT_SIZE_4_SHIFT)

/*****************************************************************************/
/* Register description for ISP_LSC_YSIZE_67 */

/* Reset value of register CAM_ISP_LSC_YSIZE_67 */
#define CAM_ISP_LSC_YSIZE_67_VALUE     0x0

/* Bits definition for register CAM_ISP_LSC_YSIZE_67 */
#define CAM_Y_SECT_SIZE_7_SHIFT        16
#define CAM_Y_SECT_SIZE_7_FIELD        (0xFFFFFFFF - (0x3FFUL<<CAM_Y_SECT_SIZE_7_SHIFT))
#define CAM_Y_SECT_SIZE_7_0            (0x0UL<<CAM_Y_SECT_SIZE_7_SHIFT)
#define CAM_Y_SECT_SIZE_6_SHIFT        0
#define CAM_Y_SECT_SIZE_6_FIELD        (0xFFFFFFFF - (0x3FFUL<<CAM_Y_SECT_SIZE_6_SHIFT))
#define CAM_Y_SECT_SIZE_6_0            (0x0UL<<CAM_Y_SECT_SIZE_6_SHIFT)

/*****************************************************************************/
/* Register description for ISP_IS_CTRL */

/* Reset value of register CAM_ISP_IS_CTRL */
#define CAM_ISP_IS_CTRL_VALUE          0x0

/* Bits definition for register CAM_ISP_IS_CTRL */
#define CAM_IS_EN_SHIFT                0
#define CAM_IS_EN_FIELD                (0xFFFFFFFF - (0x1UL<<CAM_IS_EN_SHIFT))
#define CAM_IS_EN_0                    (0x0UL<<CAM_IS_EN_SHIFT)
#define CAM_IS_EN_1                    (0x1UL<<CAM_IS_EN_SHIFT)
#define CAM_IS_EN                      (0x1UL<<CAM_IS_EN_SHIFT)

/*****************************************************************************/
/* Register description for ISP_IS_RECENTER */

/* Reset value of register CAM_ISP_IS_RECENTER */
#define CAM_ISP_IS_RECENTER_VALUE      0x0

/* Bits definition for register CAM_ISP_IS_RECENTER */
#define CAM_IS_RECENTER_SHIFT          0
#define CAM_IS_RECENTER_FIELD          (0xFFFFFFFF - (0x7UL<<CAM_IS_RECENTER_SHIFT))
#define CAM_IS_RECENTER_0              (0x0UL<<CAM_IS_RECENTER_SHIFT)

/*****************************************************************************/
/* Register description for ISP_IS_H_OFFS */

/* Reset value of register CAM_ISP_IS_H_OFFS */
#define CAM_ISP_IS_H_OFFS_VALUE        0x0

/* Bits definition for register CAM_ISP_IS_H_OFFS */
#define CAM_IS_H_OFFS_SHIFT            0
#define CAM_IS_H_OFFS_FIELD            (0xFFFFFFFF - (0x1FFFUL<<CAM_IS_H_OFFS_SHIFT))
#define CAM_IS_H_OFFS_0                (0x0UL<<CAM_IS_H_OFFS_SHIFT)

/*****************************************************************************/
/* Register description for ISP_IS_V_OFFS */

/* Reset value of register CAM_ISP_IS_V_OFFS */
#define CAM_ISP_IS_V_OFFS_VALUE        0x0

/* Bits definition for register CAM_ISP_IS_V_OFFS */
#define CAM_IS_V_OFFS_SHIFT            0
#define CAM_IS_V_OFFS_FIELD            (0xFFFFFFFF - (0xFFFUL<<CAM_IS_V_OFFS_SHIFT))
#define CAM_IS_V_OFFS_0                (0x0UL<<CAM_IS_V_OFFS_SHIFT)

/*****************************************************************************/
/* Register description for ISP_IS_H_SIZE */

/* Reset value of register CAM_ISP_IS_H_SIZE */
#define CAM_ISP_IS_H_SIZE_VALUE        0x0

/* Bits definition for register CAM_ISP_IS_H_SIZE */
#define CAM_IS_H_SIZE_SHIFT            0
#define CAM_IS_H_SIZE_FIELD            (0xFFFFFFFF - (0x1FFFUL<<CAM_IS_H_SIZE_SHIFT))
#define CAM_IS_H_SIZE_0                (0x0UL<<CAM_IS_H_SIZE_SHIFT)

/*****************************************************************************/
/* Register description for ISP_IS_V_SIZE */

/* Reset value of register CAM_ISP_IS_V_SIZE */
#define CAM_ISP_IS_V_SIZE_VALUE        0x0

/* Bits definition for register CAM_ISP_IS_V_SIZE */
#define CAM_IS_V_SIZE_SHIFT            0
#define CAM_IS_V_SIZE_FIELD            (0xFFFFFFFF - (0xFFFUL<<CAM_IS_V_SIZE_SHIFT))
#define CAM_IS_V_SIZE_0                (0x0UL<<CAM_IS_V_SIZE_SHIFT)

/*****************************************************************************/
/* Register description for ISP_IS_MAX_DX */

/* Reset value of register CAM_ISP_IS_MAX_DX */
#define CAM_ISP_IS_MAX_DX_VALUE        0x0

/* Bits definition for register CAM_ISP_IS_MAX_DX */
#define CAM_IS_MAX_DX_SHIFT            0
#define CAM_IS_MAX_DX_FIELD            (0xFFFFFFFF - (0xFFFUL<<CAM_IS_MAX_DX_SHIFT))
#define CAM_IS_MAX_DX_0                (0x0UL<<CAM_IS_MAX_DX_SHIFT)

/*****************************************************************************/
/* Register description for ISP_IS_MAX_DY */

/* Reset value of register CAM_ISP_IS_MAX_DY */
#define CAM_ISP_IS_MAX_DY_VALUE        0x0

/* Bits definition for register CAM_ISP_IS_MAX_DY */
#define CAM_IS_MAX_DY_SHIFT            0
#define CAM_IS_MAX_DY_FIELD            (0xFFFFFFFF - (0xFFFUL<<CAM_IS_MAX_DY_SHIFT))
#define CAM_IS_MAX_DY_0                (0x0UL<<CAM_IS_MAX_DY_SHIFT)

/*****************************************************************************/
/* Register description for ISP_IS_DISPLACE */

/* Reset value of register CAM_ISP_IS_DISPLACE */
#define CAM_ISP_IS_DISPLACE_VALUE      0x0

/* Bits definition for register CAM_ISP_IS_DISPLACE */
#define CAM_DY_SHIFT                   16
#define CAM_DY_FIELD                   (0xFFFFFFFF - (0xFFFUL<<CAM_DY_SHIFT))
#define CAM_DY_0                       (0x0UL<<CAM_DY_SHIFT)
#define CAM_DX_SHIFT                   0
#define CAM_DX_FIELD                   (0xFFFFFFFF - (0xFFFUL<<CAM_DX_SHIFT))
#define CAM_DX_0                       (0x0UL<<CAM_DX_SHIFT)

/*****************************************************************************/
/* Register description for ISP_IS_H_OFFS_SHD */

/* Reset value of register CAM_ISP_IS_H_OFFS_SHD */
#define CAM_ISP_IS_H_OFFS_SHD_VALUE    0x0

/* Bits definition for register CAM_ISP_IS_H_OFFS_SHD */
#define CAM_IS_H_OFFS_SHD_SHIFT        0
#define CAM_IS_H_OFFS_SHD_FIELD        (0xFFFFFFFF - (0x1FFFUL<<CAM_IS_H_OFFS_SHD_SHIFT))
#define CAM_IS_H_OFFS_SHD_0            (0x0UL<<CAM_IS_H_OFFS_SHD_SHIFT)

/*****************************************************************************/
/* Register description for ISP_IS_V_OFFS_SHD */

/* Reset value of register CAM_ISP_IS_V_OFFS_SHD */
#define CAM_ISP_IS_V_OFFS_SHD_VALUE    0x0

/* Bits definition for register CAM_ISP_IS_V_OFFS_SHD */
#define CAM_IS_V_OFF_S_SHD_SHIFT       0
#define CAM_IS_V_OFF_S_SHD_FIELD       (0xFFFFFFFF - (0xFFFUL<<CAM_IS_V_OFF_S_SHD_SHIFT))
#define CAM_IS_V_OFF_S_SHD_0           (0x0UL<<CAM_IS_V_OFF_S_SHD_SHIFT)

/*****************************************************************************/
/* Register description for ISP_IS_H_SIZE_SHD */

/* Reset value of register CAM_ISP_IS_H_SIZE_SHD */
#define CAM_ISP_IS_H_SIZE_SHD_VALUE    0x0

/* Bits definition for register CAM_ISP_IS_H_SIZE_SHD */
#define CAM_IS_H_SIZE_SHD_SHIFT        0
#define CAM_IS_H_SIZE_SHD_FIELD        (0xFFFFFFFF - (0x1FFFUL<<CAM_IS_H_SIZE_SHD_SHIFT))
#define CAM_IS_H_SIZE_SHD_0            (0x0UL<<CAM_IS_H_SIZE_SHD_SHIFT)

/*****************************************************************************/
/* Register description for ISP_IS_V_SIZE_SHD */

/* Reset value of register CAM_ISP_IS_V_SIZE_SHD */
#define CAM_ISP_IS_V_SIZE_SHD_VALUE    0x0

/* Bits definition for register CAM_ISP_IS_V_SIZE_SHD */
#define CAM_IS_V_SIZE_SHD_SHIFT        0
#define CAM_IS_V_SIZE_SHD_FIELD        (0xFFFFFFFF - (0xFFFUL<<CAM_IS_V_SIZE_SHD_SHIFT))
#define CAM_IS_V_SIZE_SHD_0            (0x0UL<<CAM_IS_V_SIZE_SHD_SHIFT)

/*****************************************************************************/
/* Register description for ISP_HIST_PROP */

/* Reset value of register CAM_ISP_HIST_PROP */
#define CAM_ISP_HIST_PROP_VALUE        0x0

/* Bits definition for register CAM_ISP_HIST_PROP */
#define CAM_HIST_PDIV_SHIFT            3
#define CAM_HIST_PDIV_FIELD            (0xFFFFFFFF - (0x7FUL<<CAM_HIST_PDIV_SHIFT))
#define CAM_HIST_PDIV_0                (0x0UL<<CAM_HIST_PDIV_SHIFT)
#define CAM_HIST_MODE_SHIFT            0
#define CAM_HIST_MODE_FIELD            (0xFFFFFFFF - (0x7UL<<CAM_HIST_MODE_SHIFT))
#define CAM_HIST_MODE_0                (0x0UL<<CAM_HIST_MODE_SHIFT)
#define CAM_HIST_MODE_1                (0x1UL<<CAM_HIST_MODE_SHIFT)
#define CAM_HIST_MODE_2                (0x2UL<<CAM_HIST_MODE_SHIFT)
#define CAM_HIST_MODE_3                (0x3UL<<CAM_HIST_MODE_SHIFT)
#define CAM_HIST_MODE_4                (0x4UL<<CAM_HIST_MODE_SHIFT)
#define CAM_HIST_MODE_5                (0x5UL<<CAM_HIST_MODE_SHIFT)
#define CAM_HIST_MODE_6                (0x6UL<<CAM_HIST_MODE_SHIFT)
#define CAM_HIST_MODE_7                (0x7UL<<CAM_HIST_MODE_SHIFT)

/*****************************************************************************/
/* Register description for ISP_HIST_H_OFFS */

/* Reset value of register CAM_ISP_HIST_H_OFFS */
#define CAM_ISP_HIST_H_OFFS_VALUE      0x0

/* Bits definition for register CAM_ISP_HIST_H_OFFS */
#define CAM_HIST_H_OFFS_SHIFT          0
#define CAM_HIST_H_OFFS_FIELD          (0xFFFFFFFF - (0xFFFUL<<CAM_HIST_H_OFFS_SHIFT))
#define CAM_HIST_H_OFFS_0              (0x0UL<<CAM_HIST_H_OFFS_SHIFT)

/*****************************************************************************/
/* Register description for ISP_HIST_V_OFFS */

/* Reset value of register CAM_ISP_HIST_V_OFFS */
#define CAM_ISP_HIST_V_OFFS_VALUE      0x0

/* Bits definition for register CAM_ISP_HIST_V_OFFS */
#define CAM_HIST_V_OFFS_SHIFT          0
#define CAM_HIST_V_OFFS_FIELD          (0xFFFFFFFF - (0xFFFUL<<CAM_HIST_V_OFFS_SHIFT))
#define CAM_HIST_V_OFFS_0              (0x0UL<<CAM_HIST_V_OFFS_SHIFT)

/*****************************************************************************/
/* Register description for ISP_HIST_H_SIZE */

/* Reset value of register CAM_ISP_HIST_H_SIZE */
#define CAM_ISP_HIST_H_SIZE_VALUE      0x0

/* Bits definition for register CAM_ISP_HIST_H_SIZE */
#define CAM_HIST_H_SIZE_SHIFT          0
#define CAM_HIST_H_SIZE_FIELD          (0xFFFFFFFF - (0x1FFFUL<<CAM_HIST_H_SIZE_SHIFT))
#define CAM_HIST_H_SIZE_0              (0x0UL<<CAM_HIST_H_SIZE_SHIFT)

/*****************************************************************************/
/* Register description for ISP_HIST_V_SIZE */

/* Reset value of register CAM_ISP_HIST_V_SIZE */
#define CAM_ISP_HIST_V_SIZE_VALUE      0x0

/* Bits definition for register CAM_ISP_HIST_V_SIZE */
#define CAM_HIST_V_SIZE_SHIFT          0
#define CAM_HIST_V_SIZE_FIELD          (0xFFFFFFFF - (0xFFFUL<<CAM_HIST_V_SIZE_SHIFT))
#define CAM_HIST_V_SIZE_0              (0x0UL<<CAM_HIST_V_SIZE_SHIFT)

/*****************************************************************************/
/* Register description for ISP_HIST_BIN0 */

/* Reset value of register CAM_ISP_HIST_BIN0 */
#define CAM_ISP_HIST_BIN0_VALUE        0x0

/* Bits definition for register CAM_ISP_HIST_BIN0 */
#define CAM_HIST_BIN_SHIFT             0
#define CAM_HIST_BIN_FIELD             (0xFFFFFFFF - (0xFFFFUL<<CAM_HIST_BIN_SHIFT))
#define CAM_HIST_BIN_0                 (0x0UL<<CAM_HIST_BIN_SHIFT)

/*****************************************************************************/
/* Register description for ISP_HIST_BIN1 */

/* Reset value of register CAM_ISP_HIST_BIN1 */
#define CAM_ISP_HIST_BIN1_VALUE        0x0

/* Bits definition for register CAM_ISP_HIST_BIN1 */
#define CAM_HIST_BIN_SHIFT             0
#define CAM_HIST_BIN_FIELD             (0xFFFFFFFF - (0xFFFFUL<<CAM_HIST_BIN_SHIFT))
#define CAM_HIST_BIN_0                 (0x0UL<<CAM_HIST_BIN_SHIFT)

/*****************************************************************************/
/* Register description for ISP_HIST_BIN2 */

/* Reset value of register CAM_ISP_HIST_BIN2 */
#define CAM_ISP_HIST_BIN2_VALUE        0x0

/* Bits definition for register CAM_ISP_HIST_BIN2 */
#define CAM_HIST_BIN_SHIFT             0
#define CAM_HIST_BIN_FIELD             (0xFFFFFFFF - (0xFFFFUL<<CAM_HIST_BIN_SHIFT))
#define CAM_HIST_BIN_0                 (0x0UL<<CAM_HIST_BIN_SHIFT)

/*****************************************************************************/
/* Register description for ISP_HIST_BIN3 */

/* Reset value of register CAM_ISP_HIST_BIN3 */
#define CAM_ISP_HIST_BIN3_VALUE        0x0

/* Bits definition for register CAM_ISP_HIST_BIN3 */
#define CAM_HIST_BIN_SHIFT             0
#define CAM_HIST_BIN_FIELD             (0xFFFFFFFF - (0xFFFFUL<<CAM_HIST_BIN_SHIFT))
#define CAM_HIST_BIN_0                 (0x0UL<<CAM_HIST_BIN_SHIFT)

/*****************************************************************************/
/* Register description for ISP_HIST_BIN4 */

/* Reset value of register CAM_ISP_HIST_BIN4 */
#define CAM_ISP_HIST_BIN4_VALUE        0x0

/* Bits definition for register CAM_ISP_HIST_BIN4 */
#define CAM_HIST_BIN_SHIFT             0
#define CAM_HIST_BIN_FIELD             (0xFFFFFFFF - (0xFFFFUL<<CAM_HIST_BIN_SHIFT))
#define CAM_HIST_BIN_0                 (0x0UL<<CAM_HIST_BIN_SHIFT)

/*****************************************************************************/
/* Register description for ISP_HIST_BIN5 */

/* Reset value of register CAM_ISP_HIST_BIN5 */
#define CAM_ISP_HIST_BIN5_VALUE        0x0

/* Bits definition for register CAM_ISP_HIST_BIN5 */
#define CAM_HIST_BIN_SHIFT             0
#define CAM_HIST_BIN_FIELD             (0xFFFFFFFF - (0xFFFFUL<<CAM_HIST_BIN_SHIFT))
#define CAM_HIST_BIN_0                 (0x0UL<<CAM_HIST_BIN_SHIFT)

/*****************************************************************************/
/* Register description for ISP_HIST_BIN6 */

/* Reset value of register CAM_ISP_HIST_BIN6 */
#define CAM_ISP_HIST_BIN6_VALUE        0x0

/* Bits definition for register CAM_ISP_HIST_BIN6 */
#define CAM_HIST_BIN_SHIFT             0
#define CAM_HIST_BIN_FIELD             (0xFFFFFFFF - (0xFFFFUL<<CAM_HIST_BIN_SHIFT))
#define CAM_HIST_BIN_0                 (0x0UL<<CAM_HIST_BIN_SHIFT)

/*****************************************************************************/
/* Register description for ISP_HIST_BIN7 */

/* Reset value of register CAM_ISP_HIST_BIN7 */
#define CAM_ISP_HIST_BIN7_VALUE        0x0

/* Bits definition for register CAM_ISP_HIST_BIN7 */
#define CAM_HIST_BIN_SHIFT             0
#define CAM_HIST_BIN_FIELD             (0xFFFFFFFF - (0xFFFFUL<<CAM_HIST_BIN_SHIFT))
#define CAM_HIST_BIN_0                 (0x0UL<<CAM_HIST_BIN_SHIFT)

/*****************************************************************************/
/* Register description for ISP_HIST_BIN8 */

/* Reset value of register CAM_ISP_HIST_BIN8 */
#define CAM_ISP_HIST_BIN8_VALUE        0x0

/* Bits definition for register CAM_ISP_HIST_BIN8 */
#define CAM_HIST_BIN_SHIFT             0
#define CAM_HIST_BIN_FIELD             (0xFFFFFFFF - (0xFFFFUL<<CAM_HIST_BIN_SHIFT))
#define CAM_HIST_BIN_0                 (0x0UL<<CAM_HIST_BIN_SHIFT)

/*****************************************************************************/
/* Register description for ISP_HIST_BIN9 */

/* Reset value of register CAM_ISP_HIST_BIN9 */
#define CAM_ISP_HIST_BIN9_VALUE        0x0

/* Bits definition for register CAM_ISP_HIST_BIN9 */
#define CAM_HIST_BIN_SHIFT             0
#define CAM_HIST_BIN_FIELD             (0xFFFFFFFF - (0xFFFFUL<<CAM_HIST_BIN_SHIFT))
#define CAM_HIST_BIN_0                 (0x0UL<<CAM_HIST_BIN_SHIFT)

/*****************************************************************************/
/* Register description for ISP_HIST_BIN10 */

/* Reset value of register CAM_ISP_HIST_BIN10 */
#define CAM_ISP_HIST_BIN10_VALUE       0x0

/* Bits definition for register CAM_ISP_HIST_BIN10 */
#define CAM_HIST_BIN_SHIFT             0
#define CAM_HIST_BIN_FIELD             (0xFFFFFFFF - (0xFFFFUL<<CAM_HIST_BIN_SHIFT))
#define CAM_HIST_BIN_0                 (0x0UL<<CAM_HIST_BIN_SHIFT)

/*****************************************************************************/
/* Register description for ISP_HIST_BIN11 */

/* Reset value of register CAM_ISP_HIST_BIN11 */
#define CAM_ISP_HIST_BIN11_VALUE       0x0

/* Bits definition for register CAM_ISP_HIST_BIN11 */
#define CAM_HIST_BIN_SHIFT             0
#define CAM_HIST_BIN_FIELD             (0xFFFFFFFF - (0xFFFFUL<<CAM_HIST_BIN_SHIFT))
#define CAM_HIST_BIN_0                 (0x0UL<<CAM_HIST_BIN_SHIFT)

/*****************************************************************************/
/* Register description for ISP_HIST_BIN12 */

/* Reset value of register CAM_ISP_HIST_BIN12 */
#define CAM_ISP_HIST_BIN12_VALUE       0x0

/* Bits definition for register CAM_ISP_HIST_BIN12 */
#define CAM_HIST_BIN_SHIFT             0
#define CAM_HIST_BIN_FIELD             (0xFFFFFFFF - (0xFFFFUL<<CAM_HIST_BIN_SHIFT))
#define CAM_HIST_BIN_0                 (0x0UL<<CAM_HIST_BIN_SHIFT)

/*****************************************************************************/
/* Register description for ISP_HIST_BIN13 */

/* Reset value of register CAM_ISP_HIST_BIN13 */
#define CAM_ISP_HIST_BIN13_VALUE       0x0

/* Bits definition for register CAM_ISP_HIST_BIN13 */
#define CAM_HIST_BIN_SHIFT             0
#define CAM_HIST_BIN_FIELD             (0xFFFFFFFF - (0xFFFFUL<<CAM_HIST_BIN_SHIFT))
#define CAM_HIST_BIN_0                 (0x0UL<<CAM_HIST_BIN_SHIFT)

/*****************************************************************************/
/* Register description for ISP_HIST_BIN14 */

/* Reset value of register CAM_ISP_HIST_BIN14 */
#define CAM_ISP_HIST_BIN14_VALUE       0x0

/* Bits definition for register CAM_ISP_HIST_BIN14 */
#define CAM_HIST_BIN_SHIFT             0
#define CAM_HIST_BIN_FIELD             (0xFFFFFFFF - (0xFFFFUL<<CAM_HIST_BIN_SHIFT))
#define CAM_HIST_BIN_0                 (0x0UL<<CAM_HIST_BIN_SHIFT)

/*****************************************************************************/
/* Register description for ISP_HIST_BIN15 */

/* Reset value of register CAM_ISP_HIST_BIN15 */
#define CAM_ISP_HIST_BIN15_VALUE       0x0

/* Bits definition for register CAM_ISP_HIST_BIN15 */
#define CAM_HIST_BIN_SHIFT             0
#define CAM_HIST_BIN_FIELD             (0xFFFFFFFF - (0xFFFFUL<<CAM_HIST_BIN_SHIFT))
#define CAM_HIST_BIN_0                 (0x0UL<<CAM_HIST_BIN_SHIFT)

/*****************************************************************************/
/* Register description for ISP_FILT_MODE */

/* Reset value of register CAM_ISP_FILT_MODE */
#define CAM_ISP_FILT_MODE_VALUE        0x4F2

/* Bits definition for register CAM_ISP_FILT_MODE */
#define CAM_STAGE1_SELECT_SHIFT        8
#define CAM_STAGE1_SELECT_FIELD        (0xFFFFFFFF - (0xFUL<<CAM_STAGE1_SELECT_SHIFT))
#define CAM_STAGE1_SELECT_4            (0x4UL<<CAM_STAGE1_SELECT_SHIFT)
#define CAM_FILT_CHR_H_MODE_SHIFT      6
#define CAM_FILT_CHR_H_MODE_FIELD      (0xFFFFFFFF - (0x3UL<<CAM_FILT_CHR_H_MODE_SHIFT))
#define CAM_FILT_CHR_H_MODE_0          (0x0UL<<CAM_FILT_CHR_H_MODE_SHIFT)
#define CAM_FILT_CHR_H_MODE_1          (0x1UL<<CAM_FILT_CHR_H_MODE_SHIFT)
#define CAM_FILT_CHR_H_MODE_2          (0x2UL<<CAM_FILT_CHR_H_MODE_SHIFT)
#define CAM_FILT_CHR_H_MODE_3          (0x3UL<<CAM_FILT_CHR_H_MODE_SHIFT)
#define CAM_FILT_CHR_V_MODE_SHIFT      4
#define CAM_FILT_CHR_V_MODE_FIELD      (0xFFFFFFFF - (0x3UL<<CAM_FILT_CHR_V_MODE_SHIFT))
#define CAM_FILT_CHR_V_MODE_0          (0x0UL<<CAM_FILT_CHR_V_MODE_SHIFT)
#define CAM_FILT_CHR_V_MODE_1          (0x1UL<<CAM_FILT_CHR_V_MODE_SHIFT)
#define CAM_FILT_CHR_V_MODE_2          (0x2UL<<CAM_FILT_CHR_V_MODE_SHIFT)
#define CAM_FILT_CHR_V_MODE_3          (0x3UL<<CAM_FILT_CHR_V_MODE_SHIFT)
#define CAM_FILT_MODE_SHIFT            1
#define CAM_FILT_MODE_FIELD            (0xFFFFFFFF - (0x1UL<<CAM_FILT_MODE_SHIFT))
#define CAM_FILT_MODE_0                (0x0UL<<CAM_FILT_MODE_SHIFT)
#define CAM_FILT_MODE_1                (0x1UL<<CAM_FILT_MODE_SHIFT)
#define CAM_FILT_MODE                  (0x1UL<<CAM_FILT_MODE_SHIFT)
#define CAM_FILT_ENABLE_SHIFT          0
#define CAM_FILT_ENABLE_FIELD          (0xFFFFFFFF - (0x1UL<<CAM_FILT_ENABLE_SHIFT))
#define CAM_FILT_ENABLE_0              (0x0UL<<CAM_FILT_ENABLE_SHIFT)
#define CAM_FILT_ENABLE_1              (0x1UL<<CAM_FILT_ENABLE_SHIFT)
#define CAM_FILT_ENABLE                (0x1UL<<CAM_FILT_ENABLE_SHIFT)

/*****************************************************************************/
/* Register description for ISP_FILT_THRESH_BL0 */

/* Reset value of register CAM_ISP_FILT_THRESH_BL0 */
#define CAM_ISP_FILT_THRESH_BL0_VALUE  0xD

/* Bits definition for register CAM_ISP_FILT_THRESH_BL0 */
#define CAM_FILT_THRESH_BL0_SHIFT      0
#define CAM_FILT_THRESH_BL0_FIELD      (0xFFFFFFFF - (0x3FFUL<<CAM_FILT_THRESH_BL0_SHIFT))
#define CAM_FILT_THRESH_BL0_D          (0xDUL<<CAM_FILT_THRESH_BL0_SHIFT)

/*****************************************************************************/
/* Register description for ISP_FILT_THRESH_BL1 */

/* Reset value of register CAM_ISP_FILT_THRESH_BL1 */
#define CAM_ISP_FILT_THRESH_BL1_VALUE  0x5

/* Bits definition for register CAM_ISP_FILT_THRESH_BL1 */
#define CAM_FILT_THRESH_BL1_SHIFT      0
#define CAM_FILT_THRESH_BL1_FIELD      (0xFFFFFFFF - (0x3FFUL<<CAM_FILT_THRESH_BL1_SHIFT))
#define CAM_FILT_THRESH_BL1_5          (0x5UL<<CAM_FILT_THRESH_BL1_SHIFT)

/*****************************************************************************/
/* Register description for ISP_FILT_THRESH_SH0 */

/* Reset value of register CAM_ISP_FILT_THRESH_SH0 */
#define CAM_ISP_FILT_THRESH_SH0_VALUE  0x1A

/* Bits definition for register CAM_ISP_FILT_THRESH_SH0 */
#define CAM_FILT_THRESH_SH0_SHIFT      0
#define CAM_FILT_THRESH_SH0_FIELD      (0xFFFFFFFF - (0x3FFUL<<CAM_FILT_THRESH_SH0_SHIFT))
#define CAM_FILT_THRESH_SH0_1A         (0x1AUL<<CAM_FILT_THRESH_SH0_SHIFT)

/*****************************************************************************/
/* Register description for ISP_FILT_THRESH_SH1 */

/* Reset value of register CAM_ISP_FILT_THRESH_SH1 */
#define CAM_ISP_FILT_THRESH_SH1_VALUE  0x2C

/* Bits definition for register CAM_ISP_FILT_THRESH_SH1 */
#define CAM_FILT_THRESH_SH1_SHIFT      0
#define CAM_FILT_THRESH_SH1_FIELD      (0xFFFFFFFF - (0x3FFUL<<CAM_FILT_THRESH_SH1_SHIFT))
#define CAM_FILT_THRESH_SH1_2C         (0x2CUL<<CAM_FILT_THRESH_SH1_SHIFT)

/*****************************************************************************/
/* Register description for ISP_FILT_LUM_WEIGHT */

/* Reset value of register CAM_ISP_FILT_LUM_WEIGHT */
#define CAM_ISP_FILT_LUM_WEIGHT_VALUE  0x22040

/* Bits definition for register CAM_ISP_FILT_LUM_WEIGHT */
#define CAM_LUM_WEIGHT_GAIN_SHIFT      16
#define CAM_LUM_WEIGHT_GAIN_FIELD      (0xFFFFFFFF - (0x7UL<<CAM_LUM_WEIGHT_GAIN_SHIFT))
#define CAM_LUM_WEIGHT_GAIN_2          (0x2UL<<CAM_LUM_WEIGHT_GAIN_SHIFT)
#define CAM_LUM_WEIGHT_KINK_SHIFT      8
#define CAM_LUM_WEIGHT_KINK_FIELD      (0xFFFFFFFF - (0xFFUL<<CAM_LUM_WEIGHT_KINK_SHIFT))
#define CAM_LUM_WEIGHT_KINK_20         (0x20UL<<CAM_LUM_WEIGHT_KINK_SHIFT)
#define CAM_LUM_WEIGHT_MIN_SHIFT       0
#define CAM_LUM_WEIGHT_MIN_FIELD       (0xFFFFFFFF - (0xFFUL<<CAM_LUM_WEIGHT_MIN_SHIFT))
#define CAM_LUM_WEIGHT_MIN_40          (0x40UL<<CAM_LUM_WEIGHT_MIN_SHIFT)

/*****************************************************************************/
/* Register description for ISP_FILT_FAC_SH0 */

/* Reset value of register CAM_ISP_FILT_FAC_SH0 */
#define CAM_ISP_FILT_FAC_SH0_VALUE     0xC

/* Bits definition for register CAM_ISP_FILT_FAC_SH0 */
#define CAM_FILT_FAC_SH0_SHIFT         0
#define CAM_FILT_FAC_SH0_FIELD         (0xFFFFFFFF - (0x3FUL<<CAM_FILT_FAC_SH0_SHIFT))
#define CAM_FILT_FAC_SH0_C             (0xCUL<<CAM_FILT_FAC_SH0_SHIFT)

/*****************************************************************************/
/* Register description for ISP_FILT_FAC_SH1 */

/* Reset value of register CAM_ISP_FILT_FAC_SH1 */
#define CAM_ISP_FILT_FAC_SH1_VALUE     0x10

/* Bits definition for register CAM_ISP_FILT_FAC_SH1 */
#define CAM_FILT_FAC_SH1_SHIFT         0
#define CAM_FILT_FAC_SH1_FIELD         (0xFFFFFFFF - (0x3FUL<<CAM_FILT_FAC_SH1_SHIFT))
#define CAM_FILT_FAC_SH1_10            (0x10UL<<CAM_FILT_FAC_SH1_SHIFT)

/*****************************************************************************/
/* Register description for ISP_FILT_FAC_MID */

/* Reset value of register CAM_ISP_FILT_FAC_MID */
#define CAM_ISP_FILT_FAC_MID_VALUE     0xA

/* Bits definition for register CAM_ISP_FILT_FAC_MID */
#define CAM_FILT_FAC_MID_SHIFT         0
#define CAM_FILT_FAC_MID_FIELD         (0xFFFFFFFF - (0x3FUL<<CAM_FILT_FAC_MID_SHIFT))
#define CAM_FILT_FAC_MID_A             (0xAUL<<CAM_FILT_FAC_MID_SHIFT)

/*****************************************************************************/
/* Register description for ISP_FILT_FAC_BL0 */

/* Reset value of register CAM_ISP_FILT_FAC_BL0 */
#define CAM_ISP_FILT_FAC_BL0_VALUE     0x6

/* Bits definition for register CAM_ISP_FILT_FAC_BL0 */
#define CAM_FILT_FAC_BL0_SHIFT         0
#define CAM_FILT_FAC_BL0_FIELD         (0xFFFFFFFF - (0x3FUL<<CAM_FILT_FAC_BL0_SHIFT))
#define CAM_FILT_FAC_BL0_6             (0x6UL<<CAM_FILT_FAC_BL0_SHIFT)

/*****************************************************************************/
/* Register description for ISP_FILT_FAC_BL1 */

/* Reset value of register CAM_ISP_FILT_FAC_BL1 */
#define CAM_ISP_FILT_FAC_BL1_VALUE     0x2

/* Bits definition for register CAM_ISP_FILT_FAC_BL1 */
#define CAM_FILT_FACBL1_SHIFT          0
#define CAM_FILT_FACBL1_FIELD          (0xFFFFFFFF - (0x3FUL<<CAM_FILT_FACBL1_SHIFT))
#define CAM_FILT_FACBL1_2              (0x2UL<<CAM_FILT_FACBL1_SHIFT)

/*****************************************************************************/
/* Register description for ISP_CAC_CTRL */

/* Reset value of register CAM_ISP_CAC_CTRL */
#define CAM_ISP_CAC_CTRL_VALUE         0x0

/* Bits definition for register CAM_ISP_CAC_CTRL */
#define CAM_H_CLIP_MODE_SHIFT          3
#define CAM_H_CLIP_MODE_FIELD          (0xFFFFFFFF - (0x1UL<<CAM_H_CLIP_MODE_SHIFT))
#define CAM_H_CLIP_MODE_0              (0x0UL<<CAM_H_CLIP_MODE_SHIFT)
#define CAM_H_CLIP_MODE_1              (0x1UL<<CAM_H_CLIP_MODE_SHIFT)
#define CAM_H_CLIP_MODE                (0x1UL<<CAM_H_CLIP_MODE_SHIFT)
#define CAM_V_CLIP_MODE_SHIFT          1
#define CAM_V_CLIP_MODE_FIELD          (0xFFFFFFFF - (0x3UL<<CAM_V_CLIP_MODE_SHIFT))
#define CAM_V_CLIP_MODE_0              (0x0UL<<CAM_V_CLIP_MODE_SHIFT)
#define CAM_V_CLIP_MODE_1              (0x1UL<<CAM_V_CLIP_MODE_SHIFT)
#define CAM_V_CLIP_MODE_2              (0x2UL<<CAM_V_CLIP_MODE_SHIFT)
#define CAM_V_CLIP_MODE_3              (0x3UL<<CAM_V_CLIP_MODE_SHIFT)
#define CAM_CAC_EN_SHIFT               0
#define CAM_CAC_EN_FIELD               (0xFFFFFFFF - (0x1UL<<CAM_CAC_EN_SHIFT))
#define CAM_CAC_EN_0                   (0x0UL<<CAM_CAC_EN_SHIFT)
#define CAM_CAC_EN_1                   (0x1UL<<CAM_CAC_EN_SHIFT)
#define CAM_CAC_EN                     (0x1UL<<CAM_CAC_EN_SHIFT)

/*****************************************************************************/
/* Register description for ISP_CAC_COUNT_START */

/* Reset value of register CAM_ISP_CAC_COUNT_START */
#define CAM_ISP_CAC_COUNT_START_VALUE  0x3CF0514

/* Bits definition for register CAM_ISP_CAC_COUNT_START */
#define CAM_V_COUNT_START_SHIFT        16
#define CAM_V_COUNT_START_FIELD        (0xFFFFFFFF - (0xFFFUL<<CAM_V_COUNT_START_SHIFT))
#define CAM_V_COUNT_START_3CF          (0x3CFUL<<CAM_V_COUNT_START_SHIFT)
#define CAM_H_COUNT_START_SHIFT        0
#define CAM_H_COUNT_START_FIELD        (0xFFFFFFFF - (0xFFFUL<<CAM_H_COUNT_START_SHIFT))
#define CAM_H_COUNT_START_514          (0x514UL<<CAM_H_COUNT_START_SHIFT)

/*****************************************************************************/
/* Register description for ISP_CAC_A */

/* Reset value of register CAM_ISP_CAC_A */
#define CAM_ISP_CAC_A_VALUE            0x0

/* Bits definition for register CAM_ISP_CAC_A */
#define CAM_A_BLUE_SHIFT               16
#define CAM_A_BLUE_FIELD               (0xFFFFFFFF - (0x1FFUL<<CAM_A_BLUE_SHIFT))
#define CAM_A_BLUE_0                   (0x0UL<<CAM_A_BLUE_SHIFT)
#define CAM_A_RED_SHIFT                0
#define CAM_A_RED_FIELD                (0xFFFFFFFF - (0x1FFUL<<CAM_A_RED_SHIFT))
#define CAM_A_RED_0                    (0x0UL<<CAM_A_RED_SHIFT)

/*****************************************************************************/
/* Register description for ISP_CAC_B */

/* Reset value of register CAM_ISP_CAC_B */
#define CAM_ISP_CAC_B_VALUE            0x0

/* Bits definition for register CAM_ISP_CAC_B */
#define CAM_B_BLUE_SHIFT               16
#define CAM_B_BLUE_FIELD               (0xFFFFFFFF - (0x1FFUL<<CAM_B_BLUE_SHIFT))
#define CAM_B_BLUE_0                   (0x0UL<<CAM_B_BLUE_SHIFT)
#define CAM_B_RED_SHIFT                0
#define CAM_B_RED_FIELD                (0xFFFFFFFF - (0x1FFUL<<CAM_B_RED_SHIFT))
#define CAM_B_RED_0                    (0x0UL<<CAM_B_RED_SHIFT)

/*****************************************************************************/
/* Register description for ISP_CAC_C */

/* Reset value of register CAM_ISP_CAC_C */
#define CAM_ISP_CAC_C_VALUE            0x0

/* Bits definition for register CAM_ISP_CAC_C */
#define CAM_C_BLUE_SHIFT               16
#define CAM_C_BLUE_FIELD               (0xFFFFFFFF - (0x1FFUL<<CAM_C_BLUE_SHIFT))
#define CAM_C_BLUE_0                   (0x0UL<<CAM_C_BLUE_SHIFT)
#define CAM_C_RED_SHIFT                0
#define CAM_C_RED_FIELD                (0xFFFFFFFF - (0x1FFUL<<CAM_C_RED_SHIFT))
#define CAM_C_RED_0                    (0x0UL<<CAM_C_RED_SHIFT)

/*****************************************************************************/
/* Register description for ISP_CAC_X_NORM */

/* Reset value of register CAM_ISP_CAC_X_NORM */
#define CAM_ISP_CAC_X_NORM_VALUE       0x60014

/* Bits definition for register CAM_ISP_CAC_X_NORM */
#define CAM_X_NS_SHIFT                 16
#define CAM_X_NS_FIELD                 (0xFFFFFFFF - (0x7UL<<CAM_X_NS_SHIFT))
#define CAM_X_NS_6                     (0x6UL<<CAM_X_NS_SHIFT)
#define CAM_X_NF_SHIFT                 0
#define CAM_X_NF_FIELD                 (0xFFFFFFFF - (0x1FUL<<CAM_X_NF_SHIFT))
#define CAM_X_NF_14                    (0x14UL<<CAM_X_NF_SHIFT)

/*****************************************************************************/
/* Register description for ISP_CAC_Y_NORM */

/* Reset value of register CAM_ISP_CAC_Y_NORM */
#define CAM_ISP_CAC_Y_NORM_VALUE       0x60014

/* Bits definition for register CAM_ISP_CAC_Y_NORM */
#define CAM_Y_NS_SHIFT                 16
#define CAM_Y_NS_FIELD                 (0xFFFFFFFF - (0x7UL<<CAM_Y_NS_SHIFT))
#define CAM_Y_NS_6                     (0x6UL<<CAM_Y_NS_SHIFT)
#define CAM_Y_NF_SHIFT                 0
#define CAM_Y_NF_FIELD                 (0xFFFFFFFF - (0x1FUL<<CAM_Y_NF_SHIFT))
#define CAM_Y_NF_14                    (0x14UL<<CAM_Y_NF_SHIFT)

/*****************************************************************************/
/* Register description for ISP_EXP_CTRL */

/* Reset value of register CAM_ISP_EXP_CTRL */
#define CAM_ISP_EXP_CTRL_VALUE         0x0

/* Bits definition for register CAM_ISP_EXP_CTRL */
#define CAM_EXP_MEAS_MODE_SHIFT        31
#define CAM_EXP_MEAS_MODE_FIELD        (0xFFFFFFFF - (0x1UL<<CAM_EXP_MEAS_MODE_SHIFT))
#define CAM_EXP_MEAS_MODE_0            (0x0UL<<CAM_EXP_MEAS_MODE_SHIFT)
#define CAM_EXP_MEAS_MODE_1            (0x1UL<<CAM_EXP_MEAS_MODE_SHIFT)
#define CAM_EXP_MEAS_MODE              (0x1UL<<CAM_EXP_MEAS_MODE_SHIFT)
#define CAM_AUTOSTOP_SHIFT             1
#define CAM_AUTOSTOP_FIELD             (0xFFFFFFFF - (0x1UL<<CAM_AUTOSTOP_SHIFT))
#define CAM_AUTOSTOP_0                 (0x0UL<<CAM_AUTOSTOP_SHIFT)
#define CAM_AUTOSTOP_1                 (0x1UL<<CAM_AUTOSTOP_SHIFT)
#define CAM_AUTOSTOP                   (0x1UL<<CAM_AUTOSTOP_SHIFT)
#define CAM_EXP_START_SHIFT            0
#define CAM_EXP_START_FIELD            (0xFFFFFFFF - (0x1UL<<CAM_EXP_START_SHIFT))
#define CAM_EXP_START_0                (0x0UL<<CAM_EXP_START_SHIFT)
#define CAM_EXP_START_1                (0x1UL<<CAM_EXP_START_SHIFT)
#define CAM_EXP_START                  (0x1UL<<CAM_EXP_START_SHIFT)

/*****************************************************************************/
/* Register description for ISP_EXP_H_OFFSET */

/* Reset value of register CAM_ISP_EXP_H_OFFSET */
#define CAM_ISP_EXP_H_OFFSET_VALUE     0x0

/* Bits definition for register CAM_ISP_EXP_H_OFFSET */
#define CAM_EXP_H_OFFSET_SHIFT         0
#define CAM_EXP_H_OFFSET_FIELD         (0xFFFFFFFF - (0xFFFUL<<CAM_EXP_H_OFFSET_SHIFT))
#define CAM_EXP_H_OFFSET_0             (0x0UL<<CAM_EXP_H_OFFSET_SHIFT)

/*****************************************************************************/
/* Register description for ISP_EXP_V_OFFSET */

/* Reset value of register CAM_ISP_EXP_V_OFFSET */
#define CAM_ISP_EXP_V_OFFSET_VALUE     0x0

/* Bits definition for register CAM_ISP_EXP_V_OFFSET */
#define CAM_EXP_V_OFFSET_SHIFT         0
#define CAM_EXP_V_OFFSET_FIELD         (0xFFFFFFFF - (0x7FFUL<<CAM_EXP_V_OFFSET_SHIFT))
#define CAM_EXP_V_OFFSET_0             (0x0UL<<CAM_EXP_V_OFFSET_SHIFT)

/*****************************************************************************/
/* Register description for ISP_EXP_H_SIZE */

/* Reset value of register CAM_ISP_EXP_H_SIZE */
#define CAM_ISP_EXP_H_SIZE_VALUE       0x0

/* Bits definition for register CAM_ISP_EXP_H_SIZE */
#define CAM_EXP_H_SIZE_SHIFT           0
#define CAM_EXP_H_SIZE_FIELD           (0xFFFFFFFF - (0x3FFUL<<CAM_EXP_H_SIZE_SHIFT))
#define CAM_EXP_H_SIZE_0               (0x0UL<<CAM_EXP_H_SIZE_SHIFT)

/*****************************************************************************/
/* Register description for ISP_EXP_V_SIZE */

/* Reset value of register CAM_ISP_EXP_V_SIZE */
#define CAM_ISP_EXP_V_SIZE_VALUE       0x0

/* Bits definition for register CAM_ISP_EXP_V_SIZE */
#define CAM_EXP_V_SIZE_SHIFT           0
#define CAM_EXP_V_SIZE_FIELD           (0xFFFFFFFF - (0x1FFUL<<CAM_EXP_V_SIZE_SHIFT))
#define CAM_EXP_V_SIZE_0               (0x0UL<<CAM_EXP_V_SIZE_SHIFT)

/*****************************************************************************/
/* Register description for ISP_EXP_MEAN_00 */

/* Reset value of register CAM_ISP_EXP_MEAN_00 */
#define CAM_ISP_EXP_MEAN_00_VALUE      0x0

/* Bits definition for register CAM_ISP_EXP_MEAN_00 */
#define CAM_EXP_MEAN_SHIFT             0
#define CAM_EXP_MEAN_FIELD             (0xFFFFFFFF - (0xFFUL<<CAM_EXP_MEAN_SHIFT))
#define CAM_EXP_MEAN_0                 (0x0UL<<CAM_EXP_MEAN_SHIFT)

/*****************************************************************************/
/* Register description for ISP_EXP_MEAN_10 */

/* Reset value of register CAM_ISP_EXP_MEAN_10 */
#define CAM_ISP_EXP_MEAN_10_VALUE      0x0

/* Bits definition for register CAM_ISP_EXP_MEAN_10 */
#define CAM_EXP_MEAN_SHIFT             0
#define CAM_EXP_MEAN_FIELD             (0xFFFFFFFF - (0xFFUL<<CAM_EXP_MEAN_SHIFT))
#define CAM_EXP_MEAN_0                 (0x0UL<<CAM_EXP_MEAN_SHIFT)

/*****************************************************************************/
/* Register description for ISP_EXP_MEAN_20 */

/* Reset value of register CAM_ISP_EXP_MEAN_20 */
#define CAM_ISP_EXP_MEAN_20_VALUE      0x0

/* Bits definition for register CAM_ISP_EXP_MEAN_20 */
#define CAM_EXP_MEAN_SHIFT             0
#define CAM_EXP_MEAN_FIELD             (0xFFFFFFFF - (0xFFUL<<CAM_EXP_MEAN_SHIFT))
#define CAM_EXP_MEAN_0                 (0x0UL<<CAM_EXP_MEAN_SHIFT)

/*****************************************************************************/
/* Register description for ISP_EXP_MEAN_30 */

/* Reset value of register CAM_ISP_EXP_MEAN_30 */
#define CAM_ISP_EXP_MEAN_30_VALUE      0x0

/* Bits definition for register CAM_ISP_EXP_MEAN_30 */
#define CAM_EXP_MEAN_SHIFT             0
#define CAM_EXP_MEAN_FIELD             (0xFFFFFFFF - (0xFFUL<<CAM_EXP_MEAN_SHIFT))
#define CAM_EXP_MEAN_0                 (0x0UL<<CAM_EXP_MEAN_SHIFT)

/*****************************************************************************/
/* Register description for ISP_EXP_MEAN_40 */

/* Reset value of register CAM_ISP_EXP_MEAN_40 */
#define CAM_ISP_EXP_MEAN_40_VALUE      0x0

/* Bits definition for register CAM_ISP_EXP_MEAN_40 */
#define CAM_EXP_MEAN_SHIFT             0
#define CAM_EXP_MEAN_FIELD             (0xFFFFFFFF - (0xFFUL<<CAM_EXP_MEAN_SHIFT))
#define CAM_EXP_MEAN_0                 (0x0UL<<CAM_EXP_MEAN_SHIFT)

/*****************************************************************************/
/* Register description for ISP_EXP_MEAN_01 */

/* Reset value of register CAM_ISP_EXP_MEAN_01 */
#define CAM_ISP_EXP_MEAN_01_VALUE      0x0

/* Bits definition for register CAM_ISP_EXP_MEAN_01 */
#define CAM_EXP_MEAN_SHIFT             0
#define CAM_EXP_MEAN_FIELD             (0xFFFFFFFF - (0xFFUL<<CAM_EXP_MEAN_SHIFT))
#define CAM_EXP_MEAN_0                 (0x0UL<<CAM_EXP_MEAN_SHIFT)

/*****************************************************************************/
/* Register description for ISP_EXP_MEAN_11 */

/* Reset value of register CAM_ISP_EXP_MEAN_11 */
#define CAM_ISP_EXP_MEAN_11_VALUE      0x0

/* Bits definition for register CAM_ISP_EXP_MEAN_11 */
#define CAM_EXP_MEAN_SHIFT             0
#define CAM_EXP_MEAN_FIELD             (0xFFFFFFFF - (0xFFUL<<CAM_EXP_MEAN_SHIFT))
#define CAM_EXP_MEAN_0                 (0x0UL<<CAM_EXP_MEAN_SHIFT)

/*****************************************************************************/
/* Register description for ISP_EXP_MEAN_21 */

/* Reset value of register CAM_ISP_EXP_MEAN_21 */
#define CAM_ISP_EXP_MEAN_21_VALUE      0x0

/* Bits definition for register CAM_ISP_EXP_MEAN_21 */
#define CAM_EXP_MEAN_SHIFT             0
#define CAM_EXP_MEAN_FIELD             (0xFFFFFFFF - (0xFFUL<<CAM_EXP_MEAN_SHIFT))
#define CAM_EXP_MEAN_0                 (0x0UL<<CAM_EXP_MEAN_SHIFT)

/*****************************************************************************/
/* Register description for ISP_EXP_MEAN_31 */

/* Reset value of register CAM_ISP_EXP_MEAN_31 */
#define CAM_ISP_EXP_MEAN_31_VALUE      0x0

/* Bits definition for register CAM_ISP_EXP_MEAN_31 */
#define CAM_EXP_MEAN_SHIFT             0
#define CAM_EXP_MEAN_FIELD             (0xFFFFFFFF - (0xFFUL<<CAM_EXP_MEAN_SHIFT))
#define CAM_EXP_MEAN_0                 (0x0UL<<CAM_EXP_MEAN_SHIFT)

/*****************************************************************************/
/* Register description for ISP_EXP_MEAN_41 */

/* Reset value of register CAM_ISP_EXP_MEAN_41 */
#define CAM_ISP_EXP_MEAN_41_VALUE      0x0

/* Bits definition for register CAM_ISP_EXP_MEAN_41 */
#define CAM_EXP_MEAN_SHIFT             0
#define CAM_EXP_MEAN_FIELD             (0xFFFFFFFF - (0xFFUL<<CAM_EXP_MEAN_SHIFT))
#define CAM_EXP_MEAN_0                 (0x0UL<<CAM_EXP_MEAN_SHIFT)

/*****************************************************************************/
/* Register description for ISP_EXP_MEAN_02 */

/* Reset value of register CAM_ISP_EXP_MEAN_02 */
#define CAM_ISP_EXP_MEAN_02_VALUE      0x0

/* Bits definition for register CAM_ISP_EXP_MEAN_02 */
#define CAM_EXP_MEAN_SHIFT             0
#define CAM_EXP_MEAN_FIELD             (0xFFFFFFFF - (0xFFUL<<CAM_EXP_MEAN_SHIFT))
#define CAM_EXP_MEAN_0                 (0x0UL<<CAM_EXP_MEAN_SHIFT)

/*****************************************************************************/
/* Register description for ISP_EXP_MEAN_12 */

/* Reset value of register CAM_ISP_EXP_MEAN_12 */
#define CAM_ISP_EXP_MEAN_12_VALUE      0x0

/* Bits definition for register CAM_ISP_EXP_MEAN_12 */
#define CAM_EXP_MEAN_SHIFT             0
#define CAM_EXP_MEAN_FIELD             (0xFFFFFFFF - (0xFFUL<<CAM_EXP_MEAN_SHIFT))
#define CAM_EXP_MEAN_0                 (0x0UL<<CAM_EXP_MEAN_SHIFT)

/*****************************************************************************/
/* Register description for ISP_EXP_MEAN_22 */

/* Reset value of register CAM_ISP_EXP_MEAN_22 */
#define CAM_ISP_EXP_MEAN_22_VALUE      0x0

/* Bits definition for register CAM_ISP_EXP_MEAN_22 */
#define CAM_EXP_MEAN_SHIFT             0
#define CAM_EXP_MEAN_FIELD             (0xFFFFFFFF - (0xFFUL<<CAM_EXP_MEAN_SHIFT))
#define CAM_EXP_MEAN_0                 (0x0UL<<CAM_EXP_MEAN_SHIFT)

/*****************************************************************************/
/* Register description for ISP_EXP_MEAN_32 */

/* Reset value of register CAM_ISP_EXP_MEAN_32 */
#define CAM_ISP_EXP_MEAN_32_VALUE      0x0

/* Bits definition for register CAM_ISP_EXP_MEAN_32 */
#define CAM_EXP_MEAN_SHIFT             0
#define CAM_EXP_MEAN_FIELD             (0xFFFFFFFF - (0xFFUL<<CAM_EXP_MEAN_SHIFT))
#define CAM_EXP_MEAN_0                 (0x0UL<<CAM_EXP_MEAN_SHIFT)

/*****************************************************************************/
/* Register description for ISP_EXP_MEAN_42 */

/* Reset value of register CAM_ISP_EXP_MEAN_42 */
#define CAM_ISP_EXP_MEAN_42_VALUE      0x0

/* Bits definition for register CAM_ISP_EXP_MEAN_42 */
#define CAM_EXP_MEAN_SHIFT             0
#define CAM_EXP_MEAN_FIELD             (0xFFFFFFFF - (0xFFUL<<CAM_EXP_MEAN_SHIFT))
#define CAM_EXP_MEAN_0                 (0x0UL<<CAM_EXP_MEAN_SHIFT)

/*****************************************************************************/
/* Register description for ISP_EXP_MEAN_03 */

/* Reset value of register CAM_ISP_EXP_MEAN_03 */
#define CAM_ISP_EXP_MEAN_03_VALUE      0x0

/* Bits definition for register CAM_ISP_EXP_MEAN_03 */
#define CAM_EXP_MEAN_SHIFT             0
#define CAM_EXP_MEAN_FIELD             (0xFFFFFFFF - (0xFFUL<<CAM_EXP_MEAN_SHIFT))
#define CAM_EXP_MEAN_0                 (0x0UL<<CAM_EXP_MEAN_SHIFT)

/*****************************************************************************/
/* Register description for ISP_EXP_MEAN_13 */

/* Reset value of register CAM_ISP_EXP_MEAN_13 */
#define CAM_ISP_EXP_MEAN_13_VALUE      0x0

/* Bits definition for register CAM_ISP_EXP_MEAN_13 */
#define CAM_EXP_MEAN_SHIFT             0
#define CAM_EXP_MEAN_FIELD             (0xFFFFFFFF - (0xFFUL<<CAM_EXP_MEAN_SHIFT))
#define CAM_EXP_MEAN_0                 (0x0UL<<CAM_EXP_MEAN_SHIFT)

/*****************************************************************************/
/* Register description for ISP_EXP_MEAN_23 */

/* Reset value of register CAM_ISP_EXP_MEAN_23 */
#define CAM_ISP_EXP_MEAN_23_VALUE      0x0

/* Bits definition for register CAM_ISP_EXP_MEAN_23 */
#define CAM_EXP_MEAN_SHIFT             0
#define CAM_EXP_MEAN_FIELD             (0xFFFFFFFF - (0xFFUL<<CAM_EXP_MEAN_SHIFT))
#define CAM_EXP_MEAN_0                 (0x0UL<<CAM_EXP_MEAN_SHIFT)

/*****************************************************************************/
/* Register description for ISP_EXP_MEAN_33 */

/* Reset value of register CAM_ISP_EXP_MEAN_33 */
#define CAM_ISP_EXP_MEAN_33_VALUE      0x0

/* Bits definition for register CAM_ISP_EXP_MEAN_33 */
#define CAM_EXP_MEAN_SHIFT             0
#define CAM_EXP_MEAN_FIELD             (0xFFFFFFFF - (0xFFUL<<CAM_EXP_MEAN_SHIFT))
#define CAM_EXP_MEAN_0                 (0x0UL<<CAM_EXP_MEAN_SHIFT)

/*****************************************************************************/
/* Register description for ISP_EXP_MEAN_43 */

/* Reset value of register CAM_ISP_EXP_MEAN_43 */
#define CAM_ISP_EXP_MEAN_43_VALUE      0x0

/* Bits definition for register CAM_ISP_EXP_MEAN_43 */
#define CAM_EXP_MEAN_SHIFT             0
#define CAM_EXP_MEAN_FIELD             (0xFFFFFFFF - (0xFFUL<<CAM_EXP_MEAN_SHIFT))
#define CAM_EXP_MEAN_0                 (0x0UL<<CAM_EXP_MEAN_SHIFT)

/*****************************************************************************/
/* Register description for ISP_EXP_MEAN_04 */

/* Reset value of register CAM_ISP_EXP_MEAN_04 */
#define CAM_ISP_EXP_MEAN_04_VALUE      0x0

/* Bits definition for register CAM_ISP_EXP_MEAN_04 */
#define CAM_EXP_MEAN_SHIFT             0
#define CAM_EXP_MEAN_FIELD             (0xFFFFFFFF - (0xFFUL<<CAM_EXP_MEAN_SHIFT))
#define CAM_EXP_MEAN_0                 (0x0UL<<CAM_EXP_MEAN_SHIFT)

/*****************************************************************************/
/* Register description for ISP_EXP_MEAN_14 */

/* Reset value of register CAM_ISP_EXP_MEAN_14 */
#define CAM_ISP_EXP_MEAN_14_VALUE      0x0

/* Bits definition for register CAM_ISP_EXP_MEAN_14 */
#define CAM_EXP_MEAN_SHIFT             0
#define CAM_EXP_MEAN_FIELD             (0xFFFFFFFF - (0xFFUL<<CAM_EXP_MEAN_SHIFT))
#define CAM_EXP_MEAN_0                 (0x0UL<<CAM_EXP_MEAN_SHIFT)

/*****************************************************************************/
/* Register description for ISP_EXP_MEAN_24 */

/* Reset value of register CAM_ISP_EXP_MEAN_24 */
#define CAM_ISP_EXP_MEAN_24_VALUE      0x0

/* Bits definition for register CAM_ISP_EXP_MEAN_24 */
#define CAM_EXP_MEAN_SHIFT             0
#define CAM_EXP_MEAN_FIELD             (0xFFFFFFFF - (0xFFUL<<CAM_EXP_MEAN_SHIFT))
#define CAM_EXP_MEAN_0                 (0x0UL<<CAM_EXP_MEAN_SHIFT)

/*****************************************************************************/
/* Register description for ISP_EXP_MEAN_34 */

/* Reset value of register CAM_ISP_EXP_MEAN_34 */
#define CAM_ISP_EXP_MEAN_34_VALUE      0x0

/* Bits definition for register CAM_ISP_EXP_MEAN_34 */
#define CAM_EXP_MEAN_SHIFT             0
#define CAM_EXP_MEAN_FIELD             (0xFFFFFFFF - (0xFFUL<<CAM_EXP_MEAN_SHIFT))
#define CAM_EXP_MEAN_0                 (0x0UL<<CAM_EXP_MEAN_SHIFT)

/*****************************************************************************/
/* Register description for ISP_EXP_MEAN_44 */

/* Reset value of register CAM_ISP_EXP_MEAN_44 */
#define CAM_ISP_EXP_MEAN_44_VALUE      0x0

/* Bits definition for register CAM_ISP_EXP_MEAN_44 */
#define CAM_EXP_MEAN_SHIFT             0
#define CAM_EXP_MEAN_FIELD             (0xFFFFFFFF - (0xFFUL<<CAM_EXP_MEAN_SHIFT))
#define CAM_EXP_MEAN_0                 (0x0UL<<CAM_EXP_MEAN_SHIFT)

/*****************************************************************************/
/* Register description for ISP_BLS_CTRL */

/* Reset value of register CAM_ISP_BLS_CTRL */
#define CAM_ISP_BLS_CTRL_VALUE         0x0

/* Bits definition for register CAM_ISP_BLS_CTRL */
#define CAM_WINDOW_ENABLE_SHIFT        2
#define CAM_WINDOW_ENABLE_FIELD        (0xFFFFFFFF - (0x3UL<<CAM_WINDOW_ENABLE_SHIFT))
#define CAM_WINDOW_ENABLE_0            (0x0UL<<CAM_WINDOW_ENABLE_SHIFT)
#define CAM_WINDOW_ENABLE_1            (0x1UL<<CAM_WINDOW_ENABLE_SHIFT)
#define CAM_WINDOW_ENABLE_2            (0x2UL<<CAM_WINDOW_ENABLE_SHIFT)
#define CAM_WINDOW_ENABLE_3            (0x3UL<<CAM_WINDOW_ENABLE_SHIFT)
#define CAM_BLS_MODE_SHIFT             1
#define CAM_BLS_MODE_FIELD             (0xFFFFFFFF - (0x1UL<<CAM_BLS_MODE_SHIFT))
#define CAM_BLS_MODE_0                 (0x0UL<<CAM_BLS_MODE_SHIFT)
#define CAM_BLS_MODE_1                 (0x1UL<<CAM_BLS_MODE_SHIFT)
#define CAM_BLS_MODE                   (0x1UL<<CAM_BLS_MODE_SHIFT)
#define CAM_BLS_ENABLE_SHIFT           0
#define CAM_BLS_ENABLE_FIELD           (0xFFFFFFFF - (0x1UL<<CAM_BLS_ENABLE_SHIFT))
#define CAM_BLS_ENABLE_0               (0x0UL<<CAM_BLS_ENABLE_SHIFT)
#define CAM_BLS_ENABLE_1               (0x1UL<<CAM_BLS_ENABLE_SHIFT)
#define CAM_BLS_ENABLE                 (0x1UL<<CAM_BLS_ENABLE_SHIFT)

/*****************************************************************************/
/* Register description for ISP_BLS_SAMPLES */

/* Reset value of register CAM_ISP_BLS_SAMPLES */
#define CAM_ISP_BLS_SAMPLES_VALUE      0x0

/* Bits definition for register CAM_ISP_BLS_SAMPLES */
#define CAM_BLS_SAMPLES_SHIFT          0
#define CAM_BLS_SAMPLES_FIELD          (0xFFFFFFFF - (0x1FUL<<CAM_BLS_SAMPLES_SHIFT))
#define CAM_BLS_SAMPLES_0              (0x0UL<<CAM_BLS_SAMPLES_SHIFT)

/*****************************************************************************/
/* Register description for ISP_BLS_H1_START */

/* Reset value of register CAM_ISP_BLS_H1_START */
#define CAM_ISP_BLS_H1_START_VALUE     0x0

/* Bits definition for register CAM_ISP_BLS_H1_START */
#define CAM_H_START_SHIFT              0
#define CAM_H_START_FIELD              (0xFFFFFFFF - (0xFFFUL<<CAM_H_START_SHIFT))
#define CAM_H_START_0                  (0x0UL<<CAM_H_START_SHIFT)

/*****************************************************************************/
/* Register description for ISP_BLS_H1_STOP */

/* Reset value of register CAM_ISP_BLS_H1_STOP */
#define CAM_ISP_BLS_H1_STOP_VALUE      0x0

/* Bits definition for register CAM_ISP_BLS_H1_STOP */
#define CAM_H_STOP_SHIFT               0
#define CAM_H_STOP_FIELD               (0xFFFFFFFF - (0xFFFUL<<CAM_H_STOP_SHIFT))
#define CAM_H_STOP_0                   (0x0UL<<CAM_H_STOP_SHIFT)

/*****************************************************************************/
/* Register description for ISP_BLS_V1_START */

/* Reset value of register CAM_ISP_BLS_V1_START */
#define CAM_ISP_BLS_V1_START_VALUE     0x0

/* Bits definition for register CAM_ISP_BLS_V1_START */
#define CAM_H_START_SHIFT              0
#define CAM_H_START_FIELD              (0xFFFFFFFF - (0xFFFUL<<CAM_H_START_SHIFT))
#define CAM_H_START_0                  (0x0UL<<CAM_H_START_SHIFT)

/*****************************************************************************/
/* Register description for ISP_BLS_V1_STOP */

/* Reset value of register CAM_ISP_BLS_V1_STOP */
#define CAM_ISP_BLS_V1_STOP_VALUE      0x0

/* Bits definition for register CAM_ISP_BLS_V1_STOP */
#define CAM_H_STOP_SHIFT               0
#define CAM_H_STOP_FIELD               (0xFFFFFFFF - (0xFFFUL<<CAM_H_STOP_SHIFT))
#define CAM_H_STOP_0                   (0x0UL<<CAM_H_STOP_SHIFT)

/*****************************************************************************/
/* Register description for ISP_BLS_H2_START */

/* Reset value of register CAM_ISP_BLS_H2_START */
#define CAM_ISP_BLS_H2_START_VALUE     0x0

/* Bits definition for register CAM_ISP_BLS_H2_START */
#define CAM_H_START_SHIFT              0
#define CAM_H_START_FIELD              (0xFFFFFFFF - (0xFFFUL<<CAM_H_START_SHIFT))
#define CAM_H_START_0                  (0x0UL<<CAM_H_START_SHIFT)

/*****************************************************************************/
/* Register description for ISP_BLS_H2_STOP */

/* Reset value of register CAM_ISP_BLS_H2_STOP */
#define CAM_ISP_BLS_H2_STOP_VALUE      0x0

/* Bits definition for register CAM_ISP_BLS_H2_STOP */
#define CAM_H_STOP_SHIFT               0
#define CAM_H_STOP_FIELD               (0xFFFFFFFF - (0xFFFUL<<CAM_H_STOP_SHIFT))
#define CAM_H_STOP_0                   (0x0UL<<CAM_H_STOP_SHIFT)

/*****************************************************************************/
/* Register description for ISP_BLS_V2_START */

/* Reset value of register CAM_ISP_BLS_V2_START */
#define CAM_ISP_BLS_V2_START_VALUE     0x0

/* Bits definition for register CAM_ISP_BLS_V2_START */
#define CAM_H_START_SHIFT              0
#define CAM_H_START_FIELD              (0xFFFFFFFF - (0xFFFUL<<CAM_H_START_SHIFT))
#define CAM_H_START_0                  (0x0UL<<CAM_H_START_SHIFT)

/*****************************************************************************/
/* Register description for ISP_BLS_V2_STOP */

/* Reset value of register CAM_ISP_BLS_V2_STOP */
#define CAM_ISP_BLS_V2_STOP_VALUE      0x0

/* Bits definition for register CAM_ISP_BLS_V2_STOP */
#define CAM_H_STOP_SHIFT               0
#define CAM_H_STOP_FIELD               (0xFFFFFFFF - (0xFFFUL<<CAM_H_STOP_SHIFT))
#define CAM_H_STOP_0                   (0x0UL<<CAM_H_STOP_SHIFT)

/*****************************************************************************/
/* Register description for ISP_BLS_A_FIXED */

/* Reset value of register CAM_ISP_BLS_A_FIXED */
#define CAM_ISP_BLS_A_FIXED_VALUE      0x0

/* Bits definition for register CAM_ISP_BLS_A_FIXED */
#define CAM_FIXED_SHIFT                0
#define CAM_FIXED_FIELD                (0xFFFFFFFF - (0x1FFFUL<<CAM_FIXED_SHIFT))
#define CAM_FIXED_0                    (0x0UL<<CAM_FIXED_SHIFT)

/*****************************************************************************/
/* Register description for ISP_BLS_B_FIXED */

/* Reset value of register CAM_ISP_BLS_B_FIXED */
#define CAM_ISP_BLS_B_FIXED_VALUE      0x0

/* Bits definition for register CAM_ISP_BLS_B_FIXED */
#define CAM_FIXED_SHIFT                0
#define CAM_FIXED_FIELD                (0xFFFFFFFF - (0x1FFFUL<<CAM_FIXED_SHIFT))
#define CAM_FIXED_0                    (0x0UL<<CAM_FIXED_SHIFT)

/*****************************************************************************/
/* Register description for ISP_BLS_C_FIXED */

/* Reset value of register CAM_ISP_BLS_C_FIXED */
#define CAM_ISP_BLS_C_FIXED_VALUE      0x0

/* Bits definition for register CAM_ISP_BLS_C_FIXED */
#define CAM_FIXED_SHIFT                0
#define CAM_FIXED_FIELD                (0xFFFFFFFF - (0x1FFFUL<<CAM_FIXED_SHIFT))
#define CAM_FIXED_0                    (0x0UL<<CAM_FIXED_SHIFT)

/*****************************************************************************/
/* Register description for ISP_BLS_D_FIXED */

/* Reset value of register CAM_ISP_BLS_D_FIXED */
#define CAM_ISP_BLS_D_FIXED_VALUE      0x0

/* Bits definition for register CAM_ISP_BLS_D_FIXED */
#define CAM_FIXED_SHIFT                0
#define CAM_FIXED_FIELD                (0xFFFFFFFF - (0x1FFFUL<<CAM_FIXED_SHIFT))
#define CAM_FIXED_0                    (0x0UL<<CAM_FIXED_SHIFT)

/*****************************************************************************/
/* Register description for ISP_BLS_A_MEASURED */

/* Reset value of register CAM_ISP_BLS_A_MEASURED */
#define CAM_ISP_BLS_A_MEASURED_VALUE   0x0

/* Bits definition for register CAM_ISP_BLS_A_MEASURED */
#define CAM_MEASURED_SHIFT             0
#define CAM_MEASURED_FIELD             (0xFFFFFFFF - (0xFFFUL<<CAM_MEASURED_SHIFT))
#define CAM_MEASURED_0                 (0x0UL<<CAM_MEASURED_SHIFT)

/*****************************************************************************/
/* Register description for ISP_BLS_B_MEASURED */

/* Reset value of register CAM_ISP_BLS_B_MEASURED */
#define CAM_ISP_BLS_B_MEASURED_VALUE   0x0

/* Bits definition for register CAM_ISP_BLS_B_MEASURED */
#define CAM_MEASURED_SHIFT             0
#define CAM_MEASURED_FIELD             (0xFFFFFFFF - (0xFFFUL<<CAM_MEASURED_SHIFT))
#define CAM_MEASURED_0                 (0x0UL<<CAM_MEASURED_SHIFT)

/*****************************************************************************/
/* Register description for ISP_BLS_C_MEASURED */

/* Reset value of register CAM_ISP_BLS_C_MEASURED */
#define CAM_ISP_BLS_C_MEASURED_VALUE   0x0

/* Bits definition for register CAM_ISP_BLS_C_MEASURED */
#define CAM_MEASURED_SHIFT             0
#define CAM_MEASURED_FIELD             (0xFFFFFFFF - (0xFFFUL<<CAM_MEASURED_SHIFT))
#define CAM_MEASURED_0                 (0x0UL<<CAM_MEASURED_SHIFT)

/*****************************************************************************/
/* Register description for ISP_BLS_D_MEASURED */

/* Reset value of register CAM_ISP_BLS_D_MEASURED */
#define CAM_ISP_BLS_D_MEASURED_VALUE   0x0

/* Bits definition for register CAM_ISP_BLS_D_MEASURED */
#define CAM_MEASURED_SHIFT             0
#define CAM_MEASURED_FIELD             (0xFFFFFFFF - (0xFFFUL<<CAM_MEASURED_SHIFT))
#define CAM_MEASURED_0                 (0x0UL<<CAM_MEASURED_SHIFT)

/*****************************************************************************/

/*****************************************************************************
* Definitions for: CGU
*****************************************************************************/

/* Pointer on base address */
#define CGU_BASE                       IOA(CGU_BASE_ADDR)

/* CGU DSP1CON Register (32 bits) */
#define CGU_DSP1CON_OFFSET             0x0
#define CGU_DSP1CON_REG                IOA(CGU_BASE_ADDR + CGU_DSP1CON_OFFSET)

/* CGU SCCON Register (32 bits) */
#define CGU_SCCON_OFFSET               0x4
#define CGU_SCCON_REG                  IOA(CGU_BASE_ADDR + CGU_SCCON_OFFSET)

/* CGU GATESC1 Register (32 bits) */
#define CGU_GATESC1_OFFSET             0x8
#define CGU_GATESC1_REG                IOA(CGU_BASE_ADDR + CGU_GATESC1_OFFSET)

/* CGU SLEEPSC Register (32 bits) */
#define CGU_SLEEPSC_OFFSET             0xC
#define CGU_SLEEPSC_REG                IOA(CGU_BASE_ADDR + CGU_SLEEPSC_OFFSET)

/* CGU FDIV Register (32 bits) */
#define CGU_FDIV_OFFSET                0x10
#define CGU_FDIV_REG                   IOA(CGU_BASE_ADDR + CGU_FDIV_OFFSET)

/* CGU GATEIVS Register (32 bits) */
#define CGU_GATEIVS_OFFSET             0x14
#define CGU_GATEIVS_REG                IOA(CGU_BASE_ADDR + CGU_GATEIVS_OFFSET)

/* CGU DSP2CON Register (32 bits) */
#define CGU_DSP2CON_OFFSET             0x18
#define CGU_DSP2CON_REG                IOA(CGU_BASE_ADDR + CGU_DSP2CON_OFFSET)

/* CGU CAMCON Register (32 bits) */
#define CGU_CAMCON_OFFSET              0x1C
#define CGU_CAMCON_REG                 IOA(CGU_BASE_ADDR + CGU_CAMCON_OFFSET)

/* CGU GATESC2 Register (32 bits) */
#define CGU_GATESC2_OFFSET             0x20
#define CGU_GATESC2_REG                IOA(CGU_BASE_ADDR + CGU_GATESC2_OFFSET)

/* CGU SDMCON Register (32 bits) */
#define CGU_SDMCON_OFFSET              0x24
#define CGU_SDMCON_REG                 IOA(CGU_BASE_ADDR + CGU_SDMCON_OFFSET)

/* CGU TVCON Register (32 bits) */
#define CGU_TVCON_OFFSET               0x28
#define CGU_TVCON_REG                  IOA(CGU_BASE_ADDR + CGU_TVCON_OFFSET)

/* CGU IDLESC Register (32 bits) */
#define CGU_IDLESC_OFFSET              0x2C
#define CGU_IDLESC_REG                 IOA(CGU_BASE_ADDR + CGU_IDLESC_OFFSET)

/* CGU FIXCON Register (32 bits) */
#define CGU_FIXCON_OFFSET              0x30
#define CGU_FIXCON_REG                 IOA(CGU_BASE_ADDR + CGU_FIXCON_OFFSET)

/* CGU CNTCON Register (32 bits) */
#define CGU_CNTCON_OFFSET              0x38
#define CGU_CNTCON_REG                 IOA(CGU_BASE_ADDR + CGU_CNTCON_OFFSET)

/* Register description for DSP1CON */

/* Reset value of register CGU_DSP1CON */
#define CGU_DSP1CON_VALUE              0x307F

/* Bits definition for register CGU_DSP1CON */
#define CGU_FRACLP_SHIFT               18
#define CGU_FRACLP_FIELD               (0xFFFFFFFF - (0x1UL<<CGU_FRACLP_SHIFT))
#define CGU_FRACLP_0                   (0x0UL<<CGU_FRACLP_SHIFT)
#define CGU_FRACLP_1                   (0x1UL<<CGU_FRACLP_SHIFT)
#define CGU_FRACLP                     (0x1UL<<CGU_FRACLP_SHIFT)
#define CGU_FRACEN_SHIFT               17
#define CGU_FRACEN_FIELD               (0xFFFFFFFF - (0x1UL<<CGU_FRACEN_SHIFT))
#define CGU_FRACEN_0                   (0x0UL<<CGU_FRACEN_SHIFT)
#define CGU_FRACEN_1                   (0x1UL<<CGU_FRACEN_SHIFT)
#define CGU_FRACEN                     (0x1UL<<CGU_FRACEN_SHIFT)
#define CGU_PLLDSP_LOCK_SHIFT          16
#define CGU_PLLDSP_LOCK_FIELD          (0xFFFFFFFF - (0x1UL<<CGU_PLLDSP_LOCK_SHIFT))
#define CGU_PLLDSP_LOCK_NOT_LOCKED     (0x0UL<<CGU_PLLDSP_LOCK_SHIFT)
#define CGU_PLLDSP_LOCK_LOCKED         (0x1UL<<CGU_PLLDSP_LOCK_SHIFT)
#define CGU_PLLDSP_LOCK                (0x1UL<<CGU_PLLDSP_LOCK_SHIFT)
#define CGU_PLLDSPEN_SHIFT             15
#define CGU_PLLDSPEN_FIELD             (0xFFFFFFFF - (0x1UL<<CGU_PLLDSPEN_SHIFT))
#define CGU_PLLDSPEN_DISABLED          (0x0UL<<CGU_PLLDSPEN_SHIFT)
#define CGU_PLLDSPEN_ENABLED           (0x1UL<<CGU_PLLDSPEN_SHIFT)
#define CGU_PLLDSPEN                   (0x1UL<<CGU_PLLDSPEN_SHIFT)
#define CGU_DSPBYSPD_SHIFT             14
#define CGU_DSPBYSPD_FIELD             (0xFFFFFFFF - (0x1UL<<CGU_DSPBYSPD_SHIFT))
#define CGU_DSPBYSPD_156M              (0x0UL<<CGU_DSPBYSPD_SHIFT)
#define CGU_DSPBYSPD_312M              (0x1UL<<CGU_DSPBYSPD_SHIFT)
#define CGU_DSPBYSPD                   (0x1UL<<CGU_DSPBYSPD_SHIFT)
#define CGU_DSPBY_SHIFT                13
#define CGU_DSPBY_FIELD                (0xFFFFFFFF - (0x1UL<<CGU_DSPBY_SHIFT))
#define CGU_DSPBY_0                    (0x0UL<<CGU_DSPBY_SHIFT)
#define CGU_DSPBY_1                    (0x1UL<<CGU_DSPBY_SHIFT)
#define CGU_DSPBY                      (0x1UL<<CGU_DSPBY_SHIFT)
#define CGU_DSPCLKEN_SHIFT             12
#define CGU_DSPCLKEN_FIELD             (0xFFFFFFFF - (0x1UL<<CGU_DSPCLKEN_SHIFT))
#define CGU_DSPCLKEN_0                 (0x0UL<<CGU_DSPCLKEN_SHIFT)
#define CGU_DSPCLKEN_1                 (0x1UL<<CGU_DSPCLKEN_SHIFT)
#define CGU_DSPCLKEN                   (0x1UL<<CGU_DSPCLKEN_SHIFT)
#define CGU_KDSP_SHIFT                 10
#define CGU_KDSP_FIELD                 (0xFFFFFFFF - (0x3UL<<CGU_KDSP_SHIFT))
#define CGU_KDSP_0                     (0x0UL<<CGU_KDSP_SHIFT)
#define CGU_NDSP_SHIFT                 3
#define CGU_NDSP_FIELD                 (0xFFFFFFFF - (0x7FUL<<CGU_NDSP_SHIFT))
#define CGU_NDSP_F                     (0xFUL<<CGU_NDSP_SHIFT)
#define CGU_MDSP_SHIFT                 0
#define CGU_MDSP_FIELD                 (0xFFFFFFFF - (0x7UL<<CGU_MDSP_SHIFT))
#define CGU_MDSP_7                     (0x7UL<<CGU_MDSP_SHIFT)

/*****************************************************************************/
/* Register description for DSP2CON */

/* Reset value of register CGU_DSP2CON */
#define CGU_DSP2CON_VALUE              0x307F

/* Bits definition for register CGU_DSP2CON */
#define CGU_PLLDSP_LOCK_SHIFT          16
#define CGU_PLLDSP_LOCK_FIELD          (0xFFFFFFFF - (0x1UL<<CGU_PLLDSP_LOCK_SHIFT))
#define CGU_PLLDSP_LOCK_NOT_LOCKED     (0x0UL<<CGU_PLLDSP_LOCK_SHIFT)
#define CGU_PLLDSP_LOCK_LOCKED         (0x1UL<<CGU_PLLDSP_LOCK_SHIFT)
#define CGU_PLLDSP_LOCK                (0x1UL<<CGU_PLLDSP_LOCK_SHIFT)
#define CGU_PLLDSPEN_SHIFT             15
#define CGU_PLLDSPEN_FIELD             (0xFFFFFFFF - (0x1UL<<CGU_PLLDSPEN_SHIFT))
#define CGU_PLLDSPEN_DISABLED          (0x0UL<<CGU_PLLDSPEN_SHIFT)
#define CGU_PLLDSPEN_ENABLED           (0x1UL<<CGU_PLLDSPEN_SHIFT)
#define CGU_PLLDSPEN                   (0x1UL<<CGU_PLLDSPEN_SHIFT)
#define CGU_DSPBYSPD_SHIFT             14
#define CGU_DSPBYSPD_FIELD             (0xFFFFFFFF - (0x1UL<<CGU_DSPBYSPD_SHIFT))
#define CGU_DSPBYSPD_156M              (0x0UL<<CGU_DSPBYSPD_SHIFT)
#define CGU_DSPBYSPD_312M              (0x1UL<<CGU_DSPBYSPD_SHIFT)
#define CGU_DSPBYSPD                   (0x1UL<<CGU_DSPBYSPD_SHIFT)
#define CGU_DSPBY_SHIFT                13
#define CGU_DSPBY_FIELD                (0xFFFFFFFF - (0x1UL<<CGU_DSPBY_SHIFT))
#define CGU_DSPBY_0                    (0x0UL<<CGU_DSPBY_SHIFT)
#define CGU_DSPBY_1                    (0x1UL<<CGU_DSPBY_SHIFT)
#define CGU_DSPBY                      (0x1UL<<CGU_DSPBY_SHIFT)
#define CGU_DSPCLKEN_SHIFT             12
#define CGU_DSPCLKEN_FIELD             (0xFFFFFFFF - (0x1UL<<CGU_DSPCLKEN_SHIFT))
#define CGU_DSPCLKEN_0                 (0x0UL<<CGU_DSPCLKEN_SHIFT)
#define CGU_DSPCLKEN_1                 (0x1UL<<CGU_DSPCLKEN_SHIFT)
#define CGU_DSPCLKEN                   (0x1UL<<CGU_DSPCLKEN_SHIFT)
#define CGU_KDSP_SHIFT                 10
#define CGU_KDSP_FIELD                 (0xFFFFFFFF - (0x3UL<<CGU_KDSP_SHIFT))
#define CGU_KDSP_0                     (0x0UL<<CGU_KDSP_SHIFT)
#define CGU_NDSP_SHIFT                 3
#define CGU_NDSP_FIELD                 (0xFFFFFFFF - (0x7FUL<<CGU_NDSP_SHIFT))
#define CGU_NDSP_F                     (0xFUL<<CGU_NDSP_SHIFT)
#define CGU_MDSP_SHIFT                 0
#define CGU_MDSP_FIELD                 (0xFFFFFFFF - (0x7UL<<CGU_MDSP_SHIFT))
#define CGU_MDSP_7                     (0x7UL<<CGU_MDSP_SHIFT)

/*****************************************************************************/
/* Register description for SCCON */

/* Reset value of register CGU_SCCON */
#define CGU_SCCON_VALUE                0x200B8

/* Bits definition for register CGU_SCCON */
#define CGU_MSC_SHIFT                  25
#define CGU_MSC_FIELD                  (0xFFFFFFFF - (0xFUL<<CGU_MSC_SHIFT))
#define CGU_MSC_0                      (0x0UL<<CGU_MSC_SHIFT)
#define CGU_MAHB_SHIFT                 21
#define CGU_MAHB_FIELD                 (0xFFFFFFFF - (0xFUL<<CGU_MAHB_SHIFT))
#define CGU_MAHB_0                     (0x0UL<<CGU_MAHB_SHIFT)
#define CGU_PLLSC_LOCK_SHIFT           20
#define CGU_PLLSC_LOCK_FIELD           (0xFFFFFFFF - (0x1UL<<CGU_PLLSC_LOCK_SHIFT))
#define CGU_PLLSC_LOCK_NOT_LOCKED      (0x0UL<<CGU_PLLSC_LOCK_SHIFT)
#define CGU_PLLSC_LOCK_LOCKED          (0x1UL<<CGU_PLLSC_LOCK_SHIFT)
#define CGU_PLLSC_LOCK                 (0x1UL<<CGU_PLLSC_LOCK_SHIFT)
#define CGU_PLLSCEN_SHIFT              19
#define CGU_PLLSCEN_FIELD              (0xFFFFFFFF - (0x1UL<<CGU_PLLSCEN_SHIFT))
#define CGU_PLLSCEN_DISABLED           (0x0UL<<CGU_PLLSCEN_SHIFT)
#define CGU_PLLSCEN_ENABLED            (0x1UL<<CGU_PLLSCEN_SHIFT)
#define CGU_PLLSCEN                    (0x1UL<<CGU_PLLSCEN_SHIFT)
#define CGU_SCBYSPD_SHIFT              18
#define CGU_SCBYSPD_FIELD              (0xFFFFFFFF - (0x1UL<<CGU_SCBYSPD_SHIFT))
#define CGU_SCBYSPD_156M               (0x0UL<<CGU_SCBYSPD_SHIFT)
#define CGU_SCBYSPD_312M               (0x1UL<<CGU_SCBYSPD_SHIFT)
#define CGU_SCBYSPD                    (0x1UL<<CGU_SCBYSPD_SHIFT)
#define CGU_SCBY_SHIFT                 17
#define CGU_SCBY_FIELD                 (0xFFFFFFFF - (0x1UL<<CGU_SCBY_SHIFT))
#define CGU_SCBY_0                     (0x0UL<<CGU_SCBY_SHIFT)
#define CGU_SCBY_1                     (0x1UL<<CGU_SCBY_SHIFT)
#define CGU_SCBY                       (0x1UL<<CGU_SCBY_SHIFT)
#define CGU_PSC_SHIFT                  15
#define CGU_PSC_FIELD                  (0xFFFFFFFF - (0x3UL<<CGU_PSC_SHIFT))
#define CGU_PSC_0                      (0x0UL<<CGU_PSC_SHIFT)
#define CGU_KSC_SHIFT                  11
#define CGU_KSC_FIELD                  (0xFFFFFFFF - (0xFUL<<CGU_KSC_SHIFT))
#define CGU_KSC_0                      (0x0UL<<CGU_KSC_SHIFT)
#define CGU_NSC_SHIFT                  3
#define CGU_NSC_FIELD                  (0xFFFFFFFF - (0xFFUL<<CGU_NSC_SHIFT))
#define CGU_NSC_17                     (0x17UL<<CGU_NSC_SHIFT)

/*****************************************************************************/
/* Register description for FIXCON */

/* Reset value of register CGU_FIXCON */
#define CGU_FIXCON_VALUE               0x3C220B8

/* Bits definition for register CGU_FIXCON */
#define CGU_HCLK2_SHIFT                29
#define CGU_HCLK2_FIELD                (0xFFFFFFFF - (0x7UL<<CGU_HCLK2_SHIFT))
#define CGU_HCLK2_13M                  (0x0UL<<CGU_HCLK2_SHIFT)
#define CGU_HCLK2_26M                  (0x1UL<<CGU_HCLK2_SHIFT)
#define CGU_HCLK2_39M                  (0x2UL<<CGU_HCLK2_SHIFT)
#define CGU_HCLK2_52M                  (0x3UL<<CGU_HCLK2_SHIFT)
#define CGU_HCLK2_78M                  (0x4UL<<CGU_HCLK2_SHIFT)
#define CGU_HCLK2_104M                 (0x5UL<<CGU_HCLK2_SHIFT)
#define CGU_HCLK2_6                    (0x6UL<<CGU_HCLK2_SHIFT)
#define CGU_HCLK2_7                    (0x7UL<<CGU_HCLK2_SHIFT)
#define CGU_LSIBBY_SHIFT               28
#define CGU_LSIBBY_FIELD               (0xFFFFFFFF - (0x1UL<<CGU_LSIBBY_SHIFT))
#define CGU_LSIBBY_DISABLED            (0x0UL<<CGU_LSIBBY_SHIFT)
#define CGU_LSIBBY_ENABLED             (0x1UL<<CGU_LSIBBY_SHIFT)
#define CGU_LSIBBY                     (0x1UL<<CGU_LSIBBY_SHIFT)
#define CGU_LSIBPD_SHIFT               27
#define CGU_LSIBPD_FIELD               (0xFFFFFFFF - (0x1UL<<CGU_LSIBPD_SHIFT))
#define CGU_LSIBPD_POWERED_ON          (0x0UL<<CGU_LSIBPD_SHIFT)
#define CGU_LSIBPD_POWERED_OFF         (0x1UL<<CGU_LSIBPD_SHIFT)
#define CGU_LSIBPD                     (0x1UL<<CGU_LSIBPD_SHIFT)
#define CGU_FC_DIV_SHIFT               22
#define CGU_FC_DIV_FIELD               (0xFFFFFFFF - (0x1FUL<<CGU_FC_DIV_SHIFT))
#define CGU_FC_DIV_F                   (0xFUL<<CGU_FC_DIV_SHIFT)
#define CGU_PCLK2_SHIFT                20
#define CGU_PCLK2_FIELD                (0xFFFFFFFF - (0x3UL<<CGU_PCLK2_SHIFT))
#define CGU_PCLK2_13M                  (0x0UL<<CGU_PCLK2_SHIFT)
#define CGU_PCLK2_26M                  (0x1UL<<CGU_PCLK2_SHIFT)
#define CGU_PCLK2_39M                  (0x2UL<<CGU_PCLK2_SHIFT)
#define CGU_PCLK2_52M                  (0x3UL<<CGU_PCLK2_SHIFT)
#define CGU_MCLKDIV_SHIFT              17
#define CGU_MCLKDIV_FIELD              (0xFFFFFFFF - (0x3UL<<CGU_MCLKDIV_SHIFT))
#define CGU_MCLKDIV_0                  (0x0UL<<CGU_MCLKDIV_SHIFT)
#define CGU_MCLKDIV_1                  (0x1UL<<CGU_MCLKDIV_SHIFT)
#define CGU_MCLKDIV_2                  (0x2UL<<CGU_MCLKDIV_SHIFT)
#define CGU_MCLKDIV_3                  (0x3UL<<CGU_MCLKDIV_SHIFT)
#define CGU_PLLFIX_LOCK_SHIFT          16
#define CGU_PLLFIX_LOCK_FIELD          (0xFFFFFFFF - (0x1UL<<CGU_PLLFIX_LOCK_SHIFT))
#define CGU_PLLFIX_LOCK_NOT_LOCKED     (0x0UL<<CGU_PLLFIX_LOCK_SHIFT)
#define CGU_PLLFIX_LOCK_LOCKED         (0x1UL<<CGU_PLLFIX_LOCK_SHIFT)
#define CGU_PLLFIX_LOCK                (0x1UL<<CGU_PLLFIX_LOCK_SHIFT)
#define CGU_PLLFIXEN_SHIFT             15
#define CGU_PLLFIXEN_FIELD             (0xFFFFFFFF - (0x1UL<<CGU_PLLFIXEN_SHIFT))
#define CGU_PLLFIXEN_DISABLED          (0x0UL<<CGU_PLLFIXEN_SHIFT)
#define CGU_PLLFIXEN_ENABLED           (0x1UL<<CGU_PLLFIXEN_SHIFT)
#define CGU_PLLFIXEN                   (0x1UL<<CGU_PLLFIXEN_SHIFT)
#define CGU_FIXBY_SHIFT                13
#define CGU_FIXBY_FIELD                (0xFFFFFFFF - (0x1UL<<CGU_FIXBY_SHIFT))
#define CGU_FIXBY_0                    (0x0UL<<CGU_FIXBY_SHIFT)
#define CGU_FIXBY_1                    (0x1UL<<CGU_FIXBY_SHIFT)
#define CGU_FIXBY                      (0x1UL<<CGU_FIXBY_SHIFT)
#define CGU_KFIX_SHIFT                 10
#define CGU_KFIX_FIELD                 (0xFFFFFFFF - (0x3UL<<CGU_KFIX_SHIFT))
#define CGU_KFIX_0                     (0x0UL<<CGU_KFIX_SHIFT)
#define CGU_NFIX_SHIFT                 3
#define CGU_NFIX_FIELD                 (0xFFFFFFFF - (0x7FUL<<CGU_NFIX_SHIFT))
#define CGU_NFIX_17                    (0x17UL<<CGU_NFIX_SHIFT)

/*****************************************************************************/
/* Register description for SDMCON */

/* Reset value of register CGU_SDMCON */
#define CGU_SDMCON_VALUE               0x8208B2

/* Bits definition for register CGU_SDMCON */
#define CGU_CONCEN_SHIFT               23
#define CGU_CONCEN_FIELD               (0xFFFFFFFF - (0x1UL<<CGU_CONCEN_SHIFT))
#define CGU_CONCEN_DISABLED            (0x0UL<<CGU_CONCEN_SHIFT)
#define CGU_CONCEN_ENABLED             (0x1UL<<CGU_CONCEN_SHIFT)
#define CGU_CONCEN                     (0x1UL<<CGU_CONCEN_SHIFT)
#define CGU_SDMHBY_SHIFT               22
#define CGU_SDMHBY_FIELD               (0xFFFFFFFF - (0x1UL<<CGU_SDMHBY_SHIFT))
#define CGU_SDMHBY_0                   (0x0UL<<CGU_SDMHBY_SHIFT)
#define CGU_SDMHBY_1                   (0x1UL<<CGU_SDMHBY_SHIFT)
#define CGU_SDMHBY                     (0x1UL<<CGU_SDMHBY_SHIFT)
#define CGU_SDMCLKEN_SHIFT             21
#define CGU_SDMCLKEN_FIELD             (0xFFFFFFFF - (0x1UL<<CGU_SDMCLKEN_SHIFT))
#define CGU_SDMCLKEN_DISABLED          (0x0UL<<CGU_SDMCLKEN_SHIFT)
#define CGU_SDMCLKEN_ENABLED           (0x1UL<<CGU_SDMCLKEN_SHIFT)
#define CGU_SDMCLKEN                   (0x1UL<<CGU_SDMCLKEN_SHIFT)
#define CGU_PLLSDM_LOCK_SHIFT          20
#define CGU_PLLSDM_LOCK_FIELD          (0xFFFFFFFF - (0x1UL<<CGU_PLLSDM_LOCK_SHIFT))
#define CGU_PLLSDM_LOCK_NOT_LOCKED     (0x0UL<<CGU_PLLSDM_LOCK_SHIFT)
#define CGU_PLLSDM_LOCK_LOCKED         (0x1UL<<CGU_PLLSDM_LOCK_SHIFT)
#define CGU_PLLSDM_LOCK                (0x1UL<<CGU_PLLSDM_LOCK_SHIFT)
#define CGU_PLLSDMEN_SHIFT             19
#define CGU_PLLSDMEN_FIELD             (0xFFFFFFFF - (0x1UL<<CGU_PLLSDMEN_SHIFT))
#define CGU_PLLSDMEN_DISABLED          (0x0UL<<CGU_PLLSDMEN_SHIFT)
#define CGU_PLLSDMEN_ENABLED           (0x1UL<<CGU_PLLSDMEN_SHIFT)
#define CGU_PLLSDMEN                   (0x1UL<<CGU_PLLSDMEN_SHIFT)
#define CGU_SDMBYSPD_SHIFT             18
#define CGU_SDMBYSPD_FIELD             (0xFFFFFFFF - (0x1UL<<CGU_SDMBYSPD_SHIFT))
#define CGU_SDMBYSPD_156M              (0x0UL<<CGU_SDMBYSPD_SHIFT)
#define CGU_SDMBYSPD_312M              (0x1UL<<CGU_SDMBYSPD_SHIFT)
#define CGU_SDMBYSPD                   (0x1UL<<CGU_SDMBYSPD_SHIFT)
#define CGU_SDMBY_SHIFT                17
#define CGU_SDMBY_FIELD                (0xFFFFFFFF - (0x1UL<<CGU_SDMBY_SHIFT))
#define CGU_SDMBY_0                    (0x0UL<<CGU_SDMBY_SHIFT)
#define CGU_SDMBY_1                    (0x1UL<<CGU_SDMBY_SHIFT)
#define CGU_SDMBY                      (0x1UL<<CGU_SDMBY_SHIFT)
#define CGU_KSDM_SHIFT                 11
#define CGU_KSDM_FIELD                 (0xFFFFFFFF - (0x3FUL<<CGU_KSDM_SHIFT))
#define CGU_KSDM_1                     (0x1UL<<CGU_KSDM_SHIFT)
#define CGU_NSDM_SHIFT                 3
#define CGU_NSDM_FIELD                 (0xFFFFFFFF - (0xFFUL<<CGU_NSDM_SHIFT))
#define CGU_NSDM_16                    (0x16UL<<CGU_NSDM_SHIFT)
#define CGU_MSDM_SHIFT                 0
#define CGU_MSDM_FIELD                 (0xFFFFFFFF - (0x7UL<<CGU_MSDM_SHIFT))
#define CGU_MSDM_2                     (0x2UL<<CGU_MSDM_SHIFT)

/*****************************************************************************/
/* Register description for CAMCON */

/* Reset value of register CGU_CAMCON */
#define CGU_CAMCON_VALUE               0xFF

/* Bits definition for register CGU_CAMCON */
#define CGU_CAMCLKEN_SHIFT             7
#define CGU_CAMCLKEN_FIELD             (0xFFFFFFFF - (0x1UL<<CGU_CAMCLKEN_SHIFT))
#define CGU_CAMCLKEN_DISABLED          (0x0UL<<CGU_CAMCLKEN_SHIFT)
#define CGU_CAMCLKEN_ENABLED           (0x1UL<<CGU_CAMCLKEN_SHIFT)
#define CGU_CAMCLKEN                   (0x1UL<<CGU_CAMCLKEN_SHIFT)
#define CGU_CAMBY_SHIFT                6
#define CGU_CAMBY_FIELD                (0xFFFFFFFF - (0x1UL<<CGU_CAMBY_SHIFT))
#define CGU_CAMBY_0                    (0x0UL<<CGU_CAMBY_SHIFT)
#define CGU_CAMBY_1                    (0x1UL<<CGU_CAMBY_SHIFT)
#define CGU_CAMBY                      (0x1UL<<CGU_CAMBY_SHIFT)
#define CGU_CAMDIV_SHIFT               0
#define CGU_CAMDIV_FIELD               (0xFFFFFFFF - (0x3FUL<<CGU_CAMDIV_SHIFT))
#define CGU_CAMDIV_3F                  (0x3FUL<<CGU_CAMDIV_SHIFT)

/*****************************************************************************/
/* Register description for TVCON */

/* Reset value of register CGU_TVCON */
#define CGU_TVCON_VALUE                0x0

/* Bits definition for register CGU_TVCON */
#define CGU_PLLTV_LOCK_SHIFT           16
#define CGU_PLLTV_LOCK_FIELD           (0xFFFFFFFF - (0x1UL<<CGU_PLLTV_LOCK_SHIFT))
#define CGU_PLLTV_LOCK_NOT_LOCKED      (0x0UL<<CGU_PLLTV_LOCK_SHIFT)
#define CGU_PLLTV_LOCK_LOCKED          (0x1UL<<CGU_PLLTV_LOCK_SHIFT)
#define CGU_PLLTV_LOCK                 (0x1UL<<CGU_PLLTV_LOCK_SHIFT)
#define CGU_PLLTVEN_SHIFT              15
#define CGU_PLLTVEN_FIELD              (0xFFFFFFFF - (0x1UL<<CGU_PLLTVEN_SHIFT))
#define CGU_PLLTVEN_DISABLED           (0x0UL<<CGU_PLLTVEN_SHIFT)
#define CGU_PLLTVEN_ENABLED            (0x1UL<<CGU_PLLTVEN_SHIFT)
#define CGU_PLLTVEN                    (0x1UL<<CGU_PLLTVEN_SHIFT)
#define CGU_TVCLKEN_SHIFT              12
#define CGU_TVCLKEN_FIELD              (0xFFFFFFFF - (0x1UL<<CGU_TVCLKEN_SHIFT))
#define CGU_TVCLKEN_0                  (0x0UL<<CGU_TVCLKEN_SHIFT)
#define CGU_TVCLKEN_1                  (0x1UL<<CGU_TVCLKEN_SHIFT)
#define CGU_TVCLKEN                    (0x1UL<<CGU_TVCLKEN_SHIFT)

/*****************************************************************************/
/* Register description for CNTCON */

/* Reset value of register CGU_CNTCON */
#define CGU_CNTCON_VALUE               0x0

/* Bits definition for register CGU_CNTCON */
#define CGU_OV_SHIFT                   18
#define CGU_OV_FIELD                   (0xFFFFFFFF - (0x1UL<<CGU_OV_SHIFT))
#define CGU_OV_0                       (0x0UL<<CGU_OV_SHIFT)
#define CGU_OV_1                       (0x1UL<<CGU_OV_SHIFT)
#define CGU_OV                         (0x1UL<<CGU_OV_SHIFT)
#define CGU_READY_SHIFT                17
#define CGU_READY_FIELD                (0xFFFFFFFF - (0x1UL<<CGU_READY_SHIFT))
#define CGU_READY_0                    (0x0UL<<CGU_READY_SHIFT)
#define CGU_READY_1                    (0x1UL<<CGU_READY_SHIFT)
#define CGU_READY                      (0x1UL<<CGU_READY_SHIFT)
#define CGU_START_SHIFT                16
#define CGU_START_FIELD                (0xFFFFFFFF - (0x1UL<<CGU_START_SHIFT))
#define CGU_START_0                    (0x0UL<<CGU_START_SHIFT)
#define CGU_START_1                    (0x1UL<<CGU_START_SHIFT)
#define CGU_START                      (0x1UL<<CGU_START_SHIFT)
#define CGU_CNT_SHIFT                  0
#define CGU_CNT_FIELD                  (0xFFFFFFFF - (0x7FFUL<<CGU_CNT_SHIFT))
#define CGU_CNT_0                      (0x0UL<<CGU_CNT_SHIFT)

/*****************************************************************************/
/* Register description for GATESC1 */

/* Reset value of register CGU_GATESC1 */
#define CGU_GATESC1_VALUE              0xFFFFFFFF

/* Bits definition for register CGU_GATESC1 */
#define CGU_EBIEN_SHIFT                31
#define CGU_EBIEN_FIELD                (0xFFFFFFFF - (0x1UL<<CGU_EBIEN_SHIFT))
#define CGU_EBIEN_0                    (0x0UL<<CGU_EBIEN_SHIFT)
#define CGU_EBIEN_1                    (0x1UL<<CGU_EBIEN_SHIFT)
#define CGU_EBIEN                      (0x1UL<<CGU_EBIEN_SHIFT)
#define CGU_NFIEN_SHIFT                29
#define CGU_NFIEN_FIELD                (0xFFFFFFFF - (0x1UL<<CGU_NFIEN_SHIFT))
#define CGU_NFIEN_0                    (0x0UL<<CGU_NFIEN_SHIFT)
#define CGU_NFIEN_1                    (0x1UL<<CGU_NFIEN_SHIFT)
#define CGU_NFIEN                      (0x1UL<<CGU_NFIEN_SHIFT)
#define CGU_SDIEN_SHIFT                28
#define CGU_SDIEN_FIELD                (0xFFFFFFFF - (0x1UL<<CGU_SDIEN_SHIFT))
#define CGU_SDIEN_0                    (0x0UL<<CGU_SDIEN_SHIFT)
#define CGU_SDIEN_1                    (0x1UL<<CGU_SDIEN_SHIFT)
#define CGU_SDIEN                      (0x1UL<<CGU_SDIEN_SHIFT)
#define CGU_MSIEN_SHIFT                26
#define CGU_MSIEN_FIELD                (0xFFFFFFFF - (0x1UL<<CGU_MSIEN_SHIFT))
#define CGU_MSIEN_0                    (0x0UL<<CGU_MSIEN_SHIFT)
#define CGU_MSIEN_1                    (0x1UL<<CGU_MSIEN_SHIFT)
#define CGU_MSIEN                      (0x1UL<<CGU_MSIEN_SHIFT)
#define CGU_UCCEN_SHIFT                25
#define CGU_UCCEN_FIELD                (0xFFFFFFFF - (0x1UL<<CGU_UCCEN_SHIFT))
#define CGU_UCCEN_0                    (0x0UL<<CGU_UCCEN_SHIFT)
#define CGU_UCCEN_1                    (0x1UL<<CGU_UCCEN_SHIFT)
#define CGU_UCCEN                      (0x1UL<<CGU_UCCEN_SHIFT)
#define CGU_JDIEN_SHIFT                24
#define CGU_JDIEN_FIELD                (0xFFFFFFFF - (0x1UL<<CGU_JDIEN_SHIFT))
#define CGU_JDIEN_0                    (0x0UL<<CGU_JDIEN_SHIFT)
#define CGU_JDIEN_1                    (0x1UL<<CGU_JDIEN_SHIFT)
#define CGU_JDIEN                      (0x1UL<<CGU_JDIEN_SHIFT)
#define CGU_DMAUEN_SHIFT               20
#define CGU_DMAUEN_FIELD               (0xFFFFFFFF - (0x1UL<<CGU_DMAUEN_SHIFT))
#define CGU_DMAUEN_0                   (0x0UL<<CGU_DMAUEN_SHIFT)
#define CGU_DMAUEN_1                   (0x1UL<<CGU_DMAUEN_SHIFT)
#define CGU_DMAUEN                     (0x1UL<<CGU_DMAUEN_SHIFT)
#define CGU_RFSM1EN_SHIFT              19
#define CGU_RFSM1EN_FIELD              (0xFFFFFFFF - (0x1UL<<CGU_RFSM1EN_SHIFT))
#define CGU_RFSM1EN_0                  (0x0UL<<CGU_RFSM1EN_SHIFT)
#define CGU_RFSM1EN_1                  (0x1UL<<CGU_RFSM1EN_SHIFT)
#define CGU_RFSM1EN                    (0x1UL<<CGU_RFSM1EN_SHIFT)
#define CGU_SIISEN_SHIFT               18
#define CGU_SIISEN_FIELD               (0xFFFFFFFF - (0x1UL<<CGU_SIISEN_SHIFT))
#define CGU_SIISEN_0                   (0x0UL<<CGU_SIISEN_SHIFT)
#define CGU_SIISEN_1                   (0x1UL<<CGU_SIISEN_SHIFT)
#define CGU_SIISEN                     (0x1UL<<CGU_SIISEN_SHIFT)
#define CGU_USBEN_SHIFT                17
#define CGU_USBEN_FIELD                (0xFFFFFFFF - (0x1UL<<CGU_USBEN_SHIFT))
#define CGU_USBEN_0                    (0x0UL<<CGU_USBEN_SHIFT)
#define CGU_USBEN_1                    (0x1UL<<CGU_USBEN_SHIFT)
#define CGU_USBEN                      (0x1UL<<CGU_USBEN_SHIFT)
#define CGU_FCIEN_SHIFT                16
#define CGU_FCIEN_FIELD                (0xFFFFFFFF - (0x1UL<<CGU_FCIEN_SHIFT))
#define CGU_FCIEN_0                    (0x0UL<<CGU_FCIEN_SHIFT)
#define CGU_FCIEN_1                    (0x1UL<<CGU_FCIEN_SHIFT)
#define CGU_FCIEN                      (0x1UL<<CGU_FCIEN_SHIFT)
#define CGU_USIMEN_SHIFT               15
#define CGU_USIMEN_FIELD               (0xFFFFFFFF - (0x1UL<<CGU_USIMEN_SHIFT))
#define CGU_USIMEN_0                   (0x0UL<<CGU_USIMEN_SHIFT)
#define CGU_USIMEN_1                   (0x1UL<<CGU_USIMEN_SHIFT)
#define CGU_USIMEN                     (0x1UL<<CGU_USIMEN_SHIFT)
#define CGU_GEACEN_SHIFT               14
#define CGU_GEACEN_FIELD               (0xFFFFFFFF - (0x1UL<<CGU_GEACEN_SHIFT))
#define CGU_GEACEN_0                   (0x0UL<<CGU_GEACEN_SHIFT)
#define CGU_GEACEN_1                   (0x1UL<<CGU_GEACEN_SHIFT)
#define CGU_GEACEN                     (0x1UL<<CGU_GEACEN_SHIFT)
#define CGU_PWM3EN_SHIFT               13
#define CGU_PWM3EN_FIELD               (0xFFFFFFFF - (0x1UL<<CGU_PWM3EN_SHIFT))
#define CGU_PWM3EN_0                   (0x0UL<<CGU_PWM3EN_SHIFT)
#define CGU_PWM3EN_1                   (0x1UL<<CGU_PWM3EN_SHIFT)
#define CGU_PWM3EN                     (0x1UL<<CGU_PWM3EN_SHIFT)
#define CGU_PWM2EN_SHIFT               12
#define CGU_PWM2EN_FIELD               (0xFFFFFFFF - (0x1UL<<CGU_PWM2EN_SHIFT))
#define CGU_PWM2EN_0                   (0x0UL<<CGU_PWM2EN_SHIFT)
#define CGU_PWM2EN_1                   (0x1UL<<CGU_PWM2EN_SHIFT)
#define CGU_PWM2EN                     (0x1UL<<CGU_PWM2EN_SHIFT)
#define CGU_PWM1EN_SHIFT               11
#define CGU_PWM1EN_FIELD               (0xFFFFFFFF - (0x1UL<<CGU_PWM1EN_SHIFT))
#define CGU_PWM1EN_0                   (0x0UL<<CGU_PWM1EN_SHIFT)
#define CGU_PWM1EN_1                   (0x1UL<<CGU_PWM1EN_SHIFT)
#define CGU_PWM1EN                     (0x1UL<<CGU_PWM1EN_SHIFT)
#define CGU_KBSEN_SHIFT                10
#define CGU_KBSEN_FIELD                (0xFFFFFFFF - (0x1UL<<CGU_KBSEN_SHIFT))
#define CGU_KBSEN_0                    (0x0UL<<CGU_KBSEN_SHIFT)
#define CGU_KBSEN_1                    (0x1UL<<CGU_KBSEN_SHIFT)
#define CGU_KBSEN                      (0x1UL<<CGU_KBSEN_SHIFT)
#define CGU_GPIOEN_SHIFT               9
#define CGU_GPIOEN_FIELD               (0xFFFFFFFF - (0x1UL<<CGU_GPIOEN_SHIFT))
#define CGU_GPIOEN_0                   (0x0UL<<CGU_GPIOEN_SHIFT)
#define CGU_GPIOEN_1                   (0x1UL<<CGU_GPIOEN_SHIFT)
#define CGU_GPIOEN                     (0x1UL<<CGU_GPIOEN_SHIFT)
#define CGU_UART2EN_SHIFT              8
#define CGU_UART2EN_FIELD              (0xFFFFFFFF - (0x1UL<<CGU_UART2EN_SHIFT))
#define CGU_UART2EN_0                  (0x0UL<<CGU_UART2EN_SHIFT)
#define CGU_UART2EN_1                  (0x1UL<<CGU_UART2EN_SHIFT)
#define CGU_UART2EN                    (0x1UL<<CGU_UART2EN_SHIFT)
#define CGU_UART1EN_SHIFT              7
#define CGU_UART1EN_FIELD              (0xFFFFFFFF - (0x1UL<<CGU_UART1EN_SHIFT))
#define CGU_UART1EN_0                  (0x0UL<<CGU_UART1EN_SHIFT)
#define CGU_UART1EN_1                  (0x1UL<<CGU_UART1EN_SHIFT)
#define CGU_UART1EN                    (0x1UL<<CGU_UART1EN_SHIFT)
#define CGU_IIC2EN_SHIFT               6
#define CGU_IIC2EN_FIELD               (0xFFFFFFFF - (0x1UL<<CGU_IIC2EN_SHIFT))
#define CGU_IIC2EN_0                   (0x0UL<<CGU_IIC2EN_SHIFT)
#define CGU_IIC2EN_1                   (0x1UL<<CGU_IIC2EN_SHIFT)
#define CGU_IIC2EN                     (0x1UL<<CGU_IIC2EN_SHIFT)
#define CGU_IIC1EN_SHIFT               5
#define CGU_IIC1EN_FIELD               (0xFFFFFFFF - (0x1UL<<CGU_IIC1EN_SHIFT))
#define CGU_IIC1EN_0                   (0x0UL<<CGU_IIC1EN_SHIFT)
#define CGU_IIC1EN_1                   (0x1UL<<CGU_IIC1EN_SHIFT)
#define CGU_IIC1EN                     (0x1UL<<CGU_IIC1EN_SHIFT)
#define CGU_SPI2EN_SHIFT               4
#define CGU_SPI2EN_FIELD               (0xFFFFFFFF - (0x1UL<<CGU_SPI2EN_SHIFT))
#define CGU_SPI2EN_0                   (0x0UL<<CGU_SPI2EN_SHIFT)
#define CGU_SPI2EN_1                   (0x1UL<<CGU_SPI2EN_SHIFT)
#define CGU_SPI2EN                     (0x1UL<<CGU_SPI2EN_SHIFT)
#define CGU_SPI1EN_SHIFT               3
#define CGU_SPI1EN_FIELD               (0xFFFFFFFF - (0x1UL<<CGU_SPI1EN_SHIFT))
#define CGU_SPI1EN_0                   (0x0UL<<CGU_SPI1EN_SHIFT)
#define CGU_SPI1EN_1                   (0x1UL<<CGU_SPI1EN_SHIFT)
#define CGU_SPI1EN                     (0x1UL<<CGU_SPI1EN_SHIFT)
#define CGU_SCTUEN_SHIFT               2
#define CGU_SCTUEN_FIELD               (0xFFFFFFFF - (0x1UL<<CGU_SCTUEN_SHIFT))
#define CGU_SCTUEN_0                   (0x0UL<<CGU_SCTUEN_SHIFT)
#define CGU_SCTUEN_1                   (0x1UL<<CGU_SCTUEN_SHIFT)
#define CGU_SCTUEN                     (0x1UL<<CGU_SCTUEN_SHIFT)
#define CGU_EXTINTEN_SHIFT             1
#define CGU_EXTINTEN_FIELD             (0xFFFFFFFF - (0x1UL<<CGU_EXTINTEN_SHIFT))
#define CGU_EXTINTEN_0                 (0x0UL<<CGU_EXTINTEN_SHIFT)
#define CGU_EXTINTEN_1                 (0x1UL<<CGU_EXTINTEN_SHIFT)
#define CGU_EXTINTEN                   (0x1UL<<CGU_EXTINTEN_SHIFT)
#define CGU_INTCEN_SHIFT               0
#define CGU_INTCEN_FIELD               (0xFFFFFFFF - (0x1UL<<CGU_INTCEN_SHIFT))
#define CGU_INTCEN_0                   (0x0UL<<CGU_INTCEN_SHIFT)
#define CGU_INTCEN_1                   (0x1UL<<CGU_INTCEN_SHIFT)
#define CGU_INTCEN                     (0x1UL<<CGU_INTCEN_SHIFT)

/*****************************************************************************/
/* Register description for GATESC2 */

/* Reset value of register CGU_GATESC2 */
#define CGU_GATESC2_VALUE              0xFFFFFFFF

/* Bits definition for register CGU_GATESC2 */
#define CGU_TRAUPCLKEN_SHIFT           15
#define CGU_TRAUPCLKEN_FIELD           (0xFFFFFFFF - (0x1UL<<CGU_TRAUPCLKEN_SHIFT))
#define CGU_TRAUPCLKEN_0               (0x0UL<<CGU_TRAUPCLKEN_SHIFT)
#define CGU_TRAUPCLKEN_1               (0x1UL<<CGU_TRAUPCLKEN_SHIFT)
#define CGU_TRAUPCLKEN                 (0x1UL<<CGU_TRAUPCLKEN_SHIFT)
#define CGU_AUTRXPCLKEN_SHIFT          12
#define CGU_AUTRXPCLKEN_FIELD          (0xFFFFFFFF - (0x1UL<<CGU_AUTRXPCLKEN_SHIFT))
#define CGU_AUTRXPCLKEN_0              (0x0UL<<CGU_AUTRXPCLKEN_SHIFT)
#define CGU_AUTRXPCLKEN_1              (0x1UL<<CGU_AUTRXPCLKEN_SHIFT)
#define CGU_AUTRXPCLKEN                (0x1UL<<CGU_AUTRXPCLKEN_SHIFT)
#define CGU_AUTRXMCLK2EN_SHIFT         11
#define CGU_AUTRXMCLK2EN_FIELD         (0xFFFFFFFF - (0x1UL<<CGU_AUTRXMCLK2EN_SHIFT))
#define CGU_AUTRXMCLK2EN_0             (0x0UL<<CGU_AUTRXMCLK2EN_SHIFT)
#define CGU_AUTRXMCLK2EN_1             (0x1UL<<CGU_AUTRXMCLK2EN_SHIFT)
#define CGU_AUTRXMCLK2EN               (0x1UL<<CGU_AUTRXMCLK2EN_SHIFT)
#define CGU_AUTRXMCLK1EN_SHIFT         10
#define CGU_AUTRXMCLK1EN_FIELD         (0xFFFFFFFF - (0x1UL<<CGU_AUTRXMCLK1EN_SHIFT))
#define CGU_AUTRXMCLK1EN_0             (0x0UL<<CGU_AUTRXMCLK1EN_SHIFT)
#define CGU_AUTRXMCLK1EN_1             (0x1UL<<CGU_AUTRXMCLK1EN_SHIFT)
#define CGU_AUTRXMCLK1EN               (0x1UL<<CGU_AUTRXMCLK1EN_SHIFT)
#define CGU_BBIPCLKEN_SHIFT            9
#define CGU_BBIPCLKEN_FIELD            (0xFFFFFFFF - (0x1UL<<CGU_BBIPCLKEN_SHIFT))
#define CGU_BBIPCLKEN_0                (0x0UL<<CGU_BBIPCLKEN_SHIFT)
#define CGU_BBIPCLKEN_1                (0x1UL<<CGU_BBIPCLKEN_SHIFT)
#define CGU_BBIPCLKEN                  (0x1UL<<CGU_BBIPCLKEN_SHIFT)
#define CGU_HSDPAHCLKEN_SHIFT          8
#define CGU_HSDPAHCLKEN_FIELD          (0xFFFFFFFF - (0x1UL<<CGU_HSDPAHCLKEN_SHIFT))
#define CGU_HSDPAHCLKEN_0              (0x0UL<<CGU_HSDPAHCLKEN_SHIFT)
#define CGU_HSDPAHCLKEN_1              (0x1UL<<CGU_HSDPAHCLKEN_SHIFT)
#define CGU_HSDPAHCLKEN                (0x1UL<<CGU_HSDPAHCLKEN_SHIFT)
#define CGU_3GMHCLKEN_SHIFT            7
#define CGU_3GMHCLKEN_FIELD            (0xFFFFFFFF - (0x1UL<<CGU_3GMHCLKEN_SHIFT))
#define CGU_3GMHCLKEN_0                (0x0UL<<CGU_3GMHCLKEN_SHIFT)
#define CGU_3GMHCLKEN_1                (0x1UL<<CGU_3GMHCLKEN_SHIFT)
#define CGU_3GMHCLKEN                  (0x1UL<<CGU_3GMHCLKEN_SHIFT)
#define CGU_3GMMCLKEN_SHIFT            6
#define CGU_3GMMCLKEN_FIELD            (0xFFFFFFFF - (0x1UL<<CGU_3GMMCLKEN_SHIFT))
#define CGU_3GMMCLKEN_0                (0x0UL<<CGU_3GMMCLKEN_SHIFT)
#define CGU_3GMMCLKEN_1                (0x1UL<<CGU_3GMMCLKEN_SHIFT)
#define CGU_3GMMCLKEN                  (0x1UL<<CGU_3GMMCLKEN_SHIFT)
#define CGU_ETBEN_SHIFT                4
#define CGU_ETBEN_FIELD                (0xFFFFFFFF - (0x1UL<<CGU_ETBEN_SHIFT))
#define CGU_ETBEN_0                    (0x0UL<<CGU_ETBEN_SHIFT)
#define CGU_ETBEN_1                    (0x1UL<<CGU_ETBEN_SHIFT)
#define CGU_ETBEN                      (0x1UL<<CGU_ETBEN_SHIFT)
#define CGU_MTUEN_SHIFT                2
#define CGU_MTUEN_FIELD                (0xFFFFFFFF - (0x1UL<<CGU_MTUEN_SHIFT))
#define CGU_MTUEN_0                    (0x0UL<<CGU_MTUEN_SHIFT)
#define CGU_MTUEN_1                    (0x1UL<<CGU_MTUEN_SHIFT)
#define CGU_MTUEN                      (0x1UL<<CGU_MTUEN_SHIFT)
#define CGU_CAEEN_SHIFT                0
#define CGU_CAEEN_FIELD                (0xFFFFFFFF - (0x1UL<<CGU_CAEEN_SHIFT))
#define CGU_CAEEN_0                    (0x0UL<<CGU_CAEEN_SHIFT)
#define CGU_CAEEN_1                    (0x1UL<<CGU_CAEEN_SHIFT)
#define CGU_CAEEN                      (0x1UL<<CGU_CAEEN_SHIFT)

/*****************************************************************************/
/* Register description for IDLESC */

/* Reset value of register CGU_IDLESC */
#define CGU_IDLESC_VALUE               0x7

/* Bits definition for register CGU_IDLESC */
#define CGU_ETM_EN_SHIFT               2
#define CGU_ETM_EN_FIELD               (0xFFFFFFFF - (0x1UL<<CGU_ETM_EN_SHIFT))
#define CGU_ETM_EN_0                   (0x0UL<<CGU_ETM_EN_SHIFT)
#define CGU_ETM_EN_1                   (0x1UL<<CGU_ETM_EN_SHIFT)
#define CGU_ETM_EN                     (0x1UL<<CGU_ETM_EN_SHIFT)
#define CGU_HCLK2_IDLEEN_SHIFT         1
#define CGU_HCLK2_IDLEEN_FIELD         (0xFFFFFFFF - (0x1UL<<CGU_HCLK2_IDLEEN_SHIFT))
#define CGU_HCLK2_IDLEEN_0             (0x0UL<<CGU_HCLK2_IDLEEN_SHIFT)
#define CGU_HCLK2_IDLEEN_1             (0x1UL<<CGU_HCLK2_IDLEEN_SHIFT)
#define CGU_HCLK2_IDLEEN               (0x1UL<<CGU_HCLK2_IDLEEN_SHIFT)
#define CGU_HCLK1_IDLEEN_SHIFT         0
#define CGU_HCLK1_IDLEEN_FIELD         (0xFFFFFFFF - (0x1UL<<CGU_HCLK1_IDLEEN_SHIFT))
#define CGU_HCLK1_IDLEEN_0             (0x0UL<<CGU_HCLK1_IDLEEN_SHIFT)
#define CGU_HCLK1_IDLEEN_1             (0x1UL<<CGU_HCLK1_IDLEEN_SHIFT)
#define CGU_HCLK1_IDLEEN               (0x1UL<<CGU_HCLK1_IDLEEN_SHIFT)

/*****************************************************************************/
/* Register description for SLEEPSC */

/* Reset value of register CGU_SLEEPSC */
#define CGU_SLEEPSC_VALUE              0x0

/* Bits definition for register CGU_SLEEPSC */
#define CGU_AHBSLEN_SHIFT              8
#define CGU_AHBSLEN_FIELD              (0xFFFFFFFF - (0x1UL<<CGU_AHBSLEN_SHIFT))
#define CGU_AHBSLEN_0                  (0x0UL<<CGU_AHBSLEN_SHIFT)
#define CGU_AHBSLEN_1                  (0x1UL<<CGU_AHBSLEN_SHIFT)
#define CGU_AHBSLEN                    (0x1UL<<CGU_AHBSLEN_SHIFT)
#define CGU_UART2SLEN_SHIFT            7
#define CGU_UART2SLEN_FIELD            (0xFFFFFFFF - (0x1UL<<CGU_UART2SLEN_SHIFT))
#define CGU_UART2SLEN_0                (0x0UL<<CGU_UART2SLEN_SHIFT)
#define CGU_UART2SLEN_1                (0x1UL<<CGU_UART2SLEN_SHIFT)
#define CGU_UART2SLEN                  (0x1UL<<CGU_UART2SLEN_SHIFT)
#define CGU_UART1SLEN_SHIFT            6
#define CGU_UART1SLEN_FIELD            (0xFFFFFFFF - (0x1UL<<CGU_UART1SLEN_SHIFT))
#define CGU_UART1SLEN_0                (0x0UL<<CGU_UART1SLEN_SHIFT)
#define CGU_UART1SLEN_1                (0x1UL<<CGU_UART1SLEN_SHIFT)
#define CGU_UART1SLEN                  (0x1UL<<CGU_UART1SLEN_SHIFT)
#define CGU_IIC1SLEN_SHIFT             5
#define CGU_IIC1SLEN_FIELD             (0xFFFFFFFF - (0x1UL<<CGU_IIC1SLEN_SHIFT))
#define CGU_IIC1SLEN_0                 (0x0UL<<CGU_IIC1SLEN_SHIFT)
#define CGU_IIC1SLEN_1                 (0x1UL<<CGU_IIC1SLEN_SHIFT)
#define CGU_IIC1SLEN                   (0x1UL<<CGU_IIC1SLEN_SHIFT)
#define CGU_SPI2SLEN_SHIFT             3
#define CGU_SPI2SLEN_FIELD             (0xFFFFFFFF - (0x1UL<<CGU_SPI2SLEN_SHIFT))
#define CGU_SPI2SLEN_0                 (0x0UL<<CGU_SPI2SLEN_SHIFT)
#define CGU_SPI2SLEN_1                 (0x1UL<<CGU_SPI2SLEN_SHIFT)
#define CGU_SPI2SLEN                   (0x1UL<<CGU_SPI2SLEN_SHIFT)
#define CGU_SPI1SLEN_SHIFT             2
#define CGU_SPI1SLEN_FIELD             (0xFFFFFFFF - (0x1UL<<CGU_SPI1SLEN_SHIFT))
#define CGU_SPI1SLEN_0                 (0x0UL<<CGU_SPI1SLEN_SHIFT)
#define CGU_SPI1SLEN_1                 (0x1UL<<CGU_SPI1SLEN_SHIFT)
#define CGU_SPI1SLEN                   (0x1UL<<CGU_SPI1SLEN_SHIFT)
#define CGU_SCTUSLEN_SHIFT             1
#define CGU_SCTUSLEN_FIELD             (0xFFFFFFFF - (0x1UL<<CGU_SCTUSLEN_SHIFT))
#define CGU_SCTUSLEN_0                 (0x0UL<<CGU_SCTUSLEN_SHIFT)
#define CGU_SCTUSLEN_1                 (0x1UL<<CGU_SCTUSLEN_SHIFT)
#define CGU_SCTUSLEN                   (0x1UL<<CGU_SCTUSLEN_SHIFT)
#define CGU_INTCSLEN_SHIFT             0
#define CGU_INTCSLEN_FIELD             (0xFFFFFFFF - (0x1UL<<CGU_INTCSLEN_SHIFT))
#define CGU_INTCSLEN_0                 (0x0UL<<CGU_INTCSLEN_SHIFT)
#define CGU_INTCSLEN_1                 (0x1UL<<CGU_INTCSLEN_SHIFT)
#define CGU_INTCSLEN                   (0x1UL<<CGU_INTCSLEN_SHIFT)

/*****************************************************************************/
/* Register description for GATEIVS */

/* Reset value of register CGU_GATEIVS */
#define CGU_GATEIVS_VALUE              0xFF

/* Bits definition for register CGU_GATEIVS */
#define CGU_CAMJPEEN_SHIFT             7
#define CGU_CAMJPEEN_FIELD             (0xFFFFFFFF - (0x1UL<<CGU_CAMJPEEN_SHIFT))
#define CGU_CAMJPEEN_0                 (0x0UL<<CGU_CAMJPEEN_SHIFT)
#define CGU_CAMJPEEN_1                 (0x1UL<<CGU_CAMJPEEN_SHIFT)
#define CGU_CAMJPEEN                   (0x1UL<<CGU_CAMJPEEN_SHIFT)
#define CGU_TVOEN_SHIFT                6
#define CGU_TVOEN_FIELD                (0xFFFFFFFF - (0x1UL<<CGU_TVOEN_SHIFT))
#define CGU_TVOEN_0                    (0x0UL<<CGU_TVOEN_SHIFT)
#define CGU_TVOEN_1                    (0x1UL<<CGU_TVOEN_SHIFT)
#define CGU_TVOEN                      (0x1UL<<CGU_TVOEN_SHIFT)
#define CGU_JDUEN_SHIFT                5
#define CGU_JDUEN_FIELD                (0xFFFFFFFF - (0x1UL<<CGU_JDUEN_SHIFT))
#define CGU_JDUEN_0                    (0x0UL<<CGU_JDUEN_SHIFT)
#define CGU_JDUEN_1                    (0x1UL<<CGU_JDUEN_SHIFT)
#define CGU_JDUEN                      (0x1UL<<CGU_JDUEN_SHIFT)
#define CGU_VDCEN_SHIFT                4
#define CGU_VDCEN_FIELD                (0xFFFFFFFF - (0x1UL<<CGU_VDCEN_SHIFT))
#define CGU_VDCEN_0                    (0x0UL<<CGU_VDCEN_SHIFT)
#define CGU_VDCEN_1                    (0x1UL<<CGU_VDCEN_SHIFT)
#define CGU_VDCEN                      (0x1UL<<CGU_VDCEN_SHIFT)
#define CGU_VECEN_SHIFT                3
#define CGU_VECEN_FIELD                (0xFFFFFFFF - (0x1UL<<CGU_VECEN_SHIFT))
#define CGU_VECEN_0                    (0x0UL<<CGU_VECEN_SHIFT)
#define CGU_VECEN_1                    (0x1UL<<CGU_VECEN_SHIFT)
#define CGU_VECEN                      (0x1UL<<CGU_VECEN_SHIFT)
#define CGU_IPPEN_SHIFT                2
#define CGU_IPPEN_FIELD                (0xFFFFFFFF - (0x1UL<<CGU_IPPEN_SHIFT))
#define CGU_IPPEN_0                    (0x0UL<<CGU_IPPEN_SHIFT)
#define CGU_IPPEN_1                    (0x1UL<<CGU_IPPEN_SHIFT)
#define CGU_IPPEN                      (0x1UL<<CGU_IPPEN_SHIFT)
#define CGU_VDEEN_SHIFT                1
#define CGU_VDEEN_FIELD                (0xFFFFFFFF - (0x1UL<<CGU_VDEEN_SHIFT))
#define CGU_VDEEN_0                    (0x0UL<<CGU_VDEEN_SHIFT)
#define CGU_VDEEN_1                    (0x1UL<<CGU_VDEEN_SHIFT)
#define CGU_VDEEN                      (0x1UL<<CGU_VDEEN_SHIFT)
#define CGU_CAMEN_SHIFT                0
#define CGU_CAMEN_FIELD                (0xFFFFFFFF - (0x1UL<<CGU_CAMEN_SHIFT))
#define CGU_CAMEN_0                    (0x0UL<<CGU_CAMEN_SHIFT)
#define CGU_CAMEN_1                    (0x1UL<<CGU_CAMEN_SHIFT)
#define CGU_CAMEN                      (0x1UL<<CGU_CAMEN_SHIFT)

/*****************************************************************************/
/* Register description for FDIV */

/* Reset value of register CGU_FDIV */
#define CGU_FDIV_VALUE                 0x2AAAAAAA

/* Bits definition for register CGU_FDIV */
#define CGU_FDIV_SHIFT                 0
#define CGU_FDIV_FIELD                 (0xFFFFFFFF - (0x7FFFFFFFUL<<CGU_FDIV_SHIFT))
#define CGU_FDIV_2AAAAAAA              (0x2AAAAAAAUL<<CGU_FDIV_SHIFT)

/*****************************************************************************/

/*****************************************************************************
* Definitions for: DMAU
*****************************************************************************/

/* Pointer on base address */
#define DMAU_BASE                      IOA(DMAU_BASE_ADDR)

/* DMAU INT_STATUS Register (32 bits) */
#define DMAU_INT_STATUS_OFFSET         0x0
#define DMAU_INT_STATUS_REG            IOA(DMAU_BASE_ADDR + DMAU_INT_STATUS_OFFSET)

/* DMAU INT_TC_STATUS Register (32 bits) */
#define DMAU_INT_TC_STATUS_OFFSET      0x4
#define DMAU_INT_TC_STATUS_REG         IOA(DMAU_BASE_ADDR + DMAU_INT_TC_STATUS_OFFSET)

/* DMAU INT_TC_CLEAR Register (32 bits) */
#define DMAU_INT_TC_CLEAR_OFFSET       0x8
#define DMAU_INT_TC_CLEAR_REG          IOA(DMAU_BASE_ADDR + DMAU_INT_TC_CLEAR_OFFSET)

/* DMAU INT_ERROR_STATUS Register (32 bits) */
#define DMAU_INT_ERROR_STATUS_OFFSET   0xC
#define DMAU_INT_ERROR_STATUS_REG      IOA(DMAU_BASE_ADDR + DMAU_INT_ERROR_STATUS_OFFSET)

/* DMAU INT_ERROR_CLEAR Register (32 bits) */
#define DMAU_INT_ERROR_CLEAR_OFFSET    0x10
#define DMAU_INT_ERROR_CLEAR_REG       IOA(DMAU_BASE_ADDR + DMAU_INT_ERROR_CLEAR_OFFSET)

/* DMAU RAW_INT_TC_STATUS Register (32 bits) */
#define DMAU_RAW_INT_TC_STATUS_OFFSET  0x14
#define DMAU_RAW_INT_TC_STATUS_REG     IOA(DMAU_BASE_ADDR + DMAU_RAW_INT_TC_STATUS_OFFSET)

/* DMAU RAW_INT_ERROR_STATUS Register (32 bits) */
#define DMAU_RAW_INT_ERROR_STATUS_OFFSET           0x18
#define DMAU_RAW_INT_ERROR_STATUS_REG  IOA(DMAU_BASE_ADDR + DMAU_RAW_INT_ERROR_STATUS_OFFSET)

/* DMAU ENBLD_CHNS Register (32 bits) */
#define DMAU_ENBLD_CHNS_OFFSET         0x1C
#define DMAU_ENBLD_CHNS_REG            IOA(DMAU_BASE_ADDR + DMAU_ENBLD_CHNS_OFFSET)

/* DMAU SOFT_BREQ Register (32 bits) */
#define DMAU_SOFT_BREQ_OFFSET          0x20
#define DMAU_SOFT_BREQ_REG             IOA(DMAU_BASE_ADDR + DMAU_SOFT_BREQ_OFFSET)

/* DMAU SOFT_SREQ Register (32 bits) */
#define DMAU_SOFT_SREQ_OFFSET          0x24
#define DMAU_SOFT_SREQ_REG             IOA(DMAU_BASE_ADDR + DMAU_SOFT_SREQ_OFFSET)

/* DMAU CONFIGURATION Register (32 bits) */
#define DMAU_CONFIGURATION_OFFSET      0x30
#define DMAU_CONFIGURATION_REG         IOA(DMAU_BASE_ADDR + DMAU_CONFIGURATION_OFFSET)

/* DMAU SYNC Register (32 bits) */
#define DMAU_SYNC_OFFSET               0x34
#define DMAU_SYNC_REG                  IOA(DMAU_BASE_ADDR + DMAU_SYNC_OFFSET)

/* DMAU C0_SRC_ADDR Register (32 bits) */
#define DMAU_C0_SRC_ADDR_OFFSET        0x100
#define DMAU_C0_SRC_ADDR_REG           IOA(DMAU_BASE_ADDR + DMAU_C0_SRC_ADDR_OFFSET)

/* DMAU C0_DEST_ADDR Register (32 bits) */
#define DMAU_C0_DEST_ADDR_OFFSET       0x104
#define DMAU_C0_DEST_ADDR_REG          IOA(DMAU_BASE_ADDR + DMAU_C0_DEST_ADDR_OFFSET)

/* DMAU C0_LLI Register (32 bits) */
#define DMAU_C0_LLI_OFFSET             0x108
#define DMAU_C0_LLI_REG                IOA(DMAU_BASE_ADDR + DMAU_C0_LLI_OFFSET)

/* DMAU C0_CONTROL Register (32 bits) */
#define DMAU_C0_CONTROL_OFFSET         0x10C
#define DMAU_C0_CONTROL_REG            IOA(DMAU_BASE_ADDR + DMAU_C0_CONTROL_OFFSET)

/* DMAU C0_CONFIGURATION Register (32 bits) */
#define DMAU_C0_CONFIGURATION_OFFSET   0x110
#define DMAU_C0_CONFIGURATION_REG      IOA(DMAU_BASE_ADDR + DMAU_C0_CONFIGURATION_OFFSET)

/* DMAU C1_SRC_ADDR Register (32 bits) */
#define DMAU_C1_SRC_ADDR_OFFSET        0x120
#define DMAU_C1_SRC_ADDR_REG           IOA(DMAU_BASE_ADDR + DMAU_C1_SRC_ADDR_OFFSET)

/* DMAU C1_DEST_ADDR Register (32 bits) */
#define DMAU_C1_DEST_ADDR_OFFSET       0x124
#define DMAU_C1_DEST_ADDR_REG          IOA(DMAU_BASE_ADDR + DMAU_C1_DEST_ADDR_OFFSET)

/* DMAU C1_LLI Register (32 bits) */
#define DMAU_C1_LLI_OFFSET             0x128
#define DMAU_C1_LLI_REG                IOA(DMAU_BASE_ADDR + DMAU_C1_LLI_OFFSET)

/* DMAU C1_CONTROL Register (32 bits) */
#define DMAU_C1_CONTROL_OFFSET         0x12C
#define DMAU_C1_CONTROL_REG            IOA(DMAU_BASE_ADDR + DMAU_C1_CONTROL_OFFSET)

/* DMAU C1_CONFIGURATION Register (32 bits) */
#define DMAU_C1_CONFIGURATION_OFFSET   0x130
#define DMAU_C1_CONFIGURATION_REG      IOA(DMAU_BASE_ADDR + DMAU_C1_CONFIGURATION_OFFSET)

/* DMAU C2_SRC_ADDR Register (32 bits) */
#define DMAU_C2_SRC_ADDR_OFFSET        0x140
#define DMAU_C2_SRC_ADDR_REG           IOA(DMAU_BASE_ADDR + DMAU_C2_SRC_ADDR_OFFSET)

/* DMAU C2_DEST_ADDR Register (32 bits) */
#define DMAU_C2_DEST_ADDR_OFFSET       0x144
#define DMAU_C2_DEST_ADDR_REG          IOA(DMAU_BASE_ADDR + DMAU_C2_DEST_ADDR_OFFSET)

/* DMAU C2_LLI Register (32 bits) */
#define DMAU_C2_LLI_OFFSET             0x148
#define DMAU_C2_LLI_REG                IOA(DMAU_BASE_ADDR + DMAU_C2_LLI_OFFSET)

/* DMAU C2_CONTROL Register (32 bits) */
#define DMAU_C2_CONTROL_OFFSET         0x14C
#define DMAU_C2_CONTROL_REG            IOA(DMAU_BASE_ADDR + DMAU_C2_CONTROL_OFFSET)

/* DMAU C2_CONFIGURATION Register (32 bits) */
#define DMAU_C2_CONFIGURATION_OFFSET   0x150
#define DMAU_C2_CONFIGURATION_REG      IOA(DMAU_BASE_ADDR + DMAU_C2_CONFIGURATION_OFFSET)

/* DMAU C3_SRC_ADDR Register (32 bits) */
#define DMAU_C3_SRC_ADDR_OFFSET        0x160
#define DMAU_C3_SRC_ADDR_REG           IOA(DMAU_BASE_ADDR + DMAU_C3_SRC_ADDR_OFFSET)

/* DMAU C3_DEST_ADDR Register (32 bits) */
#define DMAU_C3_DEST_ADDR_OFFSET       0x164
#define DMAU_C3_DEST_ADDR_REG          IOA(DMAU_BASE_ADDR + DMAU_C3_DEST_ADDR_OFFSET)

/* DMAU C3_LLI Register (32 bits) */
#define DMAU_C3_LLI_OFFSET             0x168
#define DMAU_C3_LLI_REG                IOA(DMAU_BASE_ADDR + DMAU_C3_LLI_OFFSET)

/* DMAU C3_CONTROL Register (32 bits) */
#define DMAU_C3_CONTROL_OFFSET         0x16C
#define DMAU_C3_CONTROL_REG            IOA(DMAU_BASE_ADDR + DMAU_C3_CONTROL_OFFSET)

/* DMAU C3_CONFIGURATION Register (32 bits) */
#define DMAU_C3_CONFIGURATION_OFFSET   0x170
#define DMAU_C3_CONFIGURATION_REG      IOA(DMAU_BASE_ADDR + DMAU_C3_CONFIGURATION_OFFSET)

/* DMAU C4_SRC_ADDR Register (32 bits) */
#define DMAU_C4_SRC_ADDR_OFFSET        0x180
#define DMAU_C4_SRC_ADDR_REG           IOA(DMAU_BASE_ADDR + DMAU_C4_SRC_ADDR_OFFSET)

/* DMAU C4_DEST_ADDR Register (32 bits) */
#define DMAU_C4_DEST_ADDR_OFFSET       0x184
#define DMAU_C4_DEST_ADDR_REG          IOA(DMAU_BASE_ADDR + DMAU_C4_DEST_ADDR_OFFSET)

/* DMAU C4_LLI Register (32 bits) */
#define DMAU_C4_LLI_OFFSET             0x188
#define DMAU_C4_LLI_REG                IOA(DMAU_BASE_ADDR + DMAU_C4_LLI_OFFSET)

/* DMAU C4_CONTROL Register (32 bits) */
#define DMAU_C4_CONTROL_OFFSET         0x18C
#define DMAU_C4_CONTROL_REG            IOA(DMAU_BASE_ADDR + DMAU_C4_CONTROL_OFFSET)

/* DMAU C4_CONFIGURATION Register (32 bits) */
#define DMAU_C4_CONFIGURATION_OFFSET   0x190
#define DMAU_C4_CONFIGURATION_REG      IOA(DMAU_BASE_ADDR + DMAU_C4_CONFIGURATION_OFFSET)

/* DMAU C5_SRC_ADDR Register (32 bits) */
#define DMAU_C5_SRC_ADDR_OFFSET        0x1A0
#define DMAU_C5_SRC_ADDR_REG           IOA(DMAU_BASE_ADDR + DMAU_C5_SRC_ADDR_OFFSET)

/* DMAU C5_DEST_ADDR Register (32 bits) */
#define DMAU_C5_DEST_ADDR_OFFSET       0x1A4
#define DMAU_C5_DEST_ADDR_REG          IOA(DMAU_BASE_ADDR + DMAU_C5_DEST_ADDR_OFFSET)

/* DMAU C5_LLI Register (32 bits) */
#define DMAU_C5_LLI_OFFSET             0x1A8
#define DMAU_C5_LLI_REG                IOA(DMAU_BASE_ADDR + DMAU_C5_LLI_OFFSET)

/* DMAU C5_CONTROL Register (32 bits) */
#define DMAU_C5_CONTROL_OFFSET         0x1AC
#define DMAU_C5_CONTROL_REG            IOA(DMAU_BASE_ADDR + DMAU_C5_CONTROL_OFFSET)

/* DMAU C5_CONFIGURATION Register (32 bits) */
#define DMAU_C5_CONFIGURATION_OFFSET   0x1B0
#define DMAU_C5_CONFIGURATION_REG      IOA(DMAU_BASE_ADDR + DMAU_C5_CONFIGURATION_OFFSET)

/* DMAU C6_SRC_ADDR Register (32 bits) */
#define DMAU_C6_SRC_ADDR_OFFSET        0x1C0
#define DMAU_C6_SRC_ADDR_REG           IOA(DMAU_BASE_ADDR + DMAU_C6_SRC_ADDR_OFFSET)

/* DMAU C6_DEST_ADDR Register (32 bits) */
#define DMAU_C6_DEST_ADDR_OFFSET       0x1C4
#define DMAU_C6_DEST_ADDR_REG          IOA(DMAU_BASE_ADDR + DMAU_C6_DEST_ADDR_OFFSET)

/* DMAU C6_LLI Register (32 bits) */
#define DMAU_C6_LLI_OFFSET             0x1C8
#define DMAU_C6_LLI_REG                IOA(DMAU_BASE_ADDR + DMAU_C6_LLI_OFFSET)

/* DMAU C6_CONTROL Register (32 bits) */
#define DMAU_C6_CONTROL_OFFSET         0x1CC
#define DMAU_C6_CONTROL_REG            IOA(DMAU_BASE_ADDR + DMAU_C6_CONTROL_OFFSET)

/* DMAU C6_CONFIGURATION Register (32 bits) */
#define DMAU_C6_CONFIGURATION_OFFSET   0x1D0
#define DMAU_C6_CONFIGURATION_REG      IOA(DMAU_BASE_ADDR + DMAU_C6_CONFIGURATION_OFFSET)

/* DMAU C7_SRC_ADDR Register (32 bits) */
#define DMAU_C7_SRC_ADDR_OFFSET        0x1E0
#define DMAU_C7_SRC_ADDR_REG           IOA(DMAU_BASE_ADDR + DMAU_C7_SRC_ADDR_OFFSET)

/* DMAU C7_DEST_ADDR Register (32 bits) */
#define DMAU_C7_DEST_ADDR_OFFSET       0x1E4
#define DMAU_C7_DEST_ADDR_REG          IOA(DMAU_BASE_ADDR + DMAU_C7_DEST_ADDR_OFFSET)

/* DMAU C7_LLI Register (32 bits) */
#define DMAU_C7_LLI_OFFSET             0x1E8
#define DMAU_C7_LLI_REG                IOA(DMAU_BASE_ADDR + DMAU_C7_LLI_OFFSET)

/* DMAU C7_CONTROL Register (32 bits) */
#define DMAU_C7_CONTROL_OFFSET         0x1EC
#define DMAU_C7_CONTROL_REG            IOA(DMAU_BASE_ADDR + DMAU_C7_CONTROL_OFFSET)

/* DMAU C7_CONFIGURATION Register (32 bits) */
#define DMAU_C7_CONFIGURATION_OFFSET   0x1F0
#define DMAU_C7_CONFIGURATION_REG      IOA(DMAU_BASE_ADDR + DMAU_C7_CONFIGURATION_OFFSET)

/* DMAU C8_SRC_ADDR Register (32 bits) */
#define DMAU_C8_SRC_ADDR_OFFSET        0x200
#define DMAU_C8_SRC_ADDR_REG           IOA(DMAU_BASE_ADDR + DMAU_C8_SRC_ADDR_OFFSET)

/* DMAU C8_DEST_ADDR Register (32 bits) */
#define DMAU_C8_DEST_ADDR_OFFSET       0x204
#define DMAU_C8_DEST_ADDR_REG          IOA(DMAU_BASE_ADDR + DMAU_C8_DEST_ADDR_OFFSET)

/* DMAU C8_LLI Register (32 bits) */
#define DMAU_C8_LLI_OFFSET             0x208
#define DMAU_C8_LLI_REG                IOA(DMAU_BASE_ADDR + DMAU_C8_LLI_OFFSET)

/* DMAU C8_CONTROL Register (32 bits) */
#define DMAU_C8_CONTROL_OFFSET         0x20C
#define DMAU_C8_CONTROL_REG            IOA(DMAU_BASE_ADDR + DMAU_C8_CONTROL_OFFSET)

/* DMAU C8_CONFIGURATION Register (32 bits) */
#define DMAU_C8_CONFIGURATION_OFFSET   0x210
#define DMAU_C8_CONFIGURATION_REG      IOA(DMAU_BASE_ADDR + DMAU_C8_CONFIGURATION_OFFSET)

/* DMAU C9_SRC_ADDR Register (32 bits) */
#define DMAU_C9_SRC_ADDR_OFFSET        0x220
#define DMAU_C9_SRC_ADDR_REG           IOA(DMAU_BASE_ADDR + DMAU_C9_SRC_ADDR_OFFSET)

/* DMAU C9_DEST_ADDR Register (32 bits) */
#define DMAU_C9_DEST_ADDR_OFFSET       0x224
#define DMAU_C9_DEST_ADDR_REG          IOA(DMAU_BASE_ADDR + DMAU_C9_DEST_ADDR_OFFSET)

/* DMAU C9_LLI Register (32 bits) */
#define DMAU_C9_LLI_OFFSET             0x228
#define DMAU_C9_LLI_REG                IOA(DMAU_BASE_ADDR + DMAU_C9_LLI_OFFSET)

/* DMAU C9_CONTROL Register (32 bits) */
#define DMAU_C9_CONTROL_OFFSET         0x22C
#define DMAU_C9_CONTROL_REG            IOA(DMAU_BASE_ADDR + DMAU_C9_CONTROL_OFFSET)

/* DMAU C9_CONFIGURATION Register (32 bits) */
#define DMAU_C9_CONFIGURATION_OFFSET   0x230
#define DMAU_C9_CONFIGURATION_REG      IOA(DMAU_BASE_ADDR + DMAU_C9_CONFIGURATION_OFFSET)

/* DMAU C10_SRC_ADDR Register (32 bits) */
#define DMAU_C10_SRC_ADDR_OFFSET       0x240
#define DMAU_C10_SRC_ADDR_REG          IOA(DMAU_BASE_ADDR + DMAU_C10_SRC_ADDR_OFFSET)

/* DMAU C10_DEST_ADDR Register (32 bits) */
#define DMAU_C10_DEST_ADDR_OFFSET      0x244
#define DMAU_C10_DEST_ADDR_REG         IOA(DMAU_BASE_ADDR + DMAU_C10_DEST_ADDR_OFFSET)

/* DMAU C10_LLI Register (32 bits) */
#define DMAU_C10_LLI_OFFSET            0x248
#define DMAU_C10_LLI_REG               IOA(DMAU_BASE_ADDR + DMAU_C10_LLI_OFFSET)

/* DMAU C10_CONTROL Register (32 bits) */
#define DMAU_C10_CONTROL_OFFSET        0x24C
#define DMAU_C10_CONTROL_REG           IOA(DMAU_BASE_ADDR + DMAU_C10_CONTROL_OFFSET)

/* DMAU C10_CONFIGURATION Register (32 bits) */
#define DMAU_C10_CONFIGURATION_OFFSET  0x250
#define DMAU_C10_CONFIGURATION_REG     IOA(DMAU_BASE_ADDR + DMAU_C10_CONFIGURATION_OFFSET)

/* DMAU C11_SRC_ADDR Register (32 bits) */
#define DMAU_C11_SRC_ADDR_OFFSET       0x260
#define DMAU_C11_SRC_ADDR_REG          IOA(DMAU_BASE_ADDR + DMAU_C11_SRC_ADDR_OFFSET)

/* DMAU C11_DEST_ADDR Register (32 bits) */
#define DMAU_C11_DEST_ADDR_OFFSET      0x264
#define DMAU_C11_DEST_ADDR_REG         IOA(DMAU_BASE_ADDR + DMAU_C11_DEST_ADDR_OFFSET)

/* DMAU C11_LLI Register (32 bits) */
#define DMAU_C11_LLI_OFFSET            0x268
#define DMAU_C11_LLI_REG               IOA(DMAU_BASE_ADDR + DMAU_C11_LLI_OFFSET)

/* DMAU C11_CONTROL Register (32 bits) */
#define DMAU_C11_CONTROL_OFFSET        0x26C
#define DMAU_C11_CONTROL_REG           IOA(DMAU_BASE_ADDR + DMAU_C11_CONTROL_OFFSET)

/* DMAU C11_CONFIGURATION Register (32 bits) */
#define DMAU_C11_CONFIGURATION_OFFSET  0x270
#define DMAU_C11_CONFIGURATION_REG     IOA(DMAU_BASE_ADDR + DMAU_C11_CONFIGURATION_OFFSET)

/* Register description for INT_STATUS */

/* Reset value of register DMAU_INT_STATUS */
#define DMAU_INT_STATUS_VALUE          0x0

/* Bits definition for register DMAU_INT_STATUS */
#define DMAU_INTSTATUS_SHIFT           0
#define DMAU_INTSTATUS_FIELD           (0xFFFFFFFF - (0xFFFUL<<DMAU_INTSTATUS_SHIFT))
#define DMAU_INTSTATUS_0               (0x0UL<<DMAU_INTSTATUS_SHIFT)
#define DMAU_INTSTATUS_1               (0x1UL<<DMAU_INTSTATUS_SHIFT)

/*****************************************************************************/
/* Register description for INT_TC_STATUS */

/* Reset value of register DMAU_INT_TC_STATUS */
#define DMAU_INT_TC_STATUS_VALUE       0x0

/* Bits definition for register DMAU_INT_TC_STATUS */
#define DMAU_INTSTATUS_SHIFT           0
#define DMAU_INTSTATUS_FIELD           (0xFFFFFFFF - (0xFFFUL<<DMAU_INTSTATUS_SHIFT))
#define DMAU_INTSTATUS_0               (0x0UL<<DMAU_INTSTATUS_SHIFT)
#define DMAU_INTSTATUS_1               (0x1UL<<DMAU_INTSTATUS_SHIFT)

/*****************************************************************************/
/* Register description for INT_TC_CLEAR */

/* Reset value of register DMAU_INT_TC_CLEAR */
#define DMAU_INT_TC_CLEAR_VALUE        0x0

/* Bits definition for register DMAU_INT_TC_CLEAR */
#define DMAU_INTTCCLEAR_SHIFT          0
#define DMAU_INTTCCLEAR_FIELD          (0xFFFFFFFF - (0xFFFUL<<DMAU_INTTCCLEAR_SHIFT))
#define DMAU_INTTCCLEAR_0              (0x0UL<<DMAU_INTTCCLEAR_SHIFT)
#define DMAU_INTTCCLEAR_1              (0x1UL<<DMAU_INTTCCLEAR_SHIFT)

/*****************************************************************************/
/* Register description for INT_ERROR_STATUS */

/* Reset value of register DMAU_INT_ERROR_STATUS */
#define DMAU_INT_ERROR_STATUS_VALUE    0x0

/* Bits definition for register DMAU_INT_ERROR_STATUS */
#define DMAU_INTERRSTATUS_SHIFT        0
#define DMAU_INTERRSTATUS_FIELD        (0xFFFFFFFF - (0xFFFUL<<DMAU_INTERRSTATUS_SHIFT))
#define DMAU_INTERRSTATUS_0            (0x0UL<<DMAU_INTERRSTATUS_SHIFT)
#define DMAU_INTERRSTATUS_1            (0x1UL<<DMAU_INTERRSTATUS_SHIFT)

/*****************************************************************************/
/* Register description for INT_ERROR_CLEAR */

/* Reset value of register DMAU_INT_ERROR_CLEAR */
#define DMAU_INT_ERROR_CLEAR_VALUE     0x0

/* Bits definition for register DMAU_INT_ERROR_CLEAR */
#define DMAU_INTERRCLR_SHIFT           0
#define DMAU_INTERRCLR_FIELD           (0xFFFFFFFF - (0xFFFUL<<DMAU_INTERRCLR_SHIFT))
#define DMAU_INTERRCLR_0               (0x0UL<<DMAU_INTERRCLR_SHIFT)
#define DMAU_INTERRCLR_1               (0x1UL<<DMAU_INTERRCLR_SHIFT)

/*****************************************************************************/
/* Register description for RAW_INT_TC_STATUS */

/* Reset value of register DMAU_RAW_INT_TC_STATUS */
#define DMAU_RAW_INT_TC_STATUS_VALUE   0x0

/* Bits definition for register DMAU_RAW_INT_TC_STATUS */
#define DMAU_RAWINTTCSTATUS_SHIFT      0
#define DMAU_RAWINTTCSTATUS_FIELD      (0xFFFFFFFF - (0xFFFUL<<DMAU_RAWINTTCSTATUS_SHIFT))
#define DMAU_RAWINTTCSTATUS_0          (0x0UL<<DMAU_RAWINTTCSTATUS_SHIFT)
#define DMAU_RAWINTTCSTATUS_1          (0x1UL<<DMAU_RAWINTTCSTATUS_SHIFT)

/*****************************************************************************/
/* Register description for RAW_INT_ERROR_STATUS */

/* Reset value of register DMAU_RAW_INT_ERROR_STATUS */
#define DMAU_RAW_INT_ERROR_STATUS_VALUE            0x0

/* Bits definition for register DMAU_RAW_INT_ERROR_STATUS */
#define DMAU_RAWINTERRORSTATUS_SHIFT   0
#define DMAU_RAWINTERRORSTATUS_FIELD   (0xFFFFFFFF - (0xFFFUL<<DMAU_RAWINTERRORSTATUS_SHIFT))
#define DMAU_RAWINTERRORSTATUS_0       (0x0UL<<DMAU_RAWINTERRORSTATUS_SHIFT)
#define DMAU_RAWINTERRORSTATUS_1       (0x1UL<<DMAU_RAWINTERRORSTATUS_SHIFT)

/*****************************************************************************/
/* Register description for ENBLD_CHNS */

/* Reset value of register DMAU_ENBLD_CHNS */
#define DMAU_ENBLD_CHNS_VALUE          0x0

/* Bits definition for register DMAU_ENBLD_CHNS */
#define DMAU_ENABLEDCHANNELS_SHIFT     0
#define DMAU_ENABLEDCHANNELS_FIELD     (0xFFFFFFFF - (0xFFFUL<<DMAU_ENABLEDCHANNELS_SHIFT))
#define DMAU_ENABLEDCHANNELS_0         (0x0UL<<DMAU_ENABLEDCHANNELS_SHIFT)
#define DMAU_ENABLEDCHANNELS_1         (0x1UL<<DMAU_ENABLEDCHANNELS_SHIFT)

/*****************************************************************************/
/* Register description for SOFT_BREQ */

/* Reset value of register DMAU_SOFT_BREQ */
#define DMAU_SOFT_BREQ_VALUE           0x0

/* Bits definition for register DMAU_SOFT_BREQ */
#define DMAU_SOFTBREQ_SHIFT            0
#define DMAU_SOFTBREQ_FIELD            (0xFFFFFFFF - (0x7FFFFFFFUL<<DMAU_SOFTBREQ_SHIFT))
#define DMAU_SOFTBREQ_SOFTWARE_BURST_REQUEST       (0x0UL<<DMAU_SOFTBREQ_SHIFT)

/*****************************************************************************/
/* Register description for SOFT_SREQ */

/* Reset value of register DMAU_SOFT_SREQ */
#define DMAU_SOFT_SREQ_VALUE           0x0

/* Bits definition for register DMAU_SOFT_SREQ */
#define DMAU_SOFTSREQ_SHIFT            0
#define DMAU_SOFTSREQ_FIELD            (0xFFFFFFFF - (0x7FFFFFFFUL<<DMAU_SOFTSREQ_SHIFT))
#define DMAU_SOFTSREQ_SOFTWARE_SINGLE_REQUEST      (0x0UL<<DMAU_SOFTSREQ_SHIFT)

/*****************************************************************************/
/* Register description for CONFIGURATION */

/* Reset value of register DMAU_CONFIGURATION */
#define DMAU_CONFIGURATION_VALUE       0x0

/* Bits definition for register DMAU_CONFIGURATION */
#define DMAU_ENDIAN1_SHIFT             2
#define DMAU_ENDIAN1_FIELD             (0xFFFFFFFF - (0x1UL<<DMAU_ENDIAN1_SHIFT))
#define DMAU_ENDIAN1_LITTLE_ENDIAN     (0x0UL<<DMAU_ENDIAN1_SHIFT)
#define DMAU_ENDIAN1_BIG_ENDIAN        (0x1UL<<DMAU_ENDIAN1_SHIFT)
#define DMAU_ENDIAN1                   (0x1UL<<DMAU_ENDIAN1_SHIFT)
#define DMAU_ENDIAN0_SHIFT             1
#define DMAU_ENDIAN0_FIELD             (0xFFFFFFFF - (0x1UL<<DMAU_ENDIAN0_SHIFT))
#define DMAU_ENDIAN0_LITTLE_ENDIAN     (0x0UL<<DMAU_ENDIAN0_SHIFT)
#define DMAU_ENDIAN0_BIG_ENDIAN        (0x1UL<<DMAU_ENDIAN0_SHIFT)
#define DMAU_ENDIAN0                   (0x1UL<<DMAU_ENDIAN0_SHIFT)
#define DMAU_E_SHIFT                   0
#define DMAU_E_FIELD                   (0xFFFFFFFF - (0x1UL<<DMAU_E_SHIFT))
#define DMAU_E_DISABLED                (0x0UL<<DMAU_E_SHIFT)
#define DMAU_E_ENABLED                 (0x1UL<<DMAU_E_SHIFT)
#define DMAU_E                         (0x1UL<<DMAU_E_SHIFT)

/*****************************************************************************/
/* Register description for SYNC */

/* Reset value of register DMAU_SYNC */
#define DMAU_SYNC_VALUE                0x0

/* Bits definition for register DMAU_SYNC */
#define DMAU_DMASYNC_SHIFT             0
#define DMAU_DMASYNC_FIELD             (0xFFFFFFFF - (0x7FFFFFFFUL<<DMAU_DMASYNC_SHIFT))
#define DMAU_DMASYNC_0                 (0x0UL<<DMAU_DMASYNC_SHIFT)
#define DMAU_DMASYNC_1                 (0x1UL<<DMAU_DMASYNC_SHIFT)

/*****************************************************************************/
/* Register description for C[11:0]_SRC_ADDR */

/* Reset value of register DMAU_C[11:0]_SRC_ADDR */
#define DMAU_C0_SRC_ADDR_VALUE         0x0
#define DMAU_C1_SRC_ADDR_VALUE         0x0
#define DMAU_C2_SRC_ADDR_VALUE         0x0
#define DMAU_C3_SRC_ADDR_VALUE         0x0
#define DMAU_C4_SRC_ADDR_VALUE         0x0
#define DMAU_C5_SRC_ADDR_VALUE         0x0
#define DMAU_C6_SRC_ADDR_VALUE         0x0
#define DMAU_C7_SRC_ADDR_VALUE         0x0
#define DMAU_C8_SRC_ADDR_VALUE         0x0
#define DMAU_C9_SRC_ADDR_VALUE         0x0
#define DMAU_C10_SRC_ADDR_VALUE        0x0
#define DMAU_C11_SRC_ADDR_VALUE        0x0

/* Bits definition for register DMAU_C[11:0]_SRC_ADDR */
#define DMAU_SRCADDR_SHIFT             0
#define DMAU_SRCADDR_FIELD             (0xFFFFFFFF - (0x7FFFFFFFUL<<DMAU_SRCADDR_SHIFT))
#define DMAU_SRCADDR_DMA_SOURCE_ADDRESS            (0x0UL<<DMAU_SRCADDR_SHIFT)

/*****************************************************************************/
/* Register description for C[11:0]_DEST_ADDR */

/* Reset value of register DMAU_C[11:0]_DEST_ADDR */
#define DMAU_C0_DEST_ADDR_VALUE        0x0
#define DMAU_C1_DEST_ADDR_VALUE        0x0
#define DMAU_C2_DEST_ADDR_VALUE        0x0
#define DMAU_C3_DEST_ADDR_VALUE        0x0
#define DMAU_C4_DEST_ADDR_VALUE        0x0
#define DMAU_C5_DEST_ADDR_VALUE        0x0
#define DMAU_C6_DEST_ADDR_VALUE        0x0
#define DMAU_C7_DEST_ADDR_VALUE        0x0
#define DMAU_C8_DEST_ADDR_VALUE        0x0
#define DMAU_C9_DEST_ADDR_VALUE        0x0
#define DMAU_C10_DEST_ADDR_VALUE       0x0
#define DMAU_C11_DEST_ADDR_VALUE       0x0

/* Bits definition for register DMAU_C[11:0]_DEST_ADDR */
#define DMAU_DESTADDR_SHIFT            0
#define DMAU_DESTADDR_FIELD            (0xFFFFFFFF - (0x7FFFFFFFUL<<DMAU_DESTADDR_SHIFT))
#define DMAU_DESTADDR_DMA_DESTINATION_ADDRESS      (0x0UL<<DMAU_DESTADDR_SHIFT)

/*****************************************************************************/
/* Register description for C[11:0]_LLI */

/* Reset value of register DMAU_C[11:0]_LLI */
#define DMAU_C0_LLI_VALUE              0x0
#define DMAU_C1_LLI_VALUE              0x0
#define DMAU_C2_LLI_VALUE              0x0
#define DMAU_C3_LLI_VALUE              0x0
#define DMAU_C4_LLI_VALUE              0x0
#define DMAU_C5_LLI_VALUE              0x0
#define DMAU_C6_LLI_VALUE              0x0
#define DMAU_C7_LLI_VALUE              0x0
#define DMAU_C8_LLI_VALUE              0x0
#define DMAU_C9_LLI_VALUE              0x0
#define DMAU_C10_LLI_VALUE             0x0
#define DMAU_C11_LLI_VALUE             0x0

/* Bits definition for register DMAU_C[11:0]_LLI */
#define DMAU_LLI_SHIFT                 2
#define DMAU_LLI_FIELD                 (0xFFFFFFFF - (0x3FFFFFFFUL<<DMAU_LLI_SHIFT))
#define DMAU_LLI_LINKED_LIST_ITEM      (0x0UL<<DMAU_LLI_SHIFT)
#define DMAU_LM_SHIFT                  0
#define DMAU_LM_FIELD                  (0xFFFFFFFF - (0x1UL<<DMAU_LM_SHIFT))
#define DMAU_LM_AHB1                   (0x0UL<<DMAU_LM_SHIFT)
#define DMAU_LM_AHB2                   (0x1UL<<DMAU_LM_SHIFT)
#define DMAU_LM                        (0x1UL<<DMAU_LM_SHIFT)

/*****************************************************************************/
/* Register description for C[11:0]_CONTROL */

/* Reset value of register DMAU_C[11:0]_CONTROL */
#define DMAU_C0_CONTROL_VALUE          0x0
#define DMAU_C1_CONTROL_VALUE          0x0
#define DMAU_C2_CONTROL_VALUE          0x0
#define DMAU_C3_CONTROL_VALUE          0x0
#define DMAU_C4_CONTROL_VALUE          0x0
#define DMAU_C5_CONTROL_VALUE          0x0
#define DMAU_C6_CONTROL_VALUE          0x0
#define DMAU_C7_CONTROL_VALUE          0x0
#define DMAU_C8_CONTROL_VALUE          0x0
#define DMAU_C9_CONTROL_VALUE          0x0
#define DMAU_C10_CONTROL_VALUE         0x0
#define DMAU_C11_CONTROL_VALUE         0x0

/* Bits definition for register DMAU_C[11:0]_CONTROL */
#define DMAU_I_SHIFT                   31
#define DMAU_I_FIELD                   (0xFFFFFFFF - (0x1UL<<DMAU_I_SHIFT))
#define DMAU_I_DISABLED                (0x0UL<<DMAU_I_SHIFT)
#define DMAU_I_ENABLED                 (0x1UL<<DMAU_I_SHIFT)
#define DMAU_I                         (0x1UL<<DMAU_I_SHIFT)
#define DMAU_PROT_SHIFT                28
#define DMAU_PROT_FIELD                (0xFFFFFFFF - (0x7UL<<DMAU_PROT_SHIFT))
#define DMAU_PROT_PROTECTION_BITS      (0x0UL<<DMAU_PROT_SHIFT)
#define DMAU_DI_SHIFT                  27
#define DMAU_DI_FIELD                  (0xFFFFFFFF - (0x1UL<<DMAU_DI_SHIFT))
#define DMAU_DI_DISABLED               (0x0UL<<DMAU_DI_SHIFT)
#define DMAU_DI_ENABLED                (0x1UL<<DMAU_DI_SHIFT)
#define DMAU_DI                        (0x1UL<<DMAU_DI_SHIFT)
#define DMAU_SI_SHIFT                  26
#define DMAU_SI_FIELD                  (0xFFFFFFFF - (0x1UL<<DMAU_SI_SHIFT))
#define DMAU_SI_DISABLED               (0x0UL<<DMAU_SI_SHIFT)
#define DMAU_SI_ENABLED                (0x1UL<<DMAU_SI_SHIFT)
#define DMAU_SI                        (0x1UL<<DMAU_SI_SHIFT)
#define DMAU_D_SHIFT                   25
#define DMAU_D_FIELD                   (0xFFFFFFFF - (0x1UL<<DMAU_D_SHIFT))
#define DMAU_D_AHB1                    (0x0UL<<DMAU_D_SHIFT)
#define DMAU_D_AHB2                    (0x1UL<<DMAU_D_SHIFT)
#define DMAU_D                         (0x1UL<<DMAU_D_SHIFT)
#define DMAU_S_SHIFT                   24
#define DMAU_S_FIELD                   (0xFFFFFFFF - (0x1UL<<DMAU_S_SHIFT))
#define DMAU_S_AHB1                    (0x0UL<<DMAU_S_SHIFT)
#define DMAU_S_AHB2                    (0x1UL<<DMAU_S_SHIFT)
#define DMAU_S                         (0x1UL<<DMAU_S_SHIFT)
#define DMAU_DWIDTH_SHIFT              21
#define DMAU_DWIDTH_FIELD              (0xFFFFFFFF - (0x7UL<<DMAU_DWIDTH_SHIFT))
#define DMAU_DWIDTH_BYTE_8             (0x0UL<<DMAU_DWIDTH_SHIFT)
#define DMAU_DWIDTH_HALFWORD_16        (0x1UL<<DMAU_DWIDTH_SHIFT)
#define DMAU_DWIDTH_WORD_32            (0x2UL<<DMAU_DWIDTH_SHIFT)
#define DMAU_SWIDTH_SHIFT              18
#define DMAU_SWIDTH_FIELD              (0xFFFFFFFF - (0x7UL<<DMAU_SWIDTH_SHIFT))
#define DMAU_SWIDTH_BYTE_8             (0x0UL<<DMAU_SWIDTH_SHIFT)
#define DMAU_SWIDTH_HALFWORD_16        (0x1UL<<DMAU_SWIDTH_SHIFT)
#define DMAU_SWIDTH_WORD_32            (0x2UL<<DMAU_SWIDTH_SHIFT)
#define DMAU_DBSIZE_SHIFT              15
#define DMAU_DBSIZE_FIELD              (0xFFFFFFFF - (0x7UL<<DMAU_DBSIZE_SHIFT))
#define DMAU_DBSIZE_1                  (0x0UL<<DMAU_DBSIZE_SHIFT)
#define DMAU_DBSIZE_4                  (0x1UL<<DMAU_DBSIZE_SHIFT)
#define DMAU_DBSIZE_8                  (0x2UL<<DMAU_DBSIZE_SHIFT)
#define DMAU_DBSIZE_16                 (0x3UL<<DMAU_DBSIZE_SHIFT)
#define DMAU_DBSIZE_32                 (0x4UL<<DMAU_DBSIZE_SHIFT)
#define DMAU_DBSIZE_64                 (0x5UL<<DMAU_DBSIZE_SHIFT)
#define DMAU_DBSIZE_128                (0x6UL<<DMAU_DBSIZE_SHIFT)
#define DMAU_DBSIZE_256                (0x7UL<<DMAU_DBSIZE_SHIFT)
#define DMAU_SBSIZE_SHIFT              12
#define DMAU_SBSIZE_FIELD              (0xFFFFFFFF - (0x7UL<<DMAU_SBSIZE_SHIFT))
#define DMAU_SBSIZE_1                  (0x0UL<<DMAU_SBSIZE_SHIFT)
#define DMAU_SBSIZE_4                  (0x1UL<<DMAU_SBSIZE_SHIFT)
#define DMAU_SBSIZE_8                  (0x2UL<<DMAU_SBSIZE_SHIFT)
#define DMAU_SBSIZE_16                 (0x3UL<<DMAU_SBSIZE_SHIFT)
#define DMAU_SBSIZE_32                 (0x4UL<<DMAU_SBSIZE_SHIFT)
#define DMAU_SBSIZE_64                 (0x5UL<<DMAU_SBSIZE_SHIFT)
#define DMAU_SBSIZE_128                (0x6UL<<DMAU_SBSIZE_SHIFT)
#define DMAU_SBSIZE_256                (0x7UL<<DMAU_SBSIZE_SHIFT)
#define DMAU_TRANSFERSIZE_SHIFT        0
#define DMAU_TRANSFERSIZE_FIELD        (0xFFFFFFFF - (0xFFFUL<<DMAU_TRANSFERSIZE_SHIFT))
#define DMAU_TRANSFERSIZE_TRANSFER_SIZE            (0x0UL<<DMAU_TRANSFERSIZE_SHIFT)

/*****************************************************************************/
/* Register description for C[11:0]_CONFIGURATION */

/* Reset value of register DMAU_C[11:0]_CONFIGURATION */
#define DMAU_C0_CONFIGURATION_VALUE    0x0
#define DMAU_C1_CONFIGURATION_VALUE    0x0
#define DMAU_C2_CONFIGURATION_VALUE    0x0
#define DMAU_C3_CONFIGURATION_VALUE    0x0
#define DMAU_C4_CONFIGURATION_VALUE    0x0
#define DMAU_C5_CONFIGURATION_VALUE    0x0
#define DMAU_C6_CONFIGURATION_VALUE    0x0
#define DMAU_C7_CONFIGURATION_VALUE    0x0
#define DMAU_C8_CONFIGURATION_VALUE    0x0
#define DMAU_C9_CONFIGURATION_VALUE    0x0
#define DMAU_C10_CONFIGURATION_VALUE   0x0
#define DMAU_C11_CONFIGURATION_VALUE   0x0

/* Bits definition for register DMAU_C[11:0]_CONFIGURATION */
#define DMAU_H_SHIFT                   18
#define DMAU_H_FIELD                   (0xFFFFFFFF - (0x1UL<<DMAU_H_SHIFT))
#define DMAU_H_DISABLED                (0x0UL<<DMAU_H_SHIFT)
#define DMAU_H_ENABLED                 (0x1UL<<DMAU_H_SHIFT)
#define DMAU_H                         (0x1UL<<DMAU_H_SHIFT)
#define DMAU_A_SHIFT                   17
#define DMAU_A_FIELD                   (0xFFFFFFFF - (0x1UL<<DMAU_A_SHIFT))
#define DMAU_A_0                       (0x0UL<<DMAU_A_SHIFT)
#define DMAU_A_1                       (0x1UL<<DMAU_A_SHIFT)
#define DMAU_A                         (0x1UL<<DMAU_A_SHIFT)
#define DMAU_L_SHIFT                   16
#define DMAU_L_FIELD                   (0xFFFFFFFF - (0x1UL<<DMAU_L_SHIFT))
#define DMAU_L_DISABLED                (0x0UL<<DMAU_L_SHIFT)
#define DMAU_L_ENABLED                 (0x1UL<<DMAU_L_SHIFT)
#define DMAU_L                         (0x1UL<<DMAU_L_SHIFT)
#define DMAU_ITC_SHIFT                 15
#define DMAU_ITC_FIELD                 (0xFFFFFFFF - (0x1UL<<DMAU_ITC_SHIFT))
#define DMAU_ITC_DISABLED              (0x0UL<<DMAU_ITC_SHIFT)
#define DMAU_ITC_ENABLED               (0x1UL<<DMAU_ITC_SHIFT)
#define DMAU_ITC                       (0x1UL<<DMAU_ITC_SHIFT)
#define DMAU_IE_SHIFT                  14
#define DMAU_IE_FIELD                  (0xFFFFFFFF - (0x1UL<<DMAU_IE_SHIFT))
#define DMAU_IE_DISABLED               (0x0UL<<DMAU_IE_SHIFT)
#define DMAU_IE_ENABLED                (0x1UL<<DMAU_IE_SHIFT)
#define DMAU_IE                        (0x1UL<<DMAU_IE_SHIFT)
#define DMAU_FLOWCNTRL_SHIFT           11
#define DMAU_FLOWCNTRL_FIELD           (0xFFFFFFFF - (0x7UL<<DMAU_FLOWCNTRL_SHIFT))
#define DMAU_FLOWCNTRL_M2M_NO_CTRL     (0x0UL<<DMAU_FLOWCNTRL_SHIFT)
#define DMAU_FLOWCNTRL_M2P_NO_CTRL     (0x1UL<<DMAU_FLOWCNTRL_SHIFT)
#define DMAU_FLOWCNTRL_P2M_NO_CTRL     (0x2UL<<DMAU_FLOWCNTRL_SHIFT)
#define DMAU_FLOWCNTRL_P2P_NO_CTRL     (0x3UL<<DMAU_FLOWCNTRL_SHIFT)
#define DMAU_FLOWCNTRL_P2P_DST_CTRL    (0x4UL<<DMAU_FLOWCNTRL_SHIFT)
#define DMAU_FLOWCNTRL_M2P_P_CTRL      (0x5UL<<DMAU_FLOWCNTRL_SHIFT)
#define DMAU_FLOWCNTRL_P2M_P_CTRL      (0x6UL<<DMAU_FLOWCNTRL_SHIFT)
#define DMAU_FLOWCNTRL_P2P_SRC_CTRL    (0x7UL<<DMAU_FLOWCNTRL_SHIFT)
#define DMAU_DESTPERIPH_SHIFT          6
#define DMAU_DESTPERIPH_FIELD          (0xFFFFFFFF - (0x1FUL<<DMAU_DESTPERIPH_SHIFT))
#define DMAU_DESTPERIPH_DESTINATION_PERIPHERAL     (0x0UL<<DMAU_DESTPERIPH_SHIFT)
#define DMAU_SRCPERIPH_SHIFT           1
#define DMAU_SRCPERIPH_FIELD           (0xFFFFFFFF - (0x1FUL<<DMAU_SRCPERIPH_SHIFT))
#define DMAU_SRCPERIPH_SOURCE_PERIPHERAL           (0x0UL<<DMAU_SRCPERIPH_SHIFT)
#define DMAU_E_SHIFT                   0
#define DMAU_E_FIELD                   (0xFFFFFFFF - (0x1UL<<DMAU_E_SHIFT))
#define DMAU_E_DISABLED                (0x0UL<<DMAU_E_SHIFT)
#define DMAU_E_ENABLED                 (0x1UL<<DMAU_E_SHIFT)
#define DMAU_E_DISABLE                 (0x0UL<<DMAU_E_SHIFT)
#define DMAU_E_ENABLE                  (0x1UL<<DMAU_E_SHIFT)
#define DMAU_E                         (0x1UL<<DMAU_E_SHIFT)

/*****************************************************************************/

/*****************************************************************************
* Definitions for: EBI
*****************************************************************************/

/* Pointer on base address */
#define EBI_BASE                       IOA(EBI_BASE_ADDR)

/* EBI DEV0_MAINCFG Register (32 bits) */
#define EBI_DEV0_MAINCFG_OFFSET        0x0
#define EBI_DEV0_MAINCFG_REG           IOA(EBI_BASE_ADDR + EBI_DEV0_MAINCFG_OFFSET)

/* EBI DEV0_READCFG Register (32 bits) */
#define EBI_DEV0_READCFG_OFFSET        0x4
#define EBI_DEV0_READCFG_REG           IOA(EBI_BASE_ADDR + EBI_DEV0_READCFG_OFFSET)

/* EBI DEV0_WRITECFG Register (32 bits) */
#define EBI_DEV0_WRITECFG_OFFSET       0x8
#define EBI_DEV0_WRITECFG_REG          IOA(EBI_BASE_ADDR + EBI_DEV0_WRITECFG_OFFSET)

/* EBI DEV0_BURSTCFG Register (32 bits) */
#define EBI_DEV0_BURSTCFG_OFFSET       0xC
#define EBI_DEV0_BURSTCFG_REG          IOA(EBI_BASE_ADDR + EBI_DEV0_BURSTCFG_OFFSET)

/* EBI DEV1_MAINCFG Register (32 bits) */
#define EBI_DEV1_MAINCFG_OFFSET        0x20
#define EBI_DEV1_MAINCFG_REG           IOA(EBI_BASE_ADDR + EBI_DEV1_MAINCFG_OFFSET)

/* EBI DEV1_READCFG Register (32 bits) */
#define EBI_DEV1_READCFG_OFFSET        0x24
#define EBI_DEV1_READCFG_REG           IOA(EBI_BASE_ADDR + EBI_DEV1_READCFG_OFFSET)

/* EBI DEV1_WRITECFG Register (32 bits) */
#define EBI_DEV1_WRITECFG_OFFSET       0x28
#define EBI_DEV1_WRITECFG_REG          IOA(EBI_BASE_ADDR + EBI_DEV1_WRITECFG_OFFSET)

/* EBI DEV1_BURSTCFG Register (32 bits) */
#define EBI_DEV1_BURSTCFG_OFFSET       0x2C
#define EBI_DEV1_BURSTCFG_REG          IOA(EBI_BASE_ADDR + EBI_DEV1_BURSTCFG_OFFSET)

/* EBI DEV2_MAINCFG Register (32 bits) */
#define EBI_DEV2_MAINCFG_OFFSET        0x40
#define EBI_DEV2_MAINCFG_REG           IOA(EBI_BASE_ADDR + EBI_DEV2_MAINCFG_OFFSET)

/* EBI DEV2_READCFG Register (32 bits) */
#define EBI_DEV2_READCFG_OFFSET        0x44
#define EBI_DEV2_READCFG_REG           IOA(EBI_BASE_ADDR + EBI_DEV2_READCFG_OFFSET)

/* EBI DEV2_WRITECFG Register (32 bits) */
#define EBI_DEV2_WRITECFG_OFFSET       0x48
#define EBI_DEV2_WRITECFG_REG          IOA(EBI_BASE_ADDR + EBI_DEV2_WRITECFG_OFFSET)

/* EBI DEV2_BURSTCFG Register (32 bits) */
#define EBI_DEV2_BURSTCFG_OFFSET       0x4C
#define EBI_DEV2_BURSTCFG_REG          IOA(EBI_BASE_ADDR + EBI_DEV2_BURSTCFG_OFFSET)

/* EBI SW_RESETCFG Register (32 bits) */
#define EBI_SW_RESETCFG_OFFSET         0xFF0
#define EBI_SW_RESETCFG_REG            IOA(EBI_BASE_ADDR + EBI_SW_RESETCFG_OFFSET)

/* EBI POWER_DOWNCFG Register (32 bits) */
#define EBI_POWER_DOWNCFG_OFFSET       0xFF4
#define EBI_POWER_DOWNCFG_REG          IOA(EBI_BASE_ADDR + EBI_POWER_DOWNCFG_OFFSET)

/* EBI IP_ID Register (32 bits) */
#define EBI_IP_ID_OFFSET               0xFFC
#define EBI_IP_ID_REG                  IOA(EBI_BASE_ADDR + EBI_IP_ID_OFFSET)

/* Register description for DEV[2:0]_MAINCFG */

/* Reset value of register EBI_DEV[2:0]_MAINCFG */
#define EBI_DEV0_MAINCFG_VALUE         0x1
#define EBI_DEV1_MAINCFG_VALUE         0x1
#define EBI_DEV2_MAINCFG_VALUE         0x1

/* Bits definition for register EBI_DEV[2:0]_MAINCFG */
#define EBI_ADV_CFG_SHIFT              8
#define EBI_ADV_CFG_FIELD              (0xFFFFFFFF - (0x3UL<<EBI_ADV_CFG_SHIFT))
#define EBI_ADV_CFG_4_CYCLES           (0x0UL<<EBI_ADV_CFG_SHIFT)
#define EBI_ADV_CFG_1_CYCLE            (0x1UL<<EBI_ADV_CFG_SHIFT)
#define EBI_ADV_CFG_2_CYCLES           (0x2UL<<EBI_ADV_CFG_SHIFT)
#define EBI_ADV_CFG_3_CYCLES           (0x3UL<<EBI_ADV_CFG_SHIFT)
#define EBI_EN_POL_SHIFT               7
#define EBI_EN_POL_FIELD               (0xFFFFFFFF - (0x1UL<<EBI_EN_POL_SHIFT))
#define EBI_EN_POL_HIGH                (0x0UL<<EBI_EN_POL_SHIFT)
#define EBI_EN_POL_LOW                 (0x1UL<<EBI_EN_POL_SHIFT)
#define EBI_EN_POL                     (0x1UL<<EBI_EN_POL_SHIFT)
#define EBI_BE_OP_SHIFT                6
#define EBI_BE_OP_FIELD                (0xFFFFFFFF - (0x1UL<<EBI_BE_OP_SHIFT))
#define EBI_BE_OP_CS                   (0x0UL<<EBI_BE_OP_SHIFT)
#define EBI_BE_OP_WE                   (0x1UL<<EBI_BE_OP_SHIFT)
#define EBI_BE_OP                      (0x1UL<<EBI_BE_OP_SHIFT)
#define EBI_MODE_SHIFT                 3
#define EBI_MODE_FIELD                 (0xFFFFFFFF - (0x7UL<<EBI_MODE_SHIFT))
#define EBI_MODE_8080                  (0x0UL<<EBI_MODE_SHIFT)
#define EBI_MODE_PAGE                  (0x1UL<<EBI_MODE_SHIFT)
#define EBI_MODE_2                     (0x2UL<<EBI_MODE_SHIFT)
#define EBI_MODE_6800                  (0x3UL<<EBI_MODE_SHIFT)
#define EBI_MODE_4                     (0x4UL<<EBI_MODE_SHIFT)
#define EBI_MSIZE_SHIFT                0
#define EBI_MSIZE_FIELD                (0xFFFFFFFF - (0x7UL<<EBI_MSIZE_SHIFT))
#define EBI_MSIZE_8                    (0x0UL<<EBI_MSIZE_SHIFT)
#define EBI_MSIZE_16                   (0x1UL<<EBI_MSIZE_SHIFT)
#define EBI_MSIZE_16MUX                (0x2UL<<EBI_MSIZE_SHIFT)

/*****************************************************************************/
/* Register description for DEV[2:0]_READCFG */

/* Reset value of register EBI_DEV[2:0]_READCFG */
#define EBI_DEV0_READCFG_VALUE         0x1FFFFF
#define EBI_DEV1_READCFG_VALUE         0x1FFFFF
#define EBI_DEV2_READCFG_VALUE         0x1FFFFF

/* Bits definition for register EBI_DEV[2:0]_READCFG */
#define EBI_RRT_SHIFT                  17
#define EBI_RRT_FIELD                  (0xFFFFFFFF - (0xFUL<<EBI_RRT_SHIFT))
#define EBI_RRT_READ_TO_READ_TURNAROUND_TIME       (0xFUL<<EBI_RRT_SHIFT)
#define EBI_RT_SHIFT                   13
#define EBI_RT_FIELD                   (0xFFFFFFFF - (0xFUL<<EBI_RT_SHIFT))
#define EBI_RT_READ_TURNAROUND_TIME    (0xFUL<<EBI_RT_SHIFT)
#define EBI_RS_SHIFT                   10
#define EBI_RS_FIELD                   (0xFFFFFFFF - (0x7UL<<EBI_RS_SHIFT))
#define EBI_RS_READ_SETUP_TIME         (0x7UL<<EBI_RS_SHIFT)
#define EBI_RH_SHIFT                   7
#define EBI_RH_FIELD                   (0xFFFFFFFF - (0x7UL<<EBI_RH_SHIFT))
#define EBI_RH_READ_HOLD_TIME          (0x7UL<<EBI_RH_SHIFT)
#define EBI_RC_SHIFT                   0
#define EBI_RC_FIELD                   (0xFFFFFFFF - (0x7FUL<<EBI_RC_SHIFT))
#define EBI_RC_READ_ACCESS_TIME        (0x7FUL<<EBI_RC_SHIFT)

/*****************************************************************************/
/* Register description for DEV[2:0]_WRITECFG */

/* Reset value of register EBI_DEV[2:0]_WRITECFG */
#define EBI_DEV0_WRITECFG_VALUE        0x1FFFFF
#define EBI_DEV1_WRITECFG_VALUE        0x1FFFFF
#define EBI_DEV2_WRITECFG_VALUE        0x1FFFFF

/* Bits definition for register EBI_DEV[2:0]_WRITECFG */
#define EBI_WWT_SHIFT                  17
#define EBI_WWT_FIELD                  (0xFFFFFFFF - (0xFUL<<EBI_WWT_SHIFT))
#define EBI_WWT_WRITE_TO_WRITE_TURNAROUND_TIME     (0xFUL<<EBI_WWT_SHIFT)
#define EBI_WT_SHIFT                   13
#define EBI_WT_FIELD                   (0xFFFFFFFF - (0xFUL<<EBI_WT_SHIFT))
#define EBI_WT_WRITE_TURNAROUND_TIME   (0xFUL<<EBI_WT_SHIFT)
#define EBI_WS_SHIFT                   10
#define EBI_WS_FIELD                   (0xFFFFFFFF - (0x7UL<<EBI_WS_SHIFT))
#define EBI_WS_WRITE_SETUP_TIME        (0x7UL<<EBI_WS_SHIFT)
#define EBI_WH_SHIFT                   7
#define EBI_WH_FIELD                   (0xFFFFFFFF - (0x7UL<<EBI_WH_SHIFT))
#define EBI_WH_WRITE_HOLD_TIME         (0x7UL<<EBI_WH_SHIFT)
#define EBI_WC_SHIFT                   0
#define EBI_WC_FIELD                   (0xFFFFFFFF - (0x7FUL<<EBI_WC_SHIFT))
#define EBI_WC_WRITE_ACCESS_TIME       (0x7FUL<<EBI_WC_SHIFT)

/*****************************************************************************/
/* Register description for DEV[2:0]_BURSTCFG */

/* Reset value of register EBI_DEV[2:0]_BURSTCFG */
#define EBI_DEV0_BURSTCFG_VALUE        0xE0
#define EBI_DEV1_BURSTCFG_VALUE        0xE0
#define EBI_DEV2_BURSTCFG_VALUE        0xE0

/* Bits definition for register EBI_DEV[2:0]_BURSTCFG */
#define EBI_PRC_SHIFT                  5
#define EBI_PRC_FIELD                  (0xFFFFFFFF - (0x7UL<<EBI_PRC_SHIFT))
#define EBI_PRC_PAGE_READ_ACCESS_TIME  (0x7UL<<EBI_PRC_SHIFT)
#define EBI_SIZE_SHIFT                 0
#define EBI_SIZE_FIELD                 (0xFFFFFFFF - (0x7UL<<EBI_SIZE_SHIFT))
#define EBI_SIZE_4_DATA                (0x0UL<<EBI_SIZE_SHIFT)
#define EBI_SIZE_8_DATA                (0x1UL<<EBI_SIZE_SHIFT)
#define EBI_SIZE_16_DATA               (0x2UL<<EBI_SIZE_SHIFT)
#define EBI_SIZE_32_DATA               (0x3UL<<EBI_SIZE_SHIFT)

/*****************************************************************************/
/* Register description for SW_RESETCFG */

/* Reset value of register EBI_SW_RESETCFG */
#define EBI_SW_RESETCFG_VALUE          0x0

/* Bits definition for register EBI_SW_RESETCFG */
#define EBI_SW_RESET_SHIFT             0
#define EBI_SW_RESET_FIELD             (0xFFFFFFFF - (0x1UL<<EBI_SW_RESET_SHIFT))
#define EBI_SW_RESET_ENABLED           (0x0UL<<EBI_SW_RESET_SHIFT)
#define EBI_SW_RESET_DISABLED          (0x1UL<<EBI_SW_RESET_SHIFT)
#define EBI_SW_RESET                   (0x1UL<<EBI_SW_RESET_SHIFT)

/*****************************************************************************/
/* Register description for POWER_DOWNCFG */

/* Reset value of register EBI_POWER_DOWNCFG */
#define EBI_POWER_DOWNCFG_VALUE        0x0

/* Bits definition for register EBI_POWER_DOWNCFG */
#define EBI_TIME_OUT_SHIFT             1
#define EBI_TIME_OUT_FIELD             (0xFFFFFFFF - (0xFFFFUL<<EBI_TIME_OUT_SHIFT))
#define EBI_TIME_OUT_DISABLED          (0x0UL<<EBI_TIME_OUT_SHIFT)
#define EBI_TIME_OUT_1                 (0x1UL<<EBI_TIME_OUT_SHIFT)
#define EBI_POWER_DOWN_SHIFT           0
#define EBI_POWER_DOWN_FIELD           (0xFFFFFFFF - (0x1UL<<EBI_POWER_DOWN_SHIFT))
#define EBI_POWER_DOWN_DISABLED        (0x0UL<<EBI_POWER_DOWN_SHIFT)
#define EBI_POWER_DOWN_ENABLED         (0x1UL<<EBI_POWER_DOWN_SHIFT)
#define EBI_POWER_DOWN                 (0x1UL<<EBI_POWER_DOWN_SHIFT)

/*****************************************************************************/
/* Register description for IP_ID */

/* Reset value of register EBI_IP_ID */
#define EBI_IP_ID_VALUE                0x20165000

/* Bits definition for register EBI_IP_ID */
#define EBI_MODULE_ID_SHIFT            16
#define EBI_MODULE_ID_FIELD            (0xFFFFFFFF - (0xFFFFUL<<EBI_MODULE_ID_SHIFT))
#define EBI_MODULE_ID_2016             (0x2016UL<<EBI_MODULE_ID_SHIFT)
#define EBI_MAJOR_REV_SHIFT            12
#define EBI_MAJOR_REV_FIELD            (0xFFFFFFFF - (0xFUL<<EBI_MAJOR_REV_SHIFT))
#define EBI_MAJOR_REV_5                (0x5UL<<EBI_MAJOR_REV_SHIFT)
#define EBI_MINOR_REV_SHIFT            8
#define EBI_MINOR_REV_FIELD            (0xFFFFFFFF - (0xFUL<<EBI_MINOR_REV_SHIFT))
#define EBI_MINOR_REV_0                (0x0UL<<EBI_MINOR_REV_SHIFT)
#define EBI_APERTURE_SHIFT             0
#define EBI_APERTURE_FIELD             (0xFFFFFFFF - (0xFFUL<<EBI_APERTURE_SHIFT))
#define EBI_APERTURE_0                 (0x0UL<<EBI_APERTURE_SHIFT)

/*****************************************************************************/

/*****************************************************************************
* Definitions for: EXTINT
*****************************************************************************/

/* Pointer on base address */
#define EXTINT_BASE                    IOA(EXTINT_BASE_ADDR)

/* EXTINT CFG0 Register (8 bits) */
#define EXTINT_CFG0_OFFSET             0x0
#define EXTINT_CFG0_REG                IOA(EXTINT_BASE_ADDR + EXTINT_CFG0_OFFSET)

/* EXTINT CFG1 Register (8 bits) */
#define EXTINT_CFG1_OFFSET             0x4
#define EXTINT_CFG1_REG                IOA(EXTINT_BASE_ADDR + EXTINT_CFG1_OFFSET)

/* EXTINT CFG2 Register (8 bits) */
#define EXTINT_CFG2_OFFSET             0x8
#define EXTINT_CFG2_REG                IOA(EXTINT_BASE_ADDR + EXTINT_CFG2_OFFSET)

/* EXTINT CFG3 Register (8 bits) */
#define EXTINT_CFG3_OFFSET             0xC
#define EXTINT_CFG3_REG                IOA(EXTINT_BASE_ADDR + EXTINT_CFG3_OFFSET)

/* EXTINT CFG4 Register (8 bits) */
#define EXTINT_CFG4_OFFSET             0x10
#define EXTINT_CFG4_REG                IOA(EXTINT_BASE_ADDR + EXTINT_CFG4_OFFSET)

/* EXTINT CFG5 Register (8 bits) */
#define EXTINT_CFG5_OFFSET             0x14
#define EXTINT_CFG5_REG                IOA(EXTINT_BASE_ADDR + EXTINT_CFG5_OFFSET)

/* EXTINT CFG6 Register (8 bits) */
#define EXTINT_CFG6_OFFSET             0x18
#define EXTINT_CFG6_REG                IOA(EXTINT_BASE_ADDR + EXTINT_CFG6_OFFSET)

/* EXTINT CFG7 Register (8 bits) */
#define EXTINT_CFG7_OFFSET             0x1C
#define EXTINT_CFG7_REG                IOA(EXTINT_BASE_ADDR + EXTINT_CFG7_OFFSET)

/* EXTINT CFG8 Register (8 bits) */
#define EXTINT_CFG8_OFFSET             0x20
#define EXTINT_CFG8_REG                IOA(EXTINT_BASE_ADDR + EXTINT_CFG8_OFFSET)

/* EXTINT CFG9 Register (8 bits) */
#define EXTINT_CFG9_OFFSET             0x24
#define EXTINT_CFG9_REG                IOA(EXTINT_BASE_ADDR + EXTINT_CFG9_OFFSET)

/* EXTINT CFG10 Register (8 bits) */
#define EXTINT_CFG10_OFFSET            0x28
#define EXTINT_CFG10_REG               IOA(EXTINT_BASE_ADDR + EXTINT_CFG10_OFFSET)

/* EXTINT CFG11 Register (8 bits) */
#define EXTINT_CFG11_OFFSET            0x2C
#define EXTINT_CFG11_REG               IOA(EXTINT_BASE_ADDR + EXTINT_CFG11_OFFSET)

/* EXTINT CFG12 Register (8 bits) */
#define EXTINT_CFG12_OFFSET            0x30
#define EXTINT_CFG12_REG               IOA(EXTINT_BASE_ADDR + EXTINT_CFG12_OFFSET)

/* EXTINT CFG13 Register (8 bits) */
#define EXTINT_CFG13_OFFSET            0x34
#define EXTINT_CFG13_REG               IOA(EXTINT_BASE_ADDR + EXTINT_CFG13_OFFSET)

/* EXTINT CFG14 Register (8 bits) */
#define EXTINT_CFG14_OFFSET            0x38
#define EXTINT_CFG14_REG               IOA(EXTINT_BASE_ADDR + EXTINT_CFG14_OFFSET)

/* EXTINT CFG15 Register (8 bits) */
#define EXTINT_CFG15_OFFSET            0x3C
#define EXTINT_CFG15_REG               IOA(EXTINT_BASE_ADDR + EXTINT_CFG15_OFFSET)

/* EXTINT CFG16 Register (8 bits) */
#define EXTINT_CFG16_OFFSET            0x40
#define EXTINT_CFG16_REG               IOA(EXTINT_BASE_ADDR + EXTINT_CFG16_OFFSET)

/* EXTINT CFG17 Register (8 bits) */
#define EXTINT_CFG17_OFFSET            0x44
#define EXTINT_CFG17_REG               IOA(EXTINT_BASE_ADDR + EXTINT_CFG17_OFFSET)

/* EXTINT CFG18 Register (8 bits) */
#define EXTINT_CFG18_OFFSET            0x48
#define EXTINT_CFG18_REG               IOA(EXTINT_BASE_ADDR + EXTINT_CFG18_OFFSET)

/* EXTINT CFG19 Register (8 bits) */
#define EXTINT_CFG19_OFFSET            0x4C
#define EXTINT_CFG19_REG               IOA(EXTINT_BASE_ADDR + EXTINT_CFG19_OFFSET)

/* EXTINT CFG20 Register (8 bits) */
#define EXTINT_CFG20_OFFSET            0x50
#define EXTINT_CFG20_REG               IOA(EXTINT_BASE_ADDR + EXTINT_CFG20_OFFSET)

/* EXTINT CFG21 Register (8 bits) */
#define EXTINT_CFG21_OFFSET            0x54
#define EXTINT_CFG21_REG               IOA(EXTINT_BASE_ADDR + EXTINT_CFG21_OFFSET)

/* EXTINT CFG22 Register (8 bits) */
#define EXTINT_CFG22_OFFSET            0x58
#define EXTINT_CFG22_REG               IOA(EXTINT_BASE_ADDR + EXTINT_CFG22_OFFSET)

/* EXTINT CFG23 Register (8 bits) */
#define EXTINT_CFG23_OFFSET            0x5C
#define EXTINT_CFG23_REG               IOA(EXTINT_BASE_ADDR + EXTINT_CFG23_OFFSET)

/* EXTINT ENABLE1 Register (32 bits) */
#define EXTINT_ENABLE1_OFFSET          0x60
#define EXTINT_ENABLE1_REG             IOA(EXTINT_BASE_ADDR + EXTINT_ENABLE1_OFFSET)

/* EXTINT ENABLE2 Register (32 bits) */
#define EXTINT_ENABLE2_OFFSET          0x64
#define EXTINT_ENABLE2_REG             IOA(EXTINT_BASE_ADDR + EXTINT_ENABLE2_OFFSET)

/* EXTINT ENABLE3 Register (32 bits) */
#define EXTINT_ENABLE3_OFFSET          0x68
#define EXTINT_ENABLE3_REG             IOA(EXTINT_BASE_ADDR + EXTINT_ENABLE3_OFFSET)

/* EXTINT STATUS Register (32 bits) */
#define EXTINT_STATUS_OFFSET           0x6C
#define EXTINT_STATUS_REG              IOA(EXTINT_BASE_ADDR + EXTINT_STATUS_OFFSET)

/* EXTINT SIGNAL Register (32 bits) */
#define EXTINT_SIGNAL_OFFSET           0x70
#define EXTINT_SIGNAL_REG              IOA(EXTINT_BASE_ADDR + EXTINT_SIGNAL_OFFSET)

/* Register description for CFG[23:0] */

/* Reset value of register EXTINT_CFG[23:0] */
#define EXTINT_CFG0_VALUE              0x0
#define EXTINT_CFG1_VALUE              0x0
#define EXTINT_CFG2_VALUE              0x0
#define EXTINT_CFG3_VALUE              0x0
#define EXTINT_CFG4_VALUE              0x0
#define EXTINT_CFG5_VALUE              0x0
#define EXTINT_CFG6_VALUE              0x0
#define EXTINT_CFG7_VALUE              0x0
#define EXTINT_CFG8_VALUE              0x0
#define EXTINT_CFG9_VALUE              0x0
#define EXTINT_CFG10_VALUE             0x0
#define EXTINT_CFG11_VALUE             0x0
#define EXTINT_CFG12_VALUE             0x0
#define EXTINT_CFG13_VALUE             0x0
#define EXTINT_CFG14_VALUE             0x0
#define EXTINT_CFG15_VALUE             0x0
#define EXTINT_CFG16_VALUE             0x0
#define EXTINT_CFG17_VALUE             0x0
#define EXTINT_CFG18_VALUE             0x0
#define EXTINT_CFG19_VALUE             0x0
#define EXTINT_CFG20_VALUE             0x0
#define EXTINT_CFG21_VALUE             0x0
#define EXTINT_CFG22_VALUE             0x0
#define EXTINT_CFG23_VALUE             0x0

/* Bits definition for register EXTINT_CFG[23:0] */
#define EXTINT_MODE_SHIFT              6
#define EXTINT_MODE_FIELD              (0xFFFFFFFF - (0x3UL<<EXTINT_MODE_SHIFT))
#define EXTINT_MODE_BYPASS             (0x0UL<<EXTINT_MODE_SHIFT)
#define EXTINT_MODE_STRETCHING         (0x1UL<<EXTINT_MODE_SHIFT)
#define EXTINT_MODE_DEBOUNCE           (0x2UL<<EXTINT_MODE_SHIFT)
#define EXTINT_MODE_DUAL_EDGE          (0x3UL<<EXTINT_MODE_SHIFT)
#define EXTINT_DEBOUNCE_SHIFT          3
#define EXTINT_DEBOUNCE_FIELD          (0xFFFFFFFF - (0x7UL<<EXTINT_DEBOUNCE_SHIFT))
#define EXTINT_DEBOUNCE_0              (0x0UL<<EXTINT_DEBOUNCE_SHIFT)
#define EXTINT_DEBOUNCE_1              (0x1UL<<EXTINT_DEBOUNCE_SHIFT)
#define EXTINT_DEBOUNCE_2              (0x2UL<<EXTINT_DEBOUNCE_SHIFT)
#define EXTINT_DEBOUNCE_3              (0x3UL<<EXTINT_DEBOUNCE_SHIFT)
#define EXTINT_DEBOUNCE_7              (0x7UL<<EXTINT_DEBOUNCE_SHIFT)
#define EXTINT_POL_SHIFT               2
#define EXTINT_POL_FIELD               (0xFFFFFFFF - (0x1UL<<EXTINT_POL_SHIFT))
#define EXTINT_POL_NEGATIVE            (0x0UL<<EXTINT_POL_SHIFT)
#define EXTINT_POL_POSITIVE            (0x1UL<<EXTINT_POL_SHIFT)
#define EXTINT_POL                     (0x1UL<<EXTINT_POL_SHIFT)
#define EXTINT_SEL_SHIFT               1
#define EXTINT_SEL_FIELD               (0xFFFFFFFF - (0x1UL<<EXTINT_SEL_SHIFT))
#define EXTINT_SEL_EXTINT              (0x0UL<<EXTINT_SEL_SHIFT)
#define EXTINT_SEL_ALTERNATE           (0x1UL<<EXTINT_SEL_SHIFT)
#define EXTINT_SEL                     (0x1UL<<EXTINT_SEL_SHIFT)

/*****************************************************************************/
/* Register description for ENABLE[3:1] */

/* Reset value of register EXTINT_ENABLE[3:1] */
#define EXTINT_ENABLE1_VALUE           0x0
#define EXTINT_ENABLE2_VALUE           0x0
#define EXTINT_ENABLE3_VALUE           0x0

/* Bits definition for register EXTINT_ENABLE[3:1] */
#define EXTINT_ENABLE_SHIFT            0
#define EXTINT_ENABLE_FIELD            (0xFFFFFFFF - (0xFFFFFFUL<<EXTINT_ENABLE_SHIFT))
#define EXTINT_ENABLE_0                (0x0UL<<EXTINT_ENABLE_SHIFT)
#define EXTINT_ENABLE_1                (0x1UL<<EXTINT_ENABLE_SHIFT)

/*****************************************************************************/
/* Register description for STATUS */

/* Reset value of register EXTINT_STATUS */
#define EXTINT_STATUS_VALUE            0x0

/* Bits definition for register EXTINT_STATUS */
#define EXTINT_STATUS_SHIFT            0
#define EXTINT_STATUS_FIELD            (0xFFFFFFFF - (0xFFFFFFUL<<EXTINT_STATUS_SHIFT))
#define EXTINT_STATUS_0                (0x0UL<<EXTINT_STATUS_SHIFT)
#define EXTINT_STATUS_1                (0x1UL<<EXTINT_STATUS_SHIFT)

/*****************************************************************************/
/* Register description for SIGNAL */

/* Reset value of register EXTINT_SIGNAL */
#define EXTINT_SIGNAL_VALUE            0x0

/* Bits definition for register EXTINT_SIGNAL */
#define EXTINT_SIGNAL_SHIFT            0
#define EXTINT_SIGNAL_FIELD            (0xFFFFFFFF - (0xFFFFFFUL<<EXTINT_SIGNAL_SHIFT))

/*****************************************************************************/

/*****************************************************************************
* Definitions for: FCI
*****************************************************************************/

/* Pointer on base address */
#define FCI_BASE                       IOA(FCI_BASE_ADDR)

/* FCI POWER Register (8 bits) */
#define FCI_POWER_OFFSET               0x0
#define FCI_POWER_REG                  IOA(FCI_BASE_ADDR + FCI_POWER_OFFSET)

/* FCI CLOCK Register (16 bits) */
#define FCI_CLOCK_OFFSET               0x4
#define FCI_CLOCK_REG                  IOA(FCI_BASE_ADDR + FCI_CLOCK_OFFSET)

/* FCI ARGUMENT Register (32 bits) */
#define FCI_ARGUMENT_OFFSET            0x8
#define FCI_ARGUMENT_REG               IOA(FCI_BASE_ADDR + FCI_ARGUMENT_OFFSET)

/* FCI COMMAND Register (16 bits) */
#define FCI_COMMAND_OFFSET             0xC
#define FCI_COMMAND_REG                IOA(FCI_BASE_ADDR + FCI_COMMAND_OFFSET)

/* FCI RESPCMD Register (8 bits) */
#define FCI_RESPCMD_OFFSET             0x10
#define FCI_RESPCMD_REG                IOA(FCI_BASE_ADDR + FCI_RESPCMD_OFFSET)

/* FCI RESPONSE0 Register (32 bits) */
#define FCI_RESPONSE0_OFFSET           0x14
#define FCI_RESPONSE0_REG              IOA(FCI_BASE_ADDR + FCI_RESPONSE0_OFFSET)

/* FCI RESPONSE1 Register (32 bits) */
#define FCI_RESPONSE1_OFFSET           0x18
#define FCI_RESPONSE1_REG              IOA(FCI_BASE_ADDR + FCI_RESPONSE1_OFFSET)

/* FCI RESPONSE2 Register (32 bits) */
#define FCI_RESPONSE2_OFFSET           0x1C
#define FCI_RESPONSE2_REG              IOA(FCI_BASE_ADDR + FCI_RESPONSE2_OFFSET)

/* FCI RESPONSE3 Register (32 bits) */
#define FCI_RESPONSE3_OFFSET           0x20
#define FCI_RESPONSE3_REG              IOA(FCI_BASE_ADDR + FCI_RESPONSE3_OFFSET)

/* FCI DATATIMER Register (32 bits) */
#define FCI_DATATIMER_OFFSET           0x24
#define FCI_DATATIMER_REG              IOA(FCI_BASE_ADDR + FCI_DATATIMER_OFFSET)

/* FCI DATALENGTH Register (16 bits) */
#define FCI_DATALENGTH_OFFSET          0x28
#define FCI_DATALENGTH_REG             IOA(FCI_BASE_ADDR + FCI_DATALENGTH_OFFSET)

/* FCI DATACTRL Register (8 bits) */
#define FCI_DATACTRL_OFFSET            0x2C
#define FCI_DATACTRL_REG               IOA(FCI_BASE_ADDR + FCI_DATACTRL_OFFSET)

/* FCI DATACNT Register (16 bits) */
#define FCI_DATACNT_OFFSET             0x30
#define FCI_DATACNT_REG                IOA(FCI_BASE_ADDR + FCI_DATACNT_OFFSET)

/* FCI STATUS Register (32 bits) */
#define FCI_STATUS_OFFSET              0x34
#define FCI_STATUS_REG                 IOA(FCI_BASE_ADDR + FCI_STATUS_OFFSET)

/* FCI CLEAR Register (16 bits) */
#define FCI_CLEAR_OFFSET               0x38
#define FCI_CLEAR_REG                  IOA(FCI_BASE_ADDR + FCI_CLEAR_OFFSET)

/* FCI MASK Register (32 bits) */
#define FCI_MASK_OFFSET                0x3C
#define FCI_MASK_REG                   IOA(FCI_BASE_ADDR + FCI_MASK_OFFSET)

/* FCI FIFOCNT Register (16 bits) */
#define FCI_FIFOCNT_OFFSET             0x48
#define FCI_FIFOCNT_REG                IOA(FCI_BASE_ADDR + FCI_FIFOCNT_OFFSET)

/* FCI FIFOCTRL Register (8 bits) */
#define FCI_FIFOCTRL_OFFSET            0x50
#define FCI_FIFOCTRL_REG               IOA(FCI_BASE_ADDR + FCI_FIFOCTRL_OFFSET)

/* FCI FIFO Register (32 bits) */
#define FCI_FIFO_OFFSET                0x200
#define FCI_FIFO_REG                   IOA(FCI_BASE_ADDR + FCI_FIFO_OFFSET)

/* Register description for POWER */

/* Reset value of register FCI_POWER */
#define FCI_POWER_VALUE                0x0

/* Bits definition for register FCI_POWER */
#define FCI_OPENDRAIN_SHIFT            6
#define FCI_OPENDRAIN_FIELD            (0xFFFFFFFF - (0x1UL<<FCI_OPENDRAIN_SHIFT))
#define FCI_OPENDRAIN_ON               (0x0UL<<FCI_OPENDRAIN_SHIFT)
#define FCI_OPENDRAIN_OFF              (0x1UL<<FCI_OPENDRAIN_SHIFT)
#define FCI_OPENDRAIN                  (0x1UL<<FCI_OPENDRAIN_SHIFT)
#define FCI_SEDGE_SHIFT                4
#define FCI_SEDGE_FIELD                (0xFFFFFFFF - (0x1UL<<FCI_SEDGE_SHIFT))
#define FCI_SEDGE_RISING               (0x0UL<<FCI_SEDGE_SHIFT)
#define FCI_SEDGE_FALLING              (0x1UL<<FCI_SEDGE_SHIFT)
#define FCI_SEDGE                      (0x1UL<<FCI_SEDGE_SHIFT)
#define FCI_CPOL_SHIFT                 3
#define FCI_CPOL_FIELD                 (0xFFFFFFFF - (0x1UL<<FCI_CPOL_SHIFT))
#define FCI_CPOL_0                     (0x0UL<<FCI_CPOL_SHIFT)
#define FCI_CPOL_1                     (0x1UL<<FCI_CPOL_SHIFT)
#define FCI_CPOL                       (0x1UL<<FCI_CPOL_SHIFT)
#define FCI_PEDGE_SHIFT                2
#define FCI_PEDGE_FIELD                (0xFFFFFFFF - (0x1UL<<FCI_PEDGE_SHIFT))
#define FCI_PEDGE_RISING               (0x0UL<<FCI_PEDGE_SHIFT)
#define FCI_PEDGE_FALLING              (0x1UL<<FCI_PEDGE_SHIFT)
#define FCI_PEDGE                      (0x1UL<<FCI_PEDGE_SHIFT)
#define FCI_CTRL_SHIFT                 0
#define FCI_CTRL_FIELD                 (0xFFFFFFFF - (0x3UL<<FCI_CTRL_SHIFT))
#define FCI_CTRL_POWEROFF              (0x0UL<<FCI_CTRL_SHIFT)
#define FCI_CTRL_1                     (0x1UL<<FCI_CTRL_SHIFT)
#define FCI_CTRL_POWERUP               (0x2UL<<FCI_CTRL_SHIFT)
#define FCI_CTRL_POWERON               (0x3UL<<FCI_CTRL_SHIFT)

/*****************************************************************************/
/* Register description for CLOCK */

/* Reset value of register FCI_CLOCK */
#define FCI_CLOCK_VALUE                0x0

/* Bits definition for register FCI_CLOCK */
#define FCI_WIDEBUS_SHIFT              11
#define FCI_WIDEBUS_FIELD              (0xFFFFFFFF - (0x1UL<<FCI_WIDEBUS_SHIFT))
#define FCI_WIDEBUS_0                  (0x0UL<<FCI_WIDEBUS_SHIFT)
#define FCI_WIDEBUS_1                  (0x1UL<<FCI_WIDEBUS_SHIFT)
#define FCI_WIDEBUS                    (0x1UL<<FCI_WIDEBUS_SHIFT)
#define FCI_BYPASS_SHIFT               10
#define FCI_BYPASS_FIELD               (0xFFFFFFFF - (0x1UL<<FCI_BYPASS_SHIFT))
#define FCI_BYPASS_DISABLE             (0x0UL<<FCI_BYPASS_SHIFT)
#define FCI_BYPASS_ENABLE              (0x1UL<<FCI_BYPASS_SHIFT)
#define FCI_BYPASS                     (0x1UL<<FCI_BYPASS_SHIFT)
#define FCI_PWRSAVE_SHIFT              9
#define FCI_PWRSAVE_FIELD              (0xFFFFFFFF - (0x1UL<<FCI_PWRSAVE_SHIFT))
#define FCI_PWRSAVE_DISABLED           (0x0UL<<FCI_PWRSAVE_SHIFT)
#define FCI_PWRSAVE_ENABLED            (0x1UL<<FCI_PWRSAVE_SHIFT)
#define FCI_PWRSAVE                    (0x1UL<<FCI_PWRSAVE_SHIFT)
#define FCI_CLKEN_SHIFT                8
#define FCI_CLKEN_FIELD                (0xFFFFFFFF - (0x1UL<<FCI_CLKEN_SHIFT))
#define FCI_CLKEN_DISABLED             (0x0UL<<FCI_CLKEN_SHIFT)
#define FCI_CLKEN_ENABLED              (0x1UL<<FCI_CLKEN_SHIFT)
#define FCI_CLKEN                      (0x1UL<<FCI_CLKEN_SHIFT)
#define FCI_CLKDIV_SHIFT               0
#define FCI_CLKDIV_FIELD               (0xFFFFFFFF - (0xFFUL<<FCI_CLKDIV_SHIFT))
#define FCI_CLKDIV_BUS_CLOCK_PERIOD    (0x0UL<<FCI_CLKDIV_SHIFT)

/*****************************************************************************/
/* Register description for ARGUMENT */

/* Reset value of register FCI_ARGUMENT */
#define FCI_ARGUMENT_VALUE             0x0

/* Bits definition for register FCI_ARGUMENT */
#define FCI_CMDARG_SHIFT               0
#define FCI_CMDARG_FIELD               (0xFFFFFFFF - (0x7FFFFFFFUL<<FCI_CMDARG_SHIFT))
#define FCI_CMDARG_COMMAND_ARGUMENT    (0x0UL<<FCI_CMDARG_SHIFT)

/*****************************************************************************/
/* Register description for COMMAND */

/* Reset value of register FCI_COMMAND */
#define FCI_COMMAND_VALUE              0x0

/* Bits definition for register FCI_COMMAND */
#define FCI_ENABLE_SHIFT               10
#define FCI_ENABLE_FIELD               (0xFFFFFFFF - (0x1UL<<FCI_ENABLE_SHIFT))
#define FCI_ENABLE_OFF                 (0x0UL<<FCI_ENABLE_SHIFT)
#define FCI_ENABLE_ON                  (0x1UL<<FCI_ENABLE_SHIFT)
#define FCI_ENABLE                     (0x1UL<<FCI_ENABLE_SHIFT)
#define FCI_PENDING_SHIFT              9
#define FCI_PENDING_FIELD              (0xFFFFFFFF - (0x1UL<<FCI_PENDING_SHIFT))
#define FCI_PENDING_DISABLED           (0x0UL<<FCI_PENDING_SHIFT)
#define FCI_PENDING_ENABLED            (0x1UL<<FCI_PENDING_SHIFT)
#define FCI_PENDING                    (0x1UL<<FCI_PENDING_SHIFT)
#define FCI_INTERRUPT_SHIFT            8
#define FCI_INTERRUPT_FIELD            (0xFFFFFFFF - (0x1UL<<FCI_INTERRUPT_SHIFT))
#define FCI_INTERRUPT_DISABLED         (0x0UL<<FCI_INTERRUPT_SHIFT)
#define FCI_INTERRUPT_ENABLED          (0x1UL<<FCI_INTERRUPT_SHIFT)
#define FCI_INTERRUPT                  (0x1UL<<FCI_INTERRUPT_SHIFT)
#define FCI_LONGRSP_SHIFT              7
#define FCI_LONGRSP_FIELD              (0xFFFFFFFF - (0x1UL<<FCI_LONGRSP_SHIFT))
#define FCI_LONGRSP_DISABLED           (0x0UL<<FCI_LONGRSP_SHIFT)
#define FCI_LONGRSP_ENABLED            (0x1UL<<FCI_LONGRSP_SHIFT)
#define FCI_LONGRSP                    (0x1UL<<FCI_LONGRSP_SHIFT)
#define FCI_RESPONSE_SHIFT             6
#define FCI_RESPONSE_FIELD             (0xFFFFFFFF - (0x1UL<<FCI_RESPONSE_SHIFT))
#define FCI_RESPONSE_NO_RESPONSE       (0x0UL<<FCI_RESPONSE_SHIFT)
#define FCI_RESPONSE_RESPONSE          (0x1UL<<FCI_RESPONSE_SHIFT)
#define FCI_RESPONSE                   (0x1UL<<FCI_RESPONSE_SHIFT)
#define FCI_CMDINDEX_SHIFT             0
#define FCI_CMDINDEX_FIELD             (0xFFFFFFFF - (0x3FUL<<FCI_CMDINDEX_SHIFT))
#define FCI_CMDINDEX_COMMAND_INDEX     (0x0UL<<FCI_CMDINDEX_SHIFT)

/*****************************************************************************/
/* Register description for RESPCMD */

/* Reset value of register FCI_RESPCMD */
#define FCI_RESPCMD_VALUE              0x0

/* Bits definition for register FCI_RESPCMD */
#define FCI_RESPCMD_SHIFT              0
#define FCI_RESPCMD_FIELD              (0xFFFFFFFF - (0x3FUL<<FCI_RESPCMD_SHIFT))
#define FCI_RESPCMD_RESPONSE_COMMAND_INDEX         (0x0UL<<FCI_RESPCMD_SHIFT)

/*****************************************************************************/
/* Register description for RESPONSE[3:0] */

/* Reset value of register FCI_RESPONSE[3:0] */
#define FCI_RESPONSE0_VALUE            0x0
#define FCI_RESPONSE1_VALUE            0x0
#define FCI_RESPONSE2_VALUE            0x0
#define FCI_RESPONSE3_VALUE            0x0

/* Bits definition for register FCI_RESPONSE[3:0] */
#define FCI_STATUS_SHIFT               0
#define FCI_STATUS_FIELD               (0xFFFFFFFF - (0x7FFFFFFFUL<<FCI_STATUS_SHIFT))
#define FCI_STATUS_0                   (0x0UL<<FCI_STATUS_SHIFT)

/*****************************************************************************/
/* Register description for DATATIMER */

/* Reset value of register FCI_DATATIMER */
#define FCI_DATATIMER_VALUE            0x0

/* Bits definition for register FCI_DATATIMER */
#define FCI_DATATIME_SHIFT             0
#define FCI_DATATIME_FIELD             (0xFFFFFFFF - (0x7FFFFFFFUL<<FCI_DATATIME_SHIFT))
#define FCI_DATATIME_DATA_TIME_OUT_PERIOD          (0x0UL<<FCI_DATATIME_SHIFT)

/*****************************************************************************/
/* Register description for DATALENGTH */

/* Reset value of register FCI_DATALENGTH */
#define FCI_DATALENGTH_VALUE           0x0

/* Bits definition for register FCI_DATALENGTH */
#define FCI_DATALENGTH_SHIFT           0
#define FCI_DATALENGTH_FIELD           (0xFFFFFFFF - (0xFFFFUL<<FCI_DATALENGTH_SHIFT))
#define FCI_DATALENGTH_DATA_LENGTH_VALUE           (0x0UL<<FCI_DATALENGTH_SHIFT)

/*****************************************************************************/
/* Register description for DATACTRL */

/* Reset value of register FCI_DATACTRL */
#define FCI_DATACTRL_VALUE             0x0

/* Bits definition for register FCI_DATACTRL */
#define FCI_BLOCKSIZE_SHIFT            4
#define FCI_BLOCKSIZE_FIELD            (0xFFFFFFFF - (0xFUL<<FCI_BLOCKSIZE_SHIFT))
#define FCI_BLOCKSIZE_1                (0x0UL<<FCI_BLOCKSIZE_SHIFT)
#define FCI_BLOCKSIZE_2                (0x1UL<<FCI_BLOCKSIZE_SHIFT)
#define FCI_BLOCKSIZE_4                (0x2UL<<FCI_BLOCKSIZE_SHIFT)
#define FCI_BLOCKSIZE_8                (0x3UL<<FCI_BLOCKSIZE_SHIFT)
#define FCI_BLOCKSIZE_16               (0x4UL<<FCI_BLOCKSIZE_SHIFT)
#define FCI_BLOCKSIZE_32               (0x5UL<<FCI_BLOCKSIZE_SHIFT)
#define FCI_BLOCKSIZE_64               (0x6UL<<FCI_BLOCKSIZE_SHIFT)
#define FCI_BLOCKSIZE_7                (0x7UL<<FCI_BLOCKSIZE_SHIFT)
#define FCI_BLOCKSIZE_256              (0x8UL<<FCI_BLOCKSIZE_SHIFT)
#define FCI_BLOCKSIZE_9                (0x9UL<<FCI_BLOCKSIZE_SHIFT)
#define FCI_BLOCKSIZE_1024             (0xAUL<<FCI_BLOCKSIZE_SHIFT)
#define FCI_BLOCKSIZE_2048             (0xBUL<<FCI_BLOCKSIZE_SHIFT)
#define FCI_DMAENABLE_SHIFT            3
#define FCI_DMAENABLE_FIELD            (0xFFFFFFFF - (0x1UL<<FCI_DMAENABLE_SHIFT))
#define FCI_DMAENABLE_OFF              (0x0UL<<FCI_DMAENABLE_SHIFT)
#define FCI_DMAENABLE_ON               (0x1UL<<FCI_DMAENABLE_SHIFT)
#define FCI_DMAENABLE                  (0x1UL<<FCI_DMAENABLE_SHIFT)
#define FCI_MODE_SHIFT                 2
#define FCI_MODE_FIELD                 (0xFFFFFFFF - (0x1UL<<FCI_MODE_SHIFT))
#define FCI_MODE_BLOCK                 (0x0UL<<FCI_MODE_SHIFT)
#define FCI_MODE_STREAM                (0x1UL<<FCI_MODE_SHIFT)
#define FCI_MODE                       (0x1UL<<FCI_MODE_SHIFT)
#define FCI_DIRECTION_SHIFT            1
#define FCI_DIRECTION_FIELD            (0xFFFFFFFF - (0x1UL<<FCI_DIRECTION_SHIFT))
#define FCI_DIRECTION_CONTROLLER_TO_CARD           (0x0UL<<FCI_DIRECTION_SHIFT)
#define FCI_DIRECTION_CARD_TO_CONTROLLER           (0x1UL<<FCI_DIRECTION_SHIFT)
#define FCI_DIRECTION                  (0x1UL<<FCI_DIRECTION_SHIFT)
#define FCI_DATATRANSFEREN_SHIFT       0
#define FCI_DATATRANSFEREN_FIELD       (0xFFFFFFFF - (0x1UL<<FCI_DATATRANSFEREN_SHIFT))
#define FCI_DATATRANSFEREN_OFF         (0x0UL<<FCI_DATATRANSFEREN_SHIFT)
#define FCI_DATATRANSFEREN_ON          (0x1UL<<FCI_DATATRANSFEREN_SHIFT)
#define FCI_DATATRANSFEREN             (0x1UL<<FCI_DATATRANSFEREN_SHIFT)

/*****************************************************************************/
/* Register description for DATACNT */

/* Reset value of register FCI_DATACNT */
#define FCI_DATACNT_VALUE              0x0

/* Bits definition for register FCI_DATACNT */
#define FCI_DATACNT_SHIFT              0
#define FCI_DATACNT_FIELD              (0xFFFFFFFF - (0xFFFFUL<<FCI_DATACNT_SHIFT))
#define FCI_DATACNT_REMAINING_DATA     (0x0UL<<FCI_DATACNT_SHIFT)

/*****************************************************************************/
/* Register description for STATUS */

/* Reset value of register FCI_STATUS */
#define FCI_STATUS_VALUE               0x40000000

/* Bits definition for register FCI_STATUS */
#define FCI_RXINACTIVE_SHIFT           30
#define FCI_RXINACTIVE_FIELD           (0xFFFFFFFF - (0x1UL<<FCI_RXINACTIVE_SHIFT))
#define FCI_RXINACTIVE_INACTIVE        (0x0UL<<FCI_RXINACTIVE_SHIFT)
#define FCI_RXINACTIVE_ACTIVE          (0x1UL<<FCI_RXINACTIVE_SHIFT)
#define FCI_RXINACTIVE                 (0x1UL<<FCI_RXINACTIVE_SHIFT)
#define FCI_SNDCLKGATE_SHIFT           29
#define FCI_SNDCLKGATE_FIELD           (0xFFFFFFFF - (0x1UL<<FCI_SNDCLKGATE_SHIFT))
#define FCI_SNDCLKGATE_INACTIVE        (0x0UL<<FCI_SNDCLKGATE_SHIFT)
#define FCI_SNDCLKGATE_ACTIVE          (0x1UL<<FCI_SNDCLKGATE_SHIFT)
#define FCI_SNDCLKGATE                 (0x1UL<<FCI_SNDCLKGATE_SHIFT)
#define FCI_RCVCLKGATE_SHIFT           28
#define FCI_RCVCLKGATE_FIELD           (0xFFFFFFFF - (0x1UL<<FCI_RCVCLKGATE_SHIFT))
#define FCI_RCVCLKGATE_INACTIVE        (0x0UL<<FCI_RCVCLKGATE_SHIFT)
#define FCI_RCVCLKGATE_ACTIVE          (0x1UL<<FCI_RCVCLKGATE_SHIFT)
#define FCI_RCVCLKGATE                 (0x1UL<<FCI_RCVCLKGATE_SHIFT)
#define FCI_RXFIFOAMF_SHIFT            27
#define FCI_RXFIFOAMF_FIELD            (0xFFFFFFFF - (0x1UL<<FCI_RXFIFOAMF_SHIFT))
#define FCI_RXFIFOAMF_INACTIVE         (0x0UL<<FCI_RXFIFOAMF_SHIFT)
#define FCI_RXFIFOAMF_ACTIVE           (0x1UL<<FCI_RXFIFOAMF_SHIFT)
#define FCI_RXFIFOAMF                  (0x1UL<<FCI_RXFIFOAMF_SHIFT)
#define FCI_TXFIFOAME_SHIFT            26
#define FCI_TXFIFOAME_FIELD            (0xFFFFFFFF - (0x1UL<<FCI_TXFIFOAME_SHIFT))
#define FCI_TXFIFOAME_INACTIVE         (0x0UL<<FCI_TXFIFOAME_SHIFT)
#define FCI_TXFIFOAME_ACTIVE           (0x1UL<<FCI_TXFIFOAME_SHIFT)
#define FCI_TXFIFOAME                  (0x1UL<<FCI_TXFIFOAME_SHIFT)
#define FCI_TXFIFOLETHR_SHIFT          25
#define FCI_TXFIFOLETHR_FIELD          (0xFFFFFFFF - (0x1UL<<FCI_TXFIFOLETHR_SHIFT))
#define FCI_TXFIFOLETHR_INACTIVE       (0x0UL<<FCI_TXFIFOLETHR_SHIFT)
#define FCI_TXFIFOLETHR_ACTIVE         (0x1UL<<FCI_TXFIFOLETHR_SHIFT)
#define FCI_TXFIFOLETHR                (0x1UL<<FCI_TXFIFOLETHR_SHIFT)
#define FCI_TXFIFOLE8_SHIFT            24
#define FCI_TXFIFOLE8_FIELD            (0xFFFFFFFF - (0x1UL<<FCI_TXFIFOLE8_SHIFT))
#define FCI_TXFIFOLE8_INACTIVE         (0x0UL<<FCI_TXFIFOLE8_SHIFT)
#define FCI_TXFIFOLE8_ACTIVE           (0x1UL<<FCI_TXFIFOLE8_SHIFT)
#define FCI_TXFIFOLE8                  (0x1UL<<FCI_TXFIFOLE8_SHIFT)
#define FCI_RXFIFOGE8_SHIFT            23
#define FCI_RXFIFOGE8_FIELD            (0xFFFFFFFF - (0x1UL<<FCI_RXFIFOGE8_SHIFT))
#define FCI_RXFIFOGE8_INACTIVE         (0x0UL<<FCI_RXFIFOGE8_SHIFT)
#define FCI_RXFIFOGE8_ACTIVE           (0x1UL<<FCI_RXFIFOGE8_SHIFT)
#define FCI_RXFIFOGE8                  (0x1UL<<FCI_RXFIFOGE8_SHIFT)
#define FCI_TXSTARTCOND_SHIFT          22
#define FCI_TXSTARTCOND_FIELD          (0xFFFFFFFF - (0x1UL<<FCI_TXSTARTCOND_SHIFT))
#define FCI_TXSTARTCOND_INACTIVE       (0x0UL<<FCI_TXSTARTCOND_SHIFT)
#define FCI_TXSTARTCOND_ACTIVE         (0x1UL<<FCI_TXSTARTCOND_SHIFT)
#define FCI_TXSTARTCOND                (0x1UL<<FCI_TXSTARTCOND_SHIFT)
#define FCI_RXDATAAVLBL_SHIFT          21
#define FCI_RXDATAAVLBL_FIELD          (0xFFFFFFFF - (0x1UL<<FCI_RXDATAAVLBL_SHIFT))
#define FCI_RXDATAAVLBL_INACTIVE       (0x0UL<<FCI_RXDATAAVLBL_SHIFT)
#define FCI_RXDATAAVLBL_ACTIVE         (0x1UL<<FCI_RXDATAAVLBL_SHIFT)
#define FCI_RXDATAAVLBL                (0x1UL<<FCI_RXDATAAVLBL_SHIFT)
#define FCI_TXDATAAVLBL_SHIFT          20
#define FCI_TXDATAAVLBL_FIELD          (0xFFFFFFFF - (0x1UL<<FCI_TXDATAAVLBL_SHIFT))
#define FCI_TXDATAAVLBL_INACTIVE       (0x0UL<<FCI_TXDATAAVLBL_SHIFT)
#define FCI_TXDATAAVLBL_ACTIVE         (0x1UL<<FCI_TXDATAAVLBL_SHIFT)
#define FCI_TXDATAAVLBL                (0x1UL<<FCI_TXDATAAVLBL_SHIFT)
#define FCI_RXFIFOEMPTY_SHIFT          19
#define FCI_RXFIFOEMPTY_FIELD          (0xFFFFFFFF - (0x1UL<<FCI_RXFIFOEMPTY_SHIFT))
#define FCI_RXFIFOEMPTY_INACTIVE       (0x0UL<<FCI_RXFIFOEMPTY_SHIFT)
#define FCI_RXFIFOEMPTY_ACTIVE         (0x1UL<<FCI_RXFIFOEMPTY_SHIFT)
#define FCI_RXFIFOEMPTY                (0x1UL<<FCI_RXFIFOEMPTY_SHIFT)
#define FCI_TXFIFOEMPTY_SHIFT          18
#define FCI_TXFIFOEMPTY_FIELD          (0xFFFFFFFF - (0x1UL<<FCI_TXFIFOEMPTY_SHIFT))
#define FCI_TXFIFOEMPTY_INACTIVE       (0x0UL<<FCI_TXFIFOEMPTY_SHIFT)
#define FCI_TXFIFOEMPTY_ACTIVE         (0x1UL<<FCI_TXFIFOEMPTY_SHIFT)
#define FCI_TXFIFOEMPTY                (0x1UL<<FCI_TXFIFOEMPTY_SHIFT)
#define FCI_RXFIFOFULL_SHIFT           17
#define FCI_RXFIFOFULL_FIELD           (0xFFFFFFFF - (0x1UL<<FCI_RXFIFOFULL_SHIFT))
#define FCI_RXFIFOFULL_INACTIVE        (0x0UL<<FCI_RXFIFOFULL_SHIFT)
#define FCI_RXFIFOFULL_ACTIVE          (0x1UL<<FCI_RXFIFOFULL_SHIFT)
#define FCI_RXFIFOFULL                 (0x1UL<<FCI_RXFIFOFULL_SHIFT)
#define FCI_TXFIFOFULL_SHIFT           16
#define FCI_TXFIFOFULL_FIELD           (0xFFFFFFFF - (0x1UL<<FCI_TXFIFOFULL_SHIFT))
#define FCI_TXFIFOFULL_INACTIVE        (0x0UL<<FCI_TXFIFOFULL_SHIFT)
#define FCI_TXFIFOFULL_ACTIVE          (0x1UL<<FCI_TXFIFOFULL_SHIFT)
#define FCI_TXFIFOFULL                 (0x1UL<<FCI_TXFIFOFULL_SHIFT)
#define FCI_RXFIFOHALFFULL_SHIFT       15
#define FCI_RXFIFOHALFFULL_FIELD       (0xFFFFFFFF - (0x1UL<<FCI_RXFIFOHALFFULL_SHIFT))
#define FCI_RXFIFOHALFFULL_INACTIVE    (0x0UL<<FCI_RXFIFOHALFFULL_SHIFT)
#define FCI_RXFIFOHALFFULL_ACTIVE      (0x1UL<<FCI_RXFIFOHALFFULL_SHIFT)
#define FCI_RXFIFOHALFFULL             (0x1UL<<FCI_RXFIFOHALFFULL_SHIFT)
#define FCI_TXFIFOHALFEMPTY_SHIFT      14
#define FCI_TXFIFOHALFEMPTY_FIELD      (0xFFFFFFFF - (0x1UL<<FCI_TXFIFOHALFEMPTY_SHIFT))
#define FCI_TXFIFOHALFEMPTY_INACTIVE   (0x0UL<<FCI_TXFIFOHALFEMPTY_SHIFT)
#define FCI_TXFIFOHALFEMPTY_ACTIVE     (0x1UL<<FCI_TXFIFOHALFEMPTY_SHIFT)
#define FCI_TXFIFOHALFEMPTY            (0x1UL<<FCI_TXFIFOHALFEMPTY_SHIFT)
#define FCI_RXACTIVE_SHIFT             13
#define FCI_RXACTIVE_FIELD             (0xFFFFFFFF - (0x1UL<<FCI_RXACTIVE_SHIFT))
#define FCI_RXACTIVE_INACTIVE          (0x0UL<<FCI_RXACTIVE_SHIFT)
#define FCI_RXACTIVE_ACTIVE            (0x1UL<<FCI_RXACTIVE_SHIFT)
#define FCI_RXACTIVE                   (0x1UL<<FCI_RXACTIVE_SHIFT)
#define FCI_TXACTIVE_SHIFT             12
#define FCI_TXACTIVE_FIELD             (0xFFFFFFFF - (0x1UL<<FCI_TXACTIVE_SHIFT))
#define FCI_TXACTIVE_INACTIVE          (0x0UL<<FCI_TXACTIVE_SHIFT)
#define FCI_TXACTIVE_ACTIVE            (0x1UL<<FCI_TXACTIVE_SHIFT)
#define FCI_TXACTIVE                   (0x1UL<<FCI_TXACTIVE_SHIFT)
#define FCI_CMDACTIVE_SHIFT            11
#define FCI_CMDACTIVE_FIELD            (0xFFFFFFFF - (0x1UL<<FCI_CMDACTIVE_SHIFT))
#define FCI_CMDACTIVE_INACTIVE         (0x0UL<<FCI_CMDACTIVE_SHIFT)
#define FCI_CMDACTIVE_ACTIVE           (0x1UL<<FCI_CMDACTIVE_SHIFT)
#define FCI_CMDACTIVE                  (0x1UL<<FCI_CMDACTIVE_SHIFT)
#define FCI_DATABLOCKEND_SHIFT         10
#define FCI_DATABLOCKEND_FIELD         (0xFFFFFFFF - (0x1UL<<FCI_DATABLOCKEND_SHIFT))
#define FCI_DATABLOCKEND_INACTIVE      (0x0UL<<FCI_DATABLOCKEND_SHIFT)
#define FCI_DATABLOCKEND_ACTIVE        (0x1UL<<FCI_DATABLOCKEND_SHIFT)
#define FCI_DATABLOCKEND               (0x1UL<<FCI_DATABLOCKEND_SHIFT)
#define FCI_STARTBITERR_SHIFT          9
#define FCI_STARTBITERR_FIELD          (0xFFFFFFFF - (0x1UL<<FCI_STARTBITERR_SHIFT))
#define FCI_STARTBITERR_INACTIVE       (0x0UL<<FCI_STARTBITERR_SHIFT)
#define FCI_STARTBITERR_ACTIVE         (0x1UL<<FCI_STARTBITERR_SHIFT)
#define FCI_STARTBITERR                (0x1UL<<FCI_STARTBITERR_SHIFT)
#define FCI_DATAEND_SHIFT              8
#define FCI_DATAEND_FIELD              (0xFFFFFFFF - (0x1UL<<FCI_DATAEND_SHIFT))
#define FCI_DATAEND_INACTIVE           (0x0UL<<FCI_DATAEND_SHIFT)
#define FCI_DATAEND_ACTIVE             (0x1UL<<FCI_DATAEND_SHIFT)
#define FCI_DATAEND                    (0x1UL<<FCI_DATAEND_SHIFT)
#define FCI_CMDSENT_SHIFT              7
#define FCI_CMDSENT_FIELD              (0xFFFFFFFF - (0x1UL<<FCI_CMDSENT_SHIFT))
#define FCI_CMDSENT_INACTIVE           (0x0UL<<FCI_CMDSENT_SHIFT)
#define FCI_CMDSENT_ACTIVE             (0x1UL<<FCI_CMDSENT_SHIFT)
#define FCI_CMDSENT                    (0x1UL<<FCI_CMDSENT_SHIFT)
#define FCI_CMDRESPEND_SHIFT           6
#define FCI_CMDRESPEND_FIELD           (0xFFFFFFFF - (0x1UL<<FCI_CMDRESPEND_SHIFT))
#define FCI_CMDRESPEND_INACTIVE        (0x0UL<<FCI_CMDRESPEND_SHIFT)
#define FCI_CMDRESPEND_ACTIVE          (0x1UL<<FCI_CMDRESPEND_SHIFT)
#define FCI_CMDRESPEND                 (0x1UL<<FCI_CMDRESPEND_SHIFT)
#define FCI_RXOVERRUN_SHIFT            5
#define FCI_RXOVERRUN_FIELD            (0xFFFFFFFF - (0x1UL<<FCI_RXOVERRUN_SHIFT))
#define FCI_RXOVERRUN_INACTIVE         (0x0UL<<FCI_RXOVERRUN_SHIFT)
#define FCI_RXOVERRUN_ACTIVE           (0x1UL<<FCI_RXOVERRUN_SHIFT)
#define FCI_RXOVERRUN                  (0x1UL<<FCI_RXOVERRUN_SHIFT)
#define FCI_TXUNDERRUN_SHIFT           4
#define FCI_TXUNDERRUN_FIELD           (0xFFFFFFFF - (0x1UL<<FCI_TXUNDERRUN_SHIFT))
#define FCI_TXUNDERRUN_INACTIVE        (0x0UL<<FCI_TXUNDERRUN_SHIFT)
#define FCI_TXUNDERRUN_ACTIVE          (0x1UL<<FCI_TXUNDERRUN_SHIFT)
#define FCI_TXUNDERRUN                 (0x1UL<<FCI_TXUNDERRUN_SHIFT)
#define FCI_DATATIMEOUT_SHIFT          3
#define FCI_DATATIMEOUT_FIELD          (0xFFFFFFFF - (0x1UL<<FCI_DATATIMEOUT_SHIFT))
#define FCI_DATATIMEOUT_INACTIVE       (0x0UL<<FCI_DATATIMEOUT_SHIFT)
#define FCI_DATATIMEOUT_ACTIVE         (0x1UL<<FCI_DATATIMEOUT_SHIFT)
#define FCI_DATATIMEOUT                (0x1UL<<FCI_DATATIMEOUT_SHIFT)
#define FCI_CMDTIMEOUT_SHIFT           2
#define FCI_CMDTIMEOUT_FIELD           (0xFFFFFFFF - (0x1UL<<FCI_CMDTIMEOUT_SHIFT))
#define FCI_CMDTIMEOUT_INACTIVE        (0x0UL<<FCI_CMDTIMEOUT_SHIFT)
#define FCI_CMDTIMEOUT_ACTIVE          (0x1UL<<FCI_CMDTIMEOUT_SHIFT)
#define FCI_CMDTIMEOUT                 (0x1UL<<FCI_CMDTIMEOUT_SHIFT)
#define FCI_DATACRCFAIL_SHIFT          1
#define FCI_DATACRCFAIL_FIELD          (0xFFFFFFFF - (0x1UL<<FCI_DATACRCFAIL_SHIFT))
#define FCI_DATACRCFAIL_INACTIVE       (0x0UL<<FCI_DATACRCFAIL_SHIFT)
#define FCI_DATACRCFAIL_ACTIVE         (0x1UL<<FCI_DATACRCFAIL_SHIFT)
#define FCI_DATACRCFAIL                (0x1UL<<FCI_DATACRCFAIL_SHIFT)
#define FCI_CMDCRCFAIL_SHIFT           0
#define FCI_CMDCRCFAIL_FIELD           (0xFFFFFFFF - (0x1UL<<FCI_CMDCRCFAIL_SHIFT))
#define FCI_CMDCRCFAIL_INACTIVE        (0x0UL<<FCI_CMDCRCFAIL_SHIFT)
#define FCI_CMDCRCFAIL_ACTIVE          (0x1UL<<FCI_CMDCRCFAIL_SHIFT)
#define FCI_CMDCRCFAIL                 (0x1UL<<FCI_CMDCRCFAIL_SHIFT)

/*****************************************************************************/
/* Register description for CLEAR */

/* Reset value of register FCI_CLEAR */
#define FCI_CLEAR_VALUE                0x0

/* Bits definition for register FCI_CLEAR */
#define FCI_DATABLOCKENDCLR_SHIFT      10
#define FCI_DATABLOCKENDCLR_FIELD      (0xFFFFFFFF - (0x1UL<<FCI_DATABLOCKENDCLR_SHIFT))
#define FCI_DATABLOCKENDCLR_0          (0x0UL<<FCI_DATABLOCKENDCLR_SHIFT)
#define FCI_DATABLOCKENDCLR_1          (0x1UL<<FCI_DATABLOCKENDCLR_SHIFT)
#define FCI_DATABLOCKENDCLR            (0x1UL<<FCI_DATABLOCKENDCLR_SHIFT)
#define FCI_STARTBITERRCLR_SHIFT       9
#define FCI_STARTBITERRCLR_FIELD       (0xFFFFFFFF - (0x1UL<<FCI_STARTBITERRCLR_SHIFT))
#define FCI_STARTBITERRCLR_0           (0x0UL<<FCI_STARTBITERRCLR_SHIFT)
#define FCI_STARTBITERRCLR_1           (0x1UL<<FCI_STARTBITERRCLR_SHIFT)
#define FCI_STARTBITERRCLR             (0x1UL<<FCI_STARTBITERRCLR_SHIFT)
#define FCI_DATAENDCLR_SHIFT           8
#define FCI_DATAENDCLR_FIELD           (0xFFFFFFFF - (0x1UL<<FCI_DATAENDCLR_SHIFT))
#define FCI_DATAENDCLR_0               (0x0UL<<FCI_DATAENDCLR_SHIFT)
#define FCI_DATAENDCLR_1               (0x1UL<<FCI_DATAENDCLR_SHIFT)
#define FCI_DATAENDCLR                 (0x1UL<<FCI_DATAENDCLR_SHIFT)
#define FCI_CMDSENTCLR_SHIFT           7
#define FCI_CMDSENTCLR_FIELD           (0xFFFFFFFF - (0x1UL<<FCI_CMDSENTCLR_SHIFT))
#define FCI_CMDSENTCLR_0               (0x0UL<<FCI_CMDSENTCLR_SHIFT)
#define FCI_CMDSENTCLR_1               (0x1UL<<FCI_CMDSENTCLR_SHIFT)
#define FCI_CMDSENTCLR                 (0x1UL<<FCI_CMDSENTCLR_SHIFT)
#define FCI_CMDRESPENDCLR_SHIFT        6
#define FCI_CMDRESPENDCLR_FIELD        (0xFFFFFFFF - (0x1UL<<FCI_CMDRESPENDCLR_SHIFT))
#define FCI_CMDRESPENDCLR_0            (0x0UL<<FCI_CMDRESPENDCLR_SHIFT)
#define FCI_CMDRESPENDCLR_1            (0x1UL<<FCI_CMDRESPENDCLR_SHIFT)
#define FCI_CMDRESPENDCLR              (0x1UL<<FCI_CMDRESPENDCLR_SHIFT)
#define FCI_RXOVERRUNCLR_SHIFT         5
#define FCI_RXOVERRUNCLR_FIELD         (0xFFFFFFFF - (0x1UL<<FCI_RXOVERRUNCLR_SHIFT))
#define FCI_RXOVERRUNCLR_0             (0x0UL<<FCI_RXOVERRUNCLR_SHIFT)
#define FCI_RXOVERRUNCLR_1             (0x1UL<<FCI_RXOVERRUNCLR_SHIFT)
#define FCI_RXOVERRUNCLR               (0x1UL<<FCI_RXOVERRUNCLR_SHIFT)
#define FCI_TXUNDERRUNCLR_SHIFT        4
#define FCI_TXUNDERRUNCLR_FIELD        (0xFFFFFFFF - (0x1UL<<FCI_TXUNDERRUNCLR_SHIFT))
#define FCI_TXUNDERRUNCLR_0            (0x0UL<<FCI_TXUNDERRUNCLR_SHIFT)
#define FCI_TXUNDERRUNCLR_1            (0x1UL<<FCI_TXUNDERRUNCLR_SHIFT)
#define FCI_TXUNDERRUNCLR              (0x1UL<<FCI_TXUNDERRUNCLR_SHIFT)
#define FCI_DATATIMEOUTCLR_SHIFT       3
#define FCI_DATATIMEOUTCLR_FIELD       (0xFFFFFFFF - (0x1UL<<FCI_DATATIMEOUTCLR_SHIFT))
#define FCI_DATATIMEOUTCLR_0           (0x0UL<<FCI_DATATIMEOUTCLR_SHIFT)
#define FCI_DATATIMEOUTCLR_1           (0x1UL<<FCI_DATATIMEOUTCLR_SHIFT)
#define FCI_DATATIMEOUTCLR             (0x1UL<<FCI_DATATIMEOUTCLR_SHIFT)
#define FCI_CMDTIMEOUTCLR_SHIFT        2
#define FCI_CMDTIMEOUTCLR_FIELD        (0xFFFFFFFF - (0x1UL<<FCI_CMDTIMEOUTCLR_SHIFT))
#define FCI_CMDTIMEOUTCLR_0            (0x0UL<<FCI_CMDTIMEOUTCLR_SHIFT)
#define FCI_CMDTIMEOUTCLR_1            (0x1UL<<FCI_CMDTIMEOUTCLR_SHIFT)
#define FCI_CMDTIMEOUTCLR              (0x1UL<<FCI_CMDTIMEOUTCLR_SHIFT)
#define FCI_DATACRCFAILCLR_SHIFT       1
#define FCI_DATACRCFAILCLR_FIELD       (0xFFFFFFFF - (0x1UL<<FCI_DATACRCFAILCLR_SHIFT))
#define FCI_DATACRCFAILCLR_0           (0x0UL<<FCI_DATACRCFAILCLR_SHIFT)
#define FCI_DATACRCFAILCLR_1           (0x1UL<<FCI_DATACRCFAILCLR_SHIFT)
#define FCI_DATACRCFAILCLR             (0x1UL<<FCI_DATACRCFAILCLR_SHIFT)
#define FCI_CMDCRCFAILCLR_SHIFT        0
#define FCI_CMDCRCFAILCLR_FIELD        (0xFFFFFFFF - (0x1UL<<FCI_CMDCRCFAILCLR_SHIFT))
#define FCI_CMDCRCFAILCLR_0            (0x0UL<<FCI_CMDCRCFAILCLR_SHIFT)
#define FCI_CMDCRCFAILCLR_1            (0x1UL<<FCI_CMDCRCFAILCLR_SHIFT)
#define FCI_CMDCRCFAILCLR              (0x1UL<<FCI_CMDCRCFAILCLR_SHIFT)

/*****************************************************************************/
/* Register description for MASK */

/* Reset value of register FCI_MASK */
#define FCI_MASK_VALUE                 0x0

/* Bits definition for register FCI_MASK */
#define FCI_RXINACTIVE_SHIFT           30
#define FCI_RXINACTIVE_FIELD           (0xFFFFFFFF - (0x1UL<<FCI_RXINACTIVE_SHIFT))
#define FCI_RXINACTIVE_0               (0x0UL<<FCI_RXINACTIVE_SHIFT)
#define FCI_RXINACTIVE_1               (0x1UL<<FCI_RXINACTIVE_SHIFT)
#define FCI_RXINACTIVE                 (0x1UL<<FCI_RXINACTIVE_SHIFT)
#define FCI_SNDCLKGATE_SHIFT           29
#define FCI_SNDCLKGATE_FIELD           (0xFFFFFFFF - (0x1UL<<FCI_SNDCLKGATE_SHIFT))
#define FCI_SNDCLKGATE_0               (0x0UL<<FCI_SNDCLKGATE_SHIFT)
#define FCI_SNDCLKGATE_1               (0x1UL<<FCI_SNDCLKGATE_SHIFT)
#define FCI_SNDCLKGATE                 (0x1UL<<FCI_SNDCLKGATE_SHIFT)
#define FCI_RCVCLKGATE_SHIFT           28
#define FCI_RCVCLKGATE_FIELD           (0xFFFFFFFF - (0x1UL<<FCI_RCVCLKGATE_SHIFT))
#define FCI_RCVCLKGATE_0               (0x0UL<<FCI_RCVCLKGATE_SHIFT)
#define FCI_RCVCLKGATE_1               (0x1UL<<FCI_RCVCLKGATE_SHIFT)
#define FCI_RCVCLKGATE                 (0x1UL<<FCI_RCVCLKGATE_SHIFT)
#define FCI_RXFIFOAMF_SHIFT            27
#define FCI_RXFIFOAMF_FIELD            (0xFFFFFFFF - (0x1UL<<FCI_RXFIFOAMF_SHIFT))
#define FCI_RXFIFOAMF_0                (0x0UL<<FCI_RXFIFOAMF_SHIFT)
#define FCI_RXFIFOAMF_1                (0x1UL<<FCI_RXFIFOAMF_SHIFT)
#define FCI_RXFIFOAMF                  (0x1UL<<FCI_RXFIFOAMF_SHIFT)
#define FCI_TXFIFOAME_SHIFT            26
#define FCI_TXFIFOAME_FIELD            (0xFFFFFFFF - (0x1UL<<FCI_TXFIFOAME_SHIFT))
#define FCI_TXFIFOAME_0                (0x0UL<<FCI_TXFIFOAME_SHIFT)
#define FCI_TXFIFOAME_1                (0x1UL<<FCI_TXFIFOAME_SHIFT)
#define FCI_TXFIFOAME                  (0x1UL<<FCI_TXFIFOAME_SHIFT)
#define FCI_TXFIFOLETHR_SHIFT          25
#define FCI_TXFIFOLETHR_FIELD          (0xFFFFFFFF - (0x1UL<<FCI_TXFIFOLETHR_SHIFT))
#define FCI_TXFIFOLETHR_0              (0x0UL<<FCI_TXFIFOLETHR_SHIFT)
#define FCI_TXFIFOLETHR_1              (0x1UL<<FCI_TXFIFOLETHR_SHIFT)
#define FCI_TXFIFOLETHR                (0x1UL<<FCI_TXFIFOLETHR_SHIFT)
#define FCI_TXFIFOLE8_SHIFT            24
#define FCI_TXFIFOLE8_FIELD            (0xFFFFFFFF - (0x1UL<<FCI_TXFIFOLE8_SHIFT))
#define FCI_TXFIFOLE8_0                (0x0UL<<FCI_TXFIFOLE8_SHIFT)
#define FCI_TXFIFOLE8_1                (0x1UL<<FCI_TXFIFOLE8_SHIFT)
#define FCI_TXFIFOLE8                  (0x1UL<<FCI_TXFIFOLE8_SHIFT)
#define FCI_RXFIFOGE8_SHIFT            23
#define FCI_RXFIFOGE8_FIELD            (0xFFFFFFFF - (0x1UL<<FCI_RXFIFOGE8_SHIFT))
#define FCI_RXFIFOGE8_0                (0x0UL<<FCI_RXFIFOGE8_SHIFT)
#define FCI_RXFIFOGE8_1                (0x1UL<<FCI_RXFIFOGE8_SHIFT)
#define FCI_RXFIFOGE8                  (0x1UL<<FCI_RXFIFOGE8_SHIFT)
#define FCI_TXSTARTCOND_SHIFT          22
#define FCI_TXSTARTCOND_FIELD          (0xFFFFFFFF - (0x1UL<<FCI_TXSTARTCOND_SHIFT))
#define FCI_TXSTARTCOND_0              (0x0UL<<FCI_TXSTARTCOND_SHIFT)
#define FCI_TXSTARTCOND_1              (0x1UL<<FCI_TXSTARTCOND_SHIFT)
#define FCI_TXSTARTCOND                (0x1UL<<FCI_TXSTARTCOND_SHIFT)
#define FCI_RXDATAAVLBL_SHIFT          21
#define FCI_RXDATAAVLBL_FIELD          (0xFFFFFFFF - (0x1UL<<FCI_RXDATAAVLBL_SHIFT))
#define FCI_RXDATAAVLBL_0              (0x0UL<<FCI_RXDATAAVLBL_SHIFT)
#define FCI_RXDATAAVLBL_1              (0x1UL<<FCI_RXDATAAVLBL_SHIFT)
#define FCI_RXDATAAVLBL                (0x1UL<<FCI_RXDATAAVLBL_SHIFT)
#define FCI_TXDATAAVLBL_SHIFT          20
#define FCI_TXDATAAVLBL_FIELD          (0xFFFFFFFF - (0x1UL<<FCI_TXDATAAVLBL_SHIFT))
#define FCI_TXDATAAVLBL_0              (0x0UL<<FCI_TXDATAAVLBL_SHIFT)
#define FCI_TXDATAAVLBL_1              (0x1UL<<FCI_TXDATAAVLBL_SHIFT)
#define FCI_TXDATAAVLBL                (0x1UL<<FCI_TXDATAAVLBL_SHIFT)
#define FCI_RXFIFOEMPTY_SHIFT          19
#define FCI_RXFIFOEMPTY_FIELD          (0xFFFFFFFF - (0x1UL<<FCI_RXFIFOEMPTY_SHIFT))
#define FCI_RXFIFOEMPTY_0              (0x0UL<<FCI_RXFIFOEMPTY_SHIFT)
#define FCI_RXFIFOEMPTY_1              (0x1UL<<FCI_RXFIFOEMPTY_SHIFT)
#define FCI_RXFIFOEMPTY                (0x1UL<<FCI_RXFIFOEMPTY_SHIFT)
#define FCI_TXFIFOEMPTY_SHIFT          18
#define FCI_TXFIFOEMPTY_FIELD          (0xFFFFFFFF - (0x1UL<<FCI_TXFIFOEMPTY_SHIFT))
#define FCI_TXFIFOEMPTY_0              (0x0UL<<FCI_TXFIFOEMPTY_SHIFT)
#define FCI_TXFIFOEMPTY_1              (0x1UL<<FCI_TXFIFOEMPTY_SHIFT)
#define FCI_TXFIFOEMPTY                (0x1UL<<FCI_TXFIFOEMPTY_SHIFT)
#define FCI_RXFIFOFULL_SHIFT           17
#define FCI_RXFIFOFULL_FIELD           (0xFFFFFFFF - (0x1UL<<FCI_RXFIFOFULL_SHIFT))
#define FCI_RXFIFOFULL_0               (0x0UL<<FCI_RXFIFOFULL_SHIFT)
#define FCI_RXFIFOFULL_1               (0x1UL<<FCI_RXFIFOFULL_SHIFT)
#define FCI_RXFIFOFULL                 (0x1UL<<FCI_RXFIFOFULL_SHIFT)
#define FCI_TXFIFOFULL_SHIFT           16
#define FCI_TXFIFOFULL_FIELD           (0xFFFFFFFF - (0x1UL<<FCI_TXFIFOFULL_SHIFT))
#define FCI_TXFIFOFULL_0               (0x0UL<<FCI_TXFIFOFULL_SHIFT)
#define FCI_TXFIFOFULL_1               (0x1UL<<FCI_TXFIFOFULL_SHIFT)
#define FCI_TXFIFOFULL                 (0x1UL<<FCI_TXFIFOFULL_SHIFT)
#define FCI_RXFIFOHALFFULL_SHIFT       15
#define FCI_RXFIFOHALFFULL_FIELD       (0xFFFFFFFF - (0x1UL<<FCI_RXFIFOHALFFULL_SHIFT))
#define FCI_RXFIFOHALFFULL_0           (0x0UL<<FCI_RXFIFOHALFFULL_SHIFT)
#define FCI_RXFIFOHALFFULL_1           (0x1UL<<FCI_RXFIFOHALFFULL_SHIFT)
#define FCI_RXFIFOHALFFULL             (0x1UL<<FCI_RXFIFOHALFFULL_SHIFT)
#define FCI_TXFIFOHALFEMPTY_SHIFT      14
#define FCI_TXFIFOHALFEMPTY_FIELD      (0xFFFFFFFF - (0x1UL<<FCI_TXFIFOHALFEMPTY_SHIFT))
#define FCI_TXFIFOHALFEMPTY_0          (0x0UL<<FCI_TXFIFOHALFEMPTY_SHIFT)
#define FCI_TXFIFOHALFEMPTY_1          (0x1UL<<FCI_TXFIFOHALFEMPTY_SHIFT)
#define FCI_TXFIFOHALFEMPTY            (0x1UL<<FCI_TXFIFOHALFEMPTY_SHIFT)
#define FCI_RXACTIVE_SHIFT             13
#define FCI_RXACTIVE_FIELD             (0xFFFFFFFF - (0x1UL<<FCI_RXACTIVE_SHIFT))
#define FCI_RXACTIVE_0                 (0x0UL<<FCI_RXACTIVE_SHIFT)
#define FCI_RXACTIVE_1                 (0x1UL<<FCI_RXACTIVE_SHIFT)
#define FCI_RXACTIVE                   (0x1UL<<FCI_RXACTIVE_SHIFT)
#define FCI_TXACTIVE_SHIFT             12
#define FCI_TXACTIVE_FIELD             (0xFFFFFFFF - (0x1UL<<FCI_TXACTIVE_SHIFT))
#define FCI_TXACTIVE_0                 (0x0UL<<FCI_TXACTIVE_SHIFT)
#define FCI_TXACTIVE_1                 (0x1UL<<FCI_TXACTIVE_SHIFT)
#define FCI_TXACTIVE                   (0x1UL<<FCI_TXACTIVE_SHIFT)
#define FCI_CMDACTIVE_SHIFT            11
#define FCI_CMDACTIVE_FIELD            (0xFFFFFFFF - (0x1UL<<FCI_CMDACTIVE_SHIFT))
#define FCI_CMDACTIVE_0                (0x0UL<<FCI_CMDACTIVE_SHIFT)
#define FCI_CMDACTIVE_1                (0x1UL<<FCI_CMDACTIVE_SHIFT)
#define FCI_CMDACTIVE                  (0x1UL<<FCI_CMDACTIVE_SHIFT)
#define FCI_DATABLOCKENDCLR_SHIFT      10
#define FCI_DATABLOCKENDCLR_FIELD      (0xFFFFFFFF - (0x1UL<<FCI_DATABLOCKENDCLR_SHIFT))
#define FCI_DATABLOCKENDCLR_0          (0x0UL<<FCI_DATABLOCKENDCLR_SHIFT)
#define FCI_DATABLOCKENDCLR_1          (0x1UL<<FCI_DATABLOCKENDCLR_SHIFT)
#define FCI_DATABLOCKENDCLR            (0x1UL<<FCI_DATABLOCKENDCLR_SHIFT)
#define FCI_STARTBITERRCLR_SHIFT       9
#define FCI_STARTBITERRCLR_FIELD       (0xFFFFFFFF - (0x1UL<<FCI_STARTBITERRCLR_SHIFT))
#define FCI_STARTBITERRCLR_0           (0x0UL<<FCI_STARTBITERRCLR_SHIFT)
#define FCI_STARTBITERRCLR_1           (0x1UL<<FCI_STARTBITERRCLR_SHIFT)
#define FCI_STARTBITERRCLR             (0x1UL<<FCI_STARTBITERRCLR_SHIFT)
#define FCI_DATAENDCLR_SHIFT           8
#define FCI_DATAENDCLR_FIELD           (0xFFFFFFFF - (0x1UL<<FCI_DATAENDCLR_SHIFT))
#define FCI_DATAENDCLR_0               (0x0UL<<FCI_DATAENDCLR_SHIFT)
#define FCI_DATAENDCLR_1               (0x1UL<<FCI_DATAENDCLR_SHIFT)
#define FCI_DATAENDCLR                 (0x1UL<<FCI_DATAENDCLR_SHIFT)
#define FCI_CMDSENTCLR_SHIFT           7
#define FCI_CMDSENTCLR_FIELD           (0xFFFFFFFF - (0x1UL<<FCI_CMDSENTCLR_SHIFT))
#define FCI_CMDSENTCLR_0               (0x0UL<<FCI_CMDSENTCLR_SHIFT)
#define FCI_CMDSENTCLR_1               (0x1UL<<FCI_CMDSENTCLR_SHIFT)
#define FCI_CMDSENTCLR                 (0x1UL<<FCI_CMDSENTCLR_SHIFT)
#define FCI_CMDRESPENDCLR_SHIFT        6
#define FCI_CMDRESPENDCLR_FIELD        (0xFFFFFFFF - (0x1UL<<FCI_CMDRESPENDCLR_SHIFT))
#define FCI_CMDRESPENDCLR_0            (0x0UL<<FCI_CMDRESPENDCLR_SHIFT)
#define FCI_CMDRESPENDCLR_1            (0x1UL<<FCI_CMDRESPENDCLR_SHIFT)
#define FCI_CMDRESPENDCLR              (0x1UL<<FCI_CMDRESPENDCLR_SHIFT)
#define FCI_RXOVERRUNCLR_SHIFT         5
#define FCI_RXOVERRUNCLR_FIELD         (0xFFFFFFFF - (0x1UL<<FCI_RXOVERRUNCLR_SHIFT))
#define FCI_RXOVERRUNCLR_0             (0x0UL<<FCI_RXOVERRUNCLR_SHIFT)
#define FCI_RXOVERRUNCLR_1             (0x1UL<<FCI_RXOVERRUNCLR_SHIFT)
#define FCI_RXOVERRUNCLR               (0x1UL<<FCI_RXOVERRUNCLR_SHIFT)
#define FCI_TXUNDERRUNCLR_SHIFT        4
#define FCI_TXUNDERRUNCLR_FIELD        (0xFFFFFFFF - (0x1UL<<FCI_TXUNDERRUNCLR_SHIFT))
#define FCI_TXUNDERRUNCLR_0            (0x0UL<<FCI_TXUNDERRUNCLR_SHIFT)
#define FCI_TXUNDERRUNCLR_1            (0x1UL<<FCI_TXUNDERRUNCLR_SHIFT)
#define FCI_TXUNDERRUNCLR              (0x1UL<<FCI_TXUNDERRUNCLR_SHIFT)
#define FCI_DATATIMEOUTCLR_SHIFT       3
#define FCI_DATATIMEOUTCLR_FIELD       (0xFFFFFFFF - (0x1UL<<FCI_DATATIMEOUTCLR_SHIFT))
#define FCI_DATATIMEOUTCLR_0           (0x0UL<<FCI_DATATIMEOUTCLR_SHIFT)
#define FCI_DATATIMEOUTCLR_1           (0x1UL<<FCI_DATATIMEOUTCLR_SHIFT)
#define FCI_DATATIMEOUTCLR             (0x1UL<<FCI_DATATIMEOUTCLR_SHIFT)
#define FCI_CMDTIMEOUTCLR_SHIFT        2
#define FCI_CMDTIMEOUTCLR_FIELD        (0xFFFFFFFF - (0x1UL<<FCI_CMDTIMEOUTCLR_SHIFT))
#define FCI_CMDTIMEOUTCLR_0            (0x0UL<<FCI_CMDTIMEOUTCLR_SHIFT)
#define FCI_CMDTIMEOUTCLR_1            (0x1UL<<FCI_CMDTIMEOUTCLR_SHIFT)
#define FCI_CMDTIMEOUTCLR              (0x1UL<<FCI_CMDTIMEOUTCLR_SHIFT)
#define FCI_DATACRCFAILCLR_SHIFT       1
#define FCI_DATACRCFAILCLR_FIELD       (0xFFFFFFFF - (0x1UL<<FCI_DATACRCFAILCLR_SHIFT))
#define FCI_DATACRCFAILCLR_0           (0x0UL<<FCI_DATACRCFAILCLR_SHIFT)
#define FCI_DATACRCFAILCLR_1           (0x1UL<<FCI_DATACRCFAILCLR_SHIFT)
#define FCI_DATACRCFAILCLR             (0x1UL<<FCI_DATACRCFAILCLR_SHIFT)
#define FCI_CMDCRCFAILCLR_SHIFT        0
#define FCI_CMDCRCFAILCLR_FIELD        (0xFFFFFFFF - (0x1UL<<FCI_CMDCRCFAILCLR_SHIFT))
#define FCI_CMDCRCFAILCLR_0            (0x0UL<<FCI_CMDCRCFAILCLR_SHIFT)
#define FCI_CMDCRCFAILCLR_1            (0x1UL<<FCI_CMDCRCFAILCLR_SHIFT)
#define FCI_CMDCRCFAILCLR              (0x1UL<<FCI_CMDCRCFAILCLR_SHIFT)

/*****************************************************************************/
/* Register description for FIFOCNT */

/* Reset value of register FCI_FIFOCNT */
#define FCI_FIFOCNT_VALUE              0x0

/* Bits definition for register FCI_FIFOCNT */
#define FCI_FIFOCNT_SHIFT              0
#define FCI_FIFOCNT_FIELD              (0xFFFFFFFF - (0x7FFFUL<<FCI_FIFOCNT_SHIFT))
#define FCI_FIFOCNT_REMAINING_DATA     (0x0UL<<FCI_FIFOCNT_SHIFT)

/*****************************************************************************/
/* Register description for FIFOCTRL */

/* Reset value of register FCI_FIFOCTRL */
#define FCI_FIFOCTRL_VALUE             0x4

/* Bits definition for register FCI_FIFOCTRL */
#define FCI_TXFIFOTHRESHOLD_SHIFT      2
#define FCI_TXFIFOTHRESHOLD_FIELD      (0xFFFFFFFF - (0x3FUL<<FCI_TXFIFOTHRESHOLD_SHIFT))
#define FCI_TXFIFOTHRESHOLD_TX_FIFO_THRESHOLD      (0x1UL<<FCI_TXFIFOTHRESHOLD_SHIFT)
#define FCI_TXFIFOTHREN_SHIFT          1
#define FCI_TXFIFOTHREN_FIELD          (0xFFFFFFFF - (0x1UL<<FCI_TXFIFOTHREN_SHIFT))
#define FCI_TXFIFOTHREN_0              (0x0UL<<FCI_TXFIFOTHREN_SHIFT)
#define FCI_TXFIFOTHREN_1              (0x1UL<<FCI_TXFIFOTHREN_SHIFT)
#define FCI_TXFIFOTHREN                (0x1UL<<FCI_TXFIFOTHREN_SHIFT)
#define FCI_GATEFCICLKEN_SHIFT         0
#define FCI_GATEFCICLKEN_FIELD         (0xFFFFFFFF - (0x1UL<<FCI_GATEFCICLKEN_SHIFT))
#define FCI_GATEFCICLKEN_0             (0x0UL<<FCI_GATEFCICLKEN_SHIFT)
#define FCI_GATEFCICLKEN_1             (0x1UL<<FCI_GATEFCICLKEN_SHIFT)
#define FCI_GATEFCICLKEN               (0x1UL<<FCI_GATEFCICLKEN_SHIFT)

/*****************************************************************************/
/* Register description for FIFO */

/* Reset value of register FCI_FIFO */
#define FCI_FIFO_VALUE                 0x0

/* Bits definition for register FCI_FIFO */
#define FCI_DATA_SHIFT                 0
#define FCI_DATA_FIELD                 (0xFFFFFFFF - (0x7FFFFFFFUL<<FCI_DATA_SHIFT))
#define FCI_DATA_FIFO_DATA             (0x0UL<<FCI_DATA_SHIFT)

/*****************************************************************************/

/*****************************************************************************
* Definitions for: FRU2
*****************************************************************************/

/* Pointer on base address */
#define FRU2_BASE                      IOA(FRU2_BASE_ADDR)

/* FRU SC0 Register (16 bits) */
#define FRU2_SC0_OFFSET                0x0
#define FRU2_SC0                       IOA(FRU2_BASE_ADDR + FRU2_SC0_OFFSET)

/* FRU SC1 Register (16 bits) */
#define FRU2_SC1_OFFSET                0x4
#define FRU2_SC1                       IOA(FRU2_BASE_ADDR + FRU2_SC1_OFFSET)

/* FRU SC2 Register (16 bits) */
#define FRU2_SC2_OFFSET                0x8
#define FRU2_SC2                       IOA(FRU2_BASE_ADDR + FRU2_SC2_OFFSET)

/* FRU SC3 Register (16 bits) */
#define FRU2_SC3_OFFSET                0xC
#define FRU2_SC3                       IOA(FRU2_BASE_ADDR + FRU2_SC3_OFFSET)

/* FRU DSP0 Register (16 bits) */
#define FRU2_DSP0_OFFSET               0x10
#define FRU2_DSP0_REG                  IOA(FRU2_BASE_ADDR + FRU2_DSP0_OFFSET)

/* FRU DSP1 Register (16 bits) */
#define FRU2_DSP1_OFFSET               0x14
#define FRU2_DSP1_REG                  IOA(FRU2_BASE_ADDR + FRU2_DSP1_OFFSET)

/* FRU DSP2 Register (16 bits) */
#define FRU2_DSP2_OFFSET               0x18
#define FRU2_DSP2_REG                  IOA(FRU2_BASE_ADDR + FRU2_DSP2_OFFSET)

/* FRU DSP3 Register (16 bits) */
#define FRU2_DSP3_OFFSET               0x1C
#define FRU2_DSP3_REG                  IOA(FRU2_BASE_ADDR + FRU2_DSP3_OFFSET)


/*****************************************************************************
* Definitions for: GPIOA
*****************************************************************************/

/* Pointer on base address */
#define GPIOA_BASE                     IOA(GPIOA_BASE_ADDR)

/* GPIOA PINS Register (32 bits) */
#define GPIOA_PINS_OFFSET              0x0
#define GPIOA_PINS_REG                 IOA(GPIOA_BASE_ADDR + GPIOA_PINS_OFFSET)

/* GPIOA OR Register (32 bits) */
#define GPIOA_OR_OFFSET                0x4
#define GPIOA_OR_REG                   IOA(GPIOA_BASE_ADDR + GPIOA_OR_OFFSET)

/* GPIOA DR Register (32 bits) */
#define GPIOA_DR_OFFSET                0x8
#define GPIOA_DR_REG                   IOA(GPIOA_BASE_ADDR + GPIOA_DR_OFFSET)

/* Register description for PINS */

/* Reset value of register GPIOA_PINS */
#define GPIOA_PINS_VALUE               0x0

/* Bits definition for register GPIOA_PINS */
#define GPIOA_PINS_SHIFT               0
#define GPIOA_PINS_FIELD               (0xFFFFFFFF - (0x7FFFFFFFUL<<GPIOA_PINS_SHIFT))

/*****************************************************************************/
/* Register description for OR */

/* Reset value of register GPIOA_OR */
#define GPIOA_OR_VALUE                 0x0

/* Bits definition for register GPIOA_OR */
#define GPIOA_OR_SHIFT                 0
#define GPIOA_OR_FIELD                 (0xFFFFFFFF - (0x7FFFFFFFUL<<GPIOA_OR_SHIFT))
#define GPIOA_OR_OUTPUT_REGISTER       (0x0UL<<GPIOA_OR_SHIFT)

/*****************************************************************************/
/* Register description for DR */

/* Reset value of register GPIOA_DR */
#define GPIOA_DR_VALUE                 0x0

/* Bits definition for register GPIOA_DR */
#define GPIOA_DR_SHIFT                 0
#define GPIOA_DR_FIELD                 (0xFFFFFFFF - (0x7FFFFFFFUL<<GPIOA_DR_SHIFT))
#define GPIOA_DR_0                     (0x0UL<<GPIOA_DR_SHIFT)
#define GPIOA_DR_1                     (0x1UL<<GPIOA_DR_SHIFT)

/*****************************************************************************/

/*****************************************************************************
* Definitions for: GPIOB
*****************************************************************************/

/* Pointer on base address */
#define GPIOB_BASE                     IOA(GPIOB_BASE_ADDR)

/* GPIOB PINS Register (32 bits) */
#define GPIOB_PINS_OFFSET              0x0
#define GPIOB_PINS_REG                 IOA(GPIOB_BASE_ADDR + GPIOB_PINS_OFFSET)

/* GPIOB OR Register (32 bits) */
#define GPIOB_OR_OFFSET                0x4
#define GPIOB_OR_REG                   IOA(GPIOB_BASE_ADDR + GPIOB_OR_OFFSET)

/* GPIOB DR Register (32 bits) */
#define GPIOB_DR_OFFSET                0x8
#define GPIOB_DR_REG                   IOA(GPIOB_BASE_ADDR + GPIOB_DR_OFFSET)

/* Register description for PINS */

/* Reset value of register GPIOB_PINS */
#define GPIOB_PINS_VALUE               0x0

/* Bits definition for register GPIOB_PINS */
#define GPIOB_PINS_SHIFT               0
#define GPIOB_PINS_FIELD               (0xFFFFFFFF - (0xFFFFUL<<GPIOB_PINS_SHIFT))

/*****************************************************************************/
/* Register description for OR */

/* Reset value of register GPIOB_OR */
#define GPIOB_OR_VALUE                 0x0

/* Bits definition for register GPIOB_OR */
#define GPIOB_OR_SHIFT                 0
#define GPIOB_OR_FIELD                 (0xFFFFFFFF - (0xFFFFUL<<GPIOB_OR_SHIFT))
#define GPIOB_OR_OUTPUT_REGISTER       (0x0UL<<GPIOB_OR_SHIFT)

/*****************************************************************************/
/* Register description for DR */

/* Reset value of register GPIOB_DR */
#define GPIOB_DR_VALUE                 0x0

/* Bits definition for register GPIOB_DR */
#define GPIOB_DR_SHIFT                 0
#define GPIOB_DR_FIELD                 (0xFFFFFFFF - (0xFFFFUL<<GPIOB_DR_SHIFT))
#define GPIOB_DR_0                     (0x0UL<<GPIOB_DR_SHIFT)
#define GPIOB_DR_1                     (0x1UL<<GPIOB_DR_SHIFT)

/*****************************************************************************/

/*****************************************************************************
* Definitions for: GPIOC
*****************************************************************************/

/* Pointer on base address */
#define GPIOC_BASE                     IOA(GPIOC_BASE_ADDR)

/* GPIOC PINS Register (32 bits) */
#define GPIOC_PINS_OFFSET              0x0
#define GPIOC_PINS_REG                 IOA(GPIOC_BASE_ADDR + GPIOC_PINS_OFFSET)

/* GPIOC OR Register (32 bits) */
#define GPIOC_OR_OFFSET                0x4
#define GPIOC_OR_REG                   IOA(GPIOC_BASE_ADDR + GPIOC_OR_OFFSET)

/* GPIOC DR Register (32 bits) */
#define GPIOC_DR_OFFSET                0x8
#define GPIOC_DR_REG                   IOA(GPIOC_BASE_ADDR + GPIOC_DR_OFFSET)

/* Register description for PINS */

/* Reset value of register GPIOC_PINS */
#define GPIOC_PINS_VALUE               0x0

/* Bits definition for register GPIOC_PINS */
#define GPIOC_PINS_SHIFT               0
#define GPIOC_PINS_FIELD               (0xFFFFFFFF - (0x7FFFFFFFUL<<GPIOC_PINS_SHIFT))

/*****************************************************************************/
/* Register description for OR */

/* Reset value of register GPIOC_OR */
#define GPIOC_OR_VALUE                 0x0

/* Bits definition for register GPIOC_OR */
#define GPIOC_OR_SHIFT                 0
#define GPIOC_OR_FIELD                 (0xFFFFFFFF - (0x7FFFFFFFUL<<GPIOC_OR_SHIFT))
#define GPIOC_OR_OUTPUT_REGISTER       (0x0UL<<GPIOC_OR_SHIFT)

/*****************************************************************************/
/* Register description for DR */

/* Reset value of register GPIOC_DR */
#define GPIOC_DR_VALUE                 0x0

/* Bits definition for register GPIOC_DR */
#define GPIOC_DR_SHIFT                 0
#define GPIOC_DR_FIELD                 (0xFFFFFFFF - (0x7FFFFFFFUL<<GPIOC_DR_SHIFT))
#define GPIOC_DR_0                     (0x0UL<<GPIOC_DR_SHIFT)
#define GPIOC_DR_1                     (0x1UL<<GPIOC_DR_SHIFT)

/*****************************************************************************/

/*****************************************************************************
* Definitions for: GPIOD
*****************************************************************************/

/* Pointer on base address */
#define GPIOD_BASE                     IOA(GPIOD_BASE_ADDR)

/* GPIOD PINS Register (32 bits) */
#define GPIOD_PINS_OFFSET              0x0
#define GPIOD_PINS_REG                 IOA(GPIOD_BASE_ADDR + GPIOD_PINS_OFFSET)

/* GPIOD OR Register (32 bits) */
#define GPIOD_OR_OFFSET                0x4
#define GPIOD_OR_REG                   IOA(GPIOD_BASE_ADDR + GPIOD_OR_OFFSET)

/* GPIOD DR Register (32 bits) */
#define GPIOD_DR_OFFSET                0x8
#define GPIOD_DR_REG                   IOA(GPIOD_BASE_ADDR + GPIOD_DR_OFFSET)

/* Register description for PINS */

/* Reset value of register GPIOD_PINS */
#define GPIOD_PINS_VALUE               0x0

/* Bits definition for register GPIOD_PINS */
#define GPIOD_PINS_SHIFT               0
#define GPIOD_PINS_FIELD               (0xFFFFFFFF - (0x7FFFFFFFUL<<GPIOD_PINS_SHIFT))

/*****************************************************************************/
/* Register description for OR */

/* Reset value of register GPIOD_OR */
#define GPIOD_OR_VALUE                 0x0

/* Bits definition for register GPIOD_OR */
#define GPIOD_OR_SHIFT                 0
#define GPIOD_OR_FIELD                 (0xFFFFFFFF - (0x7FFFFFFFUL<<GPIOD_OR_SHIFT))
#define GPIOD_OR_OUTPUT_REGISTER       (0x0UL<<GPIOD_OR_SHIFT)

/*****************************************************************************/
/* Register description for DR */

/* Reset value of register GPIOD_DR */
#define GPIOD_DR_VALUE                 0x0

/* Bits definition for register GPIOD_DR */
#define GPIOD_DR_SHIFT                 0
#define GPIOD_DR_FIELD                 (0xFFFFFFFF - (0x7FFFFFFFUL<<GPIOD_DR_SHIFT))
#define GPIOD_DR_0                     (0x0UL<<GPIOD_DR_SHIFT)
#define GPIOD_DR_1                     (0x1UL<<GPIOD_DR_SHIFT)

/*****************************************************************************/

/*****************************************************************************
* Definitions for: GPIOE
*****************************************************************************/

/* Pointer on base address */
#define GPIOE_BASE                     IOA(GPIOE_BASE_ADDR)

/* GPIOE PINS Register (32 bits) */
#define GPIOE_PINS_OFFSET              0x0
#define GPIOE_PINS_REG                 IOA(GPIOE_BASE_ADDR + GPIOE_PINS_OFFSET)

/* GPIOE OR Register (32 bits) */
#define GPIOE_OR_OFFSET                0x4
#define GPIOE_OR_REG                   IOA(GPIOE_BASE_ADDR + GPIOE_OR_OFFSET)

/* GPIOE DR Register (32 bits) */
#define GPIOE_DR_OFFSET                0x8
#define GPIOE_DR_REG                   IOA(GPIOE_BASE_ADDR + GPIOE_DR_OFFSET)

/* Register description for PINS */

/* Reset value of register GPIOE_PINS */
#define GPIOE_PINS_VALUE               0x0

/* Bits definition for register GPIOE_PINS */
#define GPIOE_PINS_SHIFT               0
#define GPIOE_PINS_FIELD               (0xFFFFFFFF - (0x7FFFFFFFUL<<GPIOE_PINS_SHIFT))

/*****************************************************************************/
/* Register description for OR */

/* Reset value of register GPIOE_OR */
#define GPIOE_OR_VALUE                 0x0

/* Bits definition for register GPIOE_OR */
#define GPIOE_OR_SHIFT                 0
#define GPIOE_OR_FIELD                 (0xFFFFFFFF - (0x7FFFFFFFUL<<GPIOE_OR_SHIFT))
#define GPIOE_OR_OUTPUT_REGISTER       (0x0UL<<GPIOE_OR_SHIFT)

/*****************************************************************************/
/* Register description for DR */

/* Reset value of register GPIOE_DR */
#define GPIOE_DR_VALUE                 0x0

/* Bits definition for register GPIOE_DR */
#define GPIOE_DR_SHIFT                 0
#define GPIOE_DR_FIELD                 (0xFFFFFFFF - (0x7FFFFFFFUL<<GPIOE_DR_SHIFT))
#define GPIOE_DR_0                     (0x0UL<<GPIOE_DR_SHIFT)
#define GPIOE_DR_1                     (0x1UL<<GPIOE_DR_SHIFT)

/*****************************************************************************/

/*****************************************************************************
* Definitions for: GPIOF
*****************************************************************************/

/* Pointer on base address */
#define GPIOF_BASE                     IOA(GPIOF_BASE_ADDR)

/* GPIOF PINS Register (32 bits) */
#define GPIOF_PINS_OFFSET              0x0
#define GPIOF_PINS_REG                 IOA(GPIOF_BASE_ADDR + GPIOF_PINS_OFFSET)

/* GPIOF OR Register (32 bits) */
#define GPIOF_OR_OFFSET                0x4
#define GPIOF_OR_REG                   IOA(GPIOF_BASE_ADDR + GPIOF_OR_OFFSET)

/* GPIOF DR Register (32 bits) */
#define GPIOF_DR_OFFSET                0x8
#define GPIOF_DR_REG                   IOA(GPIOF_BASE_ADDR + GPIOF_DR_OFFSET)

/* Register description for PINS */

/* Reset value of register GPIOF_PINS */
#define GPIOF_PINS_VALUE               0x0

/* Bits definition for register GPIOF_PINS */
#define GPIOF_PINS_SHIFT               0
#define GPIOF_PINS_FIELD               (0xFFFFFFFF - (0x7FFFFFFFUL<<GPIOF_PINS_SHIFT))

/*****************************************************************************/
/* Register description for OR */

/* Reset value of register GPIOF_OR */
#define GPIOF_OR_VALUE                 0x0

/* Bits definition for register GPIOF_OR */
#define GPIOF_OR_SHIFT                 0
#define GPIOF_OR_FIELD                 (0xFFFFFFFF - (0x7FFFFFFFUL<<GPIOF_OR_SHIFT))
#define GPIOF_OR_OUTPUT_REGISTER       (0x0UL<<GPIOF_OR_SHIFT)

/*****************************************************************************/
/* Register description for DR */

/* Reset value of register GPIOF_DR */
#define GPIOF_DR_VALUE                 0x0

/* Bits definition for register GPIOF_DR */
#define GPIOF_DR_SHIFT                 0
#define GPIOF_DR_FIELD                 (0xFFFFFFFF - (0x7FFFFFFFUL<<GPIOF_DR_SHIFT))
#define GPIOF_DR_0                     (0x0UL<<GPIOF_DR_SHIFT)
#define GPIOF_DR_1                     (0x1UL<<GPIOF_DR_SHIFT)

/*****************************************************************************/

/*****************************************************************************
* Definitions for: I2C1
*****************************************************************************/

/* Pointer on base address */
#define I2C1_BASE                      IOA(I2C1_BASE_ADDR)

/* I2C RX Register (8 bits) */
#define I2C1_RX_OFFSET                 0x0
#define I2C1_RX_REG                    IOA(I2C1_BASE_ADDR + I2C1_RX_OFFSET)

/* I2C TX Register (16 bits) */
#define I2C1_TX_OFFSET                 0x0
#define I2C1_TX_REG                    IOA(I2C1_BASE_ADDR + I2C1_TX_OFFSET)

/* I2C STS Register (16 bits) */
#define I2C1_STS_OFFSET                0x4
#define I2C1_STS_REG                   IOA(I2C1_BASE_ADDR + I2C1_STS_OFFSET)

/* I2C CTL Register (16 bits) */
#define I2C1_CTL_OFFSET                0x8
#define I2C1_CTL_REG                   IOA(I2C1_BASE_ADDR + I2C1_CTL_OFFSET)

/* I2C CLKHI Register (16 bits) */
#define I2C1_CLKHI_OFFSET              0xC
#define I2C1_CLKHI_REG                 IOA(I2C1_BASE_ADDR + I2C1_CLKHI_OFFSET)

/* I2C CLKLO Register (16 bits) */
#define I2C1_CLKLO_OFFSET              0x10
#define I2C1_CLKLO_REG                 IOA(I2C1_BASE_ADDR + I2C1_CLKLO_OFFSET)

/* I2C ADR Register (8 bits) */
#define I2C1_ADR_OFFSET                0x14
#define I2C1_ADR_REG                   IOA(I2C1_BASE_ADDR + I2C1_ADR_OFFSET)

/* I2C HOLDDAT Register (16 bits) */
#define I2C1_HOLDDAT_OFFSET            0x18
#define I2C1_HOLDDAT_REG               IOA(I2C1_BASE_ADDR + I2C1_HOLDDAT_OFFSET)

/* I2C TXS Register (8 bits) */
#define I2C1_TXS_OFFSET                0x28
#define I2C1_TXS_REG                   IOA(I2C1_BASE_ADDR + I2C1_TXS_OFFSET)

/* I2C SPY_TX_00 Register (16 bits) */
#define I2C1DM_SPY_TX_00_OFFSET        0x40
#define I2C1DM_SPY_TX_00_REG           IOA(I2C1_BASE_ADDR + I2C1DM_SPY_TX_00_OFFSET)

/* I2C SPY_TX_01 Register (16 bits) */
#define I2C1DM_SPY_TX_01_OFFSET        0x44
#define I2C1DM_SPY_TX_01_REG           IOA(I2C1_BASE_ADDR + I2C1DM_SPY_TX_01_OFFSET)

/* I2C SPY_TX_02 Register (16 bits) */
#define I2C1DM_SPY_TX_02_OFFSET        0x48
#define I2C1DM_SPY_TX_02_REG           IOA(I2C1_BASE_ADDR + I2C1DM_SPY_TX_02_OFFSET)

/* I2C SPY_TX_10 Register (16 bits) */
#define I2C1DM_SPY_TX_10_OFFSET        0x4C
#define I2C1DM_SPY_TX_10_REG           IOA(I2C1_BASE_ADDR + I2C1DM_SPY_TX_10_OFFSET)

/* I2C SPY_TX_11 Register (16 bits) */
#define I2C1DM_SPY_TX_11_OFFSET        0x50
#define I2C1DM_SPY_TX_11_REG           IOA(I2C1_BASE_ADDR + I2C1DM_SPY_TX_11_OFFSET)

/* I2C SPY_TX_12 Register (16 bits) */
#define I2C1DM_SPY_TX_12_OFFSET        0x54
#define I2C1DM_SPY_TX_12_REG           IOA(I2C1_BASE_ADDR + I2C1DM_SPY_TX_12_OFFSET)

/* I2C SPY_TX_20 Register (16 bits) */
#define I2C1DM_SPY_TX_20_OFFSET        0x58
#define I2C1DM_SPY_TX_20_REG           IOA(I2C1_BASE_ADDR + I2C1DM_SPY_TX_20_OFFSET)

/* I2C SPY_TX_21 Register (16 bits) */
#define I2C1DM_SPY_TX_21_OFFSET        0x5C
#define I2C1DM_SPY_TX_21_REG           IOA(I2C1_BASE_ADDR + I2C1DM_SPY_TX_21_OFFSET)

/* I2C SPY_TX_22 Register (16 bits) */
#define I2C1DM_SPY_TX_22_OFFSET        0x60
#define I2C1DM_SPY_TX_22_REG           IOA(I2C1_BASE_ADDR + I2C1DM_SPY_TX_22_OFFSET)

/* I2C SPY_TX_30 Register (16 bits) */
#define I2C1DM_SPY_TX_30_OFFSET        0x64
#define I2C1DM_SPY_TX_30_REG           IOA(I2C1_BASE_ADDR + I2C1DM_SPY_TX_30_OFFSET)

/* I2C SPY_TX_31 Register (16 bits) */
#define I2C1DM_SPY_TX_31_OFFSET        0x68
#define I2C1DM_SPY_TX_31_REG           IOA(I2C1_BASE_ADDR + I2C1DM_SPY_TX_31_OFFSET)

/* I2C SPY_TX_32 Register (16 bits) */
#define I2C1DM_SPY_TX_32_OFFSET        0x6C
#define I2C1DM_SPY_TX_32_REG           IOA(I2C1_BASE_ADDR + I2C1DM_SPY_TX_32_OFFSET)

/* I2C SPY_RX_00 Register (16 bits) */
#define I2C1DM_SPY_RX_00_OFFSET        0x70
#define I2C1DM_SPY_RX_00_REG           IOA(I2C1_BASE_ADDR + I2C1DM_SPY_RX_00_OFFSET)

/* I2C SPY_RX_01 Register (16 bits) */
#define I2C1DM_SPY_RX_01_OFFSET        0x74
#define I2C1DM_SPY_RX_01_REG           IOA(I2C1_BASE_ADDR + I2C1DM_SPY_RX_01_OFFSET)

/* I2C SPY_RX_02 Register (16 bits) */
#define I2C1DM_SPY_RX_02_OFFSET        0x78
#define I2C1DM_SPY_RX_02_REG           IOA(I2C1_BASE_ADDR + I2C1DM_SPY_RX_02_OFFSET)

/* I2C SPY_RX_10 Register (16 bits) */
#define I2C1DM_SPY_RX_10_OFFSET        0x7C
#define I2C1DM_SPY_RX_10_REG           IOA(I2C1_BASE_ADDR + I2C1DM_SPY_RX_10_OFFSET)

/* I2C SPY_RX_11 Register (16 bits) */
#define I2C1DM_SPY_RX_11_OFFSET        0x80
#define I2C1DM_SPY_RX_11_REG           IOA(I2C1_BASE_ADDR + I2C1DM_SPY_RX_11_OFFSET)

/* I2C SPY_RX_12 Register (16 bits) */
#define I2C1DM_SPY_RX_12_OFFSET        0x84
#define I2C1DM_SPY_RX_12_REG           IOA(I2C1_BASE_ADDR + I2C1DM_SPY_RX_12_OFFSET)

/* I2C SPY_RX_20 Register (16 bits) */
#define I2C1DM_SPY_RX_20_OFFSET        0x88
#define I2C1DM_SPY_RX_20_REG           IOA(I2C1_BASE_ADDR + I2C1DM_SPY_RX_20_OFFSET)

/* I2C SPY_RX_21 Register (16 bits) */
#define I2C1DM_SPY_RX_21_OFFSET        0x8C
#define I2C1DM_SPY_RX_21_REG           IOA(I2C1_BASE_ADDR + I2C1DM_SPY_RX_21_OFFSET)

/* I2C SPY_RX_22 Register (16 bits) */
#define I2C1DM_SPY_RX_22_OFFSET        0x90
#define I2C1DM_SPY_RX_22_REG           IOA(I2C1_BASE_ADDR + I2C1DM_SPY_RX_22_OFFSET)

/* I2C SPY_RX_30 Register (16 bits) */
#define I2C1DM_SPY_RX_30_OFFSET        0x94
#define I2C1DM_SPY_RX_30_REG           IOA(I2C1_BASE_ADDR + I2C1DM_SPY_RX_30_OFFSET)

/* I2C SPY_RX_31 Register (16 bits) */
#define I2C1DM_SPY_RX_31_OFFSET        0x98
#define I2C1DM_SPY_RX_31_REG           IOA(I2C1_BASE_ADDR + I2C1DM_SPY_RX_31_OFFSET)

/* I2C SPY_RX_32 Register (16 bits) */
#define I2C1DM_SPY_RX_32_OFFSET        0x9C
#define I2C1DM_SPY_RX_32_REG           IOA(I2C1_BASE_ADDR + I2C1DM_SPY_RX_32_OFFSET)

/* I2C SPY_SLAVE_00 Register (16 bits) */
#define I2C1DM_SPY_SLAVE_00_OFFSET     0xA0
#define I2C1DM_SPY_SLAVE_00_REG        IOA(I2C1_BASE_ADDR + I2C1DM_SPY_SLAVE_00_OFFSET)

/* I2C SPY_SLAVE_01 Register (16 bits) */
#define I2C1DM_SPY_SLAVE_01_OFFSET     0xA4
#define I2C1DM_SPY_SLAVE_01_REG        IOA(I2C1_BASE_ADDR + I2C1DM_SPY_SLAVE_01_OFFSET)

/* I2C SPY_SLAVE_02 Register (16 bits) */
#define I2C1DM_SPY_SLAVE_02_OFFSET     0xA8
#define I2C1DM_SPY_SLAVE_02_REG        IOA(I2C1_BASE_ADDR + I2C1DM_SPY_SLAVE_02_OFFSET)

/* I2C SPY_SLAVE_10 Register (16 bits) */
#define I2C1DM_SPY_SLAVE_10_OFFSET     0xAC
#define I2C1DM_SPY_SLAVE_10_REG        IOA(I2C1_BASE_ADDR + I2C1DM_SPY_SLAVE_10_OFFSET)

/* I2C SPY_SLAVE_11 Register (16 bits) */
#define I2C1DM_SPY_SLAVE_11_OFFSET     0xB0
#define I2C1DM_SPY_SLAVE_11_REG        IOA(I2C1_BASE_ADDR + I2C1DM_SPY_SLAVE_11_OFFSET)

/* I2C SPY_SLAVE_12 Register (16 bits) */
#define I2C1DM_SPY_SLAVE_12_OFFSET     0xB4
#define I2C1DM_SPY_SLAVE_12_REG        IOA(I2C1_BASE_ADDR + I2C1DM_SPY_SLAVE_12_OFFSET)

/* I2C SPY_SLAVE_20 Register (16 bits) */
#define I2C1DM_SPY_SLAVE_20_OFFSET     0xB8
#define I2C1DM_SPY_SLAVE_20_REG        IOA(I2C1_BASE_ADDR + I2C1DM_SPY_SLAVE_20_OFFSET)

/* I2C SPY_SLAVE_21 Register (16 bits) */
#define I2C1DM_SPY_SLAVE_21_OFFSET     0xBC
#define I2C1DM_SPY_SLAVE_21_REG        IOA(I2C1_BASE_ADDR + I2C1DM_SPY_SLAVE_21_OFFSET)

/* I2C SPY_SLAVE_22 Register (16 bits) */
#define I2C1DM_SPY_SLAVE_22_OFFSET     0xC0
#define I2C1DM_SPY_SLAVE_22_REG        IOA(I2C1_BASE_ADDR + I2C1DM_SPY_SLAVE_22_OFFSET)

/* I2C SPY_SLAVE_30 Register (16 bits) */
#define I2C1DM_SPY_SLAVE_30_OFFSET     0xC4
#define I2C1DM_SPY_SLAVE_30_REG        IOA(I2C1_BASE_ADDR + I2C1DM_SPY_SLAVE_30_OFFSET)

/* I2C SPY_SLAVE_31 Register (16 bits) */
#define I2C1DM_SPY_SLAVE_31_OFFSET     0xC8
#define I2C1DM_SPY_SLAVE_31_REG        IOA(I2C1_BASE_ADDR + I2C1DM_SPY_SLAVE_31_OFFSET)

/* I2C SPY_SLAVE_32 Register (16 bits) */
#define I2C1DM_SPY_SLAVE_32_OFFSET     0xCC
#define I2C1DM_SPY_SLAVE_32_REG        IOA(I2C1_BASE_ADDR + I2C1DM_SPY_SLAVE_32_OFFSET)

/* I2C SPY_MASTER_00 Register (16 bits) */
#define I2C1DM_SPY_MASTER_00_OFFSET    0xD0
#define I2C1DM_SPY_MASTER_00_REG       IOA(I2C1_BASE_ADDR + I2C1DM_SPY_MASTER_00_OFFSET)

/* I2C SPY_MASTER_01 Register (16 bits) */
#define I2C1DM_SPY_MASTER_01_OFFSET    0xD4
#define I2C1DM_SPY_MASTER_01_REG       IOA(I2C1_BASE_ADDR + I2C1DM_SPY_MASTER_01_OFFSET)

/* I2C SPY_MASTER_02 Register (16 bits) */
#define I2C1DM_SPY_MASTER_02_OFFSET    0xD8
#define I2C1DM_SPY_MASTER_02_REG       IOA(I2C1_BASE_ADDR + I2C1DM_SPY_MASTER_02_OFFSET)

/* I2C SPY_MASTER_10 Register (16 bits) */
#define I2C1DM_SPY_MASTER_10_OFFSET    0xDC
#define I2C1DM_SPY_MASTER_10_REG       IOA(I2C1_BASE_ADDR + I2C1DM_SPY_MASTER_10_OFFSET)

/* I2C SPY_MASTER_11 Register (16 bits) */
#define I2C1DM_SPY_MASTER_11_OFFSET    0xE0
#define I2C1DM_SPY_MASTER_11_REG       IOA(I2C1_BASE_ADDR + I2C1DM_SPY_MASTER_11_OFFSET)

/* I2C SPY_MASTER_12 Register (16 bits) */
#define I2C1DM_SPY_MASTER_12_OFFSET    0xE4
#define I2C1DM_SPY_MASTER_12_REG       IOA(I2C1_BASE_ADDR + I2C1DM_SPY_MASTER_12_OFFSET)

/* I2C SPY_MASTER_20 Register (16 bits) */
#define I2C1DM_SPY_MASTER_20_OFFSET    0xE8
#define I2C1DM_SPY_MASTER_20_REG       IOA(I2C1_BASE_ADDR + I2C1DM_SPY_MASTER_20_OFFSET)

/* I2C SPY_MASTER_21 Register (16 bits) */
#define I2C1DM_SPY_MASTER_21_OFFSET    0xEC
#define I2C1DM_SPY_MASTER_21_REG       IOA(I2C1_BASE_ADDR + I2C1DM_SPY_MASTER_21_OFFSET)

/* I2C SPY_MASTER_22 Register (16 bits) */
#define I2C1DM_SPY_MASTER_22_OFFSET    0xF0
#define I2C1DM_SPY_MASTER_22_REG       IOA(I2C1_BASE_ADDR + I2C1DM_SPY_MASTER_22_OFFSET)

/* I2C SPY_MASTER_30 Register (16 bits) */
#define I2C1DM_SPY_MASTER_30_OFFSET    0xF4
#define I2C1DM_SPY_MASTER_30_REG       IOA(I2C1_BASE_ADDR + I2C1DM_SPY_MASTER_30_OFFSET)

/* I2C SPY_MASTER_31 Register (16 bits) */
#define I2C1DM_SPY_MASTER_31_OFFSET    0xF8
#define I2C1DM_SPY_MASTER_31_REG       IOA(I2C1_BASE_ADDR + I2C1DM_SPY_MASTER_31_OFFSET)

/* I2C SPY_MASTER_32 Register (16 bits) */
#define I2C1DM_SPY_MASTER_32_OFFSET    0xFC
#define I2C1DM_SPY_MASTER_32_REG       IOA(I2C1_BASE_ADDR + I2C1DM_SPY_MASTER_32_OFFSET)

/*****************************************************************************
* Definitions for: I2C2
*****************************************************************************/

/* Pointer on base address */
#define I2C2_BASE                      IOA(I2C2_BASE_ADDR)

/* I2C RX Register (8 bits) */
#define I2C2_RX_OFFSET                 0x0
#define I2C2_RX_REG                    IOA(I2C2_BASE_ADDR + I2C2_RX_OFFSET)

/* I2C TX Register (16 bits) */
#define I2C2_TX_OFFSET                 0x0
#define I2C2_TX_REG                    IOA(I2C2_BASE_ADDR + I2C2_TX_OFFSET)

/* I2C STS Register (16 bits) */
#define I2C2_STS_OFFSET                0x4
#define I2C2_STS_REG                   IOA(I2C2_BASE_ADDR + I2C2_STS_OFFSET)

/* I2C CTL Register (16 bits) */
#define I2C2_CTL_OFFSET                0x8
#define I2C2_CTL_REG                   IOA(I2C2_BASE_ADDR + I2C2_CTL_OFFSET)

/* I2C CLKHI Register (16 bits) */
#define I2C2_CLKHI_OFFSET              0xC
#define I2C2_CLKHI_REG                 IOA(I2C2_BASE_ADDR + I2C2_CLKHI_OFFSET)

/* I2C CLKLO Register (16 bits) */
#define I2C2_CLKLO_OFFSET              0x10
#define I2C2_CLKLO_REG                 IOA(I2C2_BASE_ADDR + I2C2_CLKLO_OFFSET)

/* I2C ADR Register (8 bits) */
#define I2C2_ADR_OFFSET                0x14
#define I2C2_ADR_REG                   IOA(I2C2_BASE_ADDR + I2C2_ADR_OFFSET)

/* I2C HOLDDAT Register (16 bits) */
#define I2C2_HOLDDAT_OFFSET            0x18
#define I2C2_HOLDDAT_REG               IOA(I2C2_BASE_ADDR + I2C2_HOLDDAT_OFFSET)

/* I2C TXS Register (8 bits) */
#define I2C2_TXS_OFFSET                0x28
#define I2C2_TXS_REG                   IOA(I2C2_BASE_ADDR + I2C2_TXS_OFFSET)

/* I2C SPY_TX_00 Register (16 bits) */
#define I2C2DM_SPY_TX_00_OFFSET        0x40
#define I2C2DM_SPY_TX_00_REG           IOA(I2C2_BASE_ADDR + I2C2DM_SPY_TX_00_OFFSET)

/* I2C SPY_TX_01 Register (16 bits) */
#define I2C2DM_SPY_TX_01_OFFSET        0x44
#define I2C2DM_SPY_TX_01_REG           IOA(I2C2_BASE_ADDR + I2C2DM_SPY_TX_01_OFFSET)

/* I2C SPY_TX_02 Register (16 bits) */
#define I2C2DM_SPY_TX_02_OFFSET        0x48
#define I2C2DM_SPY_TX_02_REG           IOA(I2C2_BASE_ADDR + I2C2DM_SPY_TX_02_OFFSET)

/* I2C SPY_TX_10 Register (16 bits) */
#define I2C2DM_SPY_TX_10_OFFSET        0x4C
#define I2C2DM_SPY_TX_10_REG           IOA(I2C2_BASE_ADDR + I2C2DM_SPY_TX_10_OFFSET)

/* I2C SPY_TX_11 Register (16 bits) */
#define I2C2DM_SPY_TX_11_OFFSET        0x50
#define I2C2DM_SPY_TX_11_REG           IOA(I2C2_BASE_ADDR + I2C2DM_SPY_TX_11_OFFSET)

/* I2C SPY_TX_12 Register (16 bits) */
#define I2C2DM_SPY_TX_12_OFFSET        0x54
#define I2C2DM_SPY_TX_12_REG           IOA(I2C2_BASE_ADDR + I2C2DM_SPY_TX_12_OFFSET)

/* I2C SPY_TX_20 Register (16 bits) */
#define I2C2DM_SPY_TX_20_OFFSET        0x58
#define I2C2DM_SPY_TX_20_REG           IOA(I2C2_BASE_ADDR + I2C2DM_SPY_TX_20_OFFSET)

/* I2C SPY_TX_21 Register (16 bits) */
#define I2C2DM_SPY_TX_21_OFFSET        0x5C
#define I2C2DM_SPY_TX_21_REG           IOA(I2C2_BASE_ADDR + I2C2DM_SPY_TX_21_OFFSET)

/* I2C SPY_TX_22 Register (16 bits) */
#define I2C2DM_SPY_TX_22_OFFSET        0x60
#define I2C2DM_SPY_TX_22_REG           IOA(I2C2_BASE_ADDR + I2C2DM_SPY_TX_22_OFFSET)

/* I2C SPY_TX_30 Register (16 bits) */
#define I2C2DM_SPY_TX_30_OFFSET        0x64
#define I2C2DM_SPY_TX_30_REG           IOA(I2C2_BASE_ADDR + I2C2DM_SPY_TX_30_OFFSET)

/* I2C SPY_TX_31 Register (16 bits) */
#define I2C2DM_SPY_TX_31_OFFSET        0x68
#define I2C2DM_SPY_TX_31_REG           IOA(I2C2_BASE_ADDR + I2C2DM_SPY_TX_31_OFFSET)

/* I2C SPY_TX_32 Register (16 bits) */
#define I2C2DM_SPY_TX_32_OFFSET        0x6C
#define I2C2DM_SPY_TX_32_REG           IOA(I2C2_BASE_ADDR + I2C2DM_SPY_TX_32_OFFSET)

/* I2C SPY_RX_00 Register (16 bits) */
#define I2C2DM_SPY_RX_00_OFFSET        0x70
#define I2C2DM_SPY_RX_00_REG           IOA(I2C2_BASE_ADDR + I2C2DM_SPY_RX_00_OFFSET)

/* I2C SPY_RX_01 Register (16 bits) */
#define I2C2DM_SPY_RX_01_OFFSET        0x74
#define I2C2DM_SPY_RX_01_REG           IOA(I2C2_BASE_ADDR + I2C2DM_SPY_RX_01_OFFSET)

/* I2C SPY_RX_02 Register (16 bits) */
#define I2C2DM_SPY_RX_02_OFFSET        0x78
#define I2C2DM_SPY_RX_02_REG           IOA(I2C2_BASE_ADDR + I2C2DM_SPY_RX_02_OFFSET)

/* I2C SPY_RX_10 Register (16 bits) */
#define I2C2DM_SPY_RX_10_OFFSET        0x7C
#define I2C2DM_SPY_RX_10_REG           IOA(I2C2_BASE_ADDR + I2C2DM_SPY_RX_10_OFFSET)

/* I2C SPY_RX_11 Register (16 bits) */
#define I2C2DM_SPY_RX_11_OFFSET        0x80
#define I2C2DM_SPY_RX_11_REG           IOA(I2C2_BASE_ADDR + I2C2DM_SPY_RX_11_OFFSET)

/* I2C SPY_RX_12 Register (16 bits) */
#define I2C2DM_SPY_RX_12_OFFSET        0x84
#define I2C2DM_SPY_RX_12_REG           IOA(I2C2_BASE_ADDR + I2C2DM_SPY_RX_12_OFFSET)

/* I2C SPY_RX_20 Register (16 bits) */
#define I2C2DM_SPY_RX_20_OFFSET        0x88
#define I2C2DM_SPY_RX_20_REG           IOA(I2C2_BASE_ADDR + I2C2DM_SPY_RX_20_OFFSET)

/* I2C SPY_RX_21 Register (16 bits) */
#define I2C2DM_SPY_RX_21_OFFSET        0x8C
#define I2C2DM_SPY_RX_21_REG           IOA(I2C2_BASE_ADDR + I2C2DM_SPY_RX_21_OFFSET)

/* I2C SPY_RX_22 Register (16 bits) */
#define I2C2DM_SPY_RX_22_OFFSET        0x90
#define I2C2DM_SPY_RX_22_REG           IOA(I2C2_BASE_ADDR + I2C2DM_SPY_RX_22_OFFSET)

/* I2C SPY_RX_30 Register (16 bits) */
#define I2C2DM_SPY_RX_30_OFFSET        0x94
#define I2C2DM_SPY_RX_30_REG           IOA(I2C2_BASE_ADDR + I2C2DM_SPY_RX_30_OFFSET)

/* I2C SPY_RX_31 Register (16 bits) */
#define I2C2DM_SPY_RX_31_OFFSET        0x98
#define I2C2DM_SPY_RX_31_REG           IOA(I2C2_BASE_ADDR + I2C2DM_SPY_RX_31_OFFSET)

/* I2C SPY_RX_32 Register (16 bits) */
#define I2C2DM_SPY_RX_32_OFFSET        0x9C
#define I2C2DM_SPY_RX_32_REG           IOA(I2C2_BASE_ADDR + I2C2DM_SPY_RX_32_OFFSET)

/* I2C SPY_SLAVE_00 Register (16 bits) */
#define I2C2DM_SPY_SLAVE_00_OFFSET     0xA0
#define I2C2DM_SPY_SLAVE_00_REG        IOA(I2C2_BASE_ADDR + I2C2DM_SPY_SLAVE_00_OFFSET)

/* I2C SPY_SLAVE_01 Register (16 bits) */
#define I2C2DM_SPY_SLAVE_01_OFFSET     0xA4
#define I2C2DM_SPY_SLAVE_01_REG        IOA(I2C2_BASE_ADDR + I2C2DM_SPY_SLAVE_01_OFFSET)

/* I2C SPY_SLAVE_02 Register (16 bits) */
#define I2C2DM_SPY_SLAVE_02_OFFSET     0xA8
#define I2C2DM_SPY_SLAVE_02_REG        IOA(I2C2_BASE_ADDR + I2C2DM_SPY_SLAVE_02_OFFSET)

/* I2C SPY_SLAVE_10 Register (16 bits) */
#define I2C2DM_SPY_SLAVE_10_OFFSET     0xAC
#define I2C2DM_SPY_SLAVE_10_REG        IOA(I2C2_BASE_ADDR + I2C2DM_SPY_SLAVE_10_OFFSET)

/* I2C SPY_SLAVE_11 Register (16 bits) */
#define I2C2DM_SPY_SLAVE_11_OFFSET     0xB0
#define I2C2DM_SPY_SLAVE_11_REG        IOA(I2C2_BASE_ADDR + I2C2DM_SPY_SLAVE_11_OFFSET)

/* I2C SPY_SLAVE_12 Register (16 bits) */
#define I2C2DM_SPY_SLAVE_12_OFFSET     0xB4
#define I2C2DM_SPY_SLAVE_12_REG        IOA(I2C2_BASE_ADDR + I2C2DM_SPY_SLAVE_12_OFFSET)

/* I2C SPY_SLAVE_20 Register (16 bits) */
#define I2C2DM_SPY_SLAVE_20_OFFSET     0xB8
#define I2C2DM_SPY_SLAVE_20_REG        IOA(I2C2_BASE_ADDR + I2C2DM_SPY_SLAVE_20_OFFSET)

/* I2C SPY_SLAVE_21 Register (16 bits) */
#define I2C2DM_SPY_SLAVE_21_OFFSET     0xBC
#define I2C2DM_SPY_SLAVE_21_REG        IOA(I2C2_BASE_ADDR + I2C2DM_SPY_SLAVE_21_OFFSET)

/* I2C SPY_SLAVE_22 Register (16 bits) */
#define I2C2DM_SPY_SLAVE_22_OFFSET     0xC0
#define I2C2DM_SPY_SLAVE_22_REG        IOA(I2C2_BASE_ADDR + I2C2DM_SPY_SLAVE_22_OFFSET)

/* I2C SPY_SLAVE_30 Register (16 bits) */
#define I2C2DM_SPY_SLAVE_30_OFFSET     0xC4
#define I2C2DM_SPY_SLAVE_30_REG        IOA(I2C2_BASE_ADDR + I2C2DM_SPY_SLAVE_30_OFFSET)

/* I2C SPY_SLAVE_31 Register (16 bits) */
#define I2C2DM_SPY_SLAVE_31_OFFSET     0xC8
#define I2C2DM_SPY_SLAVE_31_REG        IOA(I2C2_BASE_ADDR + I2C2DM_SPY_SLAVE_31_OFFSET)

/* I2C SPY_SLAVE_32 Register (16 bits) */
#define I2C2DM_SPY_SLAVE_32_OFFSET     0xCC
#define I2C2DM_SPY_SLAVE_32_REG        IOA(I2C2_BASE_ADDR + I2C2DM_SPY_SLAVE_32_OFFSET)

/* I2C SPY_MASTER_00 Register (16 bits) */
#define I2C2DM_SPY_MASTER_00_OFFSET    0xD0
#define I2C2DM_SPY_MASTER_00_REG       IOA(I2C2_BASE_ADDR + I2C2DM_SPY_MASTER_00_OFFSET)

/* I2C SPY_MASTER_01 Register (16 bits) */
#define I2C2DM_SPY_MASTER_01_OFFSET    0xD4
#define I2C2DM_SPY_MASTER_01_REG       IOA(I2C2_BASE_ADDR + I2C2DM_SPY_MASTER_01_OFFSET)

/* I2C SPY_MASTER_02 Register (16 bits) */
#define I2C2DM_SPY_MASTER_02_OFFSET    0xD8
#define I2C2DM_SPY_MASTER_02_REG       IOA(I2C2_BASE_ADDR + I2C2DM_SPY_MASTER_02_OFFSET)

/* I2C SPY_MASTER_10 Register (16 bits) */
#define I2C2DM_SPY_MASTER_10_OFFSET    0xDC
#define I2C2DM_SPY_MASTER_10_REG       IOA(I2C2_BASE_ADDR + I2C2DM_SPY_MASTER_10_OFFSET)

/* I2C SPY_MASTER_11 Register (16 bits) */
#define I2C2DM_SPY_MASTER_11_OFFSET    0xE0
#define I2C2DM_SPY_MASTER_11_REG       IOA(I2C2_BASE_ADDR + I2C2DM_SPY_MASTER_11_OFFSET)

/* I2C SPY_MASTER_12 Register (16 bits) */
#define I2C2DM_SPY_MASTER_12_OFFSET    0xE4
#define I2C2DM_SPY_MASTER_12_REG       IOA(I2C2_BASE_ADDR + I2C2DM_SPY_MASTER_12_OFFSET)

/* I2C SPY_MASTER_20 Register (16 bits) */
#define I2C2DM_SPY_MASTER_20_OFFSET    0xE8
#define I2C2DM_SPY_MASTER_20_REG       IOA(I2C2_BASE_ADDR + I2C2DM_SPY_MASTER_20_OFFSET)

/* I2C SPY_MASTER_21 Register (16 bits) */
#define I2C2DM_SPY_MASTER_21_OFFSET    0xEC
#define I2C2DM_SPY_MASTER_21_REG       IOA(I2C2_BASE_ADDR + I2C2DM_SPY_MASTER_21_OFFSET)

/* I2C SPY_MASTER_22 Register (16 bits) */
#define I2C2DM_SPY_MASTER_22_OFFSET    0xF0
#define I2C2DM_SPY_MASTER_22_REG       IOA(I2C2_BASE_ADDR + I2C2DM_SPY_MASTER_22_OFFSET)

/* I2C SPY_MASTER_30 Register (16 bits) */
#define I2C2DM_SPY_MASTER_30_OFFSET    0xF4
#define I2C2DM_SPY_MASTER_30_REG       IOA(I2C2_BASE_ADDR + I2C2DM_SPY_MASTER_30_OFFSET)

/* I2C SPY_MASTER_31 Register (16 bits) */
#define I2C2DM_SPY_MASTER_31_OFFSET    0xF8
#define I2C2DM_SPY_MASTER_31_REG       IOA(I2C2_BASE_ADDR + I2C2DM_SPY_MASTER_31_OFFSET)

/* I2C SPY_MASTER_32 Register (16 bits) */
#define I2C2DM_SPY_MASTER_32_OFFSET    0xFC
#define I2C2DM_SPY_MASTER_32_REG       IOA(I2C2_BASE_ADDR + I2C2DM_SPY_MASTER_32_OFFSET)

/* Register description for RX */

/* Reset value of register I2C[2:1]_RX */
#define I2C1_RX_VALUE                  0x0
#define I2C2_RX_VALUE                  0x0

/* Bits definition for register I2C[2:1]_RX */
#define I2C_DATA_SHIFT                 0
#define I2C_DATA_FIELD                 (0xFFFFFFFF - (0xFFUL<<I2C_DATA_SHIFT))

/*****************************************************************************/
/* Register description for TX */

/* Reset value of register I2C[2:1]_TX */
#define I2C1_TX_VALUE                  0x0
#define I2C2_TX_VALUE                  0x0

/* Bits definition for register I2C[2:1]_TX */
#define I2C_TX_STOP_SHIFT              9
#define I2C_TX_STOP_FIELD              (0xFFFFFFFF - (0x1UL<<I2C_TX_STOP_SHIFT))
#define I2C_TX_STOP_0                  (0x0UL<<I2C_TX_STOP_SHIFT)
#define I2C_TX_STOP_1                  (0x1UL<<I2C_TX_STOP_SHIFT)
#define I2C_TX_STOP                    (0x1UL<<I2C_TX_STOP_SHIFT)
#define I2C_TX_START_SHIFT             8
#define I2C_TX_START_FIELD             (0xFFFFFFFF - (0x1UL<<I2C_TX_START_SHIFT))
#define I2C_TX_START_0                 (0x0UL<<I2C_TX_START_SHIFT)
#define I2C_TX_START_1                 (0x1UL<<I2C_TX_START_SHIFT)
#define I2C_TX_START                   (0x1UL<<I2C_TX_START_SHIFT)
#define I2C_DATA_SHIFT                 0
#define I2C_DATA_FIELD                 (0xFFFFFFFF - (0xFFUL<<I2C_DATA_SHIFT))
#define I2C_DATA_TRANSMIT_FIFO_REGISTER            (0x0UL<<I2C_DATA_SHIFT)

/*****************************************************************************/
/* Register description for STS */

/* Reset value of register I2C[2:1]_STS */
#define I2C1_STS_VALUE                 0xEA00
#define I2C2_STS_VALUE                 0xEA00

/* Bits definition for register I2C[2:1]_STS */
#define I2C_STOP_SHIFT                 15
#define I2C_STOP_FIELD                 (0xFFFFFFFF - (0x1UL<<I2C_STOP_SHIFT))
#define I2C_STOP_0                     (0x0UL<<I2C_STOP_SHIFT)
#define I2C_STOP_1                     (0x1UL<<I2C_STOP_SHIFT)
#define I2C_STOP                       (0x1UL<<I2C_STOP_SHIFT)
#define I2C_MAST_SHIFT                 14
#define I2C_MAST_FIELD                 (0xFFFFFFFF - (0x1UL<<I2C_MAST_SHIFT))
#define I2C_MAST_0                     (0x0UL<<I2C_MAST_SHIFT)
#define I2C_MAST_1                     (0x1UL<<I2C_MAST_SHIFT)
#define I2C_MAST                       (0x1UL<<I2C_MAST_SHIFT)
#define I2C_TFES_SHIFT                 13
#define I2C_TFES_FIELD                 (0xFFFFFFFF - (0x1UL<<I2C_TFES_SHIFT))
#define I2C_TFES_0                     (0x0UL<<I2C_TFES_SHIFT)
#define I2C_TFES_1                     (0x1UL<<I2C_TFES_SHIFT)
#define I2C_TFES                       (0x1UL<<I2C_TFES_SHIFT)
#define I2C_TFFS_SHIFT                 12
#define I2C_TFFS_FIELD                 (0xFFFFFFFF - (0x1UL<<I2C_TFFS_SHIFT))
#define I2C_TFFS_0                     (0x0UL<<I2C_TFFS_SHIFT)
#define I2C_TFFS_1                     (0x1UL<<I2C_TFFS_SHIFT)
#define I2C_TFFS                       (0x1UL<<I2C_TFFS_SHIFT)
#define I2C_TFE_SHIFT                  11
#define I2C_TFE_FIELD                  (0xFFFFFFFF - (0x1UL<<I2C_TFE_SHIFT))
#define I2C_TFE_0                      (0x0UL<<I2C_TFE_SHIFT)
#define I2C_TFE_1                      (0x1UL<<I2C_TFE_SHIFT)
#define I2C_TFE                        (0x1UL<<I2C_TFE_SHIFT)
#define I2C_TFF_SHIFT                  10
#define I2C_TFF_FIELD                  (0xFFFFFFFF - (0x1UL<<I2C_TFF_SHIFT))
#define I2C_TFF_0                      (0x0UL<<I2C_TFF_SHIFT)
#define I2C_TFF_1                      (0x1UL<<I2C_TFF_SHIFT)
#define I2C_TFF                        (0x1UL<<I2C_TFF_SHIFT)
#define I2C_RFE_SHIFT                  9
#define I2C_RFE_FIELD                  (0xFFFFFFFF - (0x1UL<<I2C_RFE_SHIFT))
#define I2C_RFE_0                      (0x0UL<<I2C_RFE_SHIFT)
#define I2C_RFE_1                      (0x1UL<<I2C_RFE_SHIFT)
#define I2C_RFE                        (0x1UL<<I2C_RFE_SHIFT)
#define I2C_RFF_SHIFT                  8
#define I2C_RFF_FIELD                  (0xFFFFFFFF - (0x1UL<<I2C_RFF_SHIFT))
#define I2C_RFF_0                      (0x0UL<<I2C_RFF_SHIFT)
#define I2C_RFF_1                      (0x1UL<<I2C_RFF_SHIFT)
#define I2C_RFF                        (0x1UL<<I2C_RFF_SHIFT)
#define I2C_SDA_SHIFT                  7
#define I2C_SDA_FIELD                  (0xFFFFFFFF - (0x1UL<<I2C_SDA_SHIFT))
#define I2C_SDA                        (0x1UL<<I2C_SDA_SHIFT)
#define I2C_SCL_SHIFT                  6
#define I2C_SCL_FIELD                  (0xFFFFFFFF - (0x1UL<<I2C_SCL_SHIFT))
#define I2C_SCL                        (0x1UL<<I2C_SCL_SHIFT)
#define I2C_ACTIVE_SHIFT               5
#define I2C_ACTIVE_FIELD               (0xFFFFFFFF - (0x1UL<<I2C_ACTIVE_SHIFT))
#define I2C_ACTIVE_0                   (0x0UL<<I2C_ACTIVE_SHIFT)
#define I2C_ACTIVE_INDICATES_WHETHER_THE_BUS_IS_BUSY (0x1UL<<I2C_ACTIVE_SHIFT)
#define I2C_ACTIVE                     (0x1UL<<I2C_ACTIVE_SHIFT)
#define I2C_DRSI_SHIFT                 4
#define I2C_DRSI_FIELD                 (0xFFFFFFFF - (0x1UL<<I2C_DRSI_SHIFT))
#define I2C_DRSI_0                     (0x0UL<<I2C_DRSI_SHIFT)
#define I2C_DRSI_1                     (0x1UL<<I2C_DRSI_SHIFT)
#define I2C_DRSI                       (0x1UL<<I2C_DRSI_SHIFT)
#define I2C_DRMI_SHIFT                 3
#define I2C_DRMI_FIELD                 (0xFFFFFFFF - (0x1UL<<I2C_DRMI_SHIFT))
#define I2C_DRMI_0                     (0x0UL<<I2C_DRMI_SHIFT)
#define I2C_DRMI_1                     (0x1UL<<I2C_DRMI_SHIFT)
#define I2C_DRMI                       (0x1UL<<I2C_DRMI_SHIFT)
#define I2C_NAI_SHIFT                  2
#define I2C_NAI_FIELD                  (0xFFFFFFFF - (0x1UL<<I2C_NAI_SHIFT))
#define I2C_NAI_0                      (0x0UL<<I2C_NAI_SHIFT)
#define I2C_NAI_1                      (0x1UL<<I2C_NAI_SHIFT)
#define I2C_NAI                        (0x1UL<<I2C_NAI_SHIFT)
#define I2C_AFI_SHIFT                  1
#define I2C_AFI_FIELD                  (0xFFFFFFFF - (0x1UL<<I2C_AFI_SHIFT))
#define I2C_AFI_0                      (0x0UL<<I2C_AFI_SHIFT)
#define I2C_AFI_1                      (0x1UL<<I2C_AFI_SHIFT)
#define I2C_AFI                        (0x1UL<<I2C_AFI_SHIFT)
#define I2C_TDI_SHIFT                  0
#define I2C_TDI_FIELD                  (0xFFFFFFFF - (0x1UL<<I2C_TDI_SHIFT))
#define I2C_TDI_0                      (0x0UL<<I2C_TDI_SHIFT)
#define I2C_TDI_1                      (0x1UL<<I2C_TDI_SHIFT)
#define I2C_TDI                        (0x1UL<<I2C_TDI_SHIFT)

/*****************************************************************************/
/* Register description for CTL */

/* Reset value of register I2C[2:1]_CTL */
#define I2C1_CTL_VALUE                 0x0
#define I2C2_CTL_VALUE                 0x0

/* Bits definition for register I2C[2:1]_CTL */
#define I2C_HARD_RESET_SHIFT           15
#define I2C_HARD_RESET_FIELD           (0xFFFFFFFF - (0x1UL<<I2C_HARD_RESET_SHIFT))
#define I2C_HARD_RESET_0               (0x0UL<<I2C_HARD_RESET_SHIFT)
#define I2C_HARD_RESET_1               (0x1UL<<I2C_HARD_RESET_SHIFT)
#define I2C_HARD_RESET                 (0x1UL<<I2C_HARD_RESET_SHIFT)
#define I2C_STOPIE_SHIFT               11
#define I2C_STOPIE_FIELD               (0xFFFFFFFF - (0x1UL<<I2C_STOPIE_SHIFT))
#define I2C_STOPIE_0                   (0x0UL<<I2C_STOPIE_SHIFT)
#define I2C_STOPIE_1                   (0x1UL<<I2C_STOPIE_SHIFT)
#define I2C_STOPIE                     (0x1UL<<I2C_STOPIE_SHIFT)
#define I2C_TFFSIE_SHIFT               10
#define I2C_TFFSIE_FIELD               (0xFFFFFFFF - (0x1UL<<I2C_TFFSIE_SHIFT))
#define I2C_TFFSIE_0                   (0x0UL<<I2C_TFFSIE_SHIFT)
#define I2C_TFFSIE_1                   (0x1UL<<I2C_TFFSIE_SHIFT)
#define I2C_TFFSIE                     (0x1UL<<I2C_TFFSIE_SHIFT)
#define I2C_RESET_SHIFT                8
#define I2C_RESET_FIELD                (0xFFFFFFFF - (0x1UL<<I2C_RESET_SHIFT))
#define I2C_RESET_0                    (0x0UL<<I2C_RESET_SHIFT)
#define I2C_RESET_1                    (0x1UL<<I2C_RESET_SHIFT)
#define I2C_RESET                      (0x1UL<<I2C_RESET_SHIFT)
#define I2C_TFFIE_SHIFT                7
#define I2C_TFFIE_FIELD                (0xFFFFFFFF - (0x1UL<<I2C_TFFIE_SHIFT))
#define I2C_TFFIE_0                    (0x0UL<<I2C_TFFIE_SHIFT)
#define I2C_TFFIE_1                    (0x1UL<<I2C_TFFIE_SHIFT)
#define I2C_TFFIE                      (0x1UL<<I2C_TFFIE_SHIFT)
#define I2C_RFDAIE_SHIFT               6
#define I2C_RFDAIE_FIELD               (0xFFFFFFFF - (0x1UL<<I2C_RFDAIE_SHIFT))
#define I2C_RFDAIE_0                   (0x0UL<<I2C_RFDAIE_SHIFT)
#define I2C_RFDAIE_1                   (0x1UL<<I2C_RFDAIE_SHIFT)
#define I2C_RFDAIE                     (0x1UL<<I2C_RFDAIE_SHIFT)
#define I2C_DAIE_SHIFT                 5
#define I2C_DAIE_FIELD                 (0xFFFFFFFF - (0x1UL<<I2C_DAIE_SHIFT))
#define I2C_DAIE_0                     (0x0UL<<I2C_DAIE_SHIFT)
#define I2C_DAIE_1                     (0x1UL<<I2C_DAIE_SHIFT)
#define I2C_DAIE                       (0x1UL<<I2C_DAIE_SHIFT)
#define I2C_DRSIE_SHIFT                4
#define I2C_DRSIE_FIELD                (0xFFFFFFFF - (0x1UL<<I2C_DRSIE_SHIFT))
#define I2C_DRSIE_0                    (0x0UL<<I2C_DRSIE_SHIFT)
#define I2C_DRSIE_1                    (0x1UL<<I2C_DRSIE_SHIFT)
#define I2C_DRSIE                      (0x1UL<<I2C_DRSIE_SHIFT)
#define I2C_DRMIE_SHIFT                3
#define I2C_DRMIE_FIELD                (0xFFFFFFFF - (0x1UL<<I2C_DRMIE_SHIFT))
#define I2C_DRMIE_0                    (0x0UL<<I2C_DRMIE_SHIFT)
#define I2C_DRMIE_1                    (0x1UL<<I2C_DRMIE_SHIFT)
#define I2C_DRMIE                      (0x1UL<<I2C_DRMIE_SHIFT)
#define I2C_NAIE_SHIFT                 2
#define I2C_NAIE_FIELD                 (0xFFFFFFFF - (0x1UL<<I2C_NAIE_SHIFT))
#define I2C_NAIE_0                     (0x0UL<<I2C_NAIE_SHIFT)
#define I2C_NAIE_1                     (0x1UL<<I2C_NAIE_SHIFT)
#define I2C_NAIE                       (0x1UL<<I2C_NAIE_SHIFT)
#define I2C_AFIE_SHIFT                 1
#define I2C_AFIE_FIELD                 (0xFFFFFFFF - (0x1UL<<I2C_AFIE_SHIFT))
#define I2C_AFIE_0                     (0x0UL<<I2C_AFIE_SHIFT)
#define I2C_AFIE_1                     (0x1UL<<I2C_AFIE_SHIFT)
#define I2C_AFIE                       (0x1UL<<I2C_AFIE_SHIFT)
#define I2C_TDIE_SHIFT                 0
#define I2C_TDIE_FIELD                 (0xFFFFFFFF - (0x1UL<<I2C_TDIE_SHIFT))
#define I2C_TDIE_0                     (0x0UL<<I2C_TDIE_SHIFT)
#define I2C_TDIE_1                     (0x1UL<<I2C_TDIE_SHIFT)
#define I2C_TDIE                       (0x1UL<<I2C_TDIE_SHIFT)

/*****************************************************************************/
/* Register description for CLKHI */

/* Reset value of register I2C[2:1]_CLKHI */
#define I2C1_CLKHI_VALUE               0x0
#define I2C2_CLKHI_VALUE               0x0

/* Bits definition for register I2C[2:1]_CLKHI */
#define I2C_CLKDIVHI_SHIFT             0
#define I2C_CLKDIVHI_FIELD             (0xFFFFFFFF - (0x3FFUL<<I2C_CLKDIVHI_SHIFT))
#define I2C_CLKDIVHI_0                 (0x0UL<<I2C_CLKDIVHI_SHIFT)

/*****************************************************************************/
/* Register description for CLKLO */

/* Reset value of register I2C[2:1]_CLKLO */
#define I2C1_CLKLO_VALUE               0x0
#define I2C2_CLKLO_VALUE               0x0

/* Bits definition for register I2C[2:1]_CLKLO */
#define I2C_CLKDIVLO_SHIFT             0
#define I2C_CLKDIVLO_FIELD             (0xFFFFFFFF - (0x3FFUL<<I2C_CLKDIVLO_SHIFT))
#define I2C_CLKDIVLO_0                 (0x0UL<<I2C_CLKDIVLO_SHIFT)

/*****************************************************************************/
/* Register description for HOLDDAT */

/* Reset value of register I2C[2:1]_HOLDDAT */
#define I2C1_HOLDDAT_VALUE             0x0
#define I2C2_HOLDDAT_VALUE             0x0

/* Bits definition for register I2C[2:1]_HOLDDAT */
#define I2C_HOLDSTA_SHIFT              8
#define I2C_HOLDSTA_FIELD              (0xFFFFFFFF - (0x3UL<<I2C_HOLDSTA_SHIFT))
#define I2C_HOLDSTA_0                  (0x0UL<<I2C_HOLDSTA_SHIFT)
#define I2C_HOLDSTA_1                  (0x1UL<<I2C_HOLDSTA_SHIFT)
#define I2C_HOLDSTA_2                  (0x2UL<<I2C_HOLDSTA_SHIFT)
#define I2C_HOLDSTA_3                  (0x3UL<<I2C_HOLDSTA_SHIFT)
#define I2C_HOLDDAT_SHIFT              0
#define I2C_HOLDDAT_FIELD              (0xFFFFFFFF - (0x7FUL<<I2C_HOLDDAT_SHIFT))
#define I2C_HOLDDAT_0                  (0x0UL<<I2C_HOLDDAT_SHIFT)

/*****************************************************************************/
/* Register description for ADR */

/* Reset value of register I2C[2:1]_ADR */
#define I2C1_ADR_VALUE                 0x0
#define I2C2_ADR_VALUE                 0x0

/* Bits definition for register I2C[2:1]_ADR */
#define I2C_SADDR_SHIFT                0
#define I2C_SADDR_FIELD                (0xFFFFFFFF - (0x7FUL<<I2C_SADDR_SHIFT))
#define I2C_SADDR_0                    (0x0UL<<I2C_SADDR_SHIFT)

/*****************************************************************************/
/* Register description for TXS */

/* Reset value of register I2C[2:1]_TXS */
#define I2C1_TXS_VALUE                 0x0
#define I2C2_TXS_VALUE                 0x0

/* Bits definition for register I2C[2:1]_TXS */
#define I2C_DATA_SHIFT                 0
#define I2C_DATA_FIELD                 (0xFFFFFFFF - (0xFFUL<<I2C_DATA_SHIFT))
#define I2C_DATA_SLAVE_TRANSMIT_BUFFER_REGISTER    (0x0UL<<I2C_DATA_SHIFT)

/*****************************************************************************/

/*****************************************************************************
* Definitions for: INTC
*****************************************************************************/

/* Pointer on base address */
#define INTC_BASE                      IOA(INTC_BASE_ADDR)

/* INTC PRIOMASK_IRQ Register (32 bits) */
#define INTC_PRIOMASK_IRQ_OFFSET       0x0
#define INTC_PRIOMASK_IRQ_REG          IOA(INTC_BASE_ADDR + INTC_PRIOMASK_IRQ_OFFSET)

/* INTC PRIOMASK_FIQ Register (32 bits) */
#define INTC_PRIOMASK_FIQ_OFFSET       0x4
#define INTC_PRIOMASK_FIQ_REG          IOA(INTC_BASE_ADDR + INTC_PRIOMASK_FIQ_OFFSET)

/* INTC VECTOR_IRQ Register (32 bits) */
#define INTC_VECTOR_IRQ_OFFSET         0x100
#define INTC_VECTOR_IRQ_REG            IOA(INTC_BASE_ADDR + INTC_VECTOR_IRQ_OFFSET)

/* INTC VECTOR_FIQ Register (32 bits) */
#define INTC_VECTOR_FIQ_OFFSET         0x104
#define INTC_VECTOR_FIQ_REG            IOA(INTC_BASE_ADDR + INTC_VECTOR_FIQ_OFFSET)

/* INTC PENDING_1 Register (32 bits) */
#define INTC_PENDING_1_OFFSET          0x200
#define INTC_PENDING_1_REG             IOA(INTC_BASE_ADDR + INTC_PENDING_1_OFFSET)

/* INTC PENDING_2 Register (32 bits) */
#define INTC_PENDING_2_OFFSET          0x204
#define INTC_PENDING_2_REG             IOA(INTC_BASE_ADDR + INTC_PENDING_2_OFFSET)

/* INTC PENDING_3 Register (32 bits) */
#define INTC_PENDING_3_OFFSET          0x208
#define INTC_PENDING_3_REG             IOA(INTC_BASE_ADDR + INTC_PENDING_3_OFFSET)

/* INTC FEATURES Register (32 bits) */
#define INTC_FEATURES_OFFSET           0x300
#define INTC_FEATURES_REG              IOA(INTC_BASE_ADDR + INTC_FEATURES_OFFSET)

/* INTC REQUEST1 Register (32 bits) */
#define INTC_REQUEST1_OFFSET           0x404
#define INTC_REQUEST1_REG              IOA(INTC_BASE_ADDR + INTC_REQUEST1_OFFSET)

/* INTC REQUEST2 Register (32 bits) */
#define INTC_REQUEST2_OFFSET           0x408
#define INTC_REQUEST2_REG              IOA(INTC_BASE_ADDR + INTC_REQUEST2_OFFSET)

/* INTC REQUEST3 Register (32 bits) */
#define INTC_REQUEST3_OFFSET           0x40C
#define INTC_REQUEST3_REG              IOA(INTC_BASE_ADDR + INTC_REQUEST3_OFFSET)

/* INTC REQUEST4 Register (32 bits) */
#define INTC_REQUEST4_OFFSET           0x410
#define INTC_REQUEST4_REG              IOA(INTC_BASE_ADDR + INTC_REQUEST4_OFFSET)

/* INTC REQUEST5 Register (32 bits) */
#define INTC_REQUEST5_OFFSET           0x414
#define INTC_REQUEST5_REG              IOA(INTC_BASE_ADDR + INTC_REQUEST5_OFFSET)

/* INTC REQUEST6 Register (32 bits) */
#define INTC_REQUEST6_OFFSET           0x418
#define INTC_REQUEST6_REG              IOA(INTC_BASE_ADDR + INTC_REQUEST6_OFFSET)

/* INTC REQUEST7 Register (32 bits) */
#define INTC_REQUEST7_OFFSET           0x41C
#define INTC_REQUEST7_REG              IOA(INTC_BASE_ADDR + INTC_REQUEST7_OFFSET)

/* INTC REQUEST8 Register (32 bits) */
#define INTC_REQUEST8_OFFSET           0x420
#define INTC_REQUEST8_REG              IOA(INTC_BASE_ADDR + INTC_REQUEST8_OFFSET)

/* INTC REQUEST9 Register (32 bits) */
#define INTC_REQUEST9_OFFSET           0x424
#define INTC_REQUEST9_REG              IOA(INTC_BASE_ADDR + INTC_REQUEST9_OFFSET)

/* INTC REQUEST10 Register (32 bits) */
#define INTC_REQUEST10_OFFSET          0x428
#define INTC_REQUEST10_REG             IOA(INTC_BASE_ADDR + INTC_REQUEST10_OFFSET)

/* INTC REQUEST11 Register (32 bits) */
#define INTC_REQUEST11_OFFSET          0x42C
#define INTC_REQUEST11_REG             IOA(INTC_BASE_ADDR + INTC_REQUEST11_OFFSET)

/* INTC REQUEST12 Register (32 bits) */
#define INTC_REQUEST12_OFFSET          0x430
#define INTC_REQUEST12_REG             IOA(INTC_BASE_ADDR + INTC_REQUEST12_OFFSET)

/* INTC REQUEST13 Register (32 bits) */
#define INTC_REQUEST13_OFFSET          0x434
#define INTC_REQUEST13_REG             IOA(INTC_BASE_ADDR + INTC_REQUEST13_OFFSET)

/* INTC REQUEST14 Register (32 bits) */
#define INTC_REQUEST14_OFFSET          0x438
#define INTC_REQUEST14_REG             IOA(INTC_BASE_ADDR + INTC_REQUEST14_OFFSET)

/* INTC REQUEST15 Register (32 bits) */
#define INTC_REQUEST15_OFFSET          0x43C
#define INTC_REQUEST15_REG             IOA(INTC_BASE_ADDR + INTC_REQUEST15_OFFSET)

/* INTC REQUEST16 Register (32 bits) */
#define INTC_REQUEST16_OFFSET          0x440
#define INTC_REQUEST16_REG             IOA(INTC_BASE_ADDR + INTC_REQUEST16_OFFSET)

/* INTC REQUEST17 Register (32 bits) */
#define INTC_REQUEST17_OFFSET          0x444
#define INTC_REQUEST17_REG             IOA(INTC_BASE_ADDR + INTC_REQUEST17_OFFSET)

/* INTC REQUEST18 Register (32 bits) */
#define INTC_REQUEST18_OFFSET          0x448
#define INTC_REQUEST18_REG             IOA(INTC_BASE_ADDR + INTC_REQUEST18_OFFSET)

/* INTC REQUEST19 Register (32 bits) */
#define INTC_REQUEST19_OFFSET          0x44C
#define INTC_REQUEST19_REG             IOA(INTC_BASE_ADDR + INTC_REQUEST19_OFFSET)

/* INTC REQUEST20 Register (32 bits) */
#define INTC_REQUEST20_OFFSET          0x450
#define INTC_REQUEST20_REG             IOA(INTC_BASE_ADDR + INTC_REQUEST20_OFFSET)

/* INTC REQUEST21 Register (32 bits) */
#define INTC_REQUEST21_OFFSET          0x454
#define INTC_REQUEST21_REG             IOA(INTC_BASE_ADDR + INTC_REQUEST21_OFFSET)

/* INTC REQUEST22 Register (32 bits) */
#define INTC_REQUEST22_OFFSET          0x458
#define INTC_REQUEST22_REG             IOA(INTC_BASE_ADDR + INTC_REQUEST22_OFFSET)

/* INTC REQUEST23 Register (32 bits) */
#define INTC_REQUEST23_OFFSET          0x45C
#define INTC_REQUEST23_REG             IOA(INTC_BASE_ADDR + INTC_REQUEST23_OFFSET)

/* INTC REQUEST24 Register (32 bits) */
#define INTC_REQUEST24_OFFSET          0x460
#define INTC_REQUEST24_REG             IOA(INTC_BASE_ADDR + INTC_REQUEST24_OFFSET)

/* INTC REQUEST25 Register (32 bits) */
#define INTC_REQUEST25_OFFSET          0x464
#define INTC_REQUEST25_REG             IOA(INTC_BASE_ADDR + INTC_REQUEST25_OFFSET)

/* INTC REQUEST26 Register (32 bits) */
#define INTC_REQUEST26_OFFSET          0x468
#define INTC_REQUEST26_REG             IOA(INTC_BASE_ADDR + INTC_REQUEST26_OFFSET)

/* INTC REQUEST27 Register (32 bits) */
#define INTC_REQUEST27_OFFSET          0x46C
#define INTC_REQUEST27_REG             IOA(INTC_BASE_ADDR + INTC_REQUEST27_OFFSET)

/* INTC REQUEST28 Register (32 bits) */
#define INTC_REQUEST28_OFFSET          0x470
#define INTC_REQUEST28_REG             IOA(INTC_BASE_ADDR + INTC_REQUEST28_OFFSET)

/* INTC REQUEST29 Register (32 bits) */
#define INTC_REQUEST29_OFFSET          0x474
#define INTC_REQUEST29_REG             IOA(INTC_BASE_ADDR + INTC_REQUEST29_OFFSET)

/* INTC REQUEST30 Register (32 bits) */
#define INTC_REQUEST30_OFFSET          0x478
#define INTC_REQUEST30_REG             IOA(INTC_BASE_ADDR + INTC_REQUEST30_OFFSET)

/* INTC REQUEST31 Register (32 bits) */
#define INTC_REQUEST31_OFFSET          0x47C
#define INTC_REQUEST31_REG             IOA(INTC_BASE_ADDR + INTC_REQUEST31_OFFSET)

/* INTC REQUEST32 Register (32 bits) */
#define INTC_REQUEST32_OFFSET          0x480
#define INTC_REQUEST32_REG             IOA(INTC_BASE_ADDR + INTC_REQUEST32_OFFSET)

/* INTC REQUEST33 Register (32 bits) */
#define INTC_REQUEST33_OFFSET          0x484
#define INTC_REQUEST33_REG             IOA(INTC_BASE_ADDR + INTC_REQUEST33_OFFSET)

/* INTC REQUEST34 Register (32 bits) */
#define INTC_REQUEST34_OFFSET          0x488
#define INTC_REQUEST34_REG             IOA(INTC_BASE_ADDR + INTC_REQUEST34_OFFSET)

/* INTC REQUEST35 Register (32 bits) */
#define INTC_REQUEST35_OFFSET          0x48C
#define INTC_REQUEST35_REG             IOA(INTC_BASE_ADDR + INTC_REQUEST35_OFFSET)

/* INTC REQUEST36 Register (32 bits) */
#define INTC_REQUEST36_OFFSET          0x490
#define INTC_REQUEST36_REG             IOA(INTC_BASE_ADDR + INTC_REQUEST36_OFFSET)

/* INTC REQUEST37 Register (32 bits) */
#define INTC_REQUEST37_OFFSET          0x494
#define INTC_REQUEST37_REG             IOA(INTC_BASE_ADDR + INTC_REQUEST37_OFFSET)

/* INTC REQUEST38 Register (32 bits) */
#define INTC_REQUEST38_OFFSET          0x498
#define INTC_REQUEST38_REG             IOA(INTC_BASE_ADDR + INTC_REQUEST38_OFFSET)

/* INTC REQUEST39 Register (32 bits) */
#define INTC_REQUEST39_OFFSET          0x49C
#define INTC_REQUEST39_REG             IOA(INTC_BASE_ADDR + INTC_REQUEST39_OFFSET)

/* INTC REQUEST40 Register (32 bits) */
#define INTC_REQUEST40_OFFSET          0x4A0
#define INTC_REQUEST40_REG             IOA(INTC_BASE_ADDR + INTC_REQUEST40_OFFSET)

/* INTC REQUEST41 Register (32 bits) */
#define INTC_REQUEST41_OFFSET          0x4A4
#define INTC_REQUEST41_REG             IOA(INTC_BASE_ADDR + INTC_REQUEST41_OFFSET)

/* INTC REQUEST42 Register (32 bits) */
#define INTC_REQUEST42_OFFSET          0x4A8
#define INTC_REQUEST42_REG             IOA(INTC_BASE_ADDR + INTC_REQUEST42_OFFSET)

/* INTC REQUEST43 Register (32 bits) */
#define INTC_REQUEST43_OFFSET          0x4AC
#define INTC_REQUEST43_REG             IOA(INTC_BASE_ADDR + INTC_REQUEST43_OFFSET)

/* INTC REQUEST44 Register (32 bits) */
#define INTC_REQUEST44_OFFSET          0x4B0
#define INTC_REQUEST44_REG             IOA(INTC_BASE_ADDR + INTC_REQUEST44_OFFSET)

/* INTC REQUEST45 Register (32 bits) */
#define INTC_REQUEST45_OFFSET          0x4B4
#define INTC_REQUEST45_REG             IOA(INTC_BASE_ADDR + INTC_REQUEST45_OFFSET)

/* INTC REQUEST46 Register (32 bits) */
#define INTC_REQUEST46_OFFSET          0x4B8
#define INTC_REQUEST46_REG             IOA(INTC_BASE_ADDR + INTC_REQUEST46_OFFSET)

/* INTC REQUEST47 Register (32 bits) */
#define INTC_REQUEST47_OFFSET          0x4BC
#define INTC_REQUEST47_REG             IOA(INTC_BASE_ADDR + INTC_REQUEST47_OFFSET)

/* INTC REQUEST48 Register (32 bits) */
#define INTC_REQUEST48_OFFSET          0x4C0
#define INTC_REQUEST48_REG             IOA(INTC_BASE_ADDR + INTC_REQUEST48_OFFSET)

/* INTC REQUEST49 Register (32 bits) */
#define INTC_REQUEST49_OFFSET          0x4C4
#define INTC_REQUEST49_REG             IOA(INTC_BASE_ADDR + INTC_REQUEST49_OFFSET)

/* INTC REQUEST50 Register (32 bits) */
#define INTC_REQUEST50_OFFSET          0x4C8
#define INTC_REQUEST50_REG             IOA(INTC_BASE_ADDR + INTC_REQUEST50_OFFSET)

/* INTC REQUEST51 Register (32 bits) */
#define INTC_REQUEST51_OFFSET          0x4CC
#define INTC_REQUEST51_REG             IOA(INTC_BASE_ADDR + INTC_REQUEST51_OFFSET)

/* INTC REQUEST52 Register (32 bits) */
#define INTC_REQUEST52_OFFSET          0x4D0
#define INTC_REQUEST52_REG             IOA(INTC_BASE_ADDR + INTC_REQUEST52_OFFSET)

/* INTC REQUEST53 Register (32 bits) */
#define INTC_REQUEST53_OFFSET          0x4D4
#define INTC_REQUEST53_REG             IOA(INTC_BASE_ADDR + INTC_REQUEST53_OFFSET)

/* INTC REQUEST54 Register (32 bits) */
#define INTC_REQUEST54_OFFSET          0x4D8
#define INTC_REQUEST54_REG             IOA(INTC_BASE_ADDR + INTC_REQUEST54_OFFSET)

/* INTC REQUEST55 Register (32 bits) */
#define INTC_REQUEST55_OFFSET          0x4DC
#define INTC_REQUEST55_REG             IOA(INTC_BASE_ADDR + INTC_REQUEST55_OFFSET)

/* INTC REQUEST56 Register (32 bits) */
#define INTC_REQUEST56_OFFSET          0x4E0
#define INTC_REQUEST56_REG             IOA(INTC_BASE_ADDR + INTC_REQUEST56_OFFSET)

/* INTC REQUEST57 Register (32 bits) */
#define INTC_REQUEST57_OFFSET          0x4E4
#define INTC_REQUEST57_REG             IOA(INTC_BASE_ADDR + INTC_REQUEST57_OFFSET)

/* INTC REQUEST58 Register (32 bits) */
#define INTC_REQUEST58_OFFSET          0x4E8
#define INTC_REQUEST58_REG             IOA(INTC_BASE_ADDR + INTC_REQUEST58_OFFSET)

/* INTC REQUEST59 Register (32 bits) */
#define INTC_REQUEST59_OFFSET          0x4EC
#define INTC_REQUEST59_REG             IOA(INTC_BASE_ADDR + INTC_REQUEST59_OFFSET)

/* INTC REQUEST60 Register (32 bits) */
#define INTC_REQUEST60_OFFSET          0x4F0
#define INTC_REQUEST60_REG             IOA(INTC_BASE_ADDR + INTC_REQUEST60_OFFSET)

/* INTC REQUEST61 Register (32 bits) */
#define INTC_REQUEST61_OFFSET          0x4F4
#define INTC_REQUEST61_REG             IOA(INTC_BASE_ADDR + INTC_REQUEST61_OFFSET)

/* INTC REQUEST62 Register (32 bits) */
#define INTC_REQUEST62_OFFSET          0x4F8
#define INTC_REQUEST62_REG             IOA(INTC_BASE_ADDR + INTC_REQUEST62_OFFSET)

/* INTC REQUEST63 Register (32 bits) */
#define INTC_REQUEST63_OFFSET          0x4FC
#define INTC_REQUEST63_REG             IOA(INTC_BASE_ADDR + INTC_REQUEST63_OFFSET)

/* INTC REQUEST64 Register (32 bits) */
#define INTC_REQUEST64_OFFSET          0x500
#define INTC_REQUEST64_REG             IOA(INTC_BASE_ADDR + INTC_REQUEST64_OFFSET)

/* INTC MOD_ID Register (32 bits) */
#define INTC_MOD_ID_OFFSET             0xFFC
#define INTC_MOD_ID_REG                IOA(INTC_BASE_ADDR + INTC_MOD_ID_OFFSET)

/* Register description for PRIOMASK_IRQ */

/* Reset value of register INTC_PRIOMASK_IRQ */
#define INTC_PRIOMASK_IRQ_VALUE        0x0

/* Bits definition for register INTC_PRIOMASK_IRQ */
#define INTC_PRIO_LIM_IRQ_SHIFT        0
#define INTC_PRIO_LIM_IRQ_FIELD        (0xFFFFFFFF - (0x1FUL<<INTC_PRIO_LIM_IRQ_SHIFT))

/*****************************************************************************/
/* Register description for PRIOMASK_FIQ */

/* Reset value of register INTC_PRIOMASK_FIQ */
#define INTC_PRIOMASK_FIQ_VALUE        0x0

/* Bits definition for register INTC_PRIOMASK_FIQ */
#define INTC_PRIO_LIM_FIQ_SHIFT        0
#define INTC_PRIO_LIM_FIQ_FIELD        (0xFFFFFFFF - (0x1FUL<<INTC_PRIO_LIM_FIQ_SHIFT))

/*****************************************************************************/
/* Register description for VECTOR_IRQ */

/* Reset value of register INTC_VECTOR_IRQ */
#define INTC_VECTOR_IRQ_VALUE          0x0

/* Bits definition for register INTC_VECTOR_IRQ */
#define INTC_TABLE_ADDR_SHIFT          11
#define INTC_TABLE_ADDR_FIELD          (0xFFFFFFFF - (0x1FFFFFUL<<INTC_TABLE_ADDR_SHIFT))
#define INTC_TABLE_ADDR_0              (0x0UL<<INTC_TABLE_ADDR_SHIFT)
#define INTC_INDEX_SHIFT               3
#define INTC_INDEX_FIELD               (0xFFFFFFFF - (0xFFUL<<INTC_INDEX_SHIFT))
#define INTC_INDEX_0                   (0x0UL<<INTC_INDEX_SHIFT)

/*****************************************************************************/
/* Register description for VECTOR_FIQ */

/* Reset value of register INTC_VECTOR_FIQ */
#define INTC_VECTOR_FIQ_VALUE          0x0

/* Bits definition for register INTC_VECTOR_FIQ */
#define INTC_TABLE_ADDR_SHIFT          11
#define INTC_TABLE_ADDR_FIELD          (0xFFFFFFFF - (0x1FFFFFUL<<INTC_TABLE_ADDR_SHIFT))
#define INTC_TABLE_ADDR_0              (0x0UL<<INTC_TABLE_ADDR_SHIFT)
#define INTC_INDEX_SHIFT               3
#define INTC_INDEX_FIELD               (0xFFFFFFFF - (0xFFUL<<INTC_INDEX_SHIFT))
#define INTC_INDEX_0                   (0x0UL<<INTC_INDEX_SHIFT)

/*****************************************************************************/
/* Register description for PENDING_1 */

/* Reset value of register INTC_PENDING_1 */
#define INTC_PENDING_1_VALUE           0x0

/* Bits definition for register INTC_PENDING_1 */
#define INTC_INTC_PEND_31_1_SHIFT      1
#define INTC_INTC_PEND_31_1_FIELD      (0xFFFFFFFF - (0x7FFFFFFFUL<<INTC_INTC_PEND_31_1_SHIFT))

/*****************************************************************************/
/* Register description for PENDING_2 */

/* Reset value of register INTC_PENDING_2 */
#define INTC_PENDING_2_VALUE           0x0

/* Bits definition for register INTC_PENDING_2 */
#define INTC_INT_PEND_63_32_SHIFT      0
#define INTC_INT_PEND_63_32_FIELD      (0xFFFFFFFF - (0x7FFFFFFFUL<<INTC_INT_PEND_63_32_SHIFT))

/*****************************************************************************/
/* Register description for PENDING_3 */

/* Reset value of register INTC_PENDING_3 */
#define INTC_PENDING_3_VALUE           0x0

/* Bits definition for register INTC_PENDING_3 */
#define INTC_INT_PEND_64_SHIFT         0
#define INTC_INT_PEND_64_FIELD         (0xFFFFFFFF - (0x1UL<<INTC_INT_PEND_64_SHIFT))
#define INTC_INT_PEND_64               (0x1UL<<INTC_INT_PEND_64_SHIFT)

/*****************************************************************************/
/* Register description for FEATURES */

/* Reset value of register INTC_FEATURES */
#define INTC_FEATURES_VALUE            0x11F40

/* Bits definition for register INTC_FEATURES */
#define INTC_TARGETS_SHIFT             16
#define INTC_TARGETS_FIELD             (0xFFFFFFFF - (0x3FUL<<INTC_TARGETS_SHIFT))
#define INTC_TARGETS_1                 (0x1UL<<INTC_TARGETS_SHIFT)
#define INTC_PRIORITIES_SHIFT          8
#define INTC_PRIORITIES_FIELD          (0xFFFFFFFF - (0xFFUL<<INTC_PRIORITIES_SHIFT))
#define INTC_PRIORITIES_1F             (0x1FUL<<INTC_PRIORITIES_SHIFT)
#define INTC_INPUTS_SHIFT              0
#define INTC_INPUTS_FIELD              (0xFFFFFFFF - (0xFFUL<<INTC_INPUTS_SHIFT))
#define INTC_INPUTS_40                 (0x40UL<<INTC_INPUTS_SHIFT)

/*****************************************************************************/
/* Register description for REQUEST[64:1] */

/* Reset value of register INTC_REQUEST[64:1] */
#define INTC_REQUEST1_VALUE            0x0
#define INTC_REQUEST2_VALUE            0x0
#define INTC_REQUEST3_VALUE            0x0
#define INTC_REQUEST4_VALUE            0x0
#define INTC_REQUEST5_VALUE            0x0
#define INTC_REQUEST6_VALUE            0x0
#define INTC_REQUEST7_VALUE            0x0
#define INTC_REQUEST8_VALUE            0x0
#define INTC_REQUEST9_VALUE            0x0
#define INTC_REQUEST10_VALUE           0x0
#define INTC_REQUEST11_VALUE           0x0
#define INTC_REQUEST12_VALUE           0x0
#define INTC_REQUEST13_VALUE           0x0
#define INTC_REQUEST14_VALUE           0x0
#define INTC_REQUEST15_VALUE           0x0
#define INTC_REQUEST16_VALUE           0x0
#define INTC_REQUEST17_VALUE           0x0
#define INTC_REQUEST18_VALUE           0x0
#define INTC_REQUEST19_VALUE           0x0
#define INTC_REQUEST20_VALUE           0x0
#define INTC_REQUEST21_VALUE           0x0
#define INTC_REQUEST22_VALUE           0x0
#define INTC_REQUEST23_VALUE           0x0
#define INTC_REQUEST24_VALUE           0x0
#define INTC_REQUEST25_VALUE           0x0
#define INTC_REQUEST26_VALUE           0x0
#define INTC_REQUEST27_VALUE           0x0
#define INTC_REQUEST28_VALUE           0x0
#define INTC_REQUEST29_VALUE           0x0
#define INTC_REQUEST30_VALUE           0x0
#define INTC_REQUEST31_VALUE           0x0
#define INTC_REQUEST32_VALUE           0x0
#define INTC_REQUEST33_VALUE           0x0
#define INTC_REQUEST34_VALUE           0x0
#define INTC_REQUEST35_VALUE           0x0
#define INTC_REQUEST36_VALUE           0x0
#define INTC_REQUEST37_VALUE           0x0
#define INTC_REQUEST38_VALUE           0x0
#define INTC_REQUEST39_VALUE           0x0
#define INTC_REQUEST40_VALUE           0x0
#define INTC_REQUEST41_VALUE           0x0
#define INTC_REQUEST42_VALUE           0x0
#define INTC_REQUEST43_VALUE           0x0
#define INTC_REQUEST44_VALUE           0x0
#define INTC_REQUEST45_VALUE           0x0
#define INTC_REQUEST46_VALUE           0x0
#define INTC_REQUEST47_VALUE           0x0
#define INTC_REQUEST48_VALUE           0x0
#define INTC_REQUEST49_VALUE           0x0
#define INTC_REQUEST50_VALUE           0x0
#define INTC_REQUEST51_VALUE           0x0
#define INTC_REQUEST52_VALUE           0x0
#define INTC_REQUEST53_VALUE           0x0
#define INTC_REQUEST54_VALUE           0x0
#define INTC_REQUEST55_VALUE           0x0
#define INTC_REQUEST56_VALUE           0x0
#define INTC_REQUEST57_VALUE           0x0
#define INTC_REQUEST58_VALUE           0x0
#define INTC_REQUEST59_VALUE           0x0
#define INTC_REQUEST60_VALUE           0x0
#define INTC_REQUEST61_VALUE           0x0
#define INTC_REQUEST62_VALUE           0x0
#define INTC_REQUEST63_VALUE           0x0
#define INTC_REQUEST64_VALUE           0x0

/* Bits definition for register INTC_REQUEST[64:1] */
#define INTC_PENDING_SHIFT             31
#define INTC_PENDING_FIELD             (0xFFFFFFFF - (0x1UL<<INTC_PENDING_SHIFT))
#define INTC_PENDING_0                 (0x0UL<<INTC_PENDING_SHIFT)
#define INTC_PENDING_1                 (0x1UL<<INTC_PENDING_SHIFT)
#define INTC_PENDING                   (0x1UL<<INTC_PENDING_SHIFT)
#define INTC_SET_SWINT_SHIFT           30
#define INTC_SET_SWINT_FIELD           (0xFFFFFFFF - (0x1UL<<INTC_SET_SWINT_SHIFT))
#define INTC_SET_SWINT_0               (0x0UL<<INTC_SET_SWINT_SHIFT)
#define INTC_SET_SWINT_1               (0x1UL<<INTC_SET_SWINT_SHIFT)
#define INTC_SET_SWINT                 (0x1UL<<INTC_SET_SWINT_SHIFT)
#define INTC_CLR_SWINT_SHIFT           29
#define INTC_CLR_SWINT_FIELD           (0xFFFFFFFF - (0x1UL<<INTC_CLR_SWINT_SHIFT))
#define INTC_CLR_SWINT_0               (0x0UL<<INTC_CLR_SWINT_SHIFT)
#define INTC_CLR_SWINT_1               (0x1UL<<INTC_CLR_SWINT_SHIFT)
#define INTC_CLR_SWINT                 (0x1UL<<INTC_CLR_SWINT_SHIFT)
#define INTC_WE_PRIORITY_SHIFT         28
#define INTC_WE_PRIORITY_FIELD         (0xFFFFFFFF - (0x1UL<<INTC_WE_PRIORITY_SHIFT))
#define INTC_WE_PRIORITY_0             (0x0UL<<INTC_WE_PRIORITY_SHIFT)
#define INTC_WE_PRIORITY_1             (0x1UL<<INTC_WE_PRIORITY_SHIFT)
#define INTC_WE_PRIORITY               (0x1UL<<INTC_WE_PRIORITY_SHIFT)
#define INTC_WE_TARGET_SHIFT           27
#define INTC_WE_TARGET_FIELD           (0xFFFFFFFF - (0x1UL<<INTC_WE_TARGET_SHIFT))
#define INTC_WE_TARGET_0               (0x0UL<<INTC_WE_TARGET_SHIFT)
#define INTC_WE_TARGET_1               (0x1UL<<INTC_WE_TARGET_SHIFT)
#define INTC_WE_TARGET                 (0x1UL<<INTC_WE_TARGET_SHIFT)
#define INTC_WE_ENABLE_SHIFT           26
#define INTC_WE_ENABLE_FIELD           (0xFFFFFFFF - (0x1UL<<INTC_WE_ENABLE_SHIFT))
#define INTC_WE_ENABLE_0               (0x0UL<<INTC_WE_ENABLE_SHIFT)
#define INTC_WE_ENABLE_1               (0x1UL<<INTC_WE_ENABLE_SHIFT)
#define INTC_WE_ENABLE                 (0x1UL<<INTC_WE_ENABLE_SHIFT)
#define INTC_WE_ACTIVE_SHIFT           25
#define INTC_WE_ACTIVE_FIELD           (0xFFFFFFFF - (0x1UL<<INTC_WE_ACTIVE_SHIFT))
#define INTC_WE_ACTIVE_0               (0x0UL<<INTC_WE_ACTIVE_SHIFT)
#define INTC_WE_ACTIVE_1               (0x1UL<<INTC_WE_ACTIVE_SHIFT)
#define INTC_WE_ACTIVE                 (0x1UL<<INTC_WE_ACTIVE_SHIFT)
#define INTC_ACTIVE_SHIFT              17
#define INTC_ACTIVE_FIELD              (0xFFFFFFFF - (0x1UL<<INTC_ACTIVE_SHIFT))
#define INTC_ACTIVE_HIGH               (0x0UL<<INTC_ACTIVE_SHIFT)
#define INTC_ACTIVE_LOW                (0x1UL<<INTC_ACTIVE_SHIFT)
#define INTC_ACTIVE                    (0x1UL<<INTC_ACTIVE_SHIFT)
#define INTC_ENABLE_SHIFT              16
#define INTC_ENABLE_FIELD              (0xFFFFFFFF - (0x1UL<<INTC_ENABLE_SHIFT))
#define INTC_ENABLE_OFF                (0x0UL<<INTC_ENABLE_SHIFT)
#define INTC_ENABLE_ON                 (0x1UL<<INTC_ENABLE_SHIFT)
#define INTC_ENABLE                    (0x1UL<<INTC_ENABLE_SHIFT)
#define INTC_TARGET_SHIFT              8
#define INTC_TARGET_FIELD              (0xFFFFFFFF - (0x1UL<<INTC_TARGET_SHIFT))
#define INTC_TARGET_IRQ                (0x0UL<<INTC_TARGET_SHIFT)
#define INTC_TARGET_FIQ                (0x1UL<<INTC_TARGET_SHIFT)
#define INTC_TARGET                    (0x1UL<<INTC_TARGET_SHIFT)
#define INTC_PRIORITY_SHIFT            0
#define INTC_PRIORITY_FIELD            (0xFFFFFFFF - (0x1FUL<<INTC_PRIORITY_SHIFT))
#define INTC_PRIORITY_0                (0x0UL<<INTC_PRIORITY_SHIFT)
#define INTC_PRIORITY_LEVEL_1          (0x1UL<<INTC_PRIORITY_SHIFT)
#define INTC_PRIORITY_LEVEL_2          (0x2UL<<INTC_PRIORITY_SHIFT)
#define INTC_PRIORITY_LEVEL_3          (0x3UL<<INTC_PRIORITY_SHIFT)
#define INTC_PRIORITY_LEVEL_4          (0x4UL<<INTC_PRIORITY_SHIFT)
#define INTC_PRIORITY_LEVEL_5          (0x5UL<<INTC_PRIORITY_SHIFT)
#define INTC_PRIORITY_LEVEL_6          (0x6UL<<INTC_PRIORITY_SHIFT)
#define INTC_PRIORITY_LEVEL_7          (0x7UL<<INTC_PRIORITY_SHIFT)
#define INTC_PRIORITY_LEVEL_8          (0x8UL<<INTC_PRIORITY_SHIFT)
#define INTC_PRIORITY_LEVEL_9          (0x9UL<<INTC_PRIORITY_SHIFT)
#define INTC_PRIORITY_LEVEL_10         (0xAUL<<INTC_PRIORITY_SHIFT)
#define INTC_PRIORITY_LEVEL_11         (0xBUL<<INTC_PRIORITY_SHIFT)
#define INTC_PRIORITY_LEVEL_12         (0xCUL<<INTC_PRIORITY_SHIFT)
#define INTC_PRIORITY_LEVEL_13         (0xDUL<<INTC_PRIORITY_SHIFT)
#define INTC_PRIORITY_LEVEL_14         (0xEUL<<INTC_PRIORITY_SHIFT)
#define INTC_PRIORITY_LEVEL_15         (0xFUL<<INTC_PRIORITY_SHIFT)
#define INTC_PRIORITY_LEVEL_16         (0x10UL<<INTC_PRIORITY_SHIFT)
#define INTC_PRIORITY_LEVEL_17         (0x11UL<<INTC_PRIORITY_SHIFT)
#define INTC_PRIORITY_LEVEL_18         (0x12UL<<INTC_PRIORITY_SHIFT)
#define INTC_PRIORITY_LEVEL_19         (0x13UL<<INTC_PRIORITY_SHIFT)
#define INTC_PRIORITY_LEVEL_20         (0x14UL<<INTC_PRIORITY_SHIFT)
#define INTC_PRIORITY_LEVEL_21         (0x15UL<<INTC_PRIORITY_SHIFT)
#define INTC_PRIORITY_LEVEL_22         (0x16UL<<INTC_PRIORITY_SHIFT)
#define INTC_PRIORITY_LEVEL_23         (0x17UL<<INTC_PRIORITY_SHIFT)
#define INTC_PRIORITY_LEVEL_24         (0x18UL<<INTC_PRIORITY_SHIFT)
#define INTC_PRIORITY_LEVEL_25         (0x19UL<<INTC_PRIORITY_SHIFT)
#define INTC_PRIORITY_LEVEL_26         (0x1AUL<<INTC_PRIORITY_SHIFT)
#define INTC_PRIORITY_LEVEL_27         (0x1BUL<<INTC_PRIORITY_SHIFT)
#define INTC_PRIORITY_LEVEL_28         (0x1CUL<<INTC_PRIORITY_SHIFT)
#define INTC_PRIORITY_LEVEL_29         (0x1DUL<<INTC_PRIORITY_SHIFT)
#define INTC_PRIORITY_LEVEL_30         (0x1EUL<<INTC_PRIORITY_SHIFT)
#define INTC_PRIORITY_LEVEL_31         (0x1FUL<<INTC_PRIORITY_SHIFT)

/*****************************************************************************/
/* Register description for MOD_ID */

/* Reset value of register INTC_MOD_ID */
#define INTC_MOD_ID_VALUE              0x11061000

/* Bits definition for register INTC_MOD_ID */
#define INTC_ID_NUM_SHIFT              16
#define INTC_ID_NUM_FIELD              (0xFFFFFFFF - (0xFFFFUL<<INTC_ID_NUM_SHIFT))
#define INTC_ID_NUM_1106               (0x1106UL<<INTC_ID_NUM_SHIFT)
#define INTC_MAJOR_REV_SHIFT           12
#define INTC_MAJOR_REV_FIELD           (0xFFFFFFFF - (0xFUL<<INTC_MAJOR_REV_SHIFT))
#define INTC_MAJOR_REV_1               (0x1UL<<INTC_MAJOR_REV_SHIFT)
#define INTC_MINOR_REV_SHIFT           8
#define INTC_MINOR_REV_FIELD           (0xFFFFFFFF - (0xFUL<<INTC_MINOR_REV_SHIFT))
#define INTC_MINOR_REV_0               (0x0UL<<INTC_MINOR_REV_SHIFT)
#define INTC_APERTURE_SHIFT            0
#define INTC_APERTURE_FIELD            (0xFFFFFFFF - (0xFFUL<<INTC_APERTURE_SHIFT))
#define INTC_APERTURE_0                (0x0UL<<INTC_APERTURE_SHIFT)

/*****************************************************************************/

/*****************************************************************************
* Definitions for: IPP2
*****************************************************************************/

/* Pointer on base address */
#define IPP2_BASE                      IOA(IPP2_BASE_ADDR)

/* IPP CONTROL Register (32 bits) */
#define IPP_CONTROL_OFFSET             0x0
#define IPP_CONTROL_REG                IOA(IPP2_BASE_ADDR + IPP_CONTROL_OFFSET)

/* IPP CONFIG Register (32 bits) */
#define IPP_CONFIG_OFFSET              0x4
#define IPP_CONFIG_REG                 IOA(IPP2_BASE_ADDR + IPP_CONFIG_OFFSET)

/* IPP LABEL Register (32 bits) */
#define IPP_LABEL_OFFSET               0x8
#define IPP_LABEL_REG                  IOA(IPP2_BASE_ADDR + IPP_LABEL_OFFSET)

/* IPP GL_START_PTR Register (32 bits) */
#define IPP_GL_START_PTR_OFFSET        0xC
#define IPP_GL_START_PTR_REG           IOA(IPP2_BASE_ADDR + IPP_GL_START_PTR_OFFSET)

/* IPP GL_CUR_PTR Register (32 bits) */
#define IPP_GL_CUR_PTR_OFFSET          0x10
#define IPP_GL_CUR_PTR_REG             IOA(IPP2_BASE_ADDR + IPP_GL_CUR_PTR_OFFSET)

/* IPP STATUS Register (32 bits) */
#define IPP_STATUS_OFFSET              0x14
#define IPP_STATUS_REG                 IOA(IPP2_BASE_ADDR + IPP_STATUS_OFFSET)

/* IPP INT_CLR_ENABLE Register (32 bits) */
#define IPP_INT_CLR_ENABLE_OFFSET      0xFD8
#define IPP_INT_CLR_ENABLE_REG         IOA(IPP2_BASE_ADDR + IPP_INT_CLR_ENABLE_OFFSET)

/* IPP INT_SET_ENABLE Register (32 bits) */
#define IPP_INT_SET_ENABLE_OFFSET      0xFDC
#define IPP_INT_SET_ENABLE_REG         IOA(IPP2_BASE_ADDR + IPP_INT_SET_ENABLE_OFFSET)

/* IPP INT_STATUS Register (32 bits) */
#define IPP_INT_STATUS_OFFSET          0xFE0
#define IPP_INT_STATUS_REG             IOA(IPP2_BASE_ADDR + IPP_INT_STATUS_OFFSET)

/* IPP INT_ENABLE Register (32 bits) */
#define IPP_INT_ENABLE_OFFSET          0xFE4
#define IPP_INT_ENABLE_REG             IOA(IPP2_BASE_ADDR + IPP_INT_ENABLE_OFFSET)

/* IPP INT_CLR_STATUS Register (32 bits) */
#define IPP_INT_CLR_STATUS_OFFSET      0xFE8
#define IPP_INT_CLR_STATUS_REG         IOA(IPP2_BASE_ADDR + IPP_INT_CLR_STATUS_OFFSET)

/* IPP INT_SET_STATUS Register (32 bits) */
#define IPP_INT_SET_STATUS_OFFSET      0xFEC
#define IPP_INT_SET_STATUS_REG         IOA(IPP2_BASE_ADDR + IPP_INT_SET_STATUS_OFFSET)

/* IPP RESET Register (32 bits) */
#define IPP_RESET_OFFSET               0xFF4
#define IPP_RESET_REG                  IOA(IPP2_BASE_ADDR + IPP_RESET_OFFSET)

/* IPP IP_ID Register (32 bits) */
#define IPP_IP_ID_OFFSET               0xFFC
#define IPP_IP_ID_REG                  IOA(IPP2_BASE_ADDR + IPP_IP_ID_OFFSET)

/* Register description for CONTROL */

/* Reset value of register IPP_CONTROL */
#define IPP_CONTROL_VALUE              0x0

/* Bits definition for register IPP_CONTROL */
#define IPP_COMMAND_SHIFT              0
#define IPP_COMMAND_FIELD              (0xFFFFFFFF - (0x1UL<<IPP_COMMAND_SHIFT))
#define IPP_COMMAND_0                  (0x0UL<<IPP_COMMAND_SHIFT)
#define IPP_COMMAND_1                  (0x1UL<<IPP_COMMAND_SHIFT)
#define IPP_COMMAND                    (0x1UL<<IPP_COMMAND_SHIFT)

/*****************************************************************************/
/* Register description for CONFIG */

/* Reset value of register IPP_CONFIG */
#define IPP_CONFIG_VALUE               0x1

/* Bits definition for register IPP_CONFIG */
#define IPP_READ_MAX_TRANS_SHIFT       6
#define IPP_READ_MAX_TRANS_FIELD       (0xFFFFFFFF - (0x1FUL<<IPP_READ_MAX_TRANS_SHIFT))
#define IPP_READ_MAX_TRANS_0           (0x0UL<<IPP_READ_MAX_TRANS_SHIFT)
#define IPP_READ_ERROR_MODE_SHIFT      5
#define IPP_READ_ERROR_MODE_FIELD      (0xFFFFFFFF - (0x1UL<<IPP_READ_ERROR_MODE_SHIFT))
#define IPP_READ_ERROR_MODE_0          (0x0UL<<IPP_READ_ERROR_MODE_SHIFT)
#define IPP_READ_ERROR_MODE_1          (0x1UL<<IPP_READ_ERROR_MODE_SHIFT)
#define IPP_READ_ERROR_MODE            (0x1UL<<IPP_READ_ERROR_MODE_SHIFT)
#define IPP_WRITE_ERROR_MODE_SHIFT     4
#define IPP_WRITE_ERROR_MODE_FIELD     (0xFFFFFFFF - (0x1UL<<IPP_WRITE_ERROR_MODE_SHIFT))
#define IPP_WRITE_ERROR_MODE_0         (0x0UL<<IPP_WRITE_ERROR_MODE_SHIFT)
#define IPP_WRITE_ERROR_MODE_1         (0x1UL<<IPP_WRITE_ERROR_MODE_SHIFT)
#define IPP_WRITE_ERROR_MODE           (0x1UL<<IPP_WRITE_ERROR_MODE_SHIFT)

/*****************************************************************************/
/* Register description for LABEL */

/* Reset value of register IPP_LABEL */
#define IPP_LABEL_VALUE                0x0

/* Bits definition for register IPP_LABEL */
#define IPP_LABEL_SHIFT                0
#define IPP_LABEL_FIELD                (0xFFFFFFFF - (0xFFUL<<IPP_LABEL_SHIFT))
#define IPP_LABEL_0                    (0x0UL<<IPP_LABEL_SHIFT)

/*****************************************************************************/
/* Register description for GL_START_PTR */

/* Reset value of register IPP_GL_START_PTR */
#define IPP_GL_START_PTR_VALUE         0x0

/* Bits definition for register IPP_GL_START_PTR */
#define IPP_GL_START_PTR_SHIFT         0
#define IPP_GL_START_PTR_FIELD         (0xFFFFFFFF - (0x7FFFFFFFUL<<IPP_GL_START_PTR_SHIFT))

/*****************************************************************************/
/* Register description for GL_CUR_PTR */

/* Reset value of register IPP_GL_CUR_PTR */
#define IPP_GL_CUR_PTR_VALUE           0x0

/* Bits definition for register IPP_GL_CUR_PTR */
#define IPP_GL_CUR_PTR_SHIFT           0
#define IPP_GL_CUR_PTR_FIELD           (0xFFFFFFFF - (0x7FFFFFFFUL<<IPP_GL_CUR_PTR_SHIFT))
#define IPP_GL_CUR_PTR_0               (0x0UL<<IPP_GL_CUR_PTR_SHIFT)

/*****************************************************************************/
/* Register description for STATUS */

/* Reset value of register IPP_STATUS */
#define IPP_STATUS_VALUE               0x0

/* Bits definition for register IPP_STATUS */
#define IPP_BLM_STATUS_SHIFT           26
#define IPP_BLM_STATUS_FIELD           (0xFFFFFFFF - (0x3FUL<<IPP_BLM_STATUS_SHIFT))
#define IPP_BLM_STATUS_0               (0x0UL<<IPP_BLM_STATUS_SHIFT)
#define IPP_GT_STATUS_SHIFT            23
#define IPP_GT_STATUS_FIELD            (0xFFFFFFFF - (0x7UL<<IPP_GT_STATUS_SHIFT))
#define IPP_GT_STATUS_0                (0x0UL<<IPP_GT_STATUS_SHIFT)
#define IPP_OF_STATUS_SHIFT            20
#define IPP_OF_STATUS_FIELD            (0xFFFFFFFF - (0x7UL<<IPP_OF_STATUS_SHIFT))
#define IPP_OF_STATUS_0                (0x0UL<<IPP_OF_STATUS_SHIFT)
#define IPP_DMA_STATUS_SHIFT           17
#define IPP_DMA_STATUS_FIELD           (0xFFFFFFFF - (0x7UL<<IPP_DMA_STATUS_SHIFT))
#define IPP_DMA_STATUS_0               (0x0UL<<IPP_DMA_STATUS_SHIFT)
#define IPP_TASK_MANAGER_STATUS_SHIFT  13
#define IPP_TASK_MANAGER_STATUS_FIELD  (0xFFFFFFFF - (0xFUL<<IPP_TASK_MANAGER_STATUS_SHIFT))
#define IPP_TASK_MANAGER_STATUS_0      (0x0UL<<IPP_TASK_MANAGER_STATUS_SHIFT)
#define IPP_SCAN_STATUS_SHIFT          10
#define IPP_SCAN_STATUS_FIELD          (0xFFFFFFFF - (0x7UL<<IPP_SCAN_STATUS_SHIFT))
#define IPP_SCAN_STATUS_0              (0x0UL<<IPP_SCAN_STATUS_SHIFT)
#define IPP_LOAD_WRITE_STATUS_SHIFT    6
#define IPP_LOAD_WRITE_STATUS_FIELD    (0xFFFFFFFF - (0xFUL<<IPP_LOAD_WRITE_STATUS_SHIFT))
#define IPP_LOAD_WRITE_STATUS_0        (0x0UL<<IPP_LOAD_WRITE_STATUS_SHIFT)
#define IPP_GLM_STATUS_SHIFT           1
#define IPP_GLM_STATUS_FIELD           (0xFFFFFFFF - (0x1FUL<<IPP_GLM_STATUS_SHIFT))
#define IPP_GLM_STATUS_0               (0x0UL<<IPP_GLM_STATUS_SHIFT)
#define IPP_BUSY_SHIFT                 0
#define IPP_BUSY_FIELD                 (0xFFFFFFFF - (0x1UL<<IPP_BUSY_SHIFT))
#define IPP_BUSY_0                     (0x0UL<<IPP_BUSY_SHIFT)
#define IPP_BUSY_1                     (0x1UL<<IPP_BUSY_SHIFT)
#define IPP_BUSY                       (0x1UL<<IPP_BUSY_SHIFT)

/*****************************************************************************/
/* Register description for INT_STATUS */

/* Reset value of register IPP_INT_STATUS */
#define IPP_INT_STATUS_VALUE           0x0

/* Bits definition for register IPP_INT_STATUS */
#define IPP_ERROR_BUS_INITIATOR_SHIFT  2
#define IPP_ERROR_BUS_INITIATOR_FIELD  (0xFFFFFFFF - (0x1UL<<IPP_ERROR_BUS_INITIATOR_SHIFT))
#define IPP_ERROR_BUS_INITIATOR_0      (0x0UL<<IPP_ERROR_BUS_INITIATOR_SHIFT)
#define IPP_ERROR_BUS_INITIATOR_1      (0x1UL<<IPP_ERROR_BUS_INITIATOR_SHIFT)
#define IPP_ERROR_BUS_INITIATOR        (0x1UL<<IPP_ERROR_BUS_INITIATOR_SHIFT)
#define IPP_ERROR_BUS_TARGET_SHIFT     1
#define IPP_ERROR_BUS_TARGET_FIELD     (0xFFFFFFFF - (0x1UL<<IPP_ERROR_BUS_TARGET_SHIFT))
#define IPP_ERROR_BUS_TARGET_0         (0x0UL<<IPP_ERROR_BUS_TARGET_SHIFT)
#define IPP_ERROR_BUS_TARGET_1         (0x1UL<<IPP_ERROR_BUS_TARGET_SHIFT)
#define IPP_ERROR_BUS_TARGET           (0x1UL<<IPP_ERROR_BUS_TARGET_SHIFT)
#define IPP_END_PROCESS_SHIFT          0
#define IPP_END_PROCESS_FIELD          (0xFFFFFFFF - (0x1UL<<IPP_END_PROCESS_SHIFT))
#define IPP_END_PROCESS_0              (0x0UL<<IPP_END_PROCESS_SHIFT)
#define IPP_END_PROCESS_1              (0x1UL<<IPP_END_PROCESS_SHIFT)
#define IPP_END_PROCESS                (0x1UL<<IPP_END_PROCESS_SHIFT)

/*****************************************************************************/
/* Register description for INT_CLR_STATUS */

/* Reset value of register IPP_INT_CLR_STATUS */
#define IPP_INT_CLR_STATUS_VALUE       0x0

/* Bits definition for register IPP_INT_CLR_STATUS */
#define IPP_ERROR_BUS_INITIATOR_SHIFT  2
#define IPP_ERROR_BUS_INITIATOR_FIELD  (0xFFFFFFFF - (0x1UL<<IPP_ERROR_BUS_INITIATOR_SHIFT))
#define IPP_ERROR_BUS_INITIATOR_0      (0x0UL<<IPP_ERROR_BUS_INITIATOR_SHIFT)
#define IPP_ERROR_BUS_INITIATOR_1      (0x1UL<<IPP_ERROR_BUS_INITIATOR_SHIFT)
#define IPP_ERROR_BUS_INITIATOR        (0x1UL<<IPP_ERROR_BUS_INITIATOR_SHIFT)
#define IPP_ERROR_BUS_TARGET_SHIFT     1
#define IPP_ERROR_BUS_TARGET_FIELD     (0xFFFFFFFF - (0x1UL<<IPP_ERROR_BUS_TARGET_SHIFT))
#define IPP_ERROR_BUS_TARGET_0         (0x0UL<<IPP_ERROR_BUS_TARGET_SHIFT)
#define IPP_ERROR_BUS_TARGET_1         (0x1UL<<IPP_ERROR_BUS_TARGET_SHIFT)
#define IPP_ERROR_BUS_TARGET           (0x1UL<<IPP_ERROR_BUS_TARGET_SHIFT)
#define IPP_END_PROCESS_SHIFT          0
#define IPP_END_PROCESS_FIELD          (0xFFFFFFFF - (0x1UL<<IPP_END_PROCESS_SHIFT))
#define IPP_END_PROCESS_0              (0x0UL<<IPP_END_PROCESS_SHIFT)
#define IPP_END_PROCESS_1              (0x1UL<<IPP_END_PROCESS_SHIFT)
#define IPP_END_PROCESS                (0x1UL<<IPP_END_PROCESS_SHIFT)

/*****************************************************************************/
/* Register description for INT_SET_STATUS */

/* Reset value of register IPP_INT_SET_STATUS */
#define IPP_INT_SET_STATUS_VALUE       0x0

/* Bits definition for register IPP_INT_SET_STATUS */
#define IPP_ERROR_BUS_INITIATOR_SHIFT  2
#define IPP_ERROR_BUS_INITIATOR_FIELD  (0xFFFFFFFF - (0x1UL<<IPP_ERROR_BUS_INITIATOR_SHIFT))
#define IPP_ERROR_BUS_INITIATOR_0      (0x0UL<<IPP_ERROR_BUS_INITIATOR_SHIFT)
#define IPP_ERROR_BUS_INITIATOR_1      (0x1UL<<IPP_ERROR_BUS_INITIATOR_SHIFT)
#define IPP_ERROR_BUS_INITIATOR        (0x1UL<<IPP_ERROR_BUS_INITIATOR_SHIFT)
#define IPP_ERROR_BUS_TARGET_SHIFT     1
#define IPP_ERROR_BUS_TARGET_FIELD     (0xFFFFFFFF - (0x1UL<<IPP_ERROR_BUS_TARGET_SHIFT))
#define IPP_ERROR_BUS_TARGET_0         (0x0UL<<IPP_ERROR_BUS_TARGET_SHIFT)
#define IPP_ERROR_BUS_TARGET_1         (0x1UL<<IPP_ERROR_BUS_TARGET_SHIFT)
#define IPP_ERROR_BUS_TARGET           (0x1UL<<IPP_ERROR_BUS_TARGET_SHIFT)
#define IPP_END_PROCESS_SHIFT          0
#define IPP_END_PROCESS_FIELD          (0xFFFFFFFF - (0x1UL<<IPP_END_PROCESS_SHIFT))
#define IPP_END_PROCESS_0              (0x0UL<<IPP_END_PROCESS_SHIFT)
#define IPP_END_PROCESS_1              (0x1UL<<IPP_END_PROCESS_SHIFT)
#define IPP_END_PROCESS                (0x1UL<<IPP_END_PROCESS_SHIFT)

/*****************************************************************************/
/* Register description for INT_ENABLE */

/* Reset value of register IPP_INT_ENABLE */
#define IPP_INT_ENABLE_VALUE           0x0

/* Bits definition for register IPP_INT_ENABLE */
#define IPP_ERROR_BUS_INITIATOR_SHIFT  2
#define IPP_ERROR_BUS_INITIATOR_FIELD  (0xFFFFFFFF - (0x1UL<<IPP_ERROR_BUS_INITIATOR_SHIFT))
#define IPP_ERROR_BUS_INITIATOR_0      (0x0UL<<IPP_ERROR_BUS_INITIATOR_SHIFT)
#define IPP_ERROR_BUS_INITIATOR_1      (0x1UL<<IPP_ERROR_BUS_INITIATOR_SHIFT)
#define IPP_ERROR_BUS_INITIATOR        (0x1UL<<IPP_ERROR_BUS_INITIATOR_SHIFT)
#define IPP_ERROR_BUS_TARGET_SHIFT     1
#define IPP_ERROR_BUS_TARGET_FIELD     (0xFFFFFFFF - (0x1UL<<IPP_ERROR_BUS_TARGET_SHIFT))
#define IPP_ERROR_BUS_TARGET_0         (0x0UL<<IPP_ERROR_BUS_TARGET_SHIFT)
#define IPP_ERROR_BUS_TARGET_1         (0x1UL<<IPP_ERROR_BUS_TARGET_SHIFT)
#define IPP_ERROR_BUS_TARGET           (0x1UL<<IPP_ERROR_BUS_TARGET_SHIFT)
#define IPP_END_PROCESS_SHIFT          0
#define IPP_END_PROCESS_FIELD          (0xFFFFFFFF - (0x1UL<<IPP_END_PROCESS_SHIFT))
#define IPP_END_PROCESS_0              (0x0UL<<IPP_END_PROCESS_SHIFT)
#define IPP_END_PROCESS_1              (0x1UL<<IPP_END_PROCESS_SHIFT)
#define IPP_END_PROCESS                (0x1UL<<IPP_END_PROCESS_SHIFT)

/*****************************************************************************/
/* Register description for INT_CLR_ENABLE */

/* Reset value of register IPP_INT_CLR_ENABLE */
#define IPP_INT_CLR_ENABLE_VALUE       0x0

/* Bits definition for register IPP_INT_CLR_ENABLE */
#define IPP_ERROR_BUS_INITIATOR_SHIFT  2
#define IPP_ERROR_BUS_INITIATOR_FIELD  (0xFFFFFFFF - (0x1UL<<IPP_ERROR_BUS_INITIATOR_SHIFT))
#define IPP_ERROR_BUS_INITIATOR_0      (0x0UL<<IPP_ERROR_BUS_INITIATOR_SHIFT)
#define IPP_ERROR_BUS_INITIATOR_1      (0x1UL<<IPP_ERROR_BUS_INITIATOR_SHIFT)
#define IPP_ERROR_BUS_INITIATOR        (0x1UL<<IPP_ERROR_BUS_INITIATOR_SHIFT)
#define IPP_ERROR_BUS_TARGET_SHIFT     1
#define IPP_ERROR_BUS_TARGET_FIELD     (0xFFFFFFFF - (0x1UL<<IPP_ERROR_BUS_TARGET_SHIFT))
#define IPP_ERROR_BUS_TARGET_0         (0x0UL<<IPP_ERROR_BUS_TARGET_SHIFT)
#define IPP_ERROR_BUS_TARGET_1         (0x1UL<<IPP_ERROR_BUS_TARGET_SHIFT)
#define IPP_ERROR_BUS_TARGET           (0x1UL<<IPP_ERROR_BUS_TARGET_SHIFT)
#define IPP_END_PROCESS_SHIFT          0
#define IPP_END_PROCESS_FIELD          (0xFFFFFFFF - (0x1UL<<IPP_END_PROCESS_SHIFT))
#define IPP_END_PROCESS_0              (0x0UL<<IPP_END_PROCESS_SHIFT)
#define IPP_END_PROCESS_1              (0x1UL<<IPP_END_PROCESS_SHIFT)
#define IPP_END_PROCESS                (0x1UL<<IPP_END_PROCESS_SHIFT)

/*****************************************************************************/
/* Register description for INT_SET_ENABLE */

/* Reset value of register IPP_INT_SET_ENABLE */
#define IPP_INT_SET_ENABLE_VALUE       0x0

/* Bits definition for register IPP_INT_SET_ENABLE */
#define IPP_ERROR_BUS_INITIATOR_SHIFT  2
#define IPP_ERROR_BUS_INITIATOR_FIELD  (0xFFFFFFFF - (0x1UL<<IPP_ERROR_BUS_INITIATOR_SHIFT))
#define IPP_ERROR_BUS_INITIATOR_0      (0x0UL<<IPP_ERROR_BUS_INITIATOR_SHIFT)
#define IPP_ERROR_BUS_INITIATOR_1      (0x1UL<<IPP_ERROR_BUS_INITIATOR_SHIFT)
#define IPP_ERROR_BUS_INITIATOR        (0x1UL<<IPP_ERROR_BUS_INITIATOR_SHIFT)
#define IPP_ERROR_BUS_TARGET_SHIFT     1
#define IPP_ERROR_BUS_TARGET_FIELD     (0xFFFFFFFF - (0x1UL<<IPP_ERROR_BUS_TARGET_SHIFT))
#define IPP_ERROR_BUS_TARGET_0         (0x0UL<<IPP_ERROR_BUS_TARGET_SHIFT)
#define IPP_ERROR_BUS_TARGET_1         (0x1UL<<IPP_ERROR_BUS_TARGET_SHIFT)
#define IPP_ERROR_BUS_TARGET           (0x1UL<<IPP_ERROR_BUS_TARGET_SHIFT)
#define IPP_END_PROCESS_SHIFT          0
#define IPP_END_PROCESS_FIELD          (0xFFFFFFFF - (0x1UL<<IPP_END_PROCESS_SHIFT))
#define IPP_END_PROCESS_0              (0x0UL<<IPP_END_PROCESS_SHIFT)
#define IPP_END_PROCESS_1              (0x1UL<<IPP_END_PROCESS_SHIFT)
#define IPP_END_PROCESS                (0x1UL<<IPP_END_PROCESS_SHIFT)

/*****************************************************************************/
/* Register description for RESET */

/* Reset value of register IPP_RESET */
#define IPP_RESET_VALUE                0x1

/* Bits definition for register IPP_RESET */
#define IPP_RESET_SHIFT                0
#define IPP_RESET_FIELD                (0xFFFFFFFF - (0x1UL<<IPP_RESET_SHIFT))
#define IPP_RESET_0                    (0x0UL<<IPP_RESET_SHIFT)
#define IPP_RESET_1                    (0x1UL<<IPP_RESET_SHIFT)
#define IPP_RESET                      (0x1UL<<IPP_RESET_SHIFT)

/*****************************************************************************/
/* Register description for IP_ID */

/* Reset value of register IPP_IP_ID */
#define IPP_IP_ID_VALUE                0x3600

/* Bits definition for register IPP_IP_ID */
#define IPP_IP_ID_SHIFT                0
#define IPP_IP_ID_FIELD                (0xFFFFFFFF - (0x7FFFFFFFUL<<IPP_IP_ID_SHIFT))
#define IPP_IP_ID_3600                 (0x3600UL<<IPP_IP_ID_SHIFT)

/*****************************************************************************/

/*****************************************************************************
* Definitions for: JDU
*****************************************************************************/

/* Pointer on base address */
#define JDU_BASE                       IOA(JDU_BASE_ADDR)

/* JDU META_FILTER_IF Register (32 bits) */
#define JDU_META_FILTER_IF_OFFSET      0x0
#define JDU_META_FILTER_IF_REG         IOA(JDU_BASE_ADDR + JDU_META_FILTER_IF_OFFSET)

/* JDU META_FILTER_CORE Register (32 bits) */
#define JDU_META_FILTER_CORE_OFFSET    0x4
#define JDU_META_FILTER_CORE_REG       IOA(JDU_BASE_ADDR + JDU_META_FILTER_CORE_OFFSET)

/* JDU META_COUNTER_IF Register (32 bits) */
#define JDU_META_COUNTER_IF_OFFSET     0x8
#define JDU_META_COUNTER_IF_REG        IOA(JDU_BASE_ADDR + JDU_META_COUNTER_IF_OFFSET)

/* JDU GATED_CLOCK Register (32 bits) */
#define JDU_GATED_CLOCK_OFFSET         0x400
#define JDU_GATED_CLOCK_REG            IOA(JDU_BASE_ADDR + JDU_GATED_CLOCK_OFFSET)

/* JDU RESET Register (32 bits) */
#define JDU_RESET_OFFSET               0x404
#define JDU_RESET_REG                  IOA(JDU_BASE_ADDR + JDU_RESET_OFFSET)

/* JDU INTERRUPT Register (32 bits) */
#define JDU_INTERRUPT_OFFSET           0x408
#define JDU_INTERRUPT_REG              IOA(JDU_BASE_ADDR + JDU_INTERRUPT_OFFSET)

/* JDU STATUS Register (32 bits) */
#define JDU_STATUS_OFFSET              0x40C
#define JDU_STATUS_REG                 IOA(JDU_BASE_ADDR + JDU_STATUS_OFFSET)

/* JDU Q_MODE Register (32 bits) */
#define JDU_Q_MODE_OFFSET              0x410
#define JDU_Q_MODE_REG                 IOA(JDU_BASE_ADDR + JDU_Q_MODE_OFFSET)

/* JDU H_MODE Register (32 bits) */
#define JDU_H_MODE_OFFSET              0x414
#define JDU_H_MODE_REG                 IOA(JDU_BASE_ADDR + JDU_H_MODE_OFFSET)

/* JDU S_FORMAT_CORE Register (32 bits) */
#define JDU_S_FORMAT_CORE_OFFSET       0x418
#define JDU_S_FORMAT_CORE_REG          IOA(JDU_BASE_ADDR + JDU_S_FORMAT_CORE_OFFSET)

/* JDU RUN Register (32 bits) */
#define JDU_RUN_OFFSET                 0x420
#define JDU_RUN_REG                    IOA(JDU_BASE_ADDR + JDU_RUN_OFFSET)

/* JDU META_COUNTER_CORE Register (32 bits) */
#define JDU_META_COUNTER_CORE_OFFSET   0x450
#define JDU_META_COUNTER_CORE_REG      IOA(JDU_BASE_ADDR + JDU_META_COUNTER_CORE_OFFSET)

/* JDU FB_ADDRESS_C0 Register (32 bits) */
#define JDU_FB_ADDRESS_C0_OFFSET       0x800
#define JDU_FB_ADDRESS_C0_REG          IOA(JDU_BASE_ADDR + JDU_FB_ADDRESS_C0_OFFSET)

/* JDU FB_ADDRESS_C1 Register (32 bits) */
#define JDU_FB_ADDRESS_C1_OFFSET       0x804
#define JDU_FB_ADDRESS_C1_REG          IOA(JDU_BASE_ADDR + JDU_FB_ADDRESS_C1_OFFSET)

/* JDU FB_ADDRESS_C2 Register (32 bits) */
#define JDU_FB_ADDRESS_C2_OFFSET       0x808
#define JDU_FB_ADDRESS_C2_REG          IOA(JDU_BASE_ADDR + JDU_FB_ADDRESS_C2_OFFSET)

/* JDU X_OFFSET_C0 Register (32 bits) */
#define JDU_X_OFFSET_C0_OFFSET         0x80C
#define JDU_X_OFFSET_C0_REG            IOA(JDU_BASE_ADDR + JDU_X_OFFSET_C0_OFFSET)

/* JDU X_OFFSET_C1 Register (32 bits) */
#define JDU_X_OFFSET_C1_OFFSET         0x810
#define JDU_X_OFFSET_C1_REG            IOA(JDU_BASE_ADDR + JDU_X_OFFSET_C1_OFFSET)

/* JDU X_OFFSET_C2 Register (32 bits) */
#define JDU_X_OFFSET_C2_OFFSET         0x814
#define JDU_X_OFFSET_C2_REG            IOA(JDU_BASE_ADDR + JDU_X_OFFSET_C2_OFFSET)

/* JDU S_FORMAT_PIF Register (32 bits) */
#define JDU_S_FORMAT_PIF_OFFSET        0x818
#define JDU_S_FORMAT_PIF_REG           IOA(JDU_BASE_ADDR + JDU_S_FORMAT_PIF_OFFSET)

/* JDU NO_MB_LINES Register (32 bits) */
#define JDU_NO_MB_LINES_OFFSET         0x81C
#define JDU_NO_MB_LINES_REG            IOA(JDU_BASE_ADDR + JDU_NO_MB_LINES_OFFSET)

/* JDU NO_MCU_PER_MBL Register (32 bits) */
#define JDU_NO_MCU_PER_MBL_OFFSET      0x820
#define JDU_NO_MCU_PER_MBL_REG         IOA(JDU_BASE_ADDR + JDU_NO_MCU_PER_MBL_OFFSET)

/* JDU STRIDE_LENGTH Register (32 bits) */
#define JDU_STRIDE_LENGTH_OFFSET       0x824
#define JDU_STRIDE_LENGTH_REG          IOA(JDU_BASE_ADDR + JDU_STRIDE_LENGTH_OFFSET)

/* JDU SB_ADDRESS Register (32 bits) */
#define JDU_SB_ADDRESS_OFFSET          0xC00
#define JDU_SB_ADDRESS_REG             IOA(JDU_BASE_ADDR + JDU_SB_ADDRESS_OFFSET)

/* JDU SB_ADDRESS_MASK Register (32 bits) */
#define JDU_SB_ADDRESS_MASK_OFFSET     0xC04
#define JDU_SB_ADDRESS_MASK_REG        IOA(JDU_BASE_ADDR + JDU_SB_ADDRESS_MASK_OFFSET)

/* JDU SB_BASE_ADDRESS Register (32 bits) */

/* JDU START_BIT_LOCATION Register (32 bits) */
#define JDU_START_BIT_LOCATION_OFFSET  0xC18
#define JDU_START_BIT_LOCATION_REG     IOA(JDU_BASE_ADDR + JDU_START_BIT_LOCATION_OFFSET)

/* JDU END_START_BIT_LOCATION Register (32 bits) */
#define JDU_END_START_BIT_LOCATION_OFFSET          0xC1C
#define JDU_END_START_BIT_LOCATION_REG IOA(JDU_BASE_ADDR + JDU_END_START_BIT_LOCATION_OFFSET)

/* JDU END_BIT_LOCATION Register (32 bits) */
#define JDU_END_BIT_LOCATION_OFFSET    0xC20
#define JDU_END_BIT_LOCATION_REG       IOA(JDU_BASE_ADDR + JDU_END_BIT_LOCATION_OFFSET)

/* JDU DC0_DATA Register (32 bits) */
#define JDU_DC0_DATA_OFFSET            0xC24
#define JDU_DC0_DATA_REG               IOA(JDU_BASE_ADDR + JDU_DC0_DATA_OFFSET)

/* JDU DC1_DATA Register (32 bits) */
#define JDU_DC1_DATA_OFFSET            0xC28
#define JDU_DC1_DATA_REG               IOA(JDU_BASE_ADDR + JDU_DC1_DATA_OFFSET)

/* JDU DC2_DATA Register (32 bits) */
#define JDU_DC2_DATA_OFFSET            0xC2C
#define JDU_DC2_DATA_REG               IOA(JDU_BASE_ADDR + JDU_DC2_DATA_OFFSET)

/* JDU H_TABLE_BUFFER0 Register (32 bits) */
#define JDU_H_TABLE_BUFFER0_OFFSET     0x1000
#define JDU_H_TABLE_BUFFER0_REG        IOA(JDU_BASE_ADDR + JDU_H_TABLE_BUFFER0_OFFSET)

/* JDU H_TABLE_BUFFER1 Register (32 bits) */
#define JDU_H_TABLE_BUFFER1_OFFSET     0x1004
#define JDU_H_TABLE_BUFFER1_REG        IOA(JDU_BASE_ADDR + JDU_H_TABLE_BUFFER1_OFFSET)

/* JDU H_TABLE_BUFFER2 Register (32 bits) */
#define JDU_H_TABLE_BUFFER2_OFFSET     0x1008
#define JDU_H_TABLE_BUFFER2_REG        IOA(JDU_BASE_ADDR + JDU_H_TABLE_BUFFER2_OFFSET)

/* JDU H_TABLE_BUFFER3 Register (32 bits) */
#define JDU_H_TABLE_BUFFER3_OFFSET     0x100C
#define JDU_H_TABLE_BUFFER3_REG        IOA(JDU_BASE_ADDR + JDU_H_TABLE_BUFFER3_OFFSET)

/* JDU H_TABLE_BUFFER4 Register (32 bits) */
#define JDU_H_TABLE_BUFFER4_OFFSET     0x1010
#define JDU_H_TABLE_BUFFER4_REG        IOA(JDU_BASE_ADDR + JDU_H_TABLE_BUFFER4_OFFSET)

/* JDU H_TABLE_BUFFER5 Register (32 bits) */
#define JDU_H_TABLE_BUFFER5_OFFSET     0x1014
#define JDU_H_TABLE_BUFFER5_REG        IOA(JDU_BASE_ADDR + JDU_H_TABLE_BUFFER5_OFFSET)

/* JDU H_TABLE_BUFFER6 Register (32 bits) */
#define JDU_H_TABLE_BUFFER6_OFFSET     0x1018
#define JDU_H_TABLE_BUFFER6_REG        IOA(JDU_BASE_ADDR + JDU_H_TABLE_BUFFER6_OFFSET)

/* JDU H_TABLE_BUFFER7 Register (32 bits) */
#define JDU_H_TABLE_BUFFER7_OFFSET     0x101C
#define JDU_H_TABLE_BUFFER7_REG        IOA(JDU_BASE_ADDR + JDU_H_TABLE_BUFFER7_OFFSET)

/* JDU H_TABLE_BUFFER8 Register (32 bits) */
#define JDU_H_TABLE_BUFFER8_OFFSET     0x1020
#define JDU_H_TABLE_BUFFER8_REG        IOA(JDU_BASE_ADDR + JDU_H_TABLE_BUFFER8_OFFSET)

/* JDU H_TABLE_BUFFER9 Register (32 bits) */
#define JDU_H_TABLE_BUFFER9_OFFSET     0x1024
#define JDU_H_TABLE_BUFFER9_REG        IOA(JDU_BASE_ADDR + JDU_H_TABLE_BUFFER9_OFFSET)

/* JDU H_TABLE_BUFFER10 Register (32 bits) */
#define JDU_H_TABLE_BUFFER10_OFFSET    0x1028
#define JDU_H_TABLE_BUFFER10_REG       IOA(JDU_BASE_ADDR + JDU_H_TABLE_BUFFER10_OFFSET)

/* JDU H_TABLE_BUFFER11 Register (32 bits) */
#define JDU_H_TABLE_BUFFER11_OFFSET    0x102C
#define JDU_H_TABLE_BUFFER11_REG       IOA(JDU_BASE_ADDR + JDU_H_TABLE_BUFFER11_OFFSET)

/* JDU H_TABLE_BUFFER12 Register (32 bits) */
#define JDU_H_TABLE_BUFFER12_OFFSET    0x1030
#define JDU_H_TABLE_BUFFER12_REG       IOA(JDU_BASE_ADDR + JDU_H_TABLE_BUFFER12_OFFSET)

/* JDU H_TABLE_BUFFER13 Register (32 bits) */
#define JDU_H_TABLE_BUFFER13_OFFSET    0x1034
#define JDU_H_TABLE_BUFFER13_REG       IOA(JDU_BASE_ADDR + JDU_H_TABLE_BUFFER13_OFFSET)

/* JDU H_TABLE_BUFFER14 Register (32 bits) */
#define JDU_H_TABLE_BUFFER14_OFFSET    0x1038
#define JDU_H_TABLE_BUFFER14_REG       IOA(JDU_BASE_ADDR + JDU_H_TABLE_BUFFER14_OFFSET)

/* JDU H_TABLE_BUFFER15 Register (32 bits) */
#define JDU_H_TABLE_BUFFER15_OFFSET    0x103C
#define JDU_H_TABLE_BUFFER15_REG       IOA(JDU_BASE_ADDR + JDU_H_TABLE_BUFFER15_OFFSET)

/* JDU H_TABLE_BUFFER16 Register (32 bits) */
#define JDU_H_TABLE_BUFFER16_OFFSET    0x1040
#define JDU_H_TABLE_BUFFER16_REG       IOA(JDU_BASE_ADDR + JDU_H_TABLE_BUFFER16_OFFSET)

/* JDU H_TABLE_BUFFER17 Register (32 bits) */
#define JDU_H_TABLE_BUFFER17_OFFSET    0x1044
#define JDU_H_TABLE_BUFFER17_REG       IOA(JDU_BASE_ADDR + JDU_H_TABLE_BUFFER17_OFFSET)

/* JDU H_TABLE_BUFFER18 Register (32 bits) */
#define JDU_H_TABLE_BUFFER18_OFFSET    0x1048
#define JDU_H_TABLE_BUFFER18_REG       IOA(JDU_BASE_ADDR + JDU_H_TABLE_BUFFER18_OFFSET)

/* JDU H_TABLE_BUFFER19 Register (32 bits) */
#define JDU_H_TABLE_BUFFER19_OFFSET    0x104C
#define JDU_H_TABLE_BUFFER19_REG       IOA(JDU_BASE_ADDR + JDU_H_TABLE_BUFFER19_OFFSET)

/* JDU H_TABLE_BUFFER20 Register (32 bits) */
#define JDU_H_TABLE_BUFFER20_OFFSET    0x1050
#define JDU_H_TABLE_BUFFER20_REG       IOA(JDU_BASE_ADDR + JDU_H_TABLE_BUFFER20_OFFSET)

/* JDU H_TABLE_BUFFER21 Register (32 bits) */
#define JDU_H_TABLE_BUFFER21_OFFSET    0x1054
#define JDU_H_TABLE_BUFFER21_REG       IOA(JDU_BASE_ADDR + JDU_H_TABLE_BUFFER21_OFFSET)

/* JDU H_TABLE_BUFFER22 Register (32 bits) */
#define JDU_H_TABLE_BUFFER22_OFFSET    0x1058
#define JDU_H_TABLE_BUFFER22_REG       IOA(JDU_BASE_ADDR + JDU_H_TABLE_BUFFER22_OFFSET)

/* JDU H_TABLE_BUFFER23 Register (32 bits) */
#define JDU_H_TABLE_BUFFER23_OFFSET    0x105C
#define JDU_H_TABLE_BUFFER23_REG       IOA(JDU_BASE_ADDR + JDU_H_TABLE_BUFFER23_OFFSET)

/* JDU H_TABLE_BUFFER24 Register (32 bits) */
#define JDU_H_TABLE_BUFFER24_OFFSET    0x1060
#define JDU_H_TABLE_BUFFER24_REG       IOA(JDU_BASE_ADDR + JDU_H_TABLE_BUFFER24_OFFSET)

/* JDU H_TABLE_BUFFER25 Register (32 bits) */
#define JDU_H_TABLE_BUFFER25_OFFSET    0x1064
#define JDU_H_TABLE_BUFFER25_REG       IOA(JDU_BASE_ADDR + JDU_H_TABLE_BUFFER25_OFFSET)

/* JDU H_TABLE_BUFFER26 Register (32 bits) */
#define JDU_H_TABLE_BUFFER26_OFFSET    0x1068
#define JDU_H_TABLE_BUFFER26_REG       IOA(JDU_BASE_ADDR + JDU_H_TABLE_BUFFER26_OFFSET)

/* JDU H_TABLE_BUFFER27 Register (32 bits) */
#define JDU_H_TABLE_BUFFER27_OFFSET    0x106C
#define JDU_H_TABLE_BUFFER27_REG       IOA(JDU_BASE_ADDR + JDU_H_TABLE_BUFFER27_OFFSET)

/* JDU H_TABLE_BUFFER28 Register (32 bits) */
#define JDU_H_TABLE_BUFFER28_OFFSET    0x1070
#define JDU_H_TABLE_BUFFER28_REG       IOA(JDU_BASE_ADDR + JDU_H_TABLE_BUFFER28_OFFSET)

/* JDU H_TABLE_BUFFER29 Register (32 bits) */
#define JDU_H_TABLE_BUFFER29_OFFSET    0x1074
#define JDU_H_TABLE_BUFFER29_REG       IOA(JDU_BASE_ADDR + JDU_H_TABLE_BUFFER29_OFFSET)

/* JDU H_TABLE_BUFFER30 Register (32 bits) */
#define JDU_H_TABLE_BUFFER30_OFFSET    0x1078
#define JDU_H_TABLE_BUFFER30_REG       IOA(JDU_BASE_ADDR + JDU_H_TABLE_BUFFER30_OFFSET)

/* JDU H_TABLE_BUFFER31 Register (32 bits) */
#define JDU_H_TABLE_BUFFER31_OFFSET    0x107C
#define JDU_H_TABLE_BUFFER31_REG       IOA(JDU_BASE_ADDR + JDU_H_TABLE_BUFFER31_OFFSET)

/* JDU H_TABLE_BUFFER32 Register (32 bits) */
#define JDU_H_TABLE_BUFFER32_OFFSET    0x1080
#define JDU_H_TABLE_BUFFER32_REG       IOA(JDU_BASE_ADDR + JDU_H_TABLE_BUFFER32_OFFSET)

/* JDU H_TABLE_BUFFER33 Register (32 bits) */
#define JDU_H_TABLE_BUFFER33_OFFSET    0x1084
#define JDU_H_TABLE_BUFFER33_REG       IOA(JDU_BASE_ADDR + JDU_H_TABLE_BUFFER33_OFFSET)

/* JDU H_TABLE_BUFFER34 Register (32 bits) */
#define JDU_H_TABLE_BUFFER34_OFFSET    0x1088
#define JDU_H_TABLE_BUFFER34_REG       IOA(JDU_BASE_ADDR + JDU_H_TABLE_BUFFER34_OFFSET)

/* JDU H_TABLE_BUFFER35 Register (32 bits) */
#define JDU_H_TABLE_BUFFER35_OFFSET    0x108C
#define JDU_H_TABLE_BUFFER35_REG       IOA(JDU_BASE_ADDR + JDU_H_TABLE_BUFFER35_OFFSET)

/* JDU H_TABLE_BUFFER36 Register (32 bits) */
#define JDU_H_TABLE_BUFFER36_OFFSET    0x1090
#define JDU_H_TABLE_BUFFER36_REG       IOA(JDU_BASE_ADDR + JDU_H_TABLE_BUFFER36_OFFSET)

/* JDU H_TABLE_BUFFER37 Register (32 bits) */
#define JDU_H_TABLE_BUFFER37_OFFSET    0x1094
#define JDU_H_TABLE_BUFFER37_REG       IOA(JDU_BASE_ADDR + JDU_H_TABLE_BUFFER37_OFFSET)

/* JDU H_TABLE_BUFFER38 Register (32 bits) */
#define JDU_H_TABLE_BUFFER38_OFFSET    0x1098
#define JDU_H_TABLE_BUFFER38_REG       IOA(JDU_BASE_ADDR + JDU_H_TABLE_BUFFER38_OFFSET)

/* JDU H_TABLE_BUFFER39 Register (32 bits) */
#define JDU_H_TABLE_BUFFER39_OFFSET    0x109C
#define JDU_H_TABLE_BUFFER39_REG       IOA(JDU_BASE_ADDR + JDU_H_TABLE_BUFFER39_OFFSET)

/* JDU H_TABLE_BUFFER40 Register (32 bits) */
#define JDU_H_TABLE_BUFFER40_OFFSET    0x10A0
#define JDU_H_TABLE_BUFFER40_REG       IOA(JDU_BASE_ADDR + JDU_H_TABLE_BUFFER40_OFFSET)

/* JDU H_TABLE_BUFFER41 Register (32 bits) */
#define JDU_H_TABLE_BUFFER41_OFFSET    0x10A4
#define JDU_H_TABLE_BUFFER41_REG       IOA(JDU_BASE_ADDR + JDU_H_TABLE_BUFFER41_OFFSET)

/* JDU H_TABLE_BUFFER42 Register (32 bits) */
#define JDU_H_TABLE_BUFFER42_OFFSET    0x10A8
#define JDU_H_TABLE_BUFFER42_REG       IOA(JDU_BASE_ADDR + JDU_H_TABLE_BUFFER42_OFFSET)

/* JDU H_TABLE_BUFFER43 Register (32 bits) */
#define JDU_H_TABLE_BUFFER43_OFFSET    0x10AC
#define JDU_H_TABLE_BUFFER43_REG       IOA(JDU_BASE_ADDR + JDU_H_TABLE_BUFFER43_OFFSET)

/* JDU H_TABLE_BUFFER44 Register (32 bits) */
#define JDU_H_TABLE_BUFFER44_OFFSET    0x10B0
#define JDU_H_TABLE_BUFFER44_REG       IOA(JDU_BASE_ADDR + JDU_H_TABLE_BUFFER44_OFFSET)

/* JDU H_TABLE_BUFFER45 Register (32 bits) */
#define JDU_H_TABLE_BUFFER45_OFFSET    0x10B4
#define JDU_H_TABLE_BUFFER45_REG       IOA(JDU_BASE_ADDR + JDU_H_TABLE_BUFFER45_OFFSET)

/* JDU H_TABLE_BUFFER46 Register (32 bits) */
#define JDU_H_TABLE_BUFFER46_OFFSET    0x10B8
#define JDU_H_TABLE_BUFFER46_REG       IOA(JDU_BASE_ADDR + JDU_H_TABLE_BUFFER46_OFFSET)

/* JDU H_TABLE_BUFFER47 Register (32 bits) */
#define JDU_H_TABLE_BUFFER47_OFFSET    0x10BC
#define JDU_H_TABLE_BUFFER47_REG       IOA(JDU_BASE_ADDR + JDU_H_TABLE_BUFFER47_OFFSET)

/* JDU H_TABLE_BUFFER48 Register (32 bits) */
#define JDU_H_TABLE_BUFFER48_OFFSET    0x10C0
#define JDU_H_TABLE_BUFFER48_REG       IOA(JDU_BASE_ADDR + JDU_H_TABLE_BUFFER48_OFFSET)

/* JDU H_TABLE_BUFFER49 Register (32 bits) */
#define JDU_H_TABLE_BUFFER49_OFFSET    0x10C4
#define JDU_H_TABLE_BUFFER49_REG       IOA(JDU_BASE_ADDR + JDU_H_TABLE_BUFFER49_OFFSET)

/* JDU H_TABLE_BUFFER50 Register (32 bits) */
#define JDU_H_TABLE_BUFFER50_OFFSET    0x10C8
#define JDU_H_TABLE_BUFFER50_REG       IOA(JDU_BASE_ADDR + JDU_H_TABLE_BUFFER50_OFFSET)

/* JDU H_TABLE_BUFFER51 Register (32 bits) */
#define JDU_H_TABLE_BUFFER51_OFFSET    0x10CC
#define JDU_H_TABLE_BUFFER51_REG       IOA(JDU_BASE_ADDR + JDU_H_TABLE_BUFFER51_OFFSET)

/* JDU H_TABLE_BUFFER52 Register (32 bits) */
#define JDU_H_TABLE_BUFFER52_OFFSET    0x10D0
#define JDU_H_TABLE_BUFFER52_REG       IOA(JDU_BASE_ADDR + JDU_H_TABLE_BUFFER52_OFFSET)

/* JDU H_TABLE_BUFFER53 Register (32 bits) */
#define JDU_H_TABLE_BUFFER53_OFFSET    0x10D4
#define JDU_H_TABLE_BUFFER53_REG       IOA(JDU_BASE_ADDR + JDU_H_TABLE_BUFFER53_OFFSET)

/* JDU H_TABLE_BUFFER54 Register (32 bits) */
#define JDU_H_TABLE_BUFFER54_OFFSET    0x10D8
#define JDU_H_TABLE_BUFFER54_REG       IOA(JDU_BASE_ADDR + JDU_H_TABLE_BUFFER54_OFFSET)

/* JDU H_TABLE_BUFFER55 Register (32 bits) */
#define JDU_H_TABLE_BUFFER55_OFFSET    0x10DC
#define JDU_H_TABLE_BUFFER55_REG       IOA(JDU_BASE_ADDR + JDU_H_TABLE_BUFFER55_OFFSET)

/* JDU H_TABLE_BUFFER56 Register (32 bits) */
#define JDU_H_TABLE_BUFFER56_OFFSET    0x10E0
#define JDU_H_TABLE_BUFFER56_REG       IOA(JDU_BASE_ADDR + JDU_H_TABLE_BUFFER56_OFFSET)

/* JDU H_TABLE_BUFFER57 Register (32 bits) */
#define JDU_H_TABLE_BUFFER57_OFFSET    0x10E4
#define JDU_H_TABLE_BUFFER57_REG       IOA(JDU_BASE_ADDR + JDU_H_TABLE_BUFFER57_OFFSET)

/* JDU H_TABLE_BUFFER58 Register (32 bits) */
#define JDU_H_TABLE_BUFFER58_OFFSET    0x10E8
#define JDU_H_TABLE_BUFFER58_REG       IOA(JDU_BASE_ADDR + JDU_H_TABLE_BUFFER58_OFFSET)

/* JDU H_TABLE_BUFFER59 Register (32 bits) */
#define JDU_H_TABLE_BUFFER59_OFFSET    0x10EC
#define JDU_H_TABLE_BUFFER59_REG       IOA(JDU_BASE_ADDR + JDU_H_TABLE_BUFFER59_OFFSET)

/* JDU H_TABLE_BUFFER60 Register (32 bits) */
#define JDU_H_TABLE_BUFFER60_OFFSET    0x10F0
#define JDU_H_TABLE_BUFFER60_REG       IOA(JDU_BASE_ADDR + JDU_H_TABLE_BUFFER60_OFFSET)

/* JDU H_TABLE_BUFFER61 Register (32 bits) */
#define JDU_H_TABLE_BUFFER61_OFFSET    0x10F4
#define JDU_H_TABLE_BUFFER61_REG       IOA(JDU_BASE_ADDR + JDU_H_TABLE_BUFFER61_OFFSET)

/* JDU H_TABLE_BUFFER62 Register (32 bits) */
#define JDU_H_TABLE_BUFFER62_OFFSET    0x10F8
#define JDU_H_TABLE_BUFFER62_REG       IOA(JDU_BASE_ADDR + JDU_H_TABLE_BUFFER62_OFFSET)

/* JDU H_TABLE_BUFFER63 Register (32 bits) */
#define JDU_H_TABLE_BUFFER63_OFFSET    0x10FC
#define JDU_H_TABLE_BUFFER63_REG       IOA(JDU_BASE_ADDR + JDU_H_TABLE_BUFFER63_OFFSET)

/* JDU H_TABLE_BUFFER64 Register (32 bits) */
#define JDU_H_TABLE_BUFFER64_OFFSET    0x1100
#define JDU_H_TABLE_BUFFER64_REG       IOA(JDU_BASE_ADDR + JDU_H_TABLE_BUFFER64_OFFSET)

/* JDU H_TABLE_BUFFER65 Register (32 bits) */
#define JDU_H_TABLE_BUFFER65_OFFSET    0x1104
#define JDU_H_TABLE_BUFFER65_REG       IOA(JDU_BASE_ADDR + JDU_H_TABLE_BUFFER65_OFFSET)

/* JDU H_TABLE_BUFFER66 Register (32 bits) */
#define JDU_H_TABLE_BUFFER66_OFFSET    0x1108
#define JDU_H_TABLE_BUFFER66_REG       IOA(JDU_BASE_ADDR + JDU_H_TABLE_BUFFER66_OFFSET)

/* JDU H_TABLE_BUFFER67 Register (32 bits) */
#define JDU_H_TABLE_BUFFER67_OFFSET    0x110C
#define JDU_H_TABLE_BUFFER67_REG       IOA(JDU_BASE_ADDR + JDU_H_TABLE_BUFFER67_OFFSET)

/* JDU H_TABLE_BUFFER68 Register (32 bits) */
#define JDU_H_TABLE_BUFFER68_OFFSET    0x1110
#define JDU_H_TABLE_BUFFER68_REG       IOA(JDU_BASE_ADDR + JDU_H_TABLE_BUFFER68_OFFSET)

/* JDU H_TABLE_BUFFER69 Register (32 bits) */
#define JDU_H_TABLE_BUFFER69_OFFSET    0x1114
#define JDU_H_TABLE_BUFFER69_REG       IOA(JDU_BASE_ADDR + JDU_H_TABLE_BUFFER69_OFFSET)

/* JDU H_TABLE_BUFFER70 Register (32 bits) */
#define JDU_H_TABLE_BUFFER70_OFFSET    0x1118
#define JDU_H_TABLE_BUFFER70_REG       IOA(JDU_BASE_ADDR + JDU_H_TABLE_BUFFER70_OFFSET)

/* JDU H_TABLE_BUFFER71 Register (32 bits) */
#define JDU_H_TABLE_BUFFER71_OFFSET    0x111C
#define JDU_H_TABLE_BUFFER71_REG       IOA(JDU_BASE_ADDR + JDU_H_TABLE_BUFFER71_OFFSET)

/* JDU H_TABLE_BUFFER72 Register (32 bits) */
#define JDU_H_TABLE_BUFFER72_OFFSET    0x1120
#define JDU_H_TABLE_BUFFER72_REG       IOA(JDU_BASE_ADDR + JDU_H_TABLE_BUFFER72_OFFSET)

/* JDU H_TABLE_BUFFER73 Register (32 bits) */
#define JDU_H_TABLE_BUFFER73_OFFSET    0x1124
#define JDU_H_TABLE_BUFFER73_REG       IOA(JDU_BASE_ADDR + JDU_H_TABLE_BUFFER73_OFFSET)

/* JDU H_TABLE_BUFFER74 Register (32 bits) */
#define JDU_H_TABLE_BUFFER74_OFFSET    0x1128
#define JDU_H_TABLE_BUFFER74_REG       IOA(JDU_BASE_ADDR + JDU_H_TABLE_BUFFER74_OFFSET)

/* JDU H_TABLE_BUFFER75 Register (32 bits) */
#define JDU_H_TABLE_BUFFER75_OFFSET    0x112C
#define JDU_H_TABLE_BUFFER75_REG       IOA(JDU_BASE_ADDR + JDU_H_TABLE_BUFFER75_OFFSET)

/* JDU H_TABLE_BUFFER76 Register (32 bits) */
#define JDU_H_TABLE_BUFFER76_OFFSET    0x1130
#define JDU_H_TABLE_BUFFER76_REG       IOA(JDU_BASE_ADDR + JDU_H_TABLE_BUFFER76_OFFSET)

/* JDU H_TABLE_BUFFER77 Register (32 bits) */
#define JDU_H_TABLE_BUFFER77_OFFSET    0x1134
#define JDU_H_TABLE_BUFFER77_REG       IOA(JDU_BASE_ADDR + JDU_H_TABLE_BUFFER77_OFFSET)

/* JDU H_TABLE_BUFFER78 Register (32 bits) */
#define JDU_H_TABLE_BUFFER78_OFFSET    0x1138
#define JDU_H_TABLE_BUFFER78_REG       IOA(JDU_BASE_ADDR + JDU_H_TABLE_BUFFER78_OFFSET)

/* JDU H_TABLE_BUFFER79 Register (32 bits) */
#define JDU_H_TABLE_BUFFER79_OFFSET    0x113C
#define JDU_H_TABLE_BUFFER79_REG       IOA(JDU_BASE_ADDR + JDU_H_TABLE_BUFFER79_OFFSET)

/* JDU H_TABLE_BUFFER80 Register (32 bits) */
#define JDU_H_TABLE_BUFFER80_OFFSET    0x1140
#define JDU_H_TABLE_BUFFER80_REG       IOA(JDU_BASE_ADDR + JDU_H_TABLE_BUFFER80_OFFSET)

/* JDU H_TABLE_BUFFER81 Register (32 bits) */
#define JDU_H_TABLE_BUFFER81_OFFSET    0x1144
#define JDU_H_TABLE_BUFFER81_REG       IOA(JDU_BASE_ADDR + JDU_H_TABLE_BUFFER81_OFFSET)

/* JDU H_TABLE_BUFFER82 Register (32 bits) */
#define JDU_H_TABLE_BUFFER82_OFFSET    0x1148
#define JDU_H_TABLE_BUFFER82_REG       IOA(JDU_BASE_ADDR + JDU_H_TABLE_BUFFER82_OFFSET)

/* JDU H_TABLE_BUFFER83 Register (32 bits) */
#define JDU_H_TABLE_BUFFER83_OFFSET    0x114C
#define JDU_H_TABLE_BUFFER83_REG       IOA(JDU_BASE_ADDR + JDU_H_TABLE_BUFFER83_OFFSET)

/* JDU H_TABLE_BUFFER84 Register (32 bits) */
#define JDU_H_TABLE_BUFFER84_OFFSET    0x1150
#define JDU_H_TABLE_BUFFER84_REG       IOA(JDU_BASE_ADDR + JDU_H_TABLE_BUFFER84_OFFSET)

/* JDU H_TABLE_BUFFER85 Register (32 bits) */
#define JDU_H_TABLE_BUFFER85_OFFSET    0x1154
#define JDU_H_TABLE_BUFFER85_REG       IOA(JDU_BASE_ADDR + JDU_H_TABLE_BUFFER85_OFFSET)

/* JDU H_TABLE_BUFFER86 Register (32 bits) */
#define JDU_H_TABLE_BUFFER86_OFFSET    0x1158
#define JDU_H_TABLE_BUFFER86_REG       IOA(JDU_BASE_ADDR + JDU_H_TABLE_BUFFER86_OFFSET)

/* JDU H_TABLE_BUFFER87 Register (32 bits) */
#define JDU_H_TABLE_BUFFER87_OFFSET    0x115C
#define JDU_H_TABLE_BUFFER87_REG       IOA(JDU_BASE_ADDR + JDU_H_TABLE_BUFFER87_OFFSET)

/* JDU H_TABLE_BUFFER88 Register (32 bits) */
#define JDU_H_TABLE_BUFFER88_OFFSET    0x1160
#define JDU_H_TABLE_BUFFER88_REG       IOA(JDU_BASE_ADDR + JDU_H_TABLE_BUFFER88_OFFSET)

/* JDU H_TABLE_BUFFER89 Register (32 bits) */
#define JDU_H_TABLE_BUFFER89_OFFSET    0x1164
#define JDU_H_TABLE_BUFFER89_REG       IOA(JDU_BASE_ADDR + JDU_H_TABLE_BUFFER89_OFFSET)

/* JDU H_TABLE_BUFFER90 Register (32 bits) */
#define JDU_H_TABLE_BUFFER90_OFFSET    0x1168
#define JDU_H_TABLE_BUFFER90_REG       IOA(JDU_BASE_ADDR + JDU_H_TABLE_BUFFER90_OFFSET)

/* JDU H_TABLE_BUFFER91 Register (32 bits) */
#define JDU_H_TABLE_BUFFER91_OFFSET    0x116C
#define JDU_H_TABLE_BUFFER91_REG       IOA(JDU_BASE_ADDR + JDU_H_TABLE_BUFFER91_OFFSET)

/* JDU H_TABLE_BUFFER92 Register (32 bits) */
#define JDU_H_TABLE_BUFFER92_OFFSET    0x1170
#define JDU_H_TABLE_BUFFER92_REG       IOA(JDU_BASE_ADDR + JDU_H_TABLE_BUFFER92_OFFSET)

/* JDU H_TABLE_BUFFER93 Register (32 bits) */
#define JDU_H_TABLE_BUFFER93_OFFSET    0x1174
#define JDU_H_TABLE_BUFFER93_REG       IOA(JDU_BASE_ADDR + JDU_H_TABLE_BUFFER93_OFFSET)

/* JDU H_TABLE_BUFFER94 Register (32 bits) */
#define JDU_H_TABLE_BUFFER94_OFFSET    0x1178
#define JDU_H_TABLE_BUFFER94_REG       IOA(JDU_BASE_ADDR + JDU_H_TABLE_BUFFER94_OFFSET)

/* JDU H_TABLE_BUFFER95 Register (32 bits) */
#define JDU_H_TABLE_BUFFER95_OFFSET    0x117C
#define JDU_H_TABLE_BUFFER95_REG       IOA(JDU_BASE_ADDR + JDU_H_TABLE_BUFFER95_OFFSET)

/* JDU H_TABLE_BUFFER96 Register (32 bits) */
#define JDU_H_TABLE_BUFFER96_OFFSET    0x1180
#define JDU_H_TABLE_BUFFER96_REG       IOA(JDU_BASE_ADDR + JDU_H_TABLE_BUFFER96_OFFSET)

/* JDU H_TABLE_BUFFER97 Register (32 bits) */
#define JDU_H_TABLE_BUFFER97_OFFSET    0x1184
#define JDU_H_TABLE_BUFFER97_REG       IOA(JDU_BASE_ADDR + JDU_H_TABLE_BUFFER97_OFFSET)

/* JDU H_TABLE_BUFFER98 Register (32 bits) */
#define JDU_H_TABLE_BUFFER98_OFFSET    0x1188
#define JDU_H_TABLE_BUFFER98_REG       IOA(JDU_BASE_ADDR + JDU_H_TABLE_BUFFER98_OFFSET)

/* JDU H_TABLE_BUFFER99 Register (32 bits) */
#define JDU_H_TABLE_BUFFER99_OFFSET    0x118C
#define JDU_H_TABLE_BUFFER99_REG       IOA(JDU_BASE_ADDR + JDU_H_TABLE_BUFFER99_OFFSET)

/* JDU H_TABLE_BUFFER100 Register (32 bits) */
#define JDU_H_TABLE_BUFFER100_OFFSET   0x1190
#define JDU_H_TABLE_BUFFER100_REG      IOA(JDU_BASE_ADDR + JDU_H_TABLE_BUFFER100_OFFSET)

/* JDU H_TABLE_BUFFER101 Register (32 bits) */
#define JDU_H_TABLE_BUFFER101_OFFSET   0x1194
#define JDU_H_TABLE_BUFFER101_REG      IOA(JDU_BASE_ADDR + JDU_H_TABLE_BUFFER101_OFFSET)

/* JDU H_TABLE_BUFFER102 Register (32 bits) */
#define JDU_H_TABLE_BUFFER102_OFFSET   0x1198
#define JDU_H_TABLE_BUFFER102_REG      IOA(JDU_BASE_ADDR + JDU_H_TABLE_BUFFER102_OFFSET)

/* JDU H_TABLE_BUFFER103 Register (32 bits) */
#define JDU_H_TABLE_BUFFER103_OFFSET   0x119C
#define JDU_H_TABLE_BUFFER103_REG      IOA(JDU_BASE_ADDR + JDU_H_TABLE_BUFFER103_OFFSET)

/* JDU H_TABLE_BUFFER104 Register (32 bits) */
#define JDU_H_TABLE_BUFFER104_OFFSET   0x11A0
#define JDU_H_TABLE_BUFFER104_REG      IOA(JDU_BASE_ADDR + JDU_H_TABLE_BUFFER104_OFFSET)

/* JDU H_TABLE_BUFFER105 Register (32 bits) */
#define JDU_H_TABLE_BUFFER105_OFFSET   0x11A4
#define JDU_H_TABLE_BUFFER105_REG      IOA(JDU_BASE_ADDR + JDU_H_TABLE_BUFFER105_OFFSET)

/* JDU H_TABLE_BUFFER106 Register (32 bits) */
#define JDU_H_TABLE_BUFFER106_OFFSET   0x11A8
#define JDU_H_TABLE_BUFFER106_REG      IOA(JDU_BASE_ADDR + JDU_H_TABLE_BUFFER106_OFFSET)

/* JDU H_TABLE_BUFFER107 Register (32 bits) */
#define JDU_H_TABLE_BUFFER107_OFFSET   0x11AC
#define JDU_H_TABLE_BUFFER107_REG      IOA(JDU_BASE_ADDR + JDU_H_TABLE_BUFFER107_OFFSET)

/* JDU H_TABLE_BUFFER108 Register (32 bits) */
#define JDU_H_TABLE_BUFFER108_OFFSET   0x11B0
#define JDU_H_TABLE_BUFFER108_REG      IOA(JDU_BASE_ADDR + JDU_H_TABLE_BUFFER108_OFFSET)

/* JDU H_TABLE_BUFFER109 Register (32 bits) */
#define JDU_H_TABLE_BUFFER109_OFFSET   0x11B4
#define JDU_H_TABLE_BUFFER109_REG      IOA(JDU_BASE_ADDR + JDU_H_TABLE_BUFFER109_OFFSET)

/* JDU H_TABLE_BUFFER110 Register (32 bits) */
#define JDU_H_TABLE_BUFFER110_OFFSET   0x11B8
#define JDU_H_TABLE_BUFFER110_REG      IOA(JDU_BASE_ADDR + JDU_H_TABLE_BUFFER110_OFFSET)

/* JDU H_TABLE_BUFFER111 Register (32 bits) */
#define JDU_H_TABLE_BUFFER111_OFFSET   0x11BC
#define JDU_H_TABLE_BUFFER111_REG      IOA(JDU_BASE_ADDR + JDU_H_TABLE_BUFFER111_OFFSET)

/* JDU H_TABLE_BUFFER112 Register (32 bits) */
#define JDU_H_TABLE_BUFFER112_OFFSET   0x11C0
#define JDU_H_TABLE_BUFFER112_REG      IOA(JDU_BASE_ADDR + JDU_H_TABLE_BUFFER112_OFFSET)

/* JDU H_TABLE_BUFFER113 Register (32 bits) */
#define JDU_H_TABLE_BUFFER113_OFFSET   0x11C4
#define JDU_H_TABLE_BUFFER113_REG      IOA(JDU_BASE_ADDR + JDU_H_TABLE_BUFFER113_OFFSET)

/* JDU H_TABLE_BUFFER114 Register (32 bits) */
#define JDU_H_TABLE_BUFFER114_OFFSET   0x11C8
#define JDU_H_TABLE_BUFFER114_REG      IOA(JDU_BASE_ADDR + JDU_H_TABLE_BUFFER114_OFFSET)

/* JDU H_TABLE_BUFFER115 Register (32 bits) */
#define JDU_H_TABLE_BUFFER115_OFFSET   0x11CC
#define JDU_H_TABLE_BUFFER115_REG      IOA(JDU_BASE_ADDR + JDU_H_TABLE_BUFFER115_OFFSET)

/* JDU H_TABLE_BUFFER116 Register (32 bits) */
#define JDU_H_TABLE_BUFFER116_OFFSET   0x11D0
#define JDU_H_TABLE_BUFFER116_REG      IOA(JDU_BASE_ADDR + JDU_H_TABLE_BUFFER116_OFFSET)

/* JDU H_TABLE_BUFFER117 Register (32 bits) */
#define JDU_H_TABLE_BUFFER117_OFFSET   0x11D4
#define JDU_H_TABLE_BUFFER117_REG      IOA(JDU_BASE_ADDR + JDU_H_TABLE_BUFFER117_OFFSET)

/* JDU H_TABLE_BUFFER118 Register (32 bits) */
#define JDU_H_TABLE_BUFFER118_OFFSET   0x11D8
#define JDU_H_TABLE_BUFFER118_REG      IOA(JDU_BASE_ADDR + JDU_H_TABLE_BUFFER118_OFFSET)

/* JDU H_TABLE_BUFFER119 Register (32 bits) */
#define JDU_H_TABLE_BUFFER119_OFFSET   0x11DC
#define JDU_H_TABLE_BUFFER119_REG      IOA(JDU_BASE_ADDR + JDU_H_TABLE_BUFFER119_OFFSET)

/* JDU H_TABLE_BUFFER120 Register (32 bits) */
#define JDU_H_TABLE_BUFFER120_OFFSET   0x11E0
#define JDU_H_TABLE_BUFFER120_REG      IOA(JDU_BASE_ADDR + JDU_H_TABLE_BUFFER120_OFFSET)

/* JDU H_TABLE_BUFFER121 Register (32 bits) */
#define JDU_H_TABLE_BUFFER121_OFFSET   0x11E4
#define JDU_H_TABLE_BUFFER121_REG      IOA(JDU_BASE_ADDR + JDU_H_TABLE_BUFFER121_OFFSET)

/* JDU H_TABLE_BUFFER122 Register (32 bits) */
#define JDU_H_TABLE_BUFFER122_OFFSET   0x11E8
#define JDU_H_TABLE_BUFFER122_REG      IOA(JDU_BASE_ADDR + JDU_H_TABLE_BUFFER122_OFFSET)

/* JDU H_TABLE_BUFFER123 Register (32 bits) */
#define JDU_H_TABLE_BUFFER123_OFFSET   0x11EC
#define JDU_H_TABLE_BUFFER123_REG      IOA(JDU_BASE_ADDR + JDU_H_TABLE_BUFFER123_OFFSET)

/* JDU H_TABLE_BUFFER124 Register (32 bits) */
#define JDU_H_TABLE_BUFFER124_OFFSET   0x11F0
#define JDU_H_TABLE_BUFFER124_REG      IOA(JDU_BASE_ADDR + JDU_H_TABLE_BUFFER124_OFFSET)

/* JDU H_TABLE_BUFFER125 Register (32 bits) */
#define JDU_H_TABLE_BUFFER125_OFFSET   0x11F4
#define JDU_H_TABLE_BUFFER125_REG      IOA(JDU_BASE_ADDR + JDU_H_TABLE_BUFFER125_OFFSET)

/* JDU H_TABLE_BUFFER126 Register (32 bits) */
#define JDU_H_TABLE_BUFFER126_OFFSET   0x11F8
#define JDU_H_TABLE_BUFFER126_REG      IOA(JDU_BASE_ADDR + JDU_H_TABLE_BUFFER126_OFFSET)

/* JDU H_TABLE_BUFFER127 Register (32 bits) */
#define JDU_H_TABLE_BUFFER127_OFFSET   0x11FC
#define JDU_H_TABLE_BUFFER127_REG      IOA(JDU_BASE_ADDR + JDU_H_TABLE_BUFFER127_OFFSET)

/* JDU H_TABLE_BUFFER128 Register (32 bits) */
#define JDU_H_TABLE_BUFFER128_OFFSET   0x1200
#define JDU_H_TABLE_BUFFER128_REG      IOA(JDU_BASE_ADDR + JDU_H_TABLE_BUFFER128_OFFSET)

/* JDU H_TABLE_BUFFER129 Register (32 bits) */
#define JDU_H_TABLE_BUFFER129_OFFSET   0x1204
#define JDU_H_TABLE_BUFFER129_REG      IOA(JDU_BASE_ADDR + JDU_H_TABLE_BUFFER129_OFFSET)

/* JDU H_TABLE_BUFFER130 Register (32 bits) */
#define JDU_H_TABLE_BUFFER130_OFFSET   0x1208
#define JDU_H_TABLE_BUFFER130_REG      IOA(JDU_BASE_ADDR + JDU_H_TABLE_BUFFER130_OFFSET)

/* JDU H_TABLE_BUFFER131 Register (32 bits) */
#define JDU_H_TABLE_BUFFER131_OFFSET   0x120C
#define JDU_H_TABLE_BUFFER131_REG      IOA(JDU_BASE_ADDR + JDU_H_TABLE_BUFFER131_OFFSET)

/* JDU H_TABLE_BUFFER132 Register (32 bits) */
#define JDU_H_TABLE_BUFFER132_OFFSET   0x1210
#define JDU_H_TABLE_BUFFER132_REG      IOA(JDU_BASE_ADDR + JDU_H_TABLE_BUFFER132_OFFSET)

/* JDU H_TABLE_BUFFER133 Register (32 bits) */
#define JDU_H_TABLE_BUFFER133_OFFSET   0x1214
#define JDU_H_TABLE_BUFFER133_REG      IOA(JDU_BASE_ADDR + JDU_H_TABLE_BUFFER133_OFFSET)

/* JDU H_TABLE_BUFFER134 Register (32 bits) */
#define JDU_H_TABLE_BUFFER134_OFFSET   0x1218
#define JDU_H_TABLE_BUFFER134_REG      IOA(JDU_BASE_ADDR + JDU_H_TABLE_BUFFER134_OFFSET)

/* JDU H_TABLE_BUFFER135 Register (32 bits) */
#define JDU_H_TABLE_BUFFER135_OFFSET   0x121C
#define JDU_H_TABLE_BUFFER135_REG      IOA(JDU_BASE_ADDR + JDU_H_TABLE_BUFFER135_OFFSET)

/* JDU H_TABLE_BUFFER136 Register (32 bits) */
#define JDU_H_TABLE_BUFFER136_OFFSET   0x1220
#define JDU_H_TABLE_BUFFER136_REG      IOA(JDU_BASE_ADDR + JDU_H_TABLE_BUFFER136_OFFSET)

/* JDU H_TABLE_BUFFER137 Register (32 bits) */
#define JDU_H_TABLE_BUFFER137_OFFSET   0x1224
#define JDU_H_TABLE_BUFFER137_REG      IOA(JDU_BASE_ADDR + JDU_H_TABLE_BUFFER137_OFFSET)

/* JDU H_TABLE_BUFFER138 Register (32 bits) */
#define JDU_H_TABLE_BUFFER138_OFFSET   0x1228
#define JDU_H_TABLE_BUFFER138_REG      IOA(JDU_BASE_ADDR + JDU_H_TABLE_BUFFER138_OFFSET)

/* JDU H_TABLE_BUFFER139 Register (32 bits) */
#define JDU_H_TABLE_BUFFER139_OFFSET   0x122C
#define JDU_H_TABLE_BUFFER139_REG      IOA(JDU_BASE_ADDR + JDU_H_TABLE_BUFFER139_OFFSET)

/* JDU H_TABLE_BUFFER140 Register (32 bits) */
#define JDU_H_TABLE_BUFFER140_OFFSET   0x1230
#define JDU_H_TABLE_BUFFER140_REG      IOA(JDU_BASE_ADDR + JDU_H_TABLE_BUFFER140_OFFSET)

/* JDU H_TABLE_BUFFER141 Register (32 bits) */
#define JDU_H_TABLE_BUFFER141_OFFSET   0x1234
#define JDU_H_TABLE_BUFFER141_REG      IOA(JDU_BASE_ADDR + JDU_H_TABLE_BUFFER141_OFFSET)

/* JDU H_TABLE_BUFFER142 Register (32 bits) */
#define JDU_H_TABLE_BUFFER142_OFFSET   0x1238
#define JDU_H_TABLE_BUFFER142_REG      IOA(JDU_BASE_ADDR + JDU_H_TABLE_BUFFER142_OFFSET)

/* JDU H_TABLE_BUFFER143 Register (32 bits) */
#define JDU_H_TABLE_BUFFER143_OFFSET   0x123C
#define JDU_H_TABLE_BUFFER143_REG      IOA(JDU_BASE_ADDR + JDU_H_TABLE_BUFFER143_OFFSET)

/* JDU H_TABLE_BUFFER144 Register (32 bits) */
#define JDU_H_TABLE_BUFFER144_OFFSET   0x1240
#define JDU_H_TABLE_BUFFER144_REG      IOA(JDU_BASE_ADDR + JDU_H_TABLE_BUFFER144_OFFSET)

/* JDU H_TABLE_BUFFER145 Register (32 bits) */
#define JDU_H_TABLE_BUFFER145_OFFSET   0x1244
#define JDU_H_TABLE_BUFFER145_REG      IOA(JDU_BASE_ADDR + JDU_H_TABLE_BUFFER145_OFFSET)

/* JDU H_TABLE_BUFFER146 Register (32 bits) */
#define JDU_H_TABLE_BUFFER146_OFFSET   0x1248
#define JDU_H_TABLE_BUFFER146_REG      IOA(JDU_BASE_ADDR + JDU_H_TABLE_BUFFER146_OFFSET)

/* JDU H_TABLE_BUFFER147 Register (32 bits) */
#define JDU_H_TABLE_BUFFER147_OFFSET   0x124C
#define JDU_H_TABLE_BUFFER147_REG      IOA(JDU_BASE_ADDR + JDU_H_TABLE_BUFFER147_OFFSET)

/* JDU H_TABLE_BUFFER148 Register (32 bits) */
#define JDU_H_TABLE_BUFFER148_OFFSET   0x1250
#define JDU_H_TABLE_BUFFER148_REG      IOA(JDU_BASE_ADDR + JDU_H_TABLE_BUFFER148_OFFSET)

/* JDU H_TABLE_BUFFER149 Register (32 bits) */
#define JDU_H_TABLE_BUFFER149_OFFSET   0x1254
#define JDU_H_TABLE_BUFFER149_REG      IOA(JDU_BASE_ADDR + JDU_H_TABLE_BUFFER149_OFFSET)

/* JDU H_TABLE_BUFFER150 Register (32 bits) */
#define JDU_H_TABLE_BUFFER150_OFFSET   0x1258
#define JDU_H_TABLE_BUFFER150_REG      IOA(JDU_BASE_ADDR + JDU_H_TABLE_BUFFER150_OFFSET)

/* JDU H_TABLE_BUFFER151 Register (32 bits) */
#define JDU_H_TABLE_BUFFER151_OFFSET   0x125C
#define JDU_H_TABLE_BUFFER151_REG      IOA(JDU_BASE_ADDR + JDU_H_TABLE_BUFFER151_OFFSET)

/* JDU H_TABLE_BUFFER152 Register (32 bits) */
#define JDU_H_TABLE_BUFFER152_OFFSET   0x1260
#define JDU_H_TABLE_BUFFER152_REG      IOA(JDU_BASE_ADDR + JDU_H_TABLE_BUFFER152_OFFSET)

/* JDU H_TABLE_BUFFER153 Register (32 bits) */
#define JDU_H_TABLE_BUFFER153_OFFSET   0x1264
#define JDU_H_TABLE_BUFFER153_REG      IOA(JDU_BASE_ADDR + JDU_H_TABLE_BUFFER153_OFFSET)

/* JDU H_TABLE_BUFFER154 Register (32 bits) */
#define JDU_H_TABLE_BUFFER154_OFFSET   0x1268
#define JDU_H_TABLE_BUFFER154_REG      IOA(JDU_BASE_ADDR + JDU_H_TABLE_BUFFER154_OFFSET)

/* JDU H_TABLE_BUFFER155 Register (32 bits) */
#define JDU_H_TABLE_BUFFER155_OFFSET   0x126C
#define JDU_H_TABLE_BUFFER155_REG      IOA(JDU_BASE_ADDR + JDU_H_TABLE_BUFFER155_OFFSET)

/* JDU H_TABLE_BUFFER156 Register (32 bits) */
#define JDU_H_TABLE_BUFFER156_OFFSET   0x1270
#define JDU_H_TABLE_BUFFER156_REG      IOA(JDU_BASE_ADDR + JDU_H_TABLE_BUFFER156_OFFSET)

/* JDU H_TABLE_BUFFER157 Register (32 bits) */
#define JDU_H_TABLE_BUFFER157_OFFSET   0x1274
#define JDU_H_TABLE_BUFFER157_REG      IOA(JDU_BASE_ADDR + JDU_H_TABLE_BUFFER157_OFFSET)

/* JDU H_TABLE_BUFFER158 Register (32 bits) */
#define JDU_H_TABLE_BUFFER158_OFFSET   0x1278
#define JDU_H_TABLE_BUFFER158_REG      IOA(JDU_BASE_ADDR + JDU_H_TABLE_BUFFER158_OFFSET)

/* JDU H_TABLE_BUFFER159 Register (32 bits) */
#define JDU_H_TABLE_BUFFER159_OFFSET   0x127C
#define JDU_H_TABLE_BUFFER159_REG      IOA(JDU_BASE_ADDR + JDU_H_TABLE_BUFFER159_OFFSET)

/* JDU H_TABLE_BUFFER160 Register (32 bits) */
#define JDU_H_TABLE_BUFFER160_OFFSET   0x1280
#define JDU_H_TABLE_BUFFER160_REG      IOA(JDU_BASE_ADDR + JDU_H_TABLE_BUFFER160_OFFSET)

/* JDU H_TABLE_BUFFER161 Register (32 bits) */
#define JDU_H_TABLE_BUFFER161_OFFSET   0x1284
#define JDU_H_TABLE_BUFFER161_REG      IOA(JDU_BASE_ADDR + JDU_H_TABLE_BUFFER161_OFFSET)

/* JDU H_TABLE_BUFFER162 Register (32 bits) */
#define JDU_H_TABLE_BUFFER162_OFFSET   0x1288
#define JDU_H_TABLE_BUFFER162_REG      IOA(JDU_BASE_ADDR + JDU_H_TABLE_BUFFER162_OFFSET)

/* JDU H_TABLE_BUFFER163 Register (32 bits) */
#define JDU_H_TABLE_BUFFER163_OFFSET   0x128C
#define JDU_H_TABLE_BUFFER163_REG      IOA(JDU_BASE_ADDR + JDU_H_TABLE_BUFFER163_OFFSET)

/* JDU H_TABLE_BUFFER164 Register (32 bits) */
#define JDU_H_TABLE_BUFFER164_OFFSET   0x1290
#define JDU_H_TABLE_BUFFER164_REG      IOA(JDU_BASE_ADDR + JDU_H_TABLE_BUFFER164_OFFSET)

/* JDU H_TABLE_BUFFER165 Register (32 bits) */
#define JDU_H_TABLE_BUFFER165_OFFSET   0x1294
#define JDU_H_TABLE_BUFFER165_REG      IOA(JDU_BASE_ADDR + JDU_H_TABLE_BUFFER165_OFFSET)

/* JDU H_TABLE_BUFFER166 Register (32 bits) */
#define JDU_H_TABLE_BUFFER166_OFFSET   0x1298
#define JDU_H_TABLE_BUFFER166_REG      IOA(JDU_BASE_ADDR + JDU_H_TABLE_BUFFER166_OFFSET)

/* JDU H_TABLE_BUFFER167 Register (32 bits) */
#define JDU_H_TABLE_BUFFER167_OFFSET   0x129C
#define JDU_H_TABLE_BUFFER167_REG      IOA(JDU_BASE_ADDR + JDU_H_TABLE_BUFFER167_OFFSET)

/* JDU H_TABLE_BUFFER168 Register (32 bits) */
#define JDU_H_TABLE_BUFFER168_OFFSET   0x12A0
#define JDU_H_TABLE_BUFFER168_REG      IOA(JDU_BASE_ADDR + JDU_H_TABLE_BUFFER168_OFFSET)

/* JDU H_TABLE_BUFFER169 Register (32 bits) */
#define JDU_H_TABLE_BUFFER169_OFFSET   0x12A4
#define JDU_H_TABLE_BUFFER169_REG      IOA(JDU_BASE_ADDR + JDU_H_TABLE_BUFFER169_OFFSET)

/* JDU H_TABLE_BUFFER170 Register (32 bits) */
#define JDU_H_TABLE_BUFFER170_OFFSET   0x12A8
#define JDU_H_TABLE_BUFFER170_REG      IOA(JDU_BASE_ADDR + JDU_H_TABLE_BUFFER170_OFFSET)

/* JDU H_TABLE_BUFFER171 Register (32 bits) */
#define JDU_H_TABLE_BUFFER171_OFFSET   0x12AC
#define JDU_H_TABLE_BUFFER171_REG      IOA(JDU_BASE_ADDR + JDU_H_TABLE_BUFFER171_OFFSET)

/* JDU H_TABLE_BUFFER172 Register (32 bits) */
#define JDU_H_TABLE_BUFFER172_OFFSET   0x12B0
#define JDU_H_TABLE_BUFFER172_REG      IOA(JDU_BASE_ADDR + JDU_H_TABLE_BUFFER172_OFFSET)

/* JDU H_TABLE_BUFFER173 Register (32 bits) */
#define JDU_H_TABLE_BUFFER173_OFFSET   0x12B4
#define JDU_H_TABLE_BUFFER173_REG      IOA(JDU_BASE_ADDR + JDU_H_TABLE_BUFFER173_OFFSET)

/* JDU H_TABLE_BUFFER174 Register (32 bits) */
#define JDU_H_TABLE_BUFFER174_OFFSET   0x12B8
#define JDU_H_TABLE_BUFFER174_REG      IOA(JDU_BASE_ADDR + JDU_H_TABLE_BUFFER174_OFFSET)

/* JDU H_TABLE_BUFFER175 Register (32 bits) */
#define JDU_H_TABLE_BUFFER175_OFFSET   0x12BC
#define JDU_H_TABLE_BUFFER175_REG      IOA(JDU_BASE_ADDR + JDU_H_TABLE_BUFFER175_OFFSET)

/* JDU H_TABLE_BUFFER176 Register (32 bits) */
#define JDU_H_TABLE_BUFFER176_OFFSET   0x12C0
#define JDU_H_TABLE_BUFFER176_REG      IOA(JDU_BASE_ADDR + JDU_H_TABLE_BUFFER176_OFFSET)

/* JDU H_TABLE_BUFFER177 Register (32 bits) */
#define JDU_H_TABLE_BUFFER177_OFFSET   0x12C4
#define JDU_H_TABLE_BUFFER177_REG      IOA(JDU_BASE_ADDR + JDU_H_TABLE_BUFFER177_OFFSET)

/* JDU H_TABLE_BUFFER178 Register (32 bits) */
#define JDU_H_TABLE_BUFFER178_OFFSET   0x12C8
#define JDU_H_TABLE_BUFFER178_REG      IOA(JDU_BASE_ADDR + JDU_H_TABLE_BUFFER178_OFFSET)

/* JDU H_TABLE_BUFFER179 Register (32 bits) */
#define JDU_H_TABLE_BUFFER179_OFFSET   0x12CC
#define JDU_H_TABLE_BUFFER179_REG      IOA(JDU_BASE_ADDR + JDU_H_TABLE_BUFFER179_OFFSET)

/* JDU H_TABLE_BUFFER180 Register (32 bits) */
#define JDU_H_TABLE_BUFFER180_OFFSET   0x12D0
#define JDU_H_TABLE_BUFFER180_REG      IOA(JDU_BASE_ADDR + JDU_H_TABLE_BUFFER180_OFFSET)

/* JDU H_TABLE_BUFFER181 Register (32 bits) */
#define JDU_H_TABLE_BUFFER181_OFFSET   0x12D4
#define JDU_H_TABLE_BUFFER181_REG      IOA(JDU_BASE_ADDR + JDU_H_TABLE_BUFFER181_OFFSET)

/* JDU H_TABLE_BUFFER182 Register (32 bits) */
#define JDU_H_TABLE_BUFFER182_OFFSET   0x12D8
#define JDU_H_TABLE_BUFFER182_REG      IOA(JDU_BASE_ADDR + JDU_H_TABLE_BUFFER182_OFFSET)

/* JDU H_TABLE_BUFFER183 Register (32 bits) */
#define JDU_H_TABLE_BUFFER183_OFFSET   0x12DC
#define JDU_H_TABLE_BUFFER183_REG      IOA(JDU_BASE_ADDR + JDU_H_TABLE_BUFFER183_OFFSET)

/* JDU H_TABLE_BUFFER184 Register (32 bits) */
#define JDU_H_TABLE_BUFFER184_OFFSET   0x12E0
#define JDU_H_TABLE_BUFFER184_REG      IOA(JDU_BASE_ADDR + JDU_H_TABLE_BUFFER184_OFFSET)

/* JDU H_TABLE_BUFFER185 Register (32 bits) */
#define JDU_H_TABLE_BUFFER185_OFFSET   0x12E4
#define JDU_H_TABLE_BUFFER185_REG      IOA(JDU_BASE_ADDR + JDU_H_TABLE_BUFFER185_OFFSET)

/* JDU H_TABLE_BUFFER186 Register (32 bits) */
#define JDU_H_TABLE_BUFFER186_OFFSET   0x12E8
#define JDU_H_TABLE_BUFFER186_REG      IOA(JDU_BASE_ADDR + JDU_H_TABLE_BUFFER186_OFFSET)

/* JDU H_TABLE_BUFFER187 Register (32 bits) */
#define JDU_H_TABLE_BUFFER187_OFFSET   0x12EC
#define JDU_H_TABLE_BUFFER187_REG      IOA(JDU_BASE_ADDR + JDU_H_TABLE_BUFFER187_OFFSET)

/* JDU H_TABLE_BUFFER188 Register (32 bits) */
#define JDU_H_TABLE_BUFFER188_OFFSET   0x12F0
#define JDU_H_TABLE_BUFFER188_REG      IOA(JDU_BASE_ADDR + JDU_H_TABLE_BUFFER188_OFFSET)

/* JDU H_TABLE_BUFFER189 Register (32 bits) */
#define JDU_H_TABLE_BUFFER189_OFFSET   0x12F4
#define JDU_H_TABLE_BUFFER189_REG      IOA(JDU_BASE_ADDR + JDU_H_TABLE_BUFFER189_OFFSET)

/* JDU H_TABLE_BUFFER190 Register (32 bits) */
#define JDU_H_TABLE_BUFFER190_OFFSET   0x12F8
#define JDU_H_TABLE_BUFFER190_REG      IOA(JDU_BASE_ADDR + JDU_H_TABLE_BUFFER190_OFFSET)

/* JDU H_TABLE_BUFFER191 Register (32 bits) */
#define JDU_H_TABLE_BUFFER191_OFFSET   0x12FC
#define JDU_H_TABLE_BUFFER191_REG      IOA(JDU_BASE_ADDR + JDU_H_TABLE_BUFFER191_OFFSET)

/* JDU H_TABLE_BUFFER192 Register (32 bits) */
#define JDU_H_TABLE_BUFFER192_OFFSET   0x1300
#define JDU_H_TABLE_BUFFER192_REG      IOA(JDU_BASE_ADDR + JDU_H_TABLE_BUFFER192_OFFSET)

/* JDU H_TABLE_BUFFER193 Register (32 bits) */
#define JDU_H_TABLE_BUFFER193_OFFSET   0x1304
#define JDU_H_TABLE_BUFFER193_REG      IOA(JDU_BASE_ADDR + JDU_H_TABLE_BUFFER193_OFFSET)

/* JDU H_TABLE_BUFFER194 Register (32 bits) */
#define JDU_H_TABLE_BUFFER194_OFFSET   0x1308
#define JDU_H_TABLE_BUFFER194_REG      IOA(JDU_BASE_ADDR + JDU_H_TABLE_BUFFER194_OFFSET)

/* JDU H_TABLE_BUFFER195 Register (32 bits) */
#define JDU_H_TABLE_BUFFER195_OFFSET   0x130C
#define JDU_H_TABLE_BUFFER195_REG      IOA(JDU_BASE_ADDR + JDU_H_TABLE_BUFFER195_OFFSET)

/* JDU H_TABLE_BUFFER196 Register (32 bits) */
#define JDU_H_TABLE_BUFFER196_OFFSET   0x1310
#define JDU_H_TABLE_BUFFER196_REG      IOA(JDU_BASE_ADDR + JDU_H_TABLE_BUFFER196_OFFSET)

/* JDU H_TABLE_BUFFER197 Register (32 bits) */
#define JDU_H_TABLE_BUFFER197_OFFSET   0x1314
#define JDU_H_TABLE_BUFFER197_REG      IOA(JDU_BASE_ADDR + JDU_H_TABLE_BUFFER197_OFFSET)

/* JDU H_TABLE_BUFFER198 Register (32 bits) */
#define JDU_H_TABLE_BUFFER198_OFFSET   0x1318
#define JDU_H_TABLE_BUFFER198_REG      IOA(JDU_BASE_ADDR + JDU_H_TABLE_BUFFER198_OFFSET)

/* JDU H_TABLE_BUFFER199 Register (32 bits) */
#define JDU_H_TABLE_BUFFER199_OFFSET   0x131C
#define JDU_H_TABLE_BUFFER199_REG      IOA(JDU_BASE_ADDR + JDU_H_TABLE_BUFFER199_OFFSET)

/* JDU H_TABLE_BUFFER200 Register (32 bits) */
#define JDU_H_TABLE_BUFFER200_OFFSET   0x1320
#define JDU_H_TABLE_BUFFER200_REG      IOA(JDU_BASE_ADDR + JDU_H_TABLE_BUFFER200_OFFSET)

/* JDU H_TABLE_BUFFER201 Register (32 bits) */
#define JDU_H_TABLE_BUFFER201_OFFSET   0x1324
#define JDU_H_TABLE_BUFFER201_REG      IOA(JDU_BASE_ADDR + JDU_H_TABLE_BUFFER201_OFFSET)

/* JDU H_TABLE_BUFFER202 Register (32 bits) */
#define JDU_H_TABLE_BUFFER202_OFFSET   0x1328
#define JDU_H_TABLE_BUFFER202_REG      IOA(JDU_BASE_ADDR + JDU_H_TABLE_BUFFER202_OFFSET)

/* JDU H_TABLE_BUFFER203 Register (32 bits) */
#define JDU_H_TABLE_BUFFER203_OFFSET   0x132C
#define JDU_H_TABLE_BUFFER203_REG      IOA(JDU_BASE_ADDR + JDU_H_TABLE_BUFFER203_OFFSET)

/* JDU H_TABLE_BUFFER204 Register (32 bits) */
#define JDU_H_TABLE_BUFFER204_OFFSET   0x1330
#define JDU_H_TABLE_BUFFER204_REG      IOA(JDU_BASE_ADDR + JDU_H_TABLE_BUFFER204_OFFSET)

/* JDU H_TABLE_BUFFER205 Register (32 bits) */
#define JDU_H_TABLE_BUFFER205_OFFSET   0x1334
#define JDU_H_TABLE_BUFFER205_REG      IOA(JDU_BASE_ADDR + JDU_H_TABLE_BUFFER205_OFFSET)

/* JDU H_TABLE_BUFFER206 Register (32 bits) */
#define JDU_H_TABLE_BUFFER206_OFFSET   0x1338
#define JDU_H_TABLE_BUFFER206_REG      IOA(JDU_BASE_ADDR + JDU_H_TABLE_BUFFER206_OFFSET)

/* JDU H_TABLE_BUFFER207 Register (32 bits) */
#define JDU_H_TABLE_BUFFER207_OFFSET   0x133C
#define JDU_H_TABLE_BUFFER207_REG      IOA(JDU_BASE_ADDR + JDU_H_TABLE_BUFFER207_OFFSET)

/* JDU H_TABLE_BUFFER208 Register (32 bits) */
#define JDU_H_TABLE_BUFFER208_OFFSET   0x1340
#define JDU_H_TABLE_BUFFER208_REG      IOA(JDU_BASE_ADDR + JDU_H_TABLE_BUFFER208_OFFSET)

/* JDU H_TABLE_BUFFER209 Register (32 bits) */
#define JDU_H_TABLE_BUFFER209_OFFSET   0x1344
#define JDU_H_TABLE_BUFFER209_REG      IOA(JDU_BASE_ADDR + JDU_H_TABLE_BUFFER209_OFFSET)

/* JDU H_TABLE_BUFFER210 Register (32 bits) */
#define JDU_H_TABLE_BUFFER210_OFFSET   0x1348
#define JDU_H_TABLE_BUFFER210_REG      IOA(JDU_BASE_ADDR + JDU_H_TABLE_BUFFER210_OFFSET)

/* JDU H_TABLE_BUFFER211 Register (32 bits) */
#define JDU_H_TABLE_BUFFER211_OFFSET   0x134C
#define JDU_H_TABLE_BUFFER211_REG      IOA(JDU_BASE_ADDR + JDU_H_TABLE_BUFFER211_OFFSET)

/* JDU H_TABLE_BUFFER212 Register (32 bits) */
#define JDU_H_TABLE_BUFFER212_OFFSET   0x1350
#define JDU_H_TABLE_BUFFER212_REG      IOA(JDU_BASE_ADDR + JDU_H_TABLE_BUFFER212_OFFSET)

/* JDU H_TABLE_BUFFER213 Register (32 bits) */
#define JDU_H_TABLE_BUFFER213_OFFSET   0x1354
#define JDU_H_TABLE_BUFFER213_REG      IOA(JDU_BASE_ADDR + JDU_H_TABLE_BUFFER213_OFFSET)

/* JDU H_TABLE_BUFFER214 Register (32 bits) */
#define JDU_H_TABLE_BUFFER214_OFFSET   0x1358
#define JDU_H_TABLE_BUFFER214_REG      IOA(JDU_BASE_ADDR + JDU_H_TABLE_BUFFER214_OFFSET)

/* JDU H_TABLE_BUFFER215 Register (32 bits) */
#define JDU_H_TABLE_BUFFER215_OFFSET   0x135C
#define JDU_H_TABLE_BUFFER215_REG      IOA(JDU_BASE_ADDR + JDU_H_TABLE_BUFFER215_OFFSET)

/* JDU H_TABLE_BUFFER216 Register (32 bits) */
#define JDU_H_TABLE_BUFFER216_OFFSET   0x1360
#define JDU_H_TABLE_BUFFER216_REG      IOA(JDU_BASE_ADDR + JDU_H_TABLE_BUFFER216_OFFSET)

/* JDU H_TABLE_BUFFER217 Register (32 bits) */
#define JDU_H_TABLE_BUFFER217_OFFSET   0x1364
#define JDU_H_TABLE_BUFFER217_REG      IOA(JDU_BASE_ADDR + JDU_H_TABLE_BUFFER217_OFFSET)

/* JDU H_TABLE_BUFFER218 Register (32 bits) */
#define JDU_H_TABLE_BUFFER218_OFFSET   0x1368
#define JDU_H_TABLE_BUFFER218_REG      IOA(JDU_BASE_ADDR + JDU_H_TABLE_BUFFER218_OFFSET)

/* JDU H_TABLE_BUFFER219 Register (32 bits) */
#define JDU_H_TABLE_BUFFER219_OFFSET   0x136C
#define JDU_H_TABLE_BUFFER219_REG      IOA(JDU_BASE_ADDR + JDU_H_TABLE_BUFFER219_OFFSET)

/* JDU H_TABLE_BUFFER220 Register (32 bits) */
#define JDU_H_TABLE_BUFFER220_OFFSET   0x1370
#define JDU_H_TABLE_BUFFER220_REG      IOA(JDU_BASE_ADDR + JDU_H_TABLE_BUFFER220_OFFSET)

/* JDU H_TABLE_BUFFER221 Register (32 bits) */
#define JDU_H_TABLE_BUFFER221_OFFSET   0x1374
#define JDU_H_TABLE_BUFFER221_REG      IOA(JDU_BASE_ADDR + JDU_H_TABLE_BUFFER221_OFFSET)

/* JDU H_TABLE_BUFFER222 Register (32 bits) */
#define JDU_H_TABLE_BUFFER222_OFFSET   0x1378
#define JDU_H_TABLE_BUFFER222_REG      IOA(JDU_BASE_ADDR + JDU_H_TABLE_BUFFER222_OFFSET)

/* JDU H_TABLE_BUFFER223 Register (32 bits) */
#define JDU_H_TABLE_BUFFER223_OFFSET   0x137C
#define JDU_H_TABLE_BUFFER223_REG      IOA(JDU_BASE_ADDR + JDU_H_TABLE_BUFFER223_OFFSET)

/* JDU H_TABLE_BUFFER224 Register (32 bits) */
#define JDU_H_TABLE_BUFFER224_OFFSET   0x1380
#define JDU_H_TABLE_BUFFER224_REG      IOA(JDU_BASE_ADDR + JDU_H_TABLE_BUFFER224_OFFSET)

/* JDU H_TABLE_BUFFER225 Register (32 bits) */
#define JDU_H_TABLE_BUFFER225_OFFSET   0x1384
#define JDU_H_TABLE_BUFFER225_REG      IOA(JDU_BASE_ADDR + JDU_H_TABLE_BUFFER225_OFFSET)

/* JDU H_TABLE_BUFFER226 Register (32 bits) */
#define JDU_H_TABLE_BUFFER226_OFFSET   0x1388
#define JDU_H_TABLE_BUFFER226_REG      IOA(JDU_BASE_ADDR + JDU_H_TABLE_BUFFER226_OFFSET)

/* JDU H_TABLE_BUFFER227 Register (32 bits) */
#define JDU_H_TABLE_BUFFER227_OFFSET   0x138C
#define JDU_H_TABLE_BUFFER227_REG      IOA(JDU_BASE_ADDR + JDU_H_TABLE_BUFFER227_OFFSET)

/* JDU H_TABLE_BUFFER228 Register (32 bits) */
#define JDU_H_TABLE_BUFFER228_OFFSET   0x1390
#define JDU_H_TABLE_BUFFER228_REG      IOA(JDU_BASE_ADDR + JDU_H_TABLE_BUFFER228_OFFSET)

/* JDU H_TABLE_BUFFER229 Register (32 bits) */
#define JDU_H_TABLE_BUFFER229_OFFSET   0x1394
#define JDU_H_TABLE_BUFFER229_REG      IOA(JDU_BASE_ADDR + JDU_H_TABLE_BUFFER229_OFFSET)

/* JDU H_TABLE_BUFFER230 Register (32 bits) */
#define JDU_H_TABLE_BUFFER230_OFFSET   0x1398
#define JDU_H_TABLE_BUFFER230_REG      IOA(JDU_BASE_ADDR + JDU_H_TABLE_BUFFER230_OFFSET)

/* JDU H_TABLE_BUFFER231 Register (32 bits) */
#define JDU_H_TABLE_BUFFER231_OFFSET   0x139C
#define JDU_H_TABLE_BUFFER231_REG      IOA(JDU_BASE_ADDR + JDU_H_TABLE_BUFFER231_OFFSET)

/* JDU H_TABLE_BUFFER232 Register (32 bits) */
#define JDU_H_TABLE_BUFFER232_OFFSET   0x13A0
#define JDU_H_TABLE_BUFFER232_REG      IOA(JDU_BASE_ADDR + JDU_H_TABLE_BUFFER232_OFFSET)

/* JDU H_TABLE_BUFFER233 Register (32 bits) */
#define JDU_H_TABLE_BUFFER233_OFFSET   0x13A4
#define JDU_H_TABLE_BUFFER233_REG      IOA(JDU_BASE_ADDR + JDU_H_TABLE_BUFFER233_OFFSET)

/* JDU H_TABLE_BUFFER234 Register (32 bits) */
#define JDU_H_TABLE_BUFFER234_OFFSET   0x13A8
#define JDU_H_TABLE_BUFFER234_REG      IOA(JDU_BASE_ADDR + JDU_H_TABLE_BUFFER234_OFFSET)

/* JDU H_TABLE_BUFFER235 Register (32 bits) */
#define JDU_H_TABLE_BUFFER235_OFFSET   0x13AC
#define JDU_H_TABLE_BUFFER235_REG      IOA(JDU_BASE_ADDR + JDU_H_TABLE_BUFFER235_OFFSET)

/* JDU H_TABLE_BUFFER236 Register (32 bits) */
#define JDU_H_TABLE_BUFFER236_OFFSET   0x13B0
#define JDU_H_TABLE_BUFFER236_REG      IOA(JDU_BASE_ADDR + JDU_H_TABLE_BUFFER236_OFFSET)

/* JDU H_TABLE_BUFFER237 Register (32 bits) */
#define JDU_H_TABLE_BUFFER237_OFFSET   0x13B4
#define JDU_H_TABLE_BUFFER237_REG      IOA(JDU_BASE_ADDR + JDU_H_TABLE_BUFFER237_OFFSET)

/* JDU H_TABLE_BUFFER238 Register (32 bits) */
#define JDU_H_TABLE_BUFFER238_OFFSET   0x13B8
#define JDU_H_TABLE_BUFFER238_REG      IOA(JDU_BASE_ADDR + JDU_H_TABLE_BUFFER238_OFFSET)

/* JDU H_TABLE_BUFFER239 Register (32 bits) */
#define JDU_H_TABLE_BUFFER239_OFFSET   0x13BC
#define JDU_H_TABLE_BUFFER239_REG      IOA(JDU_BASE_ADDR + JDU_H_TABLE_BUFFER239_OFFSET)

/* JDU H_TABLE_BUFFER240 Register (32 bits) */
#define JDU_H_TABLE_BUFFER240_OFFSET   0x13C0
#define JDU_H_TABLE_BUFFER240_REG      IOA(JDU_BASE_ADDR + JDU_H_TABLE_BUFFER240_OFFSET)

/* JDU H_TABLE_BUFFER241 Register (32 bits) */
#define JDU_H_TABLE_BUFFER241_OFFSET   0x13C4
#define JDU_H_TABLE_BUFFER241_REG      IOA(JDU_BASE_ADDR + JDU_H_TABLE_BUFFER241_OFFSET)

/* JDU H_TABLE_BUFFER242 Register (32 bits) */
#define JDU_H_TABLE_BUFFER242_OFFSET   0x13C8
#define JDU_H_TABLE_BUFFER242_REG      IOA(JDU_BASE_ADDR + JDU_H_TABLE_BUFFER242_OFFSET)

/* JDU H_TABLE_BUFFER243 Register (32 bits) */
#define JDU_H_TABLE_BUFFER243_OFFSET   0x13CC
#define JDU_H_TABLE_BUFFER243_REG      IOA(JDU_BASE_ADDR + JDU_H_TABLE_BUFFER243_OFFSET)

/* JDU H_TABLE_BUFFER244 Register (32 bits) */
#define JDU_H_TABLE_BUFFER244_OFFSET   0x13D0
#define JDU_H_TABLE_BUFFER244_REG      IOA(JDU_BASE_ADDR + JDU_H_TABLE_BUFFER244_OFFSET)

/* JDU H_TABLE_BUFFER245 Register (32 bits) */
#define JDU_H_TABLE_BUFFER245_OFFSET   0x13D4
#define JDU_H_TABLE_BUFFER245_REG      IOA(JDU_BASE_ADDR + JDU_H_TABLE_BUFFER245_OFFSET)

/* JDU H_TABLE_BUFFER246 Register (32 bits) */
#define JDU_H_TABLE_BUFFER246_OFFSET   0x13D8
#define JDU_H_TABLE_BUFFER246_REG      IOA(JDU_BASE_ADDR + JDU_H_TABLE_BUFFER246_OFFSET)

/* JDU H_TABLE_BUFFER247 Register (32 bits) */
#define JDU_H_TABLE_BUFFER247_OFFSET   0x13DC
#define JDU_H_TABLE_BUFFER247_REG      IOA(JDU_BASE_ADDR + JDU_H_TABLE_BUFFER247_OFFSET)

/* JDU H_TABLE_BUFFER248 Register (32 bits) */
#define JDU_H_TABLE_BUFFER248_OFFSET   0x13E0
#define JDU_H_TABLE_BUFFER248_REG      IOA(JDU_BASE_ADDR + JDU_H_TABLE_BUFFER248_OFFSET)

/* JDU H_TABLE_BUFFER249 Register (32 bits) */
#define JDU_H_TABLE_BUFFER249_OFFSET   0x13E4
#define JDU_H_TABLE_BUFFER249_REG      IOA(JDU_BASE_ADDR + JDU_H_TABLE_BUFFER249_OFFSET)

/* JDU H_TABLE_BUFFER250 Register (32 bits) */
#define JDU_H_TABLE_BUFFER250_OFFSET   0x13E8
#define JDU_H_TABLE_BUFFER250_REG      IOA(JDU_BASE_ADDR + JDU_H_TABLE_BUFFER250_OFFSET)

/* JDU H_TABLE_BUFFER251 Register (32 bits) */
#define JDU_H_TABLE_BUFFER251_OFFSET   0x13EC
#define JDU_H_TABLE_BUFFER251_REG      IOA(JDU_BASE_ADDR + JDU_H_TABLE_BUFFER251_OFFSET)

/* JDU H_TABLE_BUFFER252 Register (32 bits) */
#define JDU_H_TABLE_BUFFER252_OFFSET   0x13F0
#define JDU_H_TABLE_BUFFER252_REG      IOA(JDU_BASE_ADDR + JDU_H_TABLE_BUFFER252_OFFSET)

/* JDU H_TABLE_BUFFER253 Register (32 bits) */
#define JDU_H_TABLE_BUFFER253_OFFSET   0x13F4
#define JDU_H_TABLE_BUFFER253_REG      IOA(JDU_BASE_ADDR + JDU_H_TABLE_BUFFER253_OFFSET)

/* JDU H_TABLE_BUFFER254 Register (32 bits) */
#define JDU_H_TABLE_BUFFER254_OFFSET   0x13F8
#define JDU_H_TABLE_BUFFER254_REG      IOA(JDU_BASE_ADDR + JDU_H_TABLE_BUFFER254_OFFSET)

/* JDU H_TABLE_BUFFER255 Register (32 bits) */
#define JDU_H_TABLE_BUFFER255_OFFSET   0x13FC
#define JDU_H_TABLE_BUFFER255_REG      IOA(JDU_BASE_ADDR + JDU_H_TABLE_BUFFER255_OFFSET)

/* JDU H_TABLE_BUFFER256 Register (32 bits) */
#define JDU_H_TABLE_BUFFER256_OFFSET   0x1400
#define JDU_H_TABLE_BUFFER256_REG      IOA(JDU_BASE_ADDR + JDU_H_TABLE_BUFFER256_OFFSET)

/* JDU H_TABLE_BUFFER257 Register (32 bits) */
#define JDU_H_TABLE_BUFFER257_OFFSET   0x1404
#define JDU_H_TABLE_BUFFER257_REG      IOA(JDU_BASE_ADDR + JDU_H_TABLE_BUFFER257_OFFSET)

/* JDU H_TABLE_BUFFER258 Register (32 bits) */
#define JDU_H_TABLE_BUFFER258_OFFSET   0x1408
#define JDU_H_TABLE_BUFFER258_REG      IOA(JDU_BASE_ADDR + JDU_H_TABLE_BUFFER258_OFFSET)

/* JDU H_TABLE_BUFFER259 Register (32 bits) */
#define JDU_H_TABLE_BUFFER259_OFFSET   0x140C
#define JDU_H_TABLE_BUFFER259_REG      IOA(JDU_BASE_ADDR + JDU_H_TABLE_BUFFER259_OFFSET)

/* JDU H_TABLE_BUFFER260 Register (32 bits) */
#define JDU_H_TABLE_BUFFER260_OFFSET   0x1410
#define JDU_H_TABLE_BUFFER260_REG      IOA(JDU_BASE_ADDR + JDU_H_TABLE_BUFFER260_OFFSET)

/* JDU H_TABLE_BUFFER261 Register (32 bits) */
#define JDU_H_TABLE_BUFFER261_OFFSET   0x1414
#define JDU_H_TABLE_BUFFER261_REG      IOA(JDU_BASE_ADDR + JDU_H_TABLE_BUFFER261_OFFSET)

/* JDU H_TABLE_BUFFER262 Register (32 bits) */
#define JDU_H_TABLE_BUFFER262_OFFSET   0x1418
#define JDU_H_TABLE_BUFFER262_REG      IOA(JDU_BASE_ADDR + JDU_H_TABLE_BUFFER262_OFFSET)

/* JDU H_TABLE_BUFFER263 Register (32 bits) */
#define JDU_H_TABLE_BUFFER263_OFFSET   0x141C
#define JDU_H_TABLE_BUFFER263_REG      IOA(JDU_BASE_ADDR + JDU_H_TABLE_BUFFER263_OFFSET)

/* JDU H_TABLE_BUFFER264 Register (32 bits) */
#define JDU_H_TABLE_BUFFER264_OFFSET   0x1420
#define JDU_H_TABLE_BUFFER264_REG      IOA(JDU_BASE_ADDR + JDU_H_TABLE_BUFFER264_OFFSET)

/* JDU H_TABLE_BUFFER265 Register (32 bits) */
#define JDU_H_TABLE_BUFFER265_OFFSET   0x1424
#define JDU_H_TABLE_BUFFER265_REG      IOA(JDU_BASE_ADDR + JDU_H_TABLE_BUFFER265_OFFSET)

/* JDU H_TABLE_BUFFER266 Register (32 bits) */
#define JDU_H_TABLE_BUFFER266_OFFSET   0x1428
#define JDU_H_TABLE_BUFFER266_REG      IOA(JDU_BASE_ADDR + JDU_H_TABLE_BUFFER266_OFFSET)

/* JDU H_TABLE_BUFFER267 Register (32 bits) */
#define JDU_H_TABLE_BUFFER267_OFFSET   0x142C
#define JDU_H_TABLE_BUFFER267_REG      IOA(JDU_BASE_ADDR + JDU_H_TABLE_BUFFER267_OFFSET)

/* JDU H_TABLE_BUFFER268 Register (32 bits) */
#define JDU_H_TABLE_BUFFER268_OFFSET   0x1430
#define JDU_H_TABLE_BUFFER268_REG      IOA(JDU_BASE_ADDR + JDU_H_TABLE_BUFFER268_OFFSET)

/* JDU H_TABLE_BUFFER269 Register (32 bits) */
#define JDU_H_TABLE_BUFFER269_OFFSET   0x1434
#define JDU_H_TABLE_BUFFER269_REG      IOA(JDU_BASE_ADDR + JDU_H_TABLE_BUFFER269_OFFSET)

/* JDU H_TABLE_BUFFER270 Register (32 bits) */
#define JDU_H_TABLE_BUFFER270_OFFSET   0x1438
#define JDU_H_TABLE_BUFFER270_REG      IOA(JDU_BASE_ADDR + JDU_H_TABLE_BUFFER270_OFFSET)

/* JDU H_TABLE_BUFFER271 Register (32 bits) */
#define JDU_H_TABLE_BUFFER271_OFFSET   0x143C
#define JDU_H_TABLE_BUFFER271_REG      IOA(JDU_BASE_ADDR + JDU_H_TABLE_BUFFER271_OFFSET)

/* JDU H_TABLE_BUFFER272 Register (32 bits) */
#define JDU_H_TABLE_BUFFER272_OFFSET   0x1440
#define JDU_H_TABLE_BUFFER272_REG      IOA(JDU_BASE_ADDR + JDU_H_TABLE_BUFFER272_OFFSET)

/* JDU H_TABLE_BUFFER273 Register (32 bits) */
#define JDU_H_TABLE_BUFFER273_OFFSET   0x1444
#define JDU_H_TABLE_BUFFER273_REG      IOA(JDU_BASE_ADDR + JDU_H_TABLE_BUFFER273_OFFSET)

/* JDU H_TABLE_BUFFER274 Register (32 bits) */
#define JDU_H_TABLE_BUFFER274_OFFSET   0x1448
#define JDU_H_TABLE_BUFFER274_REG      IOA(JDU_BASE_ADDR + JDU_H_TABLE_BUFFER274_OFFSET)

/* JDU H_TABLE_BUFFER275 Register (32 bits) */
#define JDU_H_TABLE_BUFFER275_OFFSET   0x144C
#define JDU_H_TABLE_BUFFER275_REG      IOA(JDU_BASE_ADDR + JDU_H_TABLE_BUFFER275_OFFSET)

/* JDU H_TABLE_BUFFER276 Register (32 bits) */
#define JDU_H_TABLE_BUFFER276_OFFSET   0x1450
#define JDU_H_TABLE_BUFFER276_REG      IOA(JDU_BASE_ADDR + JDU_H_TABLE_BUFFER276_OFFSET)

/* JDU H_TABLE_BUFFER277 Register (32 bits) */
#define JDU_H_TABLE_BUFFER277_OFFSET   0x1454
#define JDU_H_TABLE_BUFFER277_REG      IOA(JDU_BASE_ADDR + JDU_H_TABLE_BUFFER277_OFFSET)

/* JDU H_TABLE_BUFFER278 Register (32 bits) */
#define JDU_H_TABLE_BUFFER278_OFFSET   0x1458
#define JDU_H_TABLE_BUFFER278_REG      IOA(JDU_BASE_ADDR + JDU_H_TABLE_BUFFER278_OFFSET)

/* JDU H_TABLE_BUFFER279 Register (32 bits) */
#define JDU_H_TABLE_BUFFER279_OFFSET   0x145C
#define JDU_H_TABLE_BUFFER279_REG      IOA(JDU_BASE_ADDR + JDU_H_TABLE_BUFFER279_OFFSET)

/* JDU H_TABLE_BUFFER280 Register (32 bits) */
#define JDU_H_TABLE_BUFFER280_OFFSET   0x1460
#define JDU_H_TABLE_BUFFER280_REG      IOA(JDU_BASE_ADDR + JDU_H_TABLE_BUFFER280_OFFSET)

/* JDU H_TABLE_BUFFER281 Register (32 bits) */
#define JDU_H_TABLE_BUFFER281_OFFSET   0x1464
#define JDU_H_TABLE_BUFFER281_REG      IOA(JDU_BASE_ADDR + JDU_H_TABLE_BUFFER281_OFFSET)

/* JDU H_TABLE_BUFFER282 Register (32 bits) */
#define JDU_H_TABLE_BUFFER282_OFFSET   0x1468
#define JDU_H_TABLE_BUFFER282_REG      IOA(JDU_BASE_ADDR + JDU_H_TABLE_BUFFER282_OFFSET)

/* JDU H_TABLE_BUFFER283 Register (32 bits) */
#define JDU_H_TABLE_BUFFER283_OFFSET   0x146C
#define JDU_H_TABLE_BUFFER283_REG      IOA(JDU_BASE_ADDR + JDU_H_TABLE_BUFFER283_OFFSET)

/* JDU H_TABLE_BUFFER284 Register (32 bits) */
#define JDU_H_TABLE_BUFFER284_OFFSET   0x1470
#define JDU_H_TABLE_BUFFER284_REG      IOA(JDU_BASE_ADDR + JDU_H_TABLE_BUFFER284_OFFSET)

/* JDU H_TABLE_BUFFER285 Register (32 bits) */
#define JDU_H_TABLE_BUFFER285_OFFSET   0x1474
#define JDU_H_TABLE_BUFFER285_REG      IOA(JDU_BASE_ADDR + JDU_H_TABLE_BUFFER285_OFFSET)

/* JDU H_TABLE_BUFFER286 Register (32 bits) */
#define JDU_H_TABLE_BUFFER286_OFFSET   0x1478
#define JDU_H_TABLE_BUFFER286_REG      IOA(JDU_BASE_ADDR + JDU_H_TABLE_BUFFER286_OFFSET)

/* JDU H_TABLE_BUFFER287 Register (32 bits) */
#define JDU_H_TABLE_BUFFER287_OFFSET   0x147C
#define JDU_H_TABLE_BUFFER287_REG      IOA(JDU_BASE_ADDR + JDU_H_TABLE_BUFFER287_OFFSET)

/* JDU H_TABLE_BUFFER288 Register (32 bits) */
#define JDU_H_TABLE_BUFFER288_OFFSET   0x1480
#define JDU_H_TABLE_BUFFER288_REG      IOA(JDU_BASE_ADDR + JDU_H_TABLE_BUFFER288_OFFSET)

/* JDU H_TABLE_BUFFER289 Register (32 bits) */
#define JDU_H_TABLE_BUFFER289_OFFSET   0x1484
#define JDU_H_TABLE_BUFFER289_REG      IOA(JDU_BASE_ADDR + JDU_H_TABLE_BUFFER289_OFFSET)

/* JDU H_TABLE_BUFFER290 Register (32 bits) */
#define JDU_H_TABLE_BUFFER290_OFFSET   0x1488
#define JDU_H_TABLE_BUFFER290_REG      IOA(JDU_BASE_ADDR + JDU_H_TABLE_BUFFER290_OFFSET)

/* JDU H_TABLE_BUFFER291 Register (32 bits) */
#define JDU_H_TABLE_BUFFER291_OFFSET   0x148C
#define JDU_H_TABLE_BUFFER291_REG      IOA(JDU_BASE_ADDR + JDU_H_TABLE_BUFFER291_OFFSET)

/* JDU H_TABLE_BUFFER292 Register (32 bits) */
#define JDU_H_TABLE_BUFFER292_OFFSET   0x1490
#define JDU_H_TABLE_BUFFER292_REG      IOA(JDU_BASE_ADDR + JDU_H_TABLE_BUFFER292_OFFSET)

/* JDU H_TABLE_BUFFER293 Register (32 bits) */
#define JDU_H_TABLE_BUFFER293_OFFSET   0x1494
#define JDU_H_TABLE_BUFFER293_REG      IOA(JDU_BASE_ADDR + JDU_H_TABLE_BUFFER293_OFFSET)

/* JDU H_TABLE_BUFFER294 Register (32 bits) */
#define JDU_H_TABLE_BUFFER294_OFFSET   0x1498
#define JDU_H_TABLE_BUFFER294_REG      IOA(JDU_BASE_ADDR + JDU_H_TABLE_BUFFER294_OFFSET)

/* JDU H_TABLE_BUFFER295 Register (32 bits) */
#define JDU_H_TABLE_BUFFER295_OFFSET   0x149C
#define JDU_H_TABLE_BUFFER295_REG      IOA(JDU_BASE_ADDR + JDU_H_TABLE_BUFFER295_OFFSET)

/* JDU H_TABLE_BUFFER296 Register (32 bits) */
#define JDU_H_TABLE_BUFFER296_OFFSET   0x14A0
#define JDU_H_TABLE_BUFFER296_REG      IOA(JDU_BASE_ADDR + JDU_H_TABLE_BUFFER296_OFFSET)

/* JDU H_TABLE_BUFFER297 Register (32 bits) */
#define JDU_H_TABLE_BUFFER297_OFFSET   0x14A4
#define JDU_H_TABLE_BUFFER297_REG      IOA(JDU_BASE_ADDR + JDU_H_TABLE_BUFFER297_OFFSET)

/* JDU H_TABLE_BUFFER298 Register (32 bits) */
#define JDU_H_TABLE_BUFFER298_OFFSET   0x14A8
#define JDU_H_TABLE_BUFFER298_REG      IOA(JDU_BASE_ADDR + JDU_H_TABLE_BUFFER298_OFFSET)

/* JDU H_TABLE_BUFFER299 Register (32 bits) */
#define JDU_H_TABLE_BUFFER299_OFFSET   0x14AC
#define JDU_H_TABLE_BUFFER299_REG      IOA(JDU_BASE_ADDR + JDU_H_TABLE_BUFFER299_OFFSET)

/* JDU H_TABLE_BUFFER300 Register (32 bits) */
#define JDU_H_TABLE_BUFFER300_OFFSET   0x14B0
#define JDU_H_TABLE_BUFFER300_REG      IOA(JDU_BASE_ADDR + JDU_H_TABLE_BUFFER300_OFFSET)

/* JDU H_TABLE_BUFFER301 Register (32 bits) */
#define JDU_H_TABLE_BUFFER301_OFFSET   0x14B4
#define JDU_H_TABLE_BUFFER301_REG      IOA(JDU_BASE_ADDR + JDU_H_TABLE_BUFFER301_OFFSET)

/* JDU H_TABLE_BUFFER302 Register (32 bits) */
#define JDU_H_TABLE_BUFFER302_OFFSET   0x14B8
#define JDU_H_TABLE_BUFFER302_REG      IOA(JDU_BASE_ADDR + JDU_H_TABLE_BUFFER302_OFFSET)

/* JDU H_TABLE_BUFFER303 Register (32 bits) */
#define JDU_H_TABLE_BUFFER303_OFFSET   0x14BC
#define JDU_H_TABLE_BUFFER303_REG      IOA(JDU_BASE_ADDR + JDU_H_TABLE_BUFFER303_OFFSET)

/* JDU H_TABLE_BUFFER304 Register (32 bits) */
#define JDU_H_TABLE_BUFFER304_OFFSET   0x14C0
#define JDU_H_TABLE_BUFFER304_REG      IOA(JDU_BASE_ADDR + JDU_H_TABLE_BUFFER304_OFFSET)

/* JDU H_TABLE_BUFFER305 Register (32 bits) */
#define JDU_H_TABLE_BUFFER305_OFFSET   0x14C4
#define JDU_H_TABLE_BUFFER305_REG      IOA(JDU_BASE_ADDR + JDU_H_TABLE_BUFFER305_OFFSET)

/* JDU H_TABLE_BUFFER306 Register (32 bits) */
#define JDU_H_TABLE_BUFFER306_OFFSET   0x14C8
#define JDU_H_TABLE_BUFFER306_REG      IOA(JDU_BASE_ADDR + JDU_H_TABLE_BUFFER306_OFFSET)

/* JDU H_TABLE_BUFFER307 Register (32 bits) */
#define JDU_H_TABLE_BUFFER307_OFFSET   0x14CC
#define JDU_H_TABLE_BUFFER307_REG      IOA(JDU_BASE_ADDR + JDU_H_TABLE_BUFFER307_OFFSET)

/* JDU H_TABLE_BUFFER308 Register (32 bits) */
#define JDU_H_TABLE_BUFFER308_OFFSET   0x14D0
#define JDU_H_TABLE_BUFFER308_REG      IOA(JDU_BASE_ADDR + JDU_H_TABLE_BUFFER308_OFFSET)

/* JDU H_TABLE_BUFFER309 Register (32 bits) */
#define JDU_H_TABLE_BUFFER309_OFFSET   0x14D4
#define JDU_H_TABLE_BUFFER309_REG      IOA(JDU_BASE_ADDR + JDU_H_TABLE_BUFFER309_OFFSET)

/* JDU H_TABLE_BUFFER310 Register (32 bits) */
#define JDU_H_TABLE_BUFFER310_OFFSET   0x14D8
#define JDU_H_TABLE_BUFFER310_REG      IOA(JDU_BASE_ADDR + JDU_H_TABLE_BUFFER310_OFFSET)

/* JDU H_TABLE_BUFFER311 Register (32 bits) */
#define JDU_H_TABLE_BUFFER311_OFFSET   0x14DC
#define JDU_H_TABLE_BUFFER311_REG      IOA(JDU_BASE_ADDR + JDU_H_TABLE_BUFFER311_OFFSET)

/* JDU H_TABLE_BUFFER312 Register (32 bits) */
#define JDU_H_TABLE_BUFFER312_OFFSET   0x14E0
#define JDU_H_TABLE_BUFFER312_REG      IOA(JDU_BASE_ADDR + JDU_H_TABLE_BUFFER312_OFFSET)

/* JDU H_TABLE_BUFFER313 Register (32 bits) */
#define JDU_H_TABLE_BUFFER313_OFFSET   0x14E4
#define JDU_H_TABLE_BUFFER313_REG      IOA(JDU_BASE_ADDR + JDU_H_TABLE_BUFFER313_OFFSET)

/* JDU H_TABLE_BUFFER314 Register (32 bits) */
#define JDU_H_TABLE_BUFFER314_OFFSET   0x14E8
#define JDU_H_TABLE_BUFFER314_REG      IOA(JDU_BASE_ADDR + JDU_H_TABLE_BUFFER314_OFFSET)

/* JDU H_TABLE_BUFFER315 Register (32 bits) */
#define JDU_H_TABLE_BUFFER315_OFFSET   0x14EC
#define JDU_H_TABLE_BUFFER315_REG      IOA(JDU_BASE_ADDR + JDU_H_TABLE_BUFFER315_OFFSET)

/* JDU H_TABLE_BUFFER316 Register (32 bits) */
#define JDU_H_TABLE_BUFFER316_OFFSET   0x14F0
#define JDU_H_TABLE_BUFFER316_REG      IOA(JDU_BASE_ADDR + JDU_H_TABLE_BUFFER316_OFFSET)

/* JDU H_TABLE_BUFFER317 Register (32 bits) */
#define JDU_H_TABLE_BUFFER317_OFFSET   0x14F4
#define JDU_H_TABLE_BUFFER317_REG      IOA(JDU_BASE_ADDR + JDU_H_TABLE_BUFFER317_OFFSET)

/* JDU H_TABLE_BUFFER318 Register (32 bits) */
#define JDU_H_TABLE_BUFFER318_OFFSET   0x14F8
#define JDU_H_TABLE_BUFFER318_REG      IOA(JDU_BASE_ADDR + JDU_H_TABLE_BUFFER318_OFFSET)

/* JDU H_TABLE_BUFFER319 Register (32 bits) */
#define JDU_H_TABLE_BUFFER319_OFFSET   0x14FC
#define JDU_H_TABLE_BUFFER319_REG      IOA(JDU_BASE_ADDR + JDU_H_TABLE_BUFFER319_OFFSET)

/* JDU H_TABLE_BUFFER320 Register (32 bits) */
#define JDU_H_TABLE_BUFFER320_OFFSET   0x1500
#define JDU_H_TABLE_BUFFER320_REG      IOA(JDU_BASE_ADDR + JDU_H_TABLE_BUFFER320_OFFSET)

/* JDU H_TABLE_BUFFER321 Register (32 bits) */
#define JDU_H_TABLE_BUFFER321_OFFSET   0x1504
#define JDU_H_TABLE_BUFFER321_REG      IOA(JDU_BASE_ADDR + JDU_H_TABLE_BUFFER321_OFFSET)

/* JDU H_TABLE_BUFFER322 Register (32 bits) */
#define JDU_H_TABLE_BUFFER322_OFFSET   0x1508
#define JDU_H_TABLE_BUFFER322_REG      IOA(JDU_BASE_ADDR + JDU_H_TABLE_BUFFER322_OFFSET)

/* JDU H_TABLE_BUFFER323 Register (32 bits) */
#define JDU_H_TABLE_BUFFER323_OFFSET   0x150C
#define JDU_H_TABLE_BUFFER323_REG      IOA(JDU_BASE_ADDR + JDU_H_TABLE_BUFFER323_OFFSET)

/* JDU H_TABLE_BUFFER324 Register (32 bits) */
#define JDU_H_TABLE_BUFFER324_OFFSET   0x1510
#define JDU_H_TABLE_BUFFER324_REG      IOA(JDU_BASE_ADDR + JDU_H_TABLE_BUFFER324_OFFSET)

/* JDU H_TABLE_BUFFER325 Register (32 bits) */
#define JDU_H_TABLE_BUFFER325_OFFSET   0x1514
#define JDU_H_TABLE_BUFFER325_REG      IOA(JDU_BASE_ADDR + JDU_H_TABLE_BUFFER325_OFFSET)

/* JDU H_TABLE_BUFFER326 Register (32 bits) */
#define JDU_H_TABLE_BUFFER326_OFFSET   0x1518
#define JDU_H_TABLE_BUFFER326_REG      IOA(JDU_BASE_ADDR + JDU_H_TABLE_BUFFER326_OFFSET)

/* JDU H_TABLE_BUFFER327 Register (32 bits) */
#define JDU_H_TABLE_BUFFER327_OFFSET   0x151C
#define JDU_H_TABLE_BUFFER327_REG      IOA(JDU_BASE_ADDR + JDU_H_TABLE_BUFFER327_OFFSET)

/* JDU H_TABLE_BUFFER328 Register (32 bits) */
#define JDU_H_TABLE_BUFFER328_OFFSET   0x1520
#define JDU_H_TABLE_BUFFER328_REG      IOA(JDU_BASE_ADDR + JDU_H_TABLE_BUFFER328_OFFSET)

/* JDU H_TABLE_BUFFER329 Register (32 bits) */
#define JDU_H_TABLE_BUFFER329_OFFSET   0x1524
#define JDU_H_TABLE_BUFFER329_REG      IOA(JDU_BASE_ADDR + JDU_H_TABLE_BUFFER329_OFFSET)

/* JDU H_TABLE_BUFFER330 Register (32 bits) */
#define JDU_H_TABLE_BUFFER330_OFFSET   0x1528
#define JDU_H_TABLE_BUFFER330_REG      IOA(JDU_BASE_ADDR + JDU_H_TABLE_BUFFER330_OFFSET)

/* JDU H_TABLE_BUFFER331 Register (32 bits) */
#define JDU_H_TABLE_BUFFER331_OFFSET   0x152C
#define JDU_H_TABLE_BUFFER331_REG      IOA(JDU_BASE_ADDR + JDU_H_TABLE_BUFFER331_OFFSET)

/* JDU H_TABLE_BUFFER332 Register (32 bits) */
#define JDU_H_TABLE_BUFFER332_OFFSET   0x1530
#define JDU_H_TABLE_BUFFER332_REG      IOA(JDU_BASE_ADDR + JDU_H_TABLE_BUFFER332_OFFSET)

/* JDU H_TABLE_BUFFER333 Register (32 bits) */
#define JDU_H_TABLE_BUFFER333_OFFSET   0x1534
#define JDU_H_TABLE_BUFFER333_REG      IOA(JDU_BASE_ADDR + JDU_H_TABLE_BUFFER333_OFFSET)

/* JDU H_TABLE_BUFFER334 Register (32 bits) */
#define JDU_H_TABLE_BUFFER334_OFFSET   0x1538
#define JDU_H_TABLE_BUFFER334_REG      IOA(JDU_BASE_ADDR + JDU_H_TABLE_BUFFER334_OFFSET)

/* JDU H_TABLE_BUFFER335 Register (32 bits) */
#define JDU_H_TABLE_BUFFER335_OFFSET   0x153C
#define JDU_H_TABLE_BUFFER335_REG      IOA(JDU_BASE_ADDR + JDU_H_TABLE_BUFFER335_OFFSET)

/* JDU H_TABLE_BUFFER336 Register (32 bits) */
#define JDU_H_TABLE_BUFFER336_OFFSET   0x1540
#define JDU_H_TABLE_BUFFER336_REG      IOA(JDU_BASE_ADDR + JDU_H_TABLE_BUFFER336_OFFSET)

/* JDU H_TABLE_BUFFER337 Register (32 bits) */
#define JDU_H_TABLE_BUFFER337_OFFSET   0x1544
#define JDU_H_TABLE_BUFFER337_REG      IOA(JDU_BASE_ADDR + JDU_H_TABLE_BUFFER337_OFFSET)

/* JDU H_TABLE_BUFFER338 Register (32 bits) */
#define JDU_H_TABLE_BUFFER338_OFFSET   0x1548
#define JDU_H_TABLE_BUFFER338_REG      IOA(JDU_BASE_ADDR + JDU_H_TABLE_BUFFER338_OFFSET)

/* JDU H_TABLE_BUFFER339 Register (32 bits) */
#define JDU_H_TABLE_BUFFER339_OFFSET   0x154C
#define JDU_H_TABLE_BUFFER339_REG      IOA(JDU_BASE_ADDR + JDU_H_TABLE_BUFFER339_OFFSET)

/* JDU H_TABLE_BUFFER340 Register (32 bits) */
#define JDU_H_TABLE_BUFFER340_OFFSET   0x1550
#define JDU_H_TABLE_BUFFER340_REG      IOA(JDU_BASE_ADDR + JDU_H_TABLE_BUFFER340_OFFSET)

/* JDU H_TABLE_BUFFER341 Register (32 bits) */
#define JDU_H_TABLE_BUFFER341_OFFSET   0x1554
#define JDU_H_TABLE_BUFFER341_REG      IOA(JDU_BASE_ADDR + JDU_H_TABLE_BUFFER341_OFFSET)

/* JDU H_TABLE_BUFFER342 Register (32 bits) */
#define JDU_H_TABLE_BUFFER342_OFFSET   0x1558
#define JDU_H_TABLE_BUFFER342_REG      IOA(JDU_BASE_ADDR + JDU_H_TABLE_BUFFER342_OFFSET)

/* JDU H_TABLE_BUFFER343 Register (32 bits) */
#define JDU_H_TABLE_BUFFER343_OFFSET   0x155C
#define JDU_H_TABLE_BUFFER343_REG      IOA(JDU_BASE_ADDR + JDU_H_TABLE_BUFFER343_OFFSET)

/* JDU H_TABLE_BUFFER344 Register (32 bits) */
#define JDU_H_TABLE_BUFFER344_OFFSET   0x1560
#define JDU_H_TABLE_BUFFER344_REG      IOA(JDU_BASE_ADDR + JDU_H_TABLE_BUFFER344_OFFSET)

/* JDU H_TABLE_BUFFER345 Register (32 bits) */
#define JDU_H_TABLE_BUFFER345_OFFSET   0x1564
#define JDU_H_TABLE_BUFFER345_REG      IOA(JDU_BASE_ADDR + JDU_H_TABLE_BUFFER345_OFFSET)

/* JDU H_TABLE_BUFFER346 Register (32 bits) */
#define JDU_H_TABLE_BUFFER346_OFFSET   0x1568
#define JDU_H_TABLE_BUFFER346_REG      IOA(JDU_BASE_ADDR + JDU_H_TABLE_BUFFER346_OFFSET)

/* JDU H_TABLE_BUFFER347 Register (32 bits) */
#define JDU_H_TABLE_BUFFER347_OFFSET   0x156C
#define JDU_H_TABLE_BUFFER347_REG      IOA(JDU_BASE_ADDR + JDU_H_TABLE_BUFFER347_OFFSET)

/* JDU MIN_CODE_BUFFER0 Register (32 bits) */
#define JDU_MIN_CODE_BUFFER0_OFFSET    0x1570
#define JDU_MIN_CODE_BUFFER0_REG       IOA(JDU_BASE_ADDR + JDU_MIN_CODE_BUFFER0_OFFSET)

/* JDU MIN_CODE_BUFFER1 Register (32 bits) */
#define JDU_MIN_CODE_BUFFER1_OFFSET    0x1574
#define JDU_MIN_CODE_BUFFER1_REG       IOA(JDU_BASE_ADDR + JDU_MIN_CODE_BUFFER1_OFFSET)

/* JDU MIN_CODE_BUFFER2 Register (32 bits) */
#define JDU_MIN_CODE_BUFFER2_OFFSET    0x1578
#define JDU_MIN_CODE_BUFFER2_REG       IOA(JDU_BASE_ADDR + JDU_MIN_CODE_BUFFER2_OFFSET)

/* JDU MIN_CODE_BUFFER3 Register (32 bits) */
#define JDU_MIN_CODE_BUFFER3_OFFSET    0x157C
#define JDU_MIN_CODE_BUFFER3_REG       IOA(JDU_BASE_ADDR + JDU_MIN_CODE_BUFFER3_OFFSET)

/* JDU MIN_CODE_BUFFER4 Register (32 bits) */
#define JDU_MIN_CODE_BUFFER4_OFFSET    0x1580
#define JDU_MIN_CODE_BUFFER4_REG       IOA(JDU_BASE_ADDR + JDU_MIN_CODE_BUFFER4_OFFSET)

/* JDU MIN_CODE_BUFFER5 Register (32 bits) */
#define JDU_MIN_CODE_BUFFER5_OFFSET    0x1584
#define JDU_MIN_CODE_BUFFER5_REG       IOA(JDU_BASE_ADDR + JDU_MIN_CODE_BUFFER5_OFFSET)

/* JDU MIN_CODE_BUFFER6 Register (32 bits) */
#define JDU_MIN_CODE_BUFFER6_OFFSET    0x1588
#define JDU_MIN_CODE_BUFFER6_REG       IOA(JDU_BASE_ADDR + JDU_MIN_CODE_BUFFER6_OFFSET)

/* JDU MIN_CODE_BUFFER7 Register (32 bits) */
#define JDU_MIN_CODE_BUFFER7_OFFSET    0x158C
#define JDU_MIN_CODE_BUFFER7_REG       IOA(JDU_BASE_ADDR + JDU_MIN_CODE_BUFFER7_OFFSET)

/* JDU MIN_CODE_BUFFER8 Register (32 bits) */
#define JDU_MIN_CODE_BUFFER8_OFFSET    0x1590
#define JDU_MIN_CODE_BUFFER8_REG       IOA(JDU_BASE_ADDR + JDU_MIN_CODE_BUFFER8_OFFSET)

/* JDU MIN_CODE_BUFFER9 Register (32 bits) */
#define JDU_MIN_CODE_BUFFER9_OFFSET    0x1594
#define JDU_MIN_CODE_BUFFER9_REG       IOA(JDU_BASE_ADDR + JDU_MIN_CODE_BUFFER9_OFFSET)

/* JDU MIN_CODE_BUFFER10 Register (32 bits) */
#define JDU_MIN_CODE_BUFFER10_OFFSET   0x1598
#define JDU_MIN_CODE_BUFFER10_REG      IOA(JDU_BASE_ADDR + JDU_MIN_CODE_BUFFER10_OFFSET)

/* JDU MIN_CODE_BUFFER11 Register (32 bits) */
#define JDU_MIN_CODE_BUFFER11_OFFSET   0x159C
#define JDU_MIN_CODE_BUFFER11_REG      IOA(JDU_BASE_ADDR + JDU_MIN_CODE_BUFFER11_OFFSET)

/* JDU MIN_CODE_BUFFER12 Register (32 bits) */
#define JDU_MIN_CODE_BUFFER12_OFFSET   0x15A0
#define JDU_MIN_CODE_BUFFER12_REG      IOA(JDU_BASE_ADDR + JDU_MIN_CODE_BUFFER12_OFFSET)

/* JDU MIN_CODE_BUFFER13 Register (32 bits) */
#define JDU_MIN_CODE_BUFFER13_OFFSET   0x15A4
#define JDU_MIN_CODE_BUFFER13_REG      IOA(JDU_BASE_ADDR + JDU_MIN_CODE_BUFFER13_OFFSET)

/* JDU MIN_CODE_BUFFER14 Register (32 bits) */
#define JDU_MIN_CODE_BUFFER14_OFFSET   0x15A8
#define JDU_MIN_CODE_BUFFER14_REG      IOA(JDU_BASE_ADDR + JDU_MIN_CODE_BUFFER14_OFFSET)

/* JDU MIN_CODE_BUFFER15 Register (32 bits) */
#define JDU_MIN_CODE_BUFFER15_OFFSET   0x15AC
#define JDU_MIN_CODE_BUFFER15_REG      IOA(JDU_BASE_ADDR + JDU_MIN_CODE_BUFFER15_OFFSET)

/* JDU MIN_CODE_BUFFER16 Register (32 bits) */
#define JDU_MIN_CODE_BUFFER16_OFFSET   0x15B0
#define JDU_MIN_CODE_BUFFER16_REG      IOA(JDU_BASE_ADDR + JDU_MIN_CODE_BUFFER16_OFFSET)

/* JDU MIN_CODE_BUFFER17 Register (32 bits) */
#define JDU_MIN_CODE_BUFFER17_OFFSET   0x15B4
#define JDU_MIN_CODE_BUFFER17_REG      IOA(JDU_BASE_ADDR + JDU_MIN_CODE_BUFFER17_OFFSET)

/* JDU MIN_CODE_BUFFER18 Register (32 bits) */
#define JDU_MIN_CODE_BUFFER18_OFFSET   0x15B8
#define JDU_MIN_CODE_BUFFER18_REG      IOA(JDU_BASE_ADDR + JDU_MIN_CODE_BUFFER18_OFFSET)

/* JDU MIN_CODE_BUFFER19 Register (32 bits) */
#define JDU_MIN_CODE_BUFFER19_OFFSET   0x15BC
#define JDU_MIN_CODE_BUFFER19_REG      IOA(JDU_BASE_ADDR + JDU_MIN_CODE_BUFFER19_OFFSET)

/* JDU MIN_CODE_BUFFER20 Register (32 bits) */
#define JDU_MIN_CODE_BUFFER20_OFFSET   0x15C0
#define JDU_MIN_CODE_BUFFER20_REG      IOA(JDU_BASE_ADDR + JDU_MIN_CODE_BUFFER20_OFFSET)

/* JDU MIN_CODE_BUFFER21 Register (32 bits) */
#define JDU_MIN_CODE_BUFFER21_OFFSET   0x15C4
#define JDU_MIN_CODE_BUFFER21_REG      IOA(JDU_BASE_ADDR + JDU_MIN_CODE_BUFFER21_OFFSET)

/* JDU MIN_CODE_BUFFER22 Register (32 bits) */
#define JDU_MIN_CODE_BUFFER22_OFFSET   0x15C8
#define JDU_MIN_CODE_BUFFER22_REG      IOA(JDU_BASE_ADDR + JDU_MIN_CODE_BUFFER22_OFFSET)

/* JDU MIN_CODE_BUFFER23 Register (32 bits) */
#define JDU_MIN_CODE_BUFFER23_OFFSET   0x15CC
#define JDU_MIN_CODE_BUFFER23_REG      IOA(JDU_BASE_ADDR + JDU_MIN_CODE_BUFFER23_OFFSET)

/* JDU MIN_CODE_BUFFER24 Register (32 bits) */
#define JDU_MIN_CODE_BUFFER24_OFFSET   0x15D0
#define JDU_MIN_CODE_BUFFER24_REG      IOA(JDU_BASE_ADDR + JDU_MIN_CODE_BUFFER24_OFFSET)

/* JDU MIN_CODE_BUFFER25 Register (32 bits) */
#define JDU_MIN_CODE_BUFFER25_OFFSET   0x15D4
#define JDU_MIN_CODE_BUFFER25_REG      IOA(JDU_BASE_ADDR + JDU_MIN_CODE_BUFFER25_OFFSET)

/* JDU MIN_CODE_BUFFER26 Register (32 bits) */
#define JDU_MIN_CODE_BUFFER26_OFFSET   0x15D8
#define JDU_MIN_CODE_BUFFER26_REG      IOA(JDU_BASE_ADDR + JDU_MIN_CODE_BUFFER26_OFFSET)

/* JDU MIN_CODE_BUFFER27 Register (32 bits) */
#define JDU_MIN_CODE_BUFFER27_OFFSET   0x15DC
#define JDU_MIN_CODE_BUFFER27_REG      IOA(JDU_BASE_ADDR + JDU_MIN_CODE_BUFFER27_OFFSET)

/* JDU MIN_CODE_BUFFER28 Register (32 bits) */
#define JDU_MIN_CODE_BUFFER28_OFFSET   0x15E0
#define JDU_MIN_CODE_BUFFER28_REG      IOA(JDU_BASE_ADDR + JDU_MIN_CODE_BUFFER28_OFFSET)

/* JDU MIN_CODE_BUFFER29 Register (32 bits) */
#define JDU_MIN_CODE_BUFFER29_OFFSET   0x15E4
#define JDU_MIN_CODE_BUFFER29_REG      IOA(JDU_BASE_ADDR + JDU_MIN_CODE_BUFFER29_OFFSET)

/* JDU MIN_CODE_BUFFER30 Register (32 bits) */
#define JDU_MIN_CODE_BUFFER30_OFFSET   0x15E8
#define JDU_MIN_CODE_BUFFER30_REG      IOA(JDU_BASE_ADDR + JDU_MIN_CODE_BUFFER30_OFFSET)

/* JDU MIN_CODE_BUFFER31 Register (32 bits) */
#define JDU_MIN_CODE_BUFFER31_OFFSET   0x15EC
#define JDU_MIN_CODE_BUFFER31_REG      IOA(JDU_BASE_ADDR + JDU_MIN_CODE_BUFFER31_OFFSET)

/* JDU MIN_CODE_BUFFER32 Register (32 bits) */
#define JDU_MIN_CODE_BUFFER32_OFFSET   0x15F0
#define JDU_MIN_CODE_BUFFER32_REG      IOA(JDU_BASE_ADDR + JDU_MIN_CODE_BUFFER32_OFFSET)

/* JDU MIN_CODE_BUFFER33 Register (32 bits) */
#define JDU_MIN_CODE_BUFFER33_OFFSET   0x15F4
#define JDU_MIN_CODE_BUFFER33_REG      IOA(JDU_BASE_ADDR + JDU_MIN_CODE_BUFFER33_OFFSET)

/* JDU MIN_CODE_BUFFER34 Register (32 bits) */
#define JDU_MIN_CODE_BUFFER34_OFFSET   0x15F8
#define JDU_MIN_CODE_BUFFER34_REG      IOA(JDU_BASE_ADDR + JDU_MIN_CODE_BUFFER34_OFFSET)

/* JDU MIN_CODE_BUFFER35 Register (32 bits) */
#define JDU_MIN_CODE_BUFFER35_OFFSET   0x15FC
#define JDU_MIN_CODE_BUFFER35_REG      IOA(JDU_BASE_ADDR + JDU_MIN_CODE_BUFFER35_OFFSET)

/* JDU MIN_CODE_BUFFER36 Register (32 bits) */
#define JDU_MIN_CODE_BUFFER36_OFFSET   0x1600
#define JDU_MIN_CODE_BUFFER36_REG      IOA(JDU_BASE_ADDR + JDU_MIN_CODE_BUFFER36_OFFSET)

/* JDU MIN_CODE_BUFFER37 Register (32 bits) */
#define JDU_MIN_CODE_BUFFER37_OFFSET   0x1604
#define JDU_MIN_CODE_BUFFER37_REG      IOA(JDU_BASE_ADDR + JDU_MIN_CODE_BUFFER37_OFFSET)

/* JDU MIN_CODE_BUFFER38 Register (32 bits) */
#define JDU_MIN_CODE_BUFFER38_OFFSET   0x1608
#define JDU_MIN_CODE_BUFFER38_REG      IOA(JDU_BASE_ADDR + JDU_MIN_CODE_BUFFER38_OFFSET)

/* JDU MIN_CODE_BUFFER39 Register (32 bits) */
#define JDU_MIN_CODE_BUFFER39_OFFSET   0x160C
#define JDU_MIN_CODE_BUFFER39_REG      IOA(JDU_BASE_ADDR + JDU_MIN_CODE_BUFFER39_OFFSET)

/* JDU MIN_CODE_BUFFER40 Register (32 bits) */
#define JDU_MIN_CODE_BUFFER40_OFFSET   0x1610
#define JDU_MIN_CODE_BUFFER40_REG      IOA(JDU_BASE_ADDR + JDU_MIN_CODE_BUFFER40_OFFSET)

/* JDU MIN_CODE_BUFFER41 Register (32 bits) */
#define JDU_MIN_CODE_BUFFER41_OFFSET   0x1614
#define JDU_MIN_CODE_BUFFER41_REG      IOA(JDU_BASE_ADDR + JDU_MIN_CODE_BUFFER41_OFFSET)

/* JDU MIN_CODE_BUFFER42 Register (32 bits) */
#define JDU_MIN_CODE_BUFFER42_OFFSET   0x1618
#define JDU_MIN_CODE_BUFFER42_REG      IOA(JDU_BASE_ADDR + JDU_MIN_CODE_BUFFER42_OFFSET)

/* JDU MIN_CODE_BUFFER43 Register (32 bits) */
#define JDU_MIN_CODE_BUFFER43_OFFSET   0x161C
#define JDU_MIN_CODE_BUFFER43_REG      IOA(JDU_BASE_ADDR + JDU_MIN_CODE_BUFFER43_OFFSET)

/* JDU MIN_CODE_BUFFER44 Register (32 bits) */
#define JDU_MIN_CODE_BUFFER44_OFFSET   0x1620
#define JDU_MIN_CODE_BUFFER44_REG      IOA(JDU_BASE_ADDR + JDU_MIN_CODE_BUFFER44_OFFSET)

/* JDU MIN_CODE_BUFFER45 Register (32 bits) */
#define JDU_MIN_CODE_BUFFER45_OFFSET   0x1624
#define JDU_MIN_CODE_BUFFER45_REG      IOA(JDU_BASE_ADDR + JDU_MIN_CODE_BUFFER45_OFFSET)

/* JDU MIN_CODE_BUFFER46 Register (32 bits) */
#define JDU_MIN_CODE_BUFFER46_OFFSET   0x1628
#define JDU_MIN_CODE_BUFFER46_REG      IOA(JDU_BASE_ADDR + JDU_MIN_CODE_BUFFER46_OFFSET)

/* JDU MIN_CODE_BUFFER47 Register (32 bits) */
#define JDU_MIN_CODE_BUFFER47_OFFSET   0x162C
#define JDU_MIN_CODE_BUFFER47_REG      IOA(JDU_BASE_ADDR + JDU_MIN_CODE_BUFFER47_OFFSET)

/* JDU MIN_CODE_BUFFER48 Register (32 bits) */
#define JDU_MIN_CODE_BUFFER48_OFFSET   0x1630
#define JDU_MIN_CODE_BUFFER48_REG      IOA(JDU_BASE_ADDR + JDU_MIN_CODE_BUFFER48_OFFSET)

/* JDU MIN_CODE_BUFFER49 Register (32 bits) */
#define JDU_MIN_CODE_BUFFER49_OFFSET   0x1634
#define JDU_MIN_CODE_BUFFER49_REG      IOA(JDU_BASE_ADDR + JDU_MIN_CODE_BUFFER49_OFFSET)

/* JDU MIN_CODE_BUFFER50 Register (32 bits) */
#define JDU_MIN_CODE_BUFFER50_OFFSET   0x1638
#define JDU_MIN_CODE_BUFFER50_REG      IOA(JDU_BASE_ADDR + JDU_MIN_CODE_BUFFER50_OFFSET)

/* JDU MIN_CODE_BUFFER51 Register (32 bits) */
#define JDU_MIN_CODE_BUFFER51_OFFSET   0x163C
#define JDU_MIN_CODE_BUFFER51_REG      IOA(JDU_BASE_ADDR + JDU_MIN_CODE_BUFFER51_OFFSET)

/* JDU MIN_CODE_BUFFER52 Register (32 bits) */
#define JDU_MIN_CODE_BUFFER52_OFFSET   0x1640
#define JDU_MIN_CODE_BUFFER52_REG      IOA(JDU_BASE_ADDR + JDU_MIN_CODE_BUFFER52_OFFSET)

/* JDU MIN_CODE_BUFFER53 Register (32 bits) */
#define JDU_MIN_CODE_BUFFER53_OFFSET   0x1644
#define JDU_MIN_CODE_BUFFER53_REG      IOA(JDU_BASE_ADDR + JDU_MIN_CODE_BUFFER53_OFFSET)

/* JDU MIN_CODE_BUFFER54 Register (32 bits) */
#define JDU_MIN_CODE_BUFFER54_OFFSET   0x1648
#define JDU_MIN_CODE_BUFFER54_REG      IOA(JDU_BASE_ADDR + JDU_MIN_CODE_BUFFER54_OFFSET)

/* JDU MIN_CODE_BUFFER55 Register (32 bits) */
#define JDU_MIN_CODE_BUFFER55_OFFSET   0x164C
#define JDU_MIN_CODE_BUFFER55_REG      IOA(JDU_BASE_ADDR + JDU_MIN_CODE_BUFFER55_OFFSET)

/* JDU MIN_CODE_BUFFER56 Register (32 bits) */
#define JDU_MIN_CODE_BUFFER56_OFFSET   0x1650
#define JDU_MIN_CODE_BUFFER56_REG      IOA(JDU_BASE_ADDR + JDU_MIN_CODE_BUFFER56_OFFSET)

/* JDU MIN_CODE_BUFFER57 Register (32 bits) */
#define JDU_MIN_CODE_BUFFER57_OFFSET   0x1654
#define JDU_MIN_CODE_BUFFER57_REG      IOA(JDU_BASE_ADDR + JDU_MIN_CODE_BUFFER57_OFFSET)

/* JDU MIN_CODE_BUFFER58 Register (32 bits) */
#define JDU_MIN_CODE_BUFFER58_OFFSET   0x1658
#define JDU_MIN_CODE_BUFFER58_REG      IOA(JDU_BASE_ADDR + JDU_MIN_CODE_BUFFER58_OFFSET)

/* JDU MIN_CODE_BUFFER59 Register (32 bits) */
#define JDU_MIN_CODE_BUFFER59_OFFSET   0x165C
#define JDU_MIN_CODE_BUFFER59_REG      IOA(JDU_BASE_ADDR + JDU_MIN_CODE_BUFFER59_OFFSET)

/* JDU MIN_CODE_BUFFER60 Register (32 bits) */
#define JDU_MIN_CODE_BUFFER60_OFFSET   0x1660
#define JDU_MIN_CODE_BUFFER60_REG      IOA(JDU_BASE_ADDR + JDU_MIN_CODE_BUFFER60_OFFSET)

/* JDU MIN_CODE_BUFFER61 Register (32 bits) */
#define JDU_MIN_CODE_BUFFER61_OFFSET   0x1664
#define JDU_MIN_CODE_BUFFER61_REG      IOA(JDU_BASE_ADDR + JDU_MIN_CODE_BUFFER61_OFFSET)

/* JDU MIN_CODE_BUFFER62 Register (32 bits) */
#define JDU_MIN_CODE_BUFFER62_OFFSET   0x1668
#define JDU_MIN_CODE_BUFFER62_REG      IOA(JDU_BASE_ADDR + JDU_MIN_CODE_BUFFER62_OFFSET)

/* JDU MIN_CODE_BUFFER63 Register (32 bits) */
#define JDU_MIN_CODE_BUFFER63_OFFSET   0x166C
#define JDU_MIN_CODE_BUFFER63_REG      IOA(JDU_BASE_ADDR + JDU_MIN_CODE_BUFFER63_OFFSET)

/* JDU VAL_PTR_BUFFER0 Register (32 bits) */
#define JDU_VAL_PTR_BUFFER0_OFFSET     0x1670
#define JDU_VAL_PTR_BUFFER0_REG        IOA(JDU_BASE_ADDR + JDU_VAL_PTR_BUFFER0_OFFSET)

/* JDU VAL_PTR_BUFFER1 Register (32 bits) */
#define JDU_VAL_PTR_BUFFER1_OFFSET     0x1674
#define JDU_VAL_PTR_BUFFER1_REG        IOA(JDU_BASE_ADDR + JDU_VAL_PTR_BUFFER1_OFFSET)

/* JDU VAL_PTR_BUFFER2 Register (32 bits) */
#define JDU_VAL_PTR_BUFFER2_OFFSET     0x1678
#define JDU_VAL_PTR_BUFFER2_REG        IOA(JDU_BASE_ADDR + JDU_VAL_PTR_BUFFER2_OFFSET)

/* JDU VAL_PTR_BUFFER3 Register (32 bits) */
#define JDU_VAL_PTR_BUFFER3_OFFSET     0x167C
#define JDU_VAL_PTR_BUFFER3_REG        IOA(JDU_BASE_ADDR + JDU_VAL_PTR_BUFFER3_OFFSET)

/* JDU VAL_PTR_BUFFER4 Register (32 bits) */
#define JDU_VAL_PTR_BUFFER4_OFFSET     0x1680
#define JDU_VAL_PTR_BUFFER4_REG        IOA(JDU_BASE_ADDR + JDU_VAL_PTR_BUFFER4_OFFSET)

/* JDU VAL_PTR_BUFFER5 Register (32 bits) */
#define JDU_VAL_PTR_BUFFER5_OFFSET     0x1684
#define JDU_VAL_PTR_BUFFER5_REG        IOA(JDU_BASE_ADDR + JDU_VAL_PTR_BUFFER5_OFFSET)

/* JDU VAL_PTR_BUFFER6 Register (32 bits) */
#define JDU_VAL_PTR_BUFFER6_OFFSET     0x1688
#define JDU_VAL_PTR_BUFFER6_REG        IOA(JDU_BASE_ADDR + JDU_VAL_PTR_BUFFER6_OFFSET)

/* JDU VAL_PTR_BUFFER7 Register (32 bits) */
#define JDU_VAL_PTR_BUFFER7_OFFSET     0x168C
#define JDU_VAL_PTR_BUFFER7_REG        IOA(JDU_BASE_ADDR + JDU_VAL_PTR_BUFFER7_OFFSET)

/* JDU VAL_PTR_BUFFER8 Register (32 bits) */
#define JDU_VAL_PTR_BUFFER8_OFFSET     0x1690
#define JDU_VAL_PTR_BUFFER8_REG        IOA(JDU_BASE_ADDR + JDU_VAL_PTR_BUFFER8_OFFSET)

/* JDU VAL_PTR_BUFFER9 Register (32 bits) */
#define JDU_VAL_PTR_BUFFER9_OFFSET     0x1694
#define JDU_VAL_PTR_BUFFER9_REG        IOA(JDU_BASE_ADDR + JDU_VAL_PTR_BUFFER9_OFFSET)

/* JDU VAL_PTR_BUFFER10 Register (32 bits) */
#define JDU_VAL_PTR_BUFFER10_OFFSET    0x1698
#define JDU_VAL_PTR_BUFFER10_REG       IOA(JDU_BASE_ADDR + JDU_VAL_PTR_BUFFER10_OFFSET)

/* JDU VAL_PTR_BUFFER11 Register (32 bits) */
#define JDU_VAL_PTR_BUFFER11_OFFSET    0x169C
#define JDU_VAL_PTR_BUFFER11_REG       IOA(JDU_BASE_ADDR + JDU_VAL_PTR_BUFFER11_OFFSET)

/* JDU VAL_PTR_BUFFER12 Register (32 bits) */
#define JDU_VAL_PTR_BUFFER12_OFFSET    0x16A0
#define JDU_VAL_PTR_BUFFER12_REG       IOA(JDU_BASE_ADDR + JDU_VAL_PTR_BUFFER12_OFFSET)

/* JDU VAL_PTR_BUFFER13 Register (32 bits) */
#define JDU_VAL_PTR_BUFFER13_OFFSET    0x16A4
#define JDU_VAL_PTR_BUFFER13_REG       IOA(JDU_BASE_ADDR + JDU_VAL_PTR_BUFFER13_OFFSET)

/* JDU VAL_PTR_BUFFER14 Register (32 bits) */
#define JDU_VAL_PTR_BUFFER14_OFFSET    0x16A8
#define JDU_VAL_PTR_BUFFER14_REG       IOA(JDU_BASE_ADDR + JDU_VAL_PTR_BUFFER14_OFFSET)

/* JDU VAL_PTR_BUFFER15 Register (32 bits) */
#define JDU_VAL_PTR_BUFFER15_OFFSET    0x16AC
#define JDU_VAL_PTR_BUFFER15_REG       IOA(JDU_BASE_ADDR + JDU_VAL_PTR_BUFFER15_OFFSET)

/* JDU VAL_PTR_BUFFER16 Register (32 bits) */
#define JDU_VAL_PTR_BUFFER16_OFFSET    0x16B0
#define JDU_VAL_PTR_BUFFER16_REG       IOA(JDU_BASE_ADDR + JDU_VAL_PTR_BUFFER16_OFFSET)

/* JDU VAL_PTR_BUFFER17 Register (32 bits) */
#define JDU_VAL_PTR_BUFFER17_OFFSET    0x16B4
#define JDU_VAL_PTR_BUFFER17_REG       IOA(JDU_BASE_ADDR + JDU_VAL_PTR_BUFFER17_OFFSET)

/* JDU VAL_PTR_BUFFER18 Register (32 bits) */
#define JDU_VAL_PTR_BUFFER18_OFFSET    0x16B8
#define JDU_VAL_PTR_BUFFER18_REG       IOA(JDU_BASE_ADDR + JDU_VAL_PTR_BUFFER18_OFFSET)

/* JDU VAL_PTR_BUFFER19 Register (32 bits) */
#define JDU_VAL_PTR_BUFFER19_OFFSET    0x16BC
#define JDU_VAL_PTR_BUFFER19_REG       IOA(JDU_BASE_ADDR + JDU_VAL_PTR_BUFFER19_OFFSET)

/* JDU VAL_PTR_BUFFER20 Register (32 bits) */
#define JDU_VAL_PTR_BUFFER20_OFFSET    0x16C0
#define JDU_VAL_PTR_BUFFER20_REG       IOA(JDU_BASE_ADDR + JDU_VAL_PTR_BUFFER20_OFFSET)

/* JDU VAL_PTR_BUFFER21 Register (32 bits) */
#define JDU_VAL_PTR_BUFFER21_OFFSET    0x16C4
#define JDU_VAL_PTR_BUFFER21_REG       IOA(JDU_BASE_ADDR + JDU_VAL_PTR_BUFFER21_OFFSET)

/* JDU VAL_PTR_BUFFER22 Register (32 bits) */
#define JDU_VAL_PTR_BUFFER22_OFFSET    0x16C8
#define JDU_VAL_PTR_BUFFER22_REG       IOA(JDU_BASE_ADDR + JDU_VAL_PTR_BUFFER22_OFFSET)

/* JDU VAL_PTR_BUFFER23 Register (32 bits) */
#define JDU_VAL_PTR_BUFFER23_OFFSET    0x16CC
#define JDU_VAL_PTR_BUFFER23_REG       IOA(JDU_BASE_ADDR + JDU_VAL_PTR_BUFFER23_OFFSET)

/* JDU VAL_PTR_BUFFER24 Register (32 bits) */
#define JDU_VAL_PTR_BUFFER24_OFFSET    0x16D0
#define JDU_VAL_PTR_BUFFER24_REG       IOA(JDU_BASE_ADDR + JDU_VAL_PTR_BUFFER24_OFFSET)

/* JDU VAL_PTR_BUFFER25 Register (32 bits) */
#define JDU_VAL_PTR_BUFFER25_OFFSET    0x16D4
#define JDU_VAL_PTR_BUFFER25_REG       IOA(JDU_BASE_ADDR + JDU_VAL_PTR_BUFFER25_OFFSET)

/* JDU VAL_PTR_BUFFER26 Register (32 bits) */
#define JDU_VAL_PTR_BUFFER26_OFFSET    0x16D8
#define JDU_VAL_PTR_BUFFER26_REG       IOA(JDU_BASE_ADDR + JDU_VAL_PTR_BUFFER26_OFFSET)

/* JDU VAL_PTR_BUFFER27 Register (32 bits) */
#define JDU_VAL_PTR_BUFFER27_OFFSET    0x16DC
#define JDU_VAL_PTR_BUFFER27_REG       IOA(JDU_BASE_ADDR + JDU_VAL_PTR_BUFFER27_OFFSET)

/* JDU VAL_PTR_BUFFER28 Register (32 bits) */
#define JDU_VAL_PTR_BUFFER28_OFFSET    0x16E0
#define JDU_VAL_PTR_BUFFER28_REG       IOA(JDU_BASE_ADDR + JDU_VAL_PTR_BUFFER28_OFFSET)

/* JDU VAL_PTR_BUFFER29 Register (32 bits) */
#define JDU_VAL_PTR_BUFFER29_OFFSET    0x16E4
#define JDU_VAL_PTR_BUFFER29_REG       IOA(JDU_BASE_ADDR + JDU_VAL_PTR_BUFFER29_OFFSET)

/* JDU VAL_PTR_BUFFER30 Register (32 bits) */
#define JDU_VAL_PTR_BUFFER30_OFFSET    0x16E8
#define JDU_VAL_PTR_BUFFER30_REG       IOA(JDU_BASE_ADDR + JDU_VAL_PTR_BUFFER30_OFFSET)

/* JDU VAL_PTR_BUFFER31 Register (32 bits) */
#define JDU_VAL_PTR_BUFFER31_OFFSET    0x16EC
#define JDU_VAL_PTR_BUFFER31_REG       IOA(JDU_BASE_ADDR + JDU_VAL_PTR_BUFFER31_OFFSET)

/* JDU VAL_PTR_BUFFER32 Register (32 bits) */
#define JDU_VAL_PTR_BUFFER32_OFFSET    0x16F0
#define JDU_VAL_PTR_BUFFER32_REG       IOA(JDU_BASE_ADDR + JDU_VAL_PTR_BUFFER32_OFFSET)

/* JDU VAL_PTR_BUFFER33 Register (32 bits) */
#define JDU_VAL_PTR_BUFFER33_OFFSET    0x16F4
#define JDU_VAL_PTR_BUFFER33_REG       IOA(JDU_BASE_ADDR + JDU_VAL_PTR_BUFFER33_OFFSET)

/* JDU VAL_PTR_BUFFER34 Register (32 bits) */
#define JDU_VAL_PTR_BUFFER34_OFFSET    0x16F8
#define JDU_VAL_PTR_BUFFER34_REG       IOA(JDU_BASE_ADDR + JDU_VAL_PTR_BUFFER34_OFFSET)

/* JDU VAL_PTR_BUFFER35 Register (32 bits) */
#define JDU_VAL_PTR_BUFFER35_OFFSET    0x16FC
#define JDU_VAL_PTR_BUFFER35_REG       IOA(JDU_BASE_ADDR + JDU_VAL_PTR_BUFFER35_OFFSET)

/* JDU VAL_PTR_BUFFER36 Register (32 bits) */
#define JDU_VAL_PTR_BUFFER36_OFFSET    0x1700
#define JDU_VAL_PTR_BUFFER36_REG       IOA(JDU_BASE_ADDR + JDU_VAL_PTR_BUFFER36_OFFSET)

/* JDU VAL_PTR_BUFFER37 Register (32 bits) */
#define JDU_VAL_PTR_BUFFER37_OFFSET    0x1704
#define JDU_VAL_PTR_BUFFER37_REG       IOA(JDU_BASE_ADDR + JDU_VAL_PTR_BUFFER37_OFFSET)

/* JDU VAL_PTR_BUFFER38 Register (32 bits) */
#define JDU_VAL_PTR_BUFFER38_OFFSET    0x1708
#define JDU_VAL_PTR_BUFFER38_REG       IOA(JDU_BASE_ADDR + JDU_VAL_PTR_BUFFER38_OFFSET)

/* JDU VAL_PTR_BUFFER39 Register (32 bits) */
#define JDU_VAL_PTR_BUFFER39_OFFSET    0x170C
#define JDU_VAL_PTR_BUFFER39_REG       IOA(JDU_BASE_ADDR + JDU_VAL_PTR_BUFFER39_OFFSET)

/* JDU VAL_PTR_BUFFER40 Register (32 bits) */
#define JDU_VAL_PTR_BUFFER40_OFFSET    0x1710
#define JDU_VAL_PTR_BUFFER40_REG       IOA(JDU_BASE_ADDR + JDU_VAL_PTR_BUFFER40_OFFSET)

/* JDU VAL_PTR_BUFFER41 Register (32 bits) */
#define JDU_VAL_PTR_BUFFER41_OFFSET    0x1714
#define JDU_VAL_PTR_BUFFER41_REG       IOA(JDU_BASE_ADDR + JDU_VAL_PTR_BUFFER41_OFFSET)

/* JDU VAL_PTR_BUFFER42 Register (32 bits) */
#define JDU_VAL_PTR_BUFFER42_OFFSET    0x1718
#define JDU_VAL_PTR_BUFFER42_REG       IOA(JDU_BASE_ADDR + JDU_VAL_PTR_BUFFER42_OFFSET)

/* JDU VAL_PTR_BUFFER43 Register (32 bits) */
#define JDU_VAL_PTR_BUFFER43_OFFSET    0x171C
#define JDU_VAL_PTR_BUFFER43_REG       IOA(JDU_BASE_ADDR + JDU_VAL_PTR_BUFFER43_OFFSET)

/* JDU VAL_PTR_BUFFER44 Register (32 bits) */
#define JDU_VAL_PTR_BUFFER44_OFFSET    0x1720
#define JDU_VAL_PTR_BUFFER44_REG       IOA(JDU_BASE_ADDR + JDU_VAL_PTR_BUFFER44_OFFSET)

/* JDU VAL_PTR_BUFFER45 Register (32 bits) */
#define JDU_VAL_PTR_BUFFER45_OFFSET    0x1724
#define JDU_VAL_PTR_BUFFER45_REG       IOA(JDU_BASE_ADDR + JDU_VAL_PTR_BUFFER45_OFFSET)

/* JDU VAL_PTR_BUFFER46 Register (32 bits) */
#define JDU_VAL_PTR_BUFFER46_OFFSET    0x1728
#define JDU_VAL_PTR_BUFFER46_REG       IOA(JDU_BASE_ADDR + JDU_VAL_PTR_BUFFER46_OFFSET)

/* JDU VAL_PTR_BUFFER47 Register (32 bits) */
#define JDU_VAL_PTR_BUFFER47_OFFSET    0x172C
#define JDU_VAL_PTR_BUFFER47_REG       IOA(JDU_BASE_ADDR + JDU_VAL_PTR_BUFFER47_OFFSET)

/* JDU VAL_PTR_BUFFER48 Register (32 bits) */
#define JDU_VAL_PTR_BUFFER48_OFFSET    0x1730
#define JDU_VAL_PTR_BUFFER48_REG       IOA(JDU_BASE_ADDR + JDU_VAL_PTR_BUFFER48_OFFSET)

/* JDU VAL_PTR_BUFFER49 Register (32 bits) */
#define JDU_VAL_PTR_BUFFER49_OFFSET    0x1734
#define JDU_VAL_PTR_BUFFER49_REG       IOA(JDU_BASE_ADDR + JDU_VAL_PTR_BUFFER49_OFFSET)

/* JDU VAL_PTR_BUFFER50 Register (32 bits) */
#define JDU_VAL_PTR_BUFFER50_OFFSET    0x1738
#define JDU_VAL_PTR_BUFFER50_REG       IOA(JDU_BASE_ADDR + JDU_VAL_PTR_BUFFER50_OFFSET)

/* JDU VAL_PTR_BUFFER51 Register (32 bits) */
#define JDU_VAL_PTR_BUFFER51_OFFSET    0x173C
#define JDU_VAL_PTR_BUFFER51_REG       IOA(JDU_BASE_ADDR + JDU_VAL_PTR_BUFFER51_OFFSET)

/* JDU VAL_PTR_BUFFER52 Register (32 bits) */
#define JDU_VAL_PTR_BUFFER52_OFFSET    0x1740
#define JDU_VAL_PTR_BUFFER52_REG       IOA(JDU_BASE_ADDR + JDU_VAL_PTR_BUFFER52_OFFSET)

/* JDU VAL_PTR_BUFFER53 Register (32 bits) */
#define JDU_VAL_PTR_BUFFER53_OFFSET    0x1744
#define JDU_VAL_PTR_BUFFER53_REG       IOA(JDU_BASE_ADDR + JDU_VAL_PTR_BUFFER53_OFFSET)

/* JDU VAL_PTR_BUFFER54 Register (32 bits) */
#define JDU_VAL_PTR_BUFFER54_OFFSET    0x1748
#define JDU_VAL_PTR_BUFFER54_REG       IOA(JDU_BASE_ADDR + JDU_VAL_PTR_BUFFER54_OFFSET)

/* JDU VAL_PTR_BUFFER55 Register (32 bits) */
#define JDU_VAL_PTR_BUFFER55_OFFSET    0x174C
#define JDU_VAL_PTR_BUFFER55_REG       IOA(JDU_BASE_ADDR + JDU_VAL_PTR_BUFFER55_OFFSET)

/* JDU VAL_PTR_BUFFER56 Register (32 bits) */
#define JDU_VAL_PTR_BUFFER56_OFFSET    0x1750
#define JDU_VAL_PTR_BUFFER56_REG       IOA(JDU_BASE_ADDR + JDU_VAL_PTR_BUFFER56_OFFSET)

/* JDU VAL_PTR_BUFFER57 Register (32 bits) */
#define JDU_VAL_PTR_BUFFER57_OFFSET    0x1754
#define JDU_VAL_PTR_BUFFER57_REG       IOA(JDU_BASE_ADDR + JDU_VAL_PTR_BUFFER57_OFFSET)

/* JDU VAL_PTR_BUFFER58 Register (32 bits) */
#define JDU_VAL_PTR_BUFFER58_OFFSET    0x1758
#define JDU_VAL_PTR_BUFFER58_REG       IOA(JDU_BASE_ADDR + JDU_VAL_PTR_BUFFER58_OFFSET)

/* JDU VAL_PTR_BUFFER59 Register (32 bits) */
#define JDU_VAL_PTR_BUFFER59_OFFSET    0x175C
#define JDU_VAL_PTR_BUFFER59_REG       IOA(JDU_BASE_ADDR + JDU_VAL_PTR_BUFFER59_OFFSET)

/* JDU VAL_PTR_BUFFER60 Register (32 bits) */
#define JDU_VAL_PTR_BUFFER60_OFFSET    0x1760
#define JDU_VAL_PTR_BUFFER60_REG       IOA(JDU_BASE_ADDR + JDU_VAL_PTR_BUFFER60_OFFSET)

/* JDU VAL_PTR_BUFFER61 Register (32 bits) */
#define JDU_VAL_PTR_BUFFER61_OFFSET    0x1764
#define JDU_VAL_PTR_BUFFER61_REG       IOA(JDU_BASE_ADDR + JDU_VAL_PTR_BUFFER61_OFFSET)

/* JDU VAL_PTR_BUFFER62 Register (32 bits) */
#define JDU_VAL_PTR_BUFFER62_OFFSET    0x1768
#define JDU_VAL_PTR_BUFFER62_REG       IOA(JDU_BASE_ADDR + JDU_VAL_PTR_BUFFER62_OFFSET)

/* JDU VAL_PTR_BUFFER63 Register (32 bits) */
#define JDU_VAL_PTR_BUFFER63_OFFSET    0x176C
#define JDU_VAL_PTR_BUFFER63_REG       IOA(JDU_BASE_ADDR + JDU_VAL_PTR_BUFFER63_OFFSET)

/* JDU Q_TABLE_BUFFER0 Register (32 bits) */
#define JDU_Q_TABLE_BUFFER0_OFFSET     0x1800
#define JDU_Q_TABLE_BUFFER0_REG        IOA(JDU_BASE_ADDR + JDU_Q_TABLE_BUFFER0_OFFSET)

/* JDU Q_TABLE_BUFFER1 Register (32 bits) */
#define JDU_Q_TABLE_BUFFER1_OFFSET     0x1804
#define JDU_Q_TABLE_BUFFER1_REG        IOA(JDU_BASE_ADDR + JDU_Q_TABLE_BUFFER1_OFFSET)

/* JDU Q_TABLE_BUFFER2 Register (32 bits) */
#define JDU_Q_TABLE_BUFFER2_OFFSET     0x1808
#define JDU_Q_TABLE_BUFFER2_REG        IOA(JDU_BASE_ADDR + JDU_Q_TABLE_BUFFER2_OFFSET)

/* JDU Q_TABLE_BUFFER3 Register (32 bits) */
#define JDU_Q_TABLE_BUFFER3_OFFSET     0x180C
#define JDU_Q_TABLE_BUFFER3_REG        IOA(JDU_BASE_ADDR + JDU_Q_TABLE_BUFFER3_OFFSET)

/* JDU Q_TABLE_BUFFER4 Register (32 bits) */
#define JDU_Q_TABLE_BUFFER4_OFFSET     0x1810
#define JDU_Q_TABLE_BUFFER4_REG        IOA(JDU_BASE_ADDR + JDU_Q_TABLE_BUFFER4_OFFSET)

/* JDU Q_TABLE_BUFFER5 Register (32 bits) */
#define JDU_Q_TABLE_BUFFER5_OFFSET     0x1814
#define JDU_Q_TABLE_BUFFER5_REG        IOA(JDU_BASE_ADDR + JDU_Q_TABLE_BUFFER5_OFFSET)

/* JDU Q_TABLE_BUFFER6 Register (32 bits) */
#define JDU_Q_TABLE_BUFFER6_OFFSET     0x1818
#define JDU_Q_TABLE_BUFFER6_REG        IOA(JDU_BASE_ADDR + JDU_Q_TABLE_BUFFER6_OFFSET)

/* JDU Q_TABLE_BUFFER7 Register (32 bits) */
#define JDU_Q_TABLE_BUFFER7_OFFSET     0x181C
#define JDU_Q_TABLE_BUFFER7_REG        IOA(JDU_BASE_ADDR + JDU_Q_TABLE_BUFFER7_OFFSET)

/* JDU Q_TABLE_BUFFER8 Register (32 bits) */
#define JDU_Q_TABLE_BUFFER8_OFFSET     0x1820
#define JDU_Q_TABLE_BUFFER8_REG        IOA(JDU_BASE_ADDR + JDU_Q_TABLE_BUFFER8_OFFSET)

/* JDU Q_TABLE_BUFFER9 Register (32 bits) */
#define JDU_Q_TABLE_BUFFER9_OFFSET     0x1824
#define JDU_Q_TABLE_BUFFER9_REG        IOA(JDU_BASE_ADDR + JDU_Q_TABLE_BUFFER9_OFFSET)

/* JDU Q_TABLE_BUFFER10 Register (32 bits) */
#define JDU_Q_TABLE_BUFFER10_OFFSET    0x1828
#define JDU_Q_TABLE_BUFFER10_REG       IOA(JDU_BASE_ADDR + JDU_Q_TABLE_BUFFER10_OFFSET)

/* JDU Q_TABLE_BUFFER11 Register (32 bits) */
#define JDU_Q_TABLE_BUFFER11_OFFSET    0x182C
#define JDU_Q_TABLE_BUFFER11_REG       IOA(JDU_BASE_ADDR + JDU_Q_TABLE_BUFFER11_OFFSET)

/* JDU Q_TABLE_BUFFER12 Register (32 bits) */
#define JDU_Q_TABLE_BUFFER12_OFFSET    0x1830
#define JDU_Q_TABLE_BUFFER12_REG       IOA(JDU_BASE_ADDR + JDU_Q_TABLE_BUFFER12_OFFSET)

/* JDU Q_TABLE_BUFFER13 Register (32 bits) */
#define JDU_Q_TABLE_BUFFER13_OFFSET    0x1834
#define JDU_Q_TABLE_BUFFER13_REG       IOA(JDU_BASE_ADDR + JDU_Q_TABLE_BUFFER13_OFFSET)

/* JDU Q_TABLE_BUFFER14 Register (32 bits) */
#define JDU_Q_TABLE_BUFFER14_OFFSET    0x1838
#define JDU_Q_TABLE_BUFFER14_REG       IOA(JDU_BASE_ADDR + JDU_Q_TABLE_BUFFER14_OFFSET)

/* JDU Q_TABLE_BUFFER15 Register (32 bits) */
#define JDU_Q_TABLE_BUFFER15_OFFSET    0x183C
#define JDU_Q_TABLE_BUFFER15_REG       IOA(JDU_BASE_ADDR + JDU_Q_TABLE_BUFFER15_OFFSET)

/* JDU Q_TABLE_BUFFER16 Register (32 bits) */
#define JDU_Q_TABLE_BUFFER16_OFFSET    0x1840
#define JDU_Q_TABLE_BUFFER16_REG       IOA(JDU_BASE_ADDR + JDU_Q_TABLE_BUFFER16_OFFSET)

/* JDU Q_TABLE_BUFFER17 Register (32 bits) */
#define JDU_Q_TABLE_BUFFER17_OFFSET    0x1844
#define JDU_Q_TABLE_BUFFER17_REG       IOA(JDU_BASE_ADDR + JDU_Q_TABLE_BUFFER17_OFFSET)

/* JDU Q_TABLE_BUFFER18 Register (32 bits) */
#define JDU_Q_TABLE_BUFFER18_OFFSET    0x1848
#define JDU_Q_TABLE_BUFFER18_REG       IOA(JDU_BASE_ADDR + JDU_Q_TABLE_BUFFER18_OFFSET)

/* JDU Q_TABLE_BUFFER19 Register (32 bits) */
#define JDU_Q_TABLE_BUFFER19_OFFSET    0x184C
#define JDU_Q_TABLE_BUFFER19_REG       IOA(JDU_BASE_ADDR + JDU_Q_TABLE_BUFFER19_OFFSET)

/* JDU Q_TABLE_BUFFER20 Register (32 bits) */
#define JDU_Q_TABLE_BUFFER20_OFFSET    0x1850
#define JDU_Q_TABLE_BUFFER20_REG       IOA(JDU_BASE_ADDR + JDU_Q_TABLE_BUFFER20_OFFSET)

/* JDU Q_TABLE_BUFFER21 Register (32 bits) */
#define JDU_Q_TABLE_BUFFER21_OFFSET    0x1854
#define JDU_Q_TABLE_BUFFER21_REG       IOA(JDU_BASE_ADDR + JDU_Q_TABLE_BUFFER21_OFFSET)

/* JDU Q_TABLE_BUFFER22 Register (32 bits) */
#define JDU_Q_TABLE_BUFFER22_OFFSET    0x1858
#define JDU_Q_TABLE_BUFFER22_REG       IOA(JDU_BASE_ADDR + JDU_Q_TABLE_BUFFER22_OFFSET)

/* JDU Q_TABLE_BUFFER23 Register (32 bits) */
#define JDU_Q_TABLE_BUFFER23_OFFSET    0x185C
#define JDU_Q_TABLE_BUFFER23_REG       IOA(JDU_BASE_ADDR + JDU_Q_TABLE_BUFFER23_OFFSET)

/* JDU Q_TABLE_BUFFER24 Register (32 bits) */
#define JDU_Q_TABLE_BUFFER24_OFFSET    0x1860
#define JDU_Q_TABLE_BUFFER24_REG       IOA(JDU_BASE_ADDR + JDU_Q_TABLE_BUFFER24_OFFSET)

/* JDU Q_TABLE_BUFFER25 Register (32 bits) */
#define JDU_Q_TABLE_BUFFER25_OFFSET    0x1864
#define JDU_Q_TABLE_BUFFER25_REG       IOA(JDU_BASE_ADDR + JDU_Q_TABLE_BUFFER25_OFFSET)

/* JDU Q_TABLE_BUFFER26 Register (32 bits) */
#define JDU_Q_TABLE_BUFFER26_OFFSET    0x1868
#define JDU_Q_TABLE_BUFFER26_REG       IOA(JDU_BASE_ADDR + JDU_Q_TABLE_BUFFER26_OFFSET)

/* JDU Q_TABLE_BUFFER27 Register (32 bits) */
#define JDU_Q_TABLE_BUFFER27_OFFSET    0x186C
#define JDU_Q_TABLE_BUFFER27_REG       IOA(JDU_BASE_ADDR + JDU_Q_TABLE_BUFFER27_OFFSET)

/* JDU Q_TABLE_BUFFER28 Register (32 bits) */
#define JDU_Q_TABLE_BUFFER28_OFFSET    0x1870
#define JDU_Q_TABLE_BUFFER28_REG       IOA(JDU_BASE_ADDR + JDU_Q_TABLE_BUFFER28_OFFSET)

/* JDU Q_TABLE_BUFFER29 Register (32 bits) */
#define JDU_Q_TABLE_BUFFER29_OFFSET    0x1874
#define JDU_Q_TABLE_BUFFER29_REG       IOA(JDU_BASE_ADDR + JDU_Q_TABLE_BUFFER29_OFFSET)

/* JDU Q_TABLE_BUFFER30 Register (32 bits) */
#define JDU_Q_TABLE_BUFFER30_OFFSET    0x1878
#define JDU_Q_TABLE_BUFFER30_REG       IOA(JDU_BASE_ADDR + JDU_Q_TABLE_BUFFER30_OFFSET)

/* JDU Q_TABLE_BUFFER31 Register (32 bits) */
#define JDU_Q_TABLE_BUFFER31_OFFSET    0x187C
#define JDU_Q_TABLE_BUFFER31_REG       IOA(JDU_BASE_ADDR + JDU_Q_TABLE_BUFFER31_OFFSET)

/* JDU Q_TABLE_BUFFER32 Register (32 bits) */
#define JDU_Q_TABLE_BUFFER32_OFFSET    0x1880
#define JDU_Q_TABLE_BUFFER32_REG       IOA(JDU_BASE_ADDR + JDU_Q_TABLE_BUFFER32_OFFSET)

/* JDU Q_TABLE_BUFFER33 Register (32 bits) */
#define JDU_Q_TABLE_BUFFER33_OFFSET    0x1884
#define JDU_Q_TABLE_BUFFER33_REG       IOA(JDU_BASE_ADDR + JDU_Q_TABLE_BUFFER33_OFFSET)

/* JDU Q_TABLE_BUFFER34 Register (32 bits) */
#define JDU_Q_TABLE_BUFFER34_OFFSET    0x1888
#define JDU_Q_TABLE_BUFFER34_REG       IOA(JDU_BASE_ADDR + JDU_Q_TABLE_BUFFER34_OFFSET)

/* JDU Q_TABLE_BUFFER35 Register (32 bits) */
#define JDU_Q_TABLE_BUFFER35_OFFSET    0x188C
#define JDU_Q_TABLE_BUFFER35_REG       IOA(JDU_BASE_ADDR + JDU_Q_TABLE_BUFFER35_OFFSET)

/* JDU Q_TABLE_BUFFER36 Register (32 bits) */
#define JDU_Q_TABLE_BUFFER36_OFFSET    0x1890
#define JDU_Q_TABLE_BUFFER36_REG       IOA(JDU_BASE_ADDR + JDU_Q_TABLE_BUFFER36_OFFSET)

/* JDU Q_TABLE_BUFFER37 Register (32 bits) */
#define JDU_Q_TABLE_BUFFER37_OFFSET    0x1894
#define JDU_Q_TABLE_BUFFER37_REG       IOA(JDU_BASE_ADDR + JDU_Q_TABLE_BUFFER37_OFFSET)

/* JDU Q_TABLE_BUFFER38 Register (32 bits) */
#define JDU_Q_TABLE_BUFFER38_OFFSET    0x1898
#define JDU_Q_TABLE_BUFFER38_REG       IOA(JDU_BASE_ADDR + JDU_Q_TABLE_BUFFER38_OFFSET)

/* JDU Q_TABLE_BUFFER39 Register (32 bits) */
#define JDU_Q_TABLE_BUFFER39_OFFSET    0x189C
#define JDU_Q_TABLE_BUFFER39_REG       IOA(JDU_BASE_ADDR + JDU_Q_TABLE_BUFFER39_OFFSET)

/* JDU Q_TABLE_BUFFER40 Register (32 bits) */
#define JDU_Q_TABLE_BUFFER40_OFFSET    0x18A0
#define JDU_Q_TABLE_BUFFER40_REG       IOA(JDU_BASE_ADDR + JDU_Q_TABLE_BUFFER40_OFFSET)

/* JDU Q_TABLE_BUFFER41 Register (32 bits) */
#define JDU_Q_TABLE_BUFFER41_OFFSET    0x18A4
#define JDU_Q_TABLE_BUFFER41_REG       IOA(JDU_BASE_ADDR + JDU_Q_TABLE_BUFFER41_OFFSET)

/* JDU Q_TABLE_BUFFER42 Register (32 bits) */
#define JDU_Q_TABLE_BUFFER42_OFFSET    0x18A8
#define JDU_Q_TABLE_BUFFER42_REG       IOA(JDU_BASE_ADDR + JDU_Q_TABLE_BUFFER42_OFFSET)

/* JDU Q_TABLE_BUFFER43 Register (32 bits) */
#define JDU_Q_TABLE_BUFFER43_OFFSET    0x18AC
#define JDU_Q_TABLE_BUFFER43_REG       IOA(JDU_BASE_ADDR + JDU_Q_TABLE_BUFFER43_OFFSET)

/* JDU Q_TABLE_BUFFER44 Register (32 bits) */
#define JDU_Q_TABLE_BUFFER44_OFFSET    0x18B0
#define JDU_Q_TABLE_BUFFER44_REG       IOA(JDU_BASE_ADDR + JDU_Q_TABLE_BUFFER44_OFFSET)

/* JDU Q_TABLE_BUFFER45 Register (32 bits) */
#define JDU_Q_TABLE_BUFFER45_OFFSET    0x18B4
#define JDU_Q_TABLE_BUFFER45_REG       IOA(JDU_BASE_ADDR + JDU_Q_TABLE_BUFFER45_OFFSET)

/* JDU Q_TABLE_BUFFER46 Register (32 bits) */
#define JDU_Q_TABLE_BUFFER46_OFFSET    0x18B8
#define JDU_Q_TABLE_BUFFER46_REG       IOA(JDU_BASE_ADDR + JDU_Q_TABLE_BUFFER46_OFFSET)

/* JDU Q_TABLE_BUFFER47 Register (32 bits) */
#define JDU_Q_TABLE_BUFFER47_OFFSET    0x18BC
#define JDU_Q_TABLE_BUFFER47_REG       IOA(JDU_BASE_ADDR + JDU_Q_TABLE_BUFFER47_OFFSET)

/* JDU Q_TABLE_BUFFER48 Register (32 bits) */
#define JDU_Q_TABLE_BUFFER48_OFFSET    0x18C0
#define JDU_Q_TABLE_BUFFER48_REG       IOA(JDU_BASE_ADDR + JDU_Q_TABLE_BUFFER48_OFFSET)

/* JDU Q_TABLE_BUFFER49 Register (32 bits) */
#define JDU_Q_TABLE_BUFFER49_OFFSET    0x18C4
#define JDU_Q_TABLE_BUFFER49_REG       IOA(JDU_BASE_ADDR + JDU_Q_TABLE_BUFFER49_OFFSET)

/* JDU Q_TABLE_BUFFER50 Register (32 bits) */
#define JDU_Q_TABLE_BUFFER50_OFFSET    0x18C8
#define JDU_Q_TABLE_BUFFER50_REG       IOA(JDU_BASE_ADDR + JDU_Q_TABLE_BUFFER50_OFFSET)

/* JDU Q_TABLE_BUFFER51 Register (32 bits) */
#define JDU_Q_TABLE_BUFFER51_OFFSET    0x18CC
#define JDU_Q_TABLE_BUFFER51_REG       IOA(JDU_BASE_ADDR + JDU_Q_TABLE_BUFFER51_OFFSET)

/* JDU Q_TABLE_BUFFER52 Register (32 bits) */
#define JDU_Q_TABLE_BUFFER52_OFFSET    0x18D0
#define JDU_Q_TABLE_BUFFER52_REG       IOA(JDU_BASE_ADDR + JDU_Q_TABLE_BUFFER52_OFFSET)

/* JDU Q_TABLE_BUFFER53 Register (32 bits) */
#define JDU_Q_TABLE_BUFFER53_OFFSET    0x18D4
#define JDU_Q_TABLE_BUFFER53_REG       IOA(JDU_BASE_ADDR + JDU_Q_TABLE_BUFFER53_OFFSET)

/* JDU Q_TABLE_BUFFER54 Register (32 bits) */
#define JDU_Q_TABLE_BUFFER54_OFFSET    0x18D8
#define JDU_Q_TABLE_BUFFER54_REG       IOA(JDU_BASE_ADDR + JDU_Q_TABLE_BUFFER54_OFFSET)

/* JDU Q_TABLE_BUFFER55 Register (32 bits) */
#define JDU_Q_TABLE_BUFFER55_OFFSET    0x18DC
#define JDU_Q_TABLE_BUFFER55_REG       IOA(JDU_BASE_ADDR + JDU_Q_TABLE_BUFFER55_OFFSET)

/* JDU Q_TABLE_BUFFER56 Register (32 bits) */
#define JDU_Q_TABLE_BUFFER56_OFFSET    0x18E0
#define JDU_Q_TABLE_BUFFER56_REG       IOA(JDU_BASE_ADDR + JDU_Q_TABLE_BUFFER56_OFFSET)

/* JDU Q_TABLE_BUFFER57 Register (32 bits) */
#define JDU_Q_TABLE_BUFFER57_OFFSET    0x18E4
#define JDU_Q_TABLE_BUFFER57_REG       IOA(JDU_BASE_ADDR + JDU_Q_TABLE_BUFFER57_OFFSET)

/* JDU Q_TABLE_BUFFER58 Register (32 bits) */
#define JDU_Q_TABLE_BUFFER58_OFFSET    0x18E8
#define JDU_Q_TABLE_BUFFER58_REG       IOA(JDU_BASE_ADDR + JDU_Q_TABLE_BUFFER58_OFFSET)

/* JDU Q_TABLE_BUFFER59 Register (32 bits) */
#define JDU_Q_TABLE_BUFFER59_OFFSET    0x18EC
#define JDU_Q_TABLE_BUFFER59_REG       IOA(JDU_BASE_ADDR + JDU_Q_TABLE_BUFFER59_OFFSET)

/* JDU Q_TABLE_BUFFER60 Register (32 bits) */
#define JDU_Q_TABLE_BUFFER60_OFFSET    0x18F0
#define JDU_Q_TABLE_BUFFER60_REG       IOA(JDU_BASE_ADDR + JDU_Q_TABLE_BUFFER60_OFFSET)

/* JDU Q_TABLE_BUFFER61 Register (32 bits) */
#define JDU_Q_TABLE_BUFFER61_OFFSET    0x18F4
#define JDU_Q_TABLE_BUFFER61_REG       IOA(JDU_BASE_ADDR + JDU_Q_TABLE_BUFFER61_OFFSET)

/* JDU Q_TABLE_BUFFER62 Register (32 bits) */
#define JDU_Q_TABLE_BUFFER62_OFFSET    0x18F8
#define JDU_Q_TABLE_BUFFER62_REG       IOA(JDU_BASE_ADDR + JDU_Q_TABLE_BUFFER62_OFFSET)

/* JDU Q_TABLE_BUFFER63 Register (32 bits) */
#define JDU_Q_TABLE_BUFFER63_OFFSET    0x18FC
#define JDU_Q_TABLE_BUFFER63_REG       IOA(JDU_BASE_ADDR + JDU_Q_TABLE_BUFFER63_OFFSET)

/* JDU Q_TABLE_BUFFER64 Register (32 bits) */
#define JDU_Q_TABLE_BUFFER64_OFFSET    0x1900
#define JDU_Q_TABLE_BUFFER64_REG       IOA(JDU_BASE_ADDR + JDU_Q_TABLE_BUFFER64_OFFSET)

/* JDU Q_TABLE_BUFFER65 Register (32 bits) */
#define JDU_Q_TABLE_BUFFER65_OFFSET    0x1904
#define JDU_Q_TABLE_BUFFER65_REG       IOA(JDU_BASE_ADDR + JDU_Q_TABLE_BUFFER65_OFFSET)

/* JDU Q_TABLE_BUFFER66 Register (32 bits) */
#define JDU_Q_TABLE_BUFFER66_OFFSET    0x1908
#define JDU_Q_TABLE_BUFFER66_REG       IOA(JDU_BASE_ADDR + JDU_Q_TABLE_BUFFER66_OFFSET)

/* JDU Q_TABLE_BUFFER67 Register (32 bits) */
#define JDU_Q_TABLE_BUFFER67_OFFSET    0x190C
#define JDU_Q_TABLE_BUFFER67_REG       IOA(JDU_BASE_ADDR + JDU_Q_TABLE_BUFFER67_OFFSET)

/* JDU Q_TABLE_BUFFER68 Register (32 bits) */
#define JDU_Q_TABLE_BUFFER68_OFFSET    0x1910
#define JDU_Q_TABLE_BUFFER68_REG       IOA(JDU_BASE_ADDR + JDU_Q_TABLE_BUFFER68_OFFSET)

/* JDU Q_TABLE_BUFFER69 Register (32 bits) */
#define JDU_Q_TABLE_BUFFER69_OFFSET    0x1914
#define JDU_Q_TABLE_BUFFER69_REG       IOA(JDU_BASE_ADDR + JDU_Q_TABLE_BUFFER69_OFFSET)

/* JDU Q_TABLE_BUFFER70 Register (32 bits) */
#define JDU_Q_TABLE_BUFFER70_OFFSET    0x1918
#define JDU_Q_TABLE_BUFFER70_REG       IOA(JDU_BASE_ADDR + JDU_Q_TABLE_BUFFER70_OFFSET)

/* JDU Q_TABLE_BUFFER71 Register (32 bits) */
#define JDU_Q_TABLE_BUFFER71_OFFSET    0x191C
#define JDU_Q_TABLE_BUFFER71_REG       IOA(JDU_BASE_ADDR + JDU_Q_TABLE_BUFFER71_OFFSET)

/* JDU Q_TABLE_BUFFER72 Register (32 bits) */
#define JDU_Q_TABLE_BUFFER72_OFFSET    0x1920
#define JDU_Q_TABLE_BUFFER72_REG       IOA(JDU_BASE_ADDR + JDU_Q_TABLE_BUFFER72_OFFSET)

/* JDU Q_TABLE_BUFFER73 Register (32 bits) */
#define JDU_Q_TABLE_BUFFER73_OFFSET    0x1924
#define JDU_Q_TABLE_BUFFER73_REG       IOA(JDU_BASE_ADDR + JDU_Q_TABLE_BUFFER73_OFFSET)

/* JDU Q_TABLE_BUFFER74 Register (32 bits) */
#define JDU_Q_TABLE_BUFFER74_OFFSET    0x1928
#define JDU_Q_TABLE_BUFFER74_REG       IOA(JDU_BASE_ADDR + JDU_Q_TABLE_BUFFER74_OFFSET)

/* JDU Q_TABLE_BUFFER75 Register (32 bits) */
#define JDU_Q_TABLE_BUFFER75_OFFSET    0x192C
#define JDU_Q_TABLE_BUFFER75_REG       IOA(JDU_BASE_ADDR + JDU_Q_TABLE_BUFFER75_OFFSET)

/* JDU Q_TABLE_BUFFER76 Register (32 bits) */
#define JDU_Q_TABLE_BUFFER76_OFFSET    0x1930
#define JDU_Q_TABLE_BUFFER76_REG       IOA(JDU_BASE_ADDR + JDU_Q_TABLE_BUFFER76_OFFSET)

/* JDU Q_TABLE_BUFFER77 Register (32 bits) */
#define JDU_Q_TABLE_BUFFER77_OFFSET    0x1934
#define JDU_Q_TABLE_BUFFER77_REG       IOA(JDU_BASE_ADDR + JDU_Q_TABLE_BUFFER77_OFFSET)

/* JDU Q_TABLE_BUFFER78 Register (32 bits) */
#define JDU_Q_TABLE_BUFFER78_OFFSET    0x1938
#define JDU_Q_TABLE_BUFFER78_REG       IOA(JDU_BASE_ADDR + JDU_Q_TABLE_BUFFER78_OFFSET)

/* JDU Q_TABLE_BUFFER79 Register (32 bits) */
#define JDU_Q_TABLE_BUFFER79_OFFSET    0x193C
#define JDU_Q_TABLE_BUFFER79_REG       IOA(JDU_BASE_ADDR + JDU_Q_TABLE_BUFFER79_OFFSET)

/* JDU Q_TABLE_BUFFER80 Register (32 bits) */
#define JDU_Q_TABLE_BUFFER80_OFFSET    0x1940
#define JDU_Q_TABLE_BUFFER80_REG       IOA(JDU_BASE_ADDR + JDU_Q_TABLE_BUFFER80_OFFSET)

/* JDU Q_TABLE_BUFFER81 Register (32 bits) */
#define JDU_Q_TABLE_BUFFER81_OFFSET    0x1944
#define JDU_Q_TABLE_BUFFER81_REG       IOA(JDU_BASE_ADDR + JDU_Q_TABLE_BUFFER81_OFFSET)

/* JDU Q_TABLE_BUFFER82 Register (32 bits) */
#define JDU_Q_TABLE_BUFFER82_OFFSET    0x1948
#define JDU_Q_TABLE_BUFFER82_REG       IOA(JDU_BASE_ADDR + JDU_Q_TABLE_BUFFER82_OFFSET)

/* JDU Q_TABLE_BUFFER83 Register (32 bits) */
#define JDU_Q_TABLE_BUFFER83_OFFSET    0x194C
#define JDU_Q_TABLE_BUFFER83_REG       IOA(JDU_BASE_ADDR + JDU_Q_TABLE_BUFFER83_OFFSET)

/* JDU Q_TABLE_BUFFER84 Register (32 bits) */
#define JDU_Q_TABLE_BUFFER84_OFFSET    0x1950
#define JDU_Q_TABLE_BUFFER84_REG       IOA(JDU_BASE_ADDR + JDU_Q_TABLE_BUFFER84_OFFSET)

/* JDU Q_TABLE_BUFFER85 Register (32 bits) */
#define JDU_Q_TABLE_BUFFER85_OFFSET    0x1954
#define JDU_Q_TABLE_BUFFER85_REG       IOA(JDU_BASE_ADDR + JDU_Q_TABLE_BUFFER85_OFFSET)

/* JDU Q_TABLE_BUFFER86 Register (32 bits) */
#define JDU_Q_TABLE_BUFFER86_OFFSET    0x1958
#define JDU_Q_TABLE_BUFFER86_REG       IOA(JDU_BASE_ADDR + JDU_Q_TABLE_BUFFER86_OFFSET)

/* JDU Q_TABLE_BUFFER87 Register (32 bits) */
#define JDU_Q_TABLE_BUFFER87_OFFSET    0x195C
#define JDU_Q_TABLE_BUFFER87_REG       IOA(JDU_BASE_ADDR + JDU_Q_TABLE_BUFFER87_OFFSET)

/* JDU Q_TABLE_BUFFER88 Register (32 bits) */
#define JDU_Q_TABLE_BUFFER88_OFFSET    0x1960
#define JDU_Q_TABLE_BUFFER88_REG       IOA(JDU_BASE_ADDR + JDU_Q_TABLE_BUFFER88_OFFSET)

/* JDU Q_TABLE_BUFFER89 Register (32 bits) */
#define JDU_Q_TABLE_BUFFER89_OFFSET    0x1964
#define JDU_Q_TABLE_BUFFER89_REG       IOA(JDU_BASE_ADDR + JDU_Q_TABLE_BUFFER89_OFFSET)

/* JDU Q_TABLE_BUFFER90 Register (32 bits) */
#define JDU_Q_TABLE_BUFFER90_OFFSET    0x1968
#define JDU_Q_TABLE_BUFFER90_REG       IOA(JDU_BASE_ADDR + JDU_Q_TABLE_BUFFER90_OFFSET)

/* JDU Q_TABLE_BUFFER91 Register (32 bits) */
#define JDU_Q_TABLE_BUFFER91_OFFSET    0x196C
#define JDU_Q_TABLE_BUFFER91_REG       IOA(JDU_BASE_ADDR + JDU_Q_TABLE_BUFFER91_OFFSET)

/* JDU Q_TABLE_BUFFER92 Register (32 bits) */
#define JDU_Q_TABLE_BUFFER92_OFFSET    0x1970
#define JDU_Q_TABLE_BUFFER92_REG       IOA(JDU_BASE_ADDR + JDU_Q_TABLE_BUFFER92_OFFSET)

/* JDU Q_TABLE_BUFFER93 Register (32 bits) */
#define JDU_Q_TABLE_BUFFER93_OFFSET    0x1974
#define JDU_Q_TABLE_BUFFER93_REG       IOA(JDU_BASE_ADDR + JDU_Q_TABLE_BUFFER93_OFFSET)

/* JDU Q_TABLE_BUFFER94 Register (32 bits) */
#define JDU_Q_TABLE_BUFFER94_OFFSET    0x1978
#define JDU_Q_TABLE_BUFFER94_REG       IOA(JDU_BASE_ADDR + JDU_Q_TABLE_BUFFER94_OFFSET)

/* JDU Q_TABLE_BUFFER95 Register (32 bits) */
#define JDU_Q_TABLE_BUFFER95_OFFSET    0x197C
#define JDU_Q_TABLE_BUFFER95_REG       IOA(JDU_BASE_ADDR + JDU_Q_TABLE_BUFFER95_OFFSET)

/* JDU Q_TABLE_BUFFER96 Register (32 bits) */
#define JDU_Q_TABLE_BUFFER96_OFFSET    0x1980
#define JDU_Q_TABLE_BUFFER96_REG       IOA(JDU_BASE_ADDR + JDU_Q_TABLE_BUFFER96_OFFSET)

/* JDU Q_TABLE_BUFFER97 Register (32 bits) */
#define JDU_Q_TABLE_BUFFER97_OFFSET    0x1984
#define JDU_Q_TABLE_BUFFER97_REG       IOA(JDU_BASE_ADDR + JDU_Q_TABLE_BUFFER97_OFFSET)

/* JDU Q_TABLE_BUFFER98 Register (32 bits) */
#define JDU_Q_TABLE_BUFFER98_OFFSET    0x1988
#define JDU_Q_TABLE_BUFFER98_REG       IOA(JDU_BASE_ADDR + JDU_Q_TABLE_BUFFER98_OFFSET)

/* JDU Q_TABLE_BUFFER99 Register (32 bits) */
#define JDU_Q_TABLE_BUFFER99_OFFSET    0x198C
#define JDU_Q_TABLE_BUFFER99_REG       IOA(JDU_BASE_ADDR + JDU_Q_TABLE_BUFFER99_OFFSET)

/* JDU Q_TABLE_BUFFER100 Register (32 bits) */
#define JDU_Q_TABLE_BUFFER100_OFFSET   0x1990
#define JDU_Q_TABLE_BUFFER100_REG      IOA(JDU_BASE_ADDR + JDU_Q_TABLE_BUFFER100_OFFSET)

/* JDU Q_TABLE_BUFFER101 Register (32 bits) */
#define JDU_Q_TABLE_BUFFER101_OFFSET   0x1994
#define JDU_Q_TABLE_BUFFER101_REG      IOA(JDU_BASE_ADDR + JDU_Q_TABLE_BUFFER101_OFFSET)

/* JDU Q_TABLE_BUFFER102 Register (32 bits) */
#define JDU_Q_TABLE_BUFFER102_OFFSET   0x1998
#define JDU_Q_TABLE_BUFFER102_REG      IOA(JDU_BASE_ADDR + JDU_Q_TABLE_BUFFER102_OFFSET)

/* JDU Q_TABLE_BUFFER103 Register (32 bits) */
#define JDU_Q_TABLE_BUFFER103_OFFSET   0x199C
#define JDU_Q_TABLE_BUFFER103_REG      IOA(JDU_BASE_ADDR + JDU_Q_TABLE_BUFFER103_OFFSET)

/* JDU Q_TABLE_BUFFER104 Register (32 bits) */
#define JDU_Q_TABLE_BUFFER104_OFFSET   0x19A0
#define JDU_Q_TABLE_BUFFER104_REG      IOA(JDU_BASE_ADDR + JDU_Q_TABLE_BUFFER104_OFFSET)

/* JDU Q_TABLE_BUFFER105 Register (32 bits) */
#define JDU_Q_TABLE_BUFFER105_OFFSET   0x19A4
#define JDU_Q_TABLE_BUFFER105_REG      IOA(JDU_BASE_ADDR + JDU_Q_TABLE_BUFFER105_OFFSET)

/* JDU Q_TABLE_BUFFER106 Register (32 bits) */
#define JDU_Q_TABLE_BUFFER106_OFFSET   0x19A8
#define JDU_Q_TABLE_BUFFER106_REG      IOA(JDU_BASE_ADDR + JDU_Q_TABLE_BUFFER106_OFFSET)

/* JDU Q_TABLE_BUFFER107 Register (32 bits) */
#define JDU_Q_TABLE_BUFFER107_OFFSET   0x19AC
#define JDU_Q_TABLE_BUFFER107_REG      IOA(JDU_BASE_ADDR + JDU_Q_TABLE_BUFFER107_OFFSET)

/* JDU Q_TABLE_BUFFER108 Register (32 bits) */
#define JDU_Q_TABLE_BUFFER108_OFFSET   0x19B0
#define JDU_Q_TABLE_BUFFER108_REG      IOA(JDU_BASE_ADDR + JDU_Q_TABLE_BUFFER108_OFFSET)

/* JDU Q_TABLE_BUFFER109 Register (32 bits) */
#define JDU_Q_TABLE_BUFFER109_OFFSET   0x19B4
#define JDU_Q_TABLE_BUFFER109_REG      IOA(JDU_BASE_ADDR + JDU_Q_TABLE_BUFFER109_OFFSET)

/* JDU Q_TABLE_BUFFER110 Register (32 bits) */
#define JDU_Q_TABLE_BUFFER110_OFFSET   0x19B8
#define JDU_Q_TABLE_BUFFER110_REG      IOA(JDU_BASE_ADDR + JDU_Q_TABLE_BUFFER110_OFFSET)

/* JDU Q_TABLE_BUFFER111 Register (32 bits) */
#define JDU_Q_TABLE_BUFFER111_OFFSET   0x19BC
#define JDU_Q_TABLE_BUFFER111_REG      IOA(JDU_BASE_ADDR + JDU_Q_TABLE_BUFFER111_OFFSET)

/* JDU Q_TABLE_BUFFER112 Register (32 bits) */
#define JDU_Q_TABLE_BUFFER112_OFFSET   0x19C0
#define JDU_Q_TABLE_BUFFER112_REG      IOA(JDU_BASE_ADDR + JDU_Q_TABLE_BUFFER112_OFFSET)

/* JDU Q_TABLE_BUFFER113 Register (32 bits) */
#define JDU_Q_TABLE_BUFFER113_OFFSET   0x19C4
#define JDU_Q_TABLE_BUFFER113_REG      IOA(JDU_BASE_ADDR + JDU_Q_TABLE_BUFFER113_OFFSET)

/* JDU Q_TABLE_BUFFER114 Register (32 bits) */
#define JDU_Q_TABLE_BUFFER114_OFFSET   0x19C8
#define JDU_Q_TABLE_BUFFER114_REG      IOA(JDU_BASE_ADDR + JDU_Q_TABLE_BUFFER114_OFFSET)

/* JDU Q_TABLE_BUFFER115 Register (32 bits) */
#define JDU_Q_TABLE_BUFFER115_OFFSET   0x19CC
#define JDU_Q_TABLE_BUFFER115_REG      IOA(JDU_BASE_ADDR + JDU_Q_TABLE_BUFFER115_OFFSET)

/* JDU Q_TABLE_BUFFER116 Register (32 bits) */
#define JDU_Q_TABLE_BUFFER116_OFFSET   0x19D0
#define JDU_Q_TABLE_BUFFER116_REG      IOA(JDU_BASE_ADDR + JDU_Q_TABLE_BUFFER116_OFFSET)

/* JDU Q_TABLE_BUFFER117 Register (32 bits) */
#define JDU_Q_TABLE_BUFFER117_OFFSET   0x19D4
#define JDU_Q_TABLE_BUFFER117_REG      IOA(JDU_BASE_ADDR + JDU_Q_TABLE_BUFFER117_OFFSET)

/* JDU Q_TABLE_BUFFER118 Register (32 bits) */
#define JDU_Q_TABLE_BUFFER118_OFFSET   0x19D8
#define JDU_Q_TABLE_BUFFER118_REG      IOA(JDU_BASE_ADDR + JDU_Q_TABLE_BUFFER118_OFFSET)

/* JDU Q_TABLE_BUFFER119 Register (32 bits) */
#define JDU_Q_TABLE_BUFFER119_OFFSET   0x19DC
#define JDU_Q_TABLE_BUFFER119_REG      IOA(JDU_BASE_ADDR + JDU_Q_TABLE_BUFFER119_OFFSET)

/* JDU Q_TABLE_BUFFER120 Register (32 bits) */
#define JDU_Q_TABLE_BUFFER120_OFFSET   0x19E0
#define JDU_Q_TABLE_BUFFER120_REG      IOA(JDU_BASE_ADDR + JDU_Q_TABLE_BUFFER120_OFFSET)

/* JDU Q_TABLE_BUFFER121 Register (32 bits) */
#define JDU_Q_TABLE_BUFFER121_OFFSET   0x19E4
#define JDU_Q_TABLE_BUFFER121_REG      IOA(JDU_BASE_ADDR + JDU_Q_TABLE_BUFFER121_OFFSET)

/* JDU Q_TABLE_BUFFER122 Register (32 bits) */
#define JDU_Q_TABLE_BUFFER122_OFFSET   0x19E8
#define JDU_Q_TABLE_BUFFER122_REG      IOA(JDU_BASE_ADDR + JDU_Q_TABLE_BUFFER122_OFFSET)

/* JDU Q_TABLE_BUFFER123 Register (32 bits) */
#define JDU_Q_TABLE_BUFFER123_OFFSET   0x19EC
#define JDU_Q_TABLE_BUFFER123_REG      IOA(JDU_BASE_ADDR + JDU_Q_TABLE_BUFFER123_OFFSET)

/* JDU Q_TABLE_BUFFER124 Register (32 bits) */
#define JDU_Q_TABLE_BUFFER124_OFFSET   0x19F0
#define JDU_Q_TABLE_BUFFER124_REG      IOA(JDU_BASE_ADDR + JDU_Q_TABLE_BUFFER124_OFFSET)

/* JDU Q_TABLE_BUFFER125 Register (32 bits) */
#define JDU_Q_TABLE_BUFFER125_OFFSET   0x19F4
#define JDU_Q_TABLE_BUFFER125_REG      IOA(JDU_BASE_ADDR + JDU_Q_TABLE_BUFFER125_OFFSET)

/* JDU Q_TABLE_BUFFER126 Register (32 bits) */
#define JDU_Q_TABLE_BUFFER126_OFFSET   0x19F8
#define JDU_Q_TABLE_BUFFER126_REG      IOA(JDU_BASE_ADDR + JDU_Q_TABLE_BUFFER126_OFFSET)

/* JDU Q_TABLE_BUFFER127 Register (32 bits) */
#define JDU_Q_TABLE_BUFFER127_OFFSET   0x19FC
#define JDU_Q_TABLE_BUFFER127_REG      IOA(JDU_BASE_ADDR + JDU_Q_TABLE_BUFFER127_OFFSET)

/* JDU Q_TABLE_BUFFER128 Register (32 bits) */
#define JDU_Q_TABLE_BUFFER128_OFFSET   0x1A00
#define JDU_Q_TABLE_BUFFER128_REG      IOA(JDU_BASE_ADDR + JDU_Q_TABLE_BUFFER128_OFFSET)

/* JDU Q_TABLE_BUFFER129 Register (32 bits) */
#define JDU_Q_TABLE_BUFFER129_OFFSET   0x1A04
#define JDU_Q_TABLE_BUFFER129_REG      IOA(JDU_BASE_ADDR + JDU_Q_TABLE_BUFFER129_OFFSET)

/* JDU Q_TABLE_BUFFER130 Register (32 bits) */
#define JDU_Q_TABLE_BUFFER130_OFFSET   0x1A08
#define JDU_Q_TABLE_BUFFER130_REG      IOA(JDU_BASE_ADDR + JDU_Q_TABLE_BUFFER130_OFFSET)

/* JDU Q_TABLE_BUFFER131 Register (32 bits) */
#define JDU_Q_TABLE_BUFFER131_OFFSET   0x1A0C
#define JDU_Q_TABLE_BUFFER131_REG      IOA(JDU_BASE_ADDR + JDU_Q_TABLE_BUFFER131_OFFSET)

/* JDU Q_TABLE_BUFFER132 Register (32 bits) */
#define JDU_Q_TABLE_BUFFER132_OFFSET   0x1A10
#define JDU_Q_TABLE_BUFFER132_REG      IOA(JDU_BASE_ADDR + JDU_Q_TABLE_BUFFER132_OFFSET)

/* JDU Q_TABLE_BUFFER133 Register (32 bits) */
#define JDU_Q_TABLE_BUFFER133_OFFSET   0x1A14
#define JDU_Q_TABLE_BUFFER133_REG      IOA(JDU_BASE_ADDR + JDU_Q_TABLE_BUFFER133_OFFSET)

/* JDU Q_TABLE_BUFFER134 Register (32 bits) */
#define JDU_Q_TABLE_BUFFER134_OFFSET   0x1A18
#define JDU_Q_TABLE_BUFFER134_REG      IOA(JDU_BASE_ADDR + JDU_Q_TABLE_BUFFER134_OFFSET)

/* JDU Q_TABLE_BUFFER135 Register (32 bits) */
#define JDU_Q_TABLE_BUFFER135_OFFSET   0x1A1C
#define JDU_Q_TABLE_BUFFER135_REG      IOA(JDU_BASE_ADDR + JDU_Q_TABLE_BUFFER135_OFFSET)

/* JDU Q_TABLE_BUFFER136 Register (32 bits) */
#define JDU_Q_TABLE_BUFFER136_OFFSET   0x1A20
#define JDU_Q_TABLE_BUFFER136_REG      IOA(JDU_BASE_ADDR + JDU_Q_TABLE_BUFFER136_OFFSET)

/* JDU Q_TABLE_BUFFER137 Register (32 bits) */
#define JDU_Q_TABLE_BUFFER137_OFFSET   0x1A24
#define JDU_Q_TABLE_BUFFER137_REG      IOA(JDU_BASE_ADDR + JDU_Q_TABLE_BUFFER137_OFFSET)

/* JDU Q_TABLE_BUFFER138 Register (32 bits) */
#define JDU_Q_TABLE_BUFFER138_OFFSET   0x1A28
#define JDU_Q_TABLE_BUFFER138_REG      IOA(JDU_BASE_ADDR + JDU_Q_TABLE_BUFFER138_OFFSET)

/* JDU Q_TABLE_BUFFER139 Register (32 bits) */
#define JDU_Q_TABLE_BUFFER139_OFFSET   0x1A2C
#define JDU_Q_TABLE_BUFFER139_REG      IOA(JDU_BASE_ADDR + JDU_Q_TABLE_BUFFER139_OFFSET)

/* JDU Q_TABLE_BUFFER140 Register (32 bits) */
#define JDU_Q_TABLE_BUFFER140_OFFSET   0x1A30
#define JDU_Q_TABLE_BUFFER140_REG      IOA(JDU_BASE_ADDR + JDU_Q_TABLE_BUFFER140_OFFSET)

/* JDU Q_TABLE_BUFFER141 Register (32 bits) */
#define JDU_Q_TABLE_BUFFER141_OFFSET   0x1A34
#define JDU_Q_TABLE_BUFFER141_REG      IOA(JDU_BASE_ADDR + JDU_Q_TABLE_BUFFER141_OFFSET)

/* JDU Q_TABLE_BUFFER142 Register (32 bits) */
#define JDU_Q_TABLE_BUFFER142_OFFSET   0x1A38
#define JDU_Q_TABLE_BUFFER142_REG      IOA(JDU_BASE_ADDR + JDU_Q_TABLE_BUFFER142_OFFSET)

/* JDU Q_TABLE_BUFFER143 Register (32 bits) */
#define JDU_Q_TABLE_BUFFER143_OFFSET   0x1A3C
#define JDU_Q_TABLE_BUFFER143_REG      IOA(JDU_BASE_ADDR + JDU_Q_TABLE_BUFFER143_OFFSET)

/* JDU Q_TABLE_BUFFER144 Register (32 bits) */
#define JDU_Q_TABLE_BUFFER144_OFFSET   0x1A40
#define JDU_Q_TABLE_BUFFER144_REG      IOA(JDU_BASE_ADDR + JDU_Q_TABLE_BUFFER144_OFFSET)

/* JDU Q_TABLE_BUFFER145 Register (32 bits) */
#define JDU_Q_TABLE_BUFFER145_OFFSET   0x1A44
#define JDU_Q_TABLE_BUFFER145_REG      IOA(JDU_BASE_ADDR + JDU_Q_TABLE_BUFFER145_OFFSET)

/* JDU Q_TABLE_BUFFER146 Register (32 bits) */
#define JDU_Q_TABLE_BUFFER146_OFFSET   0x1A48
#define JDU_Q_TABLE_BUFFER146_REG      IOA(JDU_BASE_ADDR + JDU_Q_TABLE_BUFFER146_OFFSET)

/* JDU Q_TABLE_BUFFER147 Register (32 bits) */
#define JDU_Q_TABLE_BUFFER147_OFFSET   0x1A4C
#define JDU_Q_TABLE_BUFFER147_REG      IOA(JDU_BASE_ADDR + JDU_Q_TABLE_BUFFER147_OFFSET)

/* JDU Q_TABLE_BUFFER148 Register (32 bits) */
#define JDU_Q_TABLE_BUFFER148_OFFSET   0x1A50
#define JDU_Q_TABLE_BUFFER148_REG      IOA(JDU_BASE_ADDR + JDU_Q_TABLE_BUFFER148_OFFSET)

/* JDU Q_TABLE_BUFFER149 Register (32 bits) */
#define JDU_Q_TABLE_BUFFER149_OFFSET   0x1A54
#define JDU_Q_TABLE_BUFFER149_REG      IOA(JDU_BASE_ADDR + JDU_Q_TABLE_BUFFER149_OFFSET)

/* JDU Q_TABLE_BUFFER150 Register (32 bits) */
#define JDU_Q_TABLE_BUFFER150_OFFSET   0x1A58
#define JDU_Q_TABLE_BUFFER150_REG      IOA(JDU_BASE_ADDR + JDU_Q_TABLE_BUFFER150_OFFSET)

/* JDU Q_TABLE_BUFFER151 Register (32 bits) */
#define JDU_Q_TABLE_BUFFER151_OFFSET   0x1A5C
#define JDU_Q_TABLE_BUFFER151_REG      IOA(JDU_BASE_ADDR + JDU_Q_TABLE_BUFFER151_OFFSET)

/* JDU Q_TABLE_BUFFER152 Register (32 bits) */
#define JDU_Q_TABLE_BUFFER152_OFFSET   0x1A60
#define JDU_Q_TABLE_BUFFER152_REG      IOA(JDU_BASE_ADDR + JDU_Q_TABLE_BUFFER152_OFFSET)

/* JDU Q_TABLE_BUFFER153 Register (32 bits) */
#define JDU_Q_TABLE_BUFFER153_OFFSET   0x1A64
#define JDU_Q_TABLE_BUFFER153_REG      IOA(JDU_BASE_ADDR + JDU_Q_TABLE_BUFFER153_OFFSET)

/* JDU Q_TABLE_BUFFER154 Register (32 bits) */
#define JDU_Q_TABLE_BUFFER154_OFFSET   0x1A68
#define JDU_Q_TABLE_BUFFER154_REG      IOA(JDU_BASE_ADDR + JDU_Q_TABLE_BUFFER154_OFFSET)

/* JDU Q_TABLE_BUFFER155 Register (32 bits) */
#define JDU_Q_TABLE_BUFFER155_OFFSET   0x1A6C
#define JDU_Q_TABLE_BUFFER155_REG      IOA(JDU_BASE_ADDR + JDU_Q_TABLE_BUFFER155_OFFSET)

/* JDU Q_TABLE_BUFFER156 Register (32 bits) */
#define JDU_Q_TABLE_BUFFER156_OFFSET   0x1A70
#define JDU_Q_TABLE_BUFFER156_REG      IOA(JDU_BASE_ADDR + JDU_Q_TABLE_BUFFER156_OFFSET)

/* JDU Q_TABLE_BUFFER157 Register (32 bits) */
#define JDU_Q_TABLE_BUFFER157_OFFSET   0x1A74
#define JDU_Q_TABLE_BUFFER157_REG      IOA(JDU_BASE_ADDR + JDU_Q_TABLE_BUFFER157_OFFSET)

/* JDU Q_TABLE_BUFFER158 Register (32 bits) */
#define JDU_Q_TABLE_BUFFER158_OFFSET   0x1A78
#define JDU_Q_TABLE_BUFFER158_REG      IOA(JDU_BASE_ADDR + JDU_Q_TABLE_BUFFER158_OFFSET)

/* JDU Q_TABLE_BUFFER159 Register (32 bits) */
#define JDU_Q_TABLE_BUFFER159_OFFSET   0x1A7C
#define JDU_Q_TABLE_BUFFER159_REG      IOA(JDU_BASE_ADDR + JDU_Q_TABLE_BUFFER159_OFFSET)

/* JDU Q_TABLE_BUFFER160 Register (32 bits) */
#define JDU_Q_TABLE_BUFFER160_OFFSET   0x1A80
#define JDU_Q_TABLE_BUFFER160_REG      IOA(JDU_BASE_ADDR + JDU_Q_TABLE_BUFFER160_OFFSET)

/* JDU Q_TABLE_BUFFER161 Register (32 bits) */
#define JDU_Q_TABLE_BUFFER161_OFFSET   0x1A84
#define JDU_Q_TABLE_BUFFER161_REG      IOA(JDU_BASE_ADDR + JDU_Q_TABLE_BUFFER161_OFFSET)

/* JDU Q_TABLE_BUFFER162 Register (32 bits) */
#define JDU_Q_TABLE_BUFFER162_OFFSET   0x1A88
#define JDU_Q_TABLE_BUFFER162_REG      IOA(JDU_BASE_ADDR + JDU_Q_TABLE_BUFFER162_OFFSET)

/* JDU Q_TABLE_BUFFER163 Register (32 bits) */
#define JDU_Q_TABLE_BUFFER163_OFFSET   0x1A8C
#define JDU_Q_TABLE_BUFFER163_REG      IOA(JDU_BASE_ADDR + JDU_Q_TABLE_BUFFER163_OFFSET)

/* JDU Q_TABLE_BUFFER164 Register (32 bits) */
#define JDU_Q_TABLE_BUFFER164_OFFSET   0x1A90
#define JDU_Q_TABLE_BUFFER164_REG      IOA(JDU_BASE_ADDR + JDU_Q_TABLE_BUFFER164_OFFSET)

/* JDU Q_TABLE_BUFFER165 Register (32 bits) */
#define JDU_Q_TABLE_BUFFER165_OFFSET   0x1A94
#define JDU_Q_TABLE_BUFFER165_REG      IOA(JDU_BASE_ADDR + JDU_Q_TABLE_BUFFER165_OFFSET)

/* JDU Q_TABLE_BUFFER166 Register (32 bits) */
#define JDU_Q_TABLE_BUFFER166_OFFSET   0x1A98
#define JDU_Q_TABLE_BUFFER166_REG      IOA(JDU_BASE_ADDR + JDU_Q_TABLE_BUFFER166_OFFSET)

/* JDU Q_TABLE_BUFFER167 Register (32 bits) */
#define JDU_Q_TABLE_BUFFER167_OFFSET   0x1A9C
#define JDU_Q_TABLE_BUFFER167_REG      IOA(JDU_BASE_ADDR + JDU_Q_TABLE_BUFFER167_OFFSET)

/* JDU Q_TABLE_BUFFER168 Register (32 bits) */
#define JDU_Q_TABLE_BUFFER168_OFFSET   0x1AA0
#define JDU_Q_TABLE_BUFFER168_REG      IOA(JDU_BASE_ADDR + JDU_Q_TABLE_BUFFER168_OFFSET)

/* JDU Q_TABLE_BUFFER169 Register (32 bits) */
#define JDU_Q_TABLE_BUFFER169_OFFSET   0x1AA4
#define JDU_Q_TABLE_BUFFER169_REG      IOA(JDU_BASE_ADDR + JDU_Q_TABLE_BUFFER169_OFFSET)

/* JDU Q_TABLE_BUFFER170 Register (32 bits) */
#define JDU_Q_TABLE_BUFFER170_OFFSET   0x1AA8
#define JDU_Q_TABLE_BUFFER170_REG      IOA(JDU_BASE_ADDR + JDU_Q_TABLE_BUFFER170_OFFSET)

/* JDU Q_TABLE_BUFFER171 Register (32 bits) */
#define JDU_Q_TABLE_BUFFER171_OFFSET   0x1AAC
#define JDU_Q_TABLE_BUFFER171_REG      IOA(JDU_BASE_ADDR + JDU_Q_TABLE_BUFFER171_OFFSET)

/* JDU Q_TABLE_BUFFER172 Register (32 bits) */
#define JDU_Q_TABLE_BUFFER172_OFFSET   0x1AB0
#define JDU_Q_TABLE_BUFFER172_REG      IOA(JDU_BASE_ADDR + JDU_Q_TABLE_BUFFER172_OFFSET)

/* JDU Q_TABLE_BUFFER173 Register (32 bits) */
#define JDU_Q_TABLE_BUFFER173_OFFSET   0x1AB4
#define JDU_Q_TABLE_BUFFER173_REG      IOA(JDU_BASE_ADDR + JDU_Q_TABLE_BUFFER173_OFFSET)

/* JDU Q_TABLE_BUFFER174 Register (32 bits) */
#define JDU_Q_TABLE_BUFFER174_OFFSET   0x1AB8
#define JDU_Q_TABLE_BUFFER174_REG      IOA(JDU_BASE_ADDR + JDU_Q_TABLE_BUFFER174_OFFSET)

/* JDU Q_TABLE_BUFFER175 Register (32 bits) */
#define JDU_Q_TABLE_BUFFER175_OFFSET   0x1ABC
#define JDU_Q_TABLE_BUFFER175_REG      IOA(JDU_BASE_ADDR + JDU_Q_TABLE_BUFFER175_OFFSET)

/* JDU Q_TABLE_BUFFER176 Register (32 bits) */
#define JDU_Q_TABLE_BUFFER176_OFFSET   0x1AC0
#define JDU_Q_TABLE_BUFFER176_REG      IOA(JDU_BASE_ADDR + JDU_Q_TABLE_BUFFER176_OFFSET)

/* JDU Q_TABLE_BUFFER177 Register (32 bits) */
#define JDU_Q_TABLE_BUFFER177_OFFSET   0x1AC4
#define JDU_Q_TABLE_BUFFER177_REG      IOA(JDU_BASE_ADDR + JDU_Q_TABLE_BUFFER177_OFFSET)

/* JDU Q_TABLE_BUFFER178 Register (32 bits) */
#define JDU_Q_TABLE_BUFFER178_OFFSET   0x1AC8
#define JDU_Q_TABLE_BUFFER178_REG      IOA(JDU_BASE_ADDR + JDU_Q_TABLE_BUFFER178_OFFSET)

/* JDU Q_TABLE_BUFFER179 Register (32 bits) */
#define JDU_Q_TABLE_BUFFER179_OFFSET   0x1ACC
#define JDU_Q_TABLE_BUFFER179_REG      IOA(JDU_BASE_ADDR + JDU_Q_TABLE_BUFFER179_OFFSET)

/* JDU Q_TABLE_BUFFER180 Register (32 bits) */
#define JDU_Q_TABLE_BUFFER180_OFFSET   0x1AD0
#define JDU_Q_TABLE_BUFFER180_REG      IOA(JDU_BASE_ADDR + JDU_Q_TABLE_BUFFER180_OFFSET)

/* JDU Q_TABLE_BUFFER181 Register (32 bits) */
#define JDU_Q_TABLE_BUFFER181_OFFSET   0x1AD4
#define JDU_Q_TABLE_BUFFER181_REG      IOA(JDU_BASE_ADDR + JDU_Q_TABLE_BUFFER181_OFFSET)

/* JDU Q_TABLE_BUFFER182 Register (32 bits) */
#define JDU_Q_TABLE_BUFFER182_OFFSET   0x1AD8
#define JDU_Q_TABLE_BUFFER182_REG      IOA(JDU_BASE_ADDR + JDU_Q_TABLE_BUFFER182_OFFSET)

/* JDU Q_TABLE_BUFFER183 Register (32 bits) */
#define JDU_Q_TABLE_BUFFER183_OFFSET   0x1ADC
#define JDU_Q_TABLE_BUFFER183_REG      IOA(JDU_BASE_ADDR + JDU_Q_TABLE_BUFFER183_OFFSET)

/* JDU Q_TABLE_BUFFER184 Register (32 bits) */
#define JDU_Q_TABLE_BUFFER184_OFFSET   0x1AE0
#define JDU_Q_TABLE_BUFFER184_REG      IOA(JDU_BASE_ADDR + JDU_Q_TABLE_BUFFER184_OFFSET)

/* JDU Q_TABLE_BUFFER185 Register (32 bits) */
#define JDU_Q_TABLE_BUFFER185_OFFSET   0x1AE4
#define JDU_Q_TABLE_BUFFER185_REG      IOA(JDU_BASE_ADDR + JDU_Q_TABLE_BUFFER185_OFFSET)

/* JDU Q_TABLE_BUFFER186 Register (32 bits) */
#define JDU_Q_TABLE_BUFFER186_OFFSET   0x1AE8
#define JDU_Q_TABLE_BUFFER186_REG      IOA(JDU_BASE_ADDR + JDU_Q_TABLE_BUFFER186_OFFSET)

/* JDU Q_TABLE_BUFFER187 Register (32 bits) */
#define JDU_Q_TABLE_BUFFER187_OFFSET   0x1AEC
#define JDU_Q_TABLE_BUFFER187_REG      IOA(JDU_BASE_ADDR + JDU_Q_TABLE_BUFFER187_OFFSET)

/* JDU Q_TABLE_BUFFER188 Register (32 bits) */
#define JDU_Q_TABLE_BUFFER188_OFFSET   0x1AF0
#define JDU_Q_TABLE_BUFFER188_REG      IOA(JDU_BASE_ADDR + JDU_Q_TABLE_BUFFER188_OFFSET)

/* JDU Q_TABLE_BUFFER189 Register (32 bits) */
#define JDU_Q_TABLE_BUFFER189_OFFSET   0x1AF4
#define JDU_Q_TABLE_BUFFER189_REG      IOA(JDU_BASE_ADDR + JDU_Q_TABLE_BUFFER189_OFFSET)

/* JDU Q_TABLE_BUFFER190 Register (32 bits) */
#define JDU_Q_TABLE_BUFFER190_OFFSET   0x1AF8
#define JDU_Q_TABLE_BUFFER190_REG      IOA(JDU_BASE_ADDR + JDU_Q_TABLE_BUFFER190_OFFSET)

/* JDU Q_TABLE_BUFFER191 Register (32 bits) */
#define JDU_Q_TABLE_BUFFER191_OFFSET   0x1AFC
#define JDU_Q_TABLE_BUFFER191_REG      IOA(JDU_BASE_ADDR + JDU_Q_TABLE_BUFFER191_OFFSET)

/* JDU MB_SCAL_CTRL Register (32 bits) */
#define JDU_MB_SCAL_CTRL_OFFSET        0x2000
#define JDU_MB_SCAL_CTRL_REG           IOA(JDU_BASE_ADDR + JDU_MB_SCAL_CTRL_OFFSET)

/* JDU IMAGE_SIZE Register (32 bits) */
#define JDU_IMAGE_SIZE_OFFSET          0x2004
#define JDU_IMAGE_SIZE_REG             IOA(JDU_BASE_ADDR + JDU_IMAGE_SIZE_OFFSET)

/* JDU H_CROP Register (32 bits) */
#define JDU_H_CROP_OFFSET              0x2008
#define JDU_H_CROP_REG                 IOA(JDU_BASE_ADDR + JDU_H_CROP_OFFSET)

/* JDU V_CROP Register (32 bits) */
#define JDU_V_CROP_OFFSET              0x200C
#define JDU_V_CROP_REG                 IOA(JDU_BASE_ADDR + JDU_V_CROP_OFFSET)

/* JDU PRE_DOWNSCALE Register (32 bits) */
#define JDU_PRE_DOWNSCALE_OFFSET       0x2010
#define JDU_PRE_DOWNSCALE_REG          IOA(JDU_BASE_ADDR + JDU_PRE_DOWNSCALE_OFFSET)

/* JDU IP_ID Register (32 bits) */
#define JDU_IP_ID_OFFSET               0x3000
#define JDU_IP_ID_REG                  IOA(JDU_BASE_ADDR + JDU_IP_ID_OFFSET)

/* Register description for META_FILTER_IF */

/* Reset value of register JDU_META_FILTER_IF */
#define JDU_META_FILTER_IF_VALUE       0x0

/* Bits definition for register JDU_META_FILTER_IF */
#define JDU_META_FILTER_IF_SHIFT       0
#define JDU_META_FILTER_IF_FIELD       (0xFFFFFFFF - (0xFFUL<<JDU_META_FILTER_IF_SHIFT))

/*****************************************************************************/
/* Register description for META_FILTER_CORE */

/* Reset value of register JDU_META_FILTER_CORE */
#define JDU_META_FILTER_CORE_VALUE     0x0

/* Bits definition for register JDU_META_FILTER_CORE */
#define JDU_META_FILTER_CORE_SHIFT     0
#define JDU_META_FILTER_CORE_FIELD     (0xFFFFFFFF - (0xFFUL<<JDU_META_FILTER_CORE_SHIFT))

/*****************************************************************************/
/* Register description for META_COUNTER_IF */

/* Reset value of register JDU_META_COUNTER_IF */
#define JDU_META_COUNTER_IF_VALUE      0x0

/* Bits definition for register JDU_META_COUNTER_IF */
#define JDU_META_COUNTER_IF_SHIFT      0
#define JDU_META_COUNTER_IF_FIELD      (0xFFFFFFFF - (0xFFUL<<JDU_META_COUNTER_IF_SHIFT))
#define JDU_META_COUNTER_IF_0          (0x0UL<<JDU_META_COUNTER_IF_SHIFT)

/*****************************************************************************/
/* Register description for META_COUNTER_CORE */

/* Reset value of register JDU_META_COUNTER_CORE */
#define JDU_META_COUNTER_CORE_VALUE    0x0

/* Bits definition for register JDU_META_COUNTER_CORE */
#define JDU_META_COUNTER_CORE_SHIFT    0
#define JDU_META_COUNTER_CORE_FIELD    (0xFFFFFFFF - (0xFFUL<<JDU_META_COUNTER_CORE_SHIFT))
#define JDU_META_COUNTER_CORE_0        (0x0UL<<JDU_META_COUNTER_CORE_SHIFT)

/*****************************************************************************/
/* Register description for GATED_CLOCK */

/* Reset value of register JDU_GATED_CLOCK */
#define JDU_GATED_CLOCK_VALUE          0x0

/* Bits definition for register JDU_GATED_CLOCK */
#define JDU_DECODER_DOMAIN_SHIFT       16
#define JDU_DECODER_DOMAIN_FIELD       (0xFFFFFFFF - (0x1UL<<JDU_DECODER_DOMAIN_SHIFT))
#define JDU_DECODER_DOMAIN_0           (0x0UL<<JDU_DECODER_DOMAIN_SHIFT)
#define JDU_DECODER_DOMAIN_1           (0x1UL<<JDU_DECODER_DOMAIN_SHIFT)
#define JDU_DECODER_DOMAIN             (0x1UL<<JDU_DECODER_DOMAIN_SHIFT)
#define JDU_STATIC_SWITCH_SHIFT        0
#define JDU_STATIC_SWITCH_FIELD        (0xFFFFFFFF - (0x1UL<<JDU_STATIC_SWITCH_SHIFT))
#define JDU_STATIC_SWITCH_0            (0x0UL<<JDU_STATIC_SWITCH_SHIFT)
#define JDU_STATIC_SWITCH_1            (0x1UL<<JDU_STATIC_SWITCH_SHIFT)
#define JDU_STATIC_SWITCH              (0x1UL<<JDU_STATIC_SWITCH_SHIFT)

/*****************************************************************************/
/* Register description for RESET */

/* Reset value of register JDU_RESET */
#define JDU_RESET_VALUE                0x1

/* Bits definition for register JDU_RESET */
#define JDU_STREAM_INTERFAC_RESET_SHIFT            2
#define JDU_STREAM_INTERFAC_RESET_FIELD            (0xFFFFFFFF - (0x1UL<<JDU_STREAM_INTERFAC_RESET_SHIFT))
#define JDU_STREAM_INTERFAC_RESET_0    (0x0UL<<JDU_STREAM_INTERFAC_RESET_SHIFT)
#define JDU_STREAM_INTERFAC_RESET_1    (0x1UL<<JDU_STREAM_INTERFAC_RESET_SHIFT)
#define JDU_STREAM_INTERFAC_RESET      (0x1UL<<JDU_STREAM_INTERFAC_RESET_SHIFT)
#define JDU_PIXEL_INTERFACE_RESET_SHIFT            1
#define JDU_PIXEL_INTERFACE_RESET_FIELD            (0xFFFFFFFF - (0x1UL<<JDU_PIXEL_INTERFACE_RESET_SHIFT))
#define JDU_PIXEL_INTERFACE_RESET_0    (0x0UL<<JDU_PIXEL_INTERFACE_RESET_SHIFT)
#define JDU_PIXEL_INTERFACE_RESET_1    (0x1UL<<JDU_PIXEL_INTERFACE_RESET_SHIFT)
#define JDU_PIXEL_INTERFACE_RESET      (0x1UL<<JDU_PIXEL_INTERFACE_RESET_SHIFT)
#define JDU_PIPELINE_RESET_SHIFT       0
#define JDU_PIPELINE_RESET_FIELD       (0xFFFFFFFF - (0x1UL<<JDU_PIPELINE_RESET_SHIFT))
#define JDU_PIPELINE_RESET_0           (0x0UL<<JDU_PIPELINE_RESET_SHIFT)
#define JDU_PIPELINE_RESET_1           (0x1UL<<JDU_PIPELINE_RESET_SHIFT)
#define JDU_PIPELINE_RESET             (0x1UL<<JDU_PIPELINE_RESET_SHIFT)

/*****************************************************************************/
/* Register description for INTERRUPT */

/* Reset value of register JDU_INTERRUPT */
#define JDU_INTERRUPT_VALUE            0x0

/* Bits definition for register JDU_INTERRUPT */
#define JDU_ACKNOWLEDGE_SHIFT          8
#define JDU_ACKNOWLEDGE_FIELD          (0xFFFFFFFF - (0x1UL<<JDU_ACKNOWLEDGE_SHIFT))
#define JDU_ACKNOWLEDGE_0              (0x0UL<<JDU_ACKNOWLEDGE_SHIFT)
#define JDU_ACKNOWLEDGE_1              (0x1UL<<JDU_ACKNOWLEDGE_SHIFT)
#define JDU_ACKNOWLEDGE                (0x1UL<<JDU_ACKNOWLEDGE_SHIFT)
#define JDU_ENABLE_SHIFT               0
#define JDU_ENABLE_FIELD               (0xFFFFFFFF - (0x1UL<<JDU_ENABLE_SHIFT))
#define JDU_ENABLE_0                   (0x0UL<<JDU_ENABLE_SHIFT)
#define JDU_ENABLE_1                   (0x1UL<<JDU_ENABLE_SHIFT)
#define JDU_ENABLE                     (0x1UL<<JDU_ENABLE_SHIFT)

/*****************************************************************************/
/* Register description for IP_ID */

/* Reset value of register JDU_IP_ID */
#define JDU_IP_ID_VALUE                0x10700

/* Bits definition for register JDU_IP_ID */
#define JDU_MODULE_ID_SHIFT            16
#define JDU_MODULE_ID_FIELD            (0xFFFFFFFF - (0xFFFFUL<<JDU_MODULE_ID_SHIFT))
#define JDU_MODULE_ID_1                (0x1UL<<JDU_MODULE_ID_SHIFT)
#define JDU_MAJOR_REV_SHIFT            12
#define JDU_MAJOR_REV_FIELD            (0xFFFFFFFF - (0xFUL<<JDU_MAJOR_REV_SHIFT))
#define JDU_MAJOR_REV_0                (0x0UL<<JDU_MAJOR_REV_SHIFT)
#define JDU_MINOR_REV_SHIFT            8
#define JDU_MINOR_REV_FIELD            (0xFFFFFFFF - (0xFUL<<JDU_MINOR_REV_SHIFT))
#define JDU_MINOR_REV_7                (0x7UL<<JDU_MINOR_REV_SHIFT)

/*****************************************************************************/
/* Register description for STATUS */

/* Reset value of register JDU_STATUS */
#define JDU_STATUS_VALUE               0x0

/* Bits definition for register JDU_STATUS */
#define JDU_MARKER_IDENTIFIER_SHIFT    8
#define JDU_MARKER_IDENTIFIER_FIELD    (0xFFFFFFFF - (0xFFUL<<JDU_MARKER_IDENTIFIER_SHIFT))
#define JDU_MARKER_IDENTIFIER_0        (0x0UL<<JDU_MARKER_IDENTIFIER_SHIFT)
#define JDU_STATUS_SHIFT               0
#define JDU_STATUS_FIELD               (0xFFFFFFFF - (0xFFUL<<JDU_STATUS_SHIFT))
#define JDU_STATUS_0                   (0x0UL<<JDU_STATUS_SHIFT)
#define JDU_STATUS_1                   (0x1UL<<JDU_STATUS_SHIFT)
#define JDU_STATUS_2                   (0x2UL<<JDU_STATUS_SHIFT)
#define JDU_STATUS_3                   (0x3UL<<JDU_STATUS_SHIFT)
#define JDU_STATUS_5                   (0x5UL<<JDU_STATUS_SHIFT)
#define JDU_STATUS_6                   (0x6UL<<JDU_STATUS_SHIFT)
#define JDU_STATUS_7                   (0x7UL<<JDU_STATUS_SHIFT)

/*****************************************************************************/
/* Register description for Q_MODE */

/* Reset value of register JDU_Q_MODE */
#define JDU_Q_MODE_VALUE               0x0

/* Bits definition for register JDU_Q_MODE */
#define JDU_Q_COMPONENT_0_SHIFT        24
#define JDU_Q_COMPONENT_0_FIELD        (0xFFFFFFFF - (0x3UL<<JDU_Q_COMPONENT_0_SHIFT))
#define JDU_Q_COMPONENT_1_SHIFT        16
#define JDU_Q_COMPONENT_1_FIELD        (0xFFFFFFFF - (0x3UL<<JDU_Q_COMPONENT_1_SHIFT))
#define JDU_Q_COMPONENT_2_SHIFT        8
#define JDU_Q_COMPONENT_2_FIELD        (0xFFFFFFFF - (0x3UL<<JDU_Q_COMPONENT_2_SHIFT))

/*****************************************************************************/
/* Register description for H_MODE */

/* Reset value of register JDU_H_MODE */
#define JDU_H_MODE_VALUE               0x0

/* Bits definition for register JDU_H_MODE */
#define JDU_DC_COMPONENT_0_SHIFT       28
#define JDU_DC_COMPONENT_0_FIELD       (0xFFFFFFFF - (0x1UL<<JDU_DC_COMPONENT_0_SHIFT))
#define JDU_DC_COMPONENT_0             (0x1UL<<JDU_DC_COMPONENT_0_SHIFT)
#define JDU_AC_COMPONENT_0_SHIFT       24
#define JDU_AC_COMPONENT_0_FIELD       (0xFFFFFFFF - (0x1UL<<JDU_AC_COMPONENT_0_SHIFT))
#define JDU_AC_COMPONENT_0             (0x1UL<<JDU_AC_COMPONENT_0_SHIFT)
#define JDU_DC_COMPONENT_1_SHIFT       20
#define JDU_DC_COMPONENT_1_FIELD       (0xFFFFFFFF - (0x1UL<<JDU_DC_COMPONENT_1_SHIFT))
#define JDU_DC_COMPONENT_1             (0x1UL<<JDU_DC_COMPONENT_1_SHIFT)
#define JDU_AC_COMPONENT_1_SHIFT       16
#define JDU_AC_COMPONENT_1_FIELD       (0xFFFFFFFF - (0x1UL<<JDU_AC_COMPONENT_1_SHIFT))
#define JDU_AC_COMPONENT_1             (0x1UL<<JDU_AC_COMPONENT_1_SHIFT)
#define JDU_DC_COMPONENT_2_SHIFT       12
#define JDU_DC_COMPONENT_2_FIELD       (0xFFFFFFFF - (0x1UL<<JDU_DC_COMPONENT_2_SHIFT))
#define JDU_DC_COMPONENT_2             (0x1UL<<JDU_DC_COMPONENT_2_SHIFT)
#define JDU_AC_COMPONENT_2_SHIFT       8
#define JDU_AC_COMPONENT_2_FIELD       (0xFFFFFFFF - (0x1UL<<JDU_AC_COMPONENT_2_SHIFT))
#define JDU_AC_COMPONENT_2             (0x1UL<<JDU_AC_COMPONENT_2_SHIFT)

/*****************************************************************************/
/* Register description for S_FORMAT_CORE */

/* Reset value of register JDU_S_FORMAT_CORE */
#define JDU_S_FORMAT_CORE_VALUE        0x0

/* Bits definition for register JDU_S_FORMAT_CORE */
#define JDU_S_COMPONENT_0_SHIFT        24
#define JDU_S_COMPONENT_0_FIELD        (0xFFFFFFFF - (0x7UL<<JDU_S_COMPONENT_0_SHIFT))
#define JDU_S_COMPONENT_1_SHIFT        16
#define JDU_S_COMPONENT_1_FIELD        (0xFFFFFFFF - (0x7UL<<JDU_S_COMPONENT_1_SHIFT))
#define JDU_S_COMPONENT_2_SHIFT        8
#define JDU_S_COMPONENT_2_FIELD        (0xFFFFFFFF - (0x7UL<<JDU_S_COMPONENT_2_SHIFT))

/*****************************************************************************/
/* Register description for RUN */

/* Reset value of register JDU_RUN */
#define JDU_RUN_VALUE                  0x10000

/* Bits definition for register JDU_RUN */
#define JDU_PIXELS_ORDERING_SHIFT      20
#define JDU_PIXELS_ORDERING_FIELD      (0xFFFFFFFF - (0x1UL<<JDU_PIXELS_ORDERING_SHIFT))
#define JDU_PIXELS_ORDERING_0          (0x0UL<<JDU_PIXELS_ORDERING_SHIFT)
#define JDU_PIXELS_ORDERING_1          (0x1UL<<JDU_PIXELS_ORDERING_SHIFT)
#define JDU_PIXELS_ORDERING            (0x1UL<<JDU_PIXELS_ORDERING_SHIFT)
#define JDU_MODE_SHIFT                 18
#define JDU_MODE_FIELD                 (0xFFFFFFFF - (0x3UL<<JDU_MODE_SHIFT))
#define JDU_MODE_0                     (0x0UL<<JDU_MODE_SHIFT)
#define JDU_MODE_1                     (0x1UL<<JDU_MODE_SHIFT)
#define JDU_MODE_2                     (0x2UL<<JDU_MODE_SHIFT)
#define JDU_MODE_3                     (0x3UL<<JDU_MODE_SHIFT)
#define JDU_BYTE_SWAPPING_SHIFT        17
#define JDU_BYTE_SWAPPING_FIELD        (0xFFFFFFFF - (0x1UL<<JDU_BYTE_SWAPPING_SHIFT))
#define JDU_BYTE_SWAPPING_0            (0x0UL<<JDU_BYTE_SWAPPING_SHIFT)
#define JDU_BYTE_SWAPPING_1            (0x1UL<<JDU_BYTE_SWAPPING_SHIFT)
#define JDU_BYTE_SWAPPING              (0x1UL<<JDU_BYTE_SWAPPING_SHIFT)
#define JDU_RUN_SHIFT                  0
#define JDU_RUN_FIELD                  (0xFFFFFFFF - (0x1UL<<JDU_RUN_SHIFT))
#define JDU_RUN_1                      (0x1UL<<JDU_RUN_SHIFT)
#define JDU_RUN_0                      (0x0UL<<JDU_RUN_SHIFT)
#define JDU_RUN                        (0x1UL<<JDU_RUN_SHIFT)

/*****************************************************************************/
/* Register description for FB_ADDRESS_C[0:2] */

/* Reset value of register JDU_FB_ADDRESS_C[0:2] */
#define JDU_FB_ADDRESS_C0_VALUE        0x0
#define JDU_FB_ADDRESS_C1_VALUE        0x0
#define JDU_FB_ADDRESS_C2_VALUE        0x0

/* Bits definition for register JDU_FB_ADDRESS_C[0:2] */
#define JDU_FB_ADDRESS_SHIFT           0
#define JDU_FB_ADDRESS_FIELD           (0xFFFFFFFF - (0x7FFFFFFFUL<<JDU_FB_ADDRESS_SHIFT))
#define JDU_FB_ADDRESS_0               (0x0UL<<JDU_FB_ADDRESS_SHIFT)

/*****************************************************************************/
/* Register description for X_OFFSET_C[0:2] */

/* Reset value of register JDU_X_OFFSET_C[0:2] */
#define JDU_X_OFFSET_C0_VALUE          0x0
#define JDU_X_OFFSET_C1_VALUE          0x0
#define JDU_X_OFFSET_C2_VALUE          0x0

/* Bits definition for register JDU_X_OFFSET_C[0:2] */
#define JDU_X_OFFSET_SHIFT             0
#define JDU_X_OFFSET_FIELD             (0xFFFFFFFF - (0x7FFFFFFFUL<<JDU_X_OFFSET_SHIFT))
#define JDU_X_OFFSET_0                 (0x0UL<<JDU_X_OFFSET_SHIFT)

/*****************************************************************************/
/* Register description for S_FORMAT_PIF */

/* Reset value of register JDU_S_FORMAT_PIF */
#define JDU_S_FORMAT_PIF_VALUE         0x0

/* Bits definition for register JDU_S_FORMAT_PIF */
#define JDU_VER_H_SAMPLING_C0_SHIFT    28
#define JDU_VER_H_SAMPLING_C0_FIELD    (0xFFFFFFFF - (0xFUL<<JDU_VER_H_SAMPLING_C0_SHIFT))
#define JDU_VER_H_SAMPLING_C0_0        (0x0UL<<JDU_VER_H_SAMPLING_C0_SHIFT)
#define JDU_HOR_H_SAMPLING_C0_SHIFT    24
#define JDU_HOR_H_SAMPLING_C0_FIELD    (0xFFFFFFFF - (0xFUL<<JDU_HOR_H_SAMPLING_C0_SHIFT))
#define JDU_HOR_H_SAMPLING_C0_0        (0x0UL<<JDU_HOR_H_SAMPLING_C0_SHIFT)
#define JDU_VER_H_SAMPLING_C1_SHIFT    20
#define JDU_VER_H_SAMPLING_C1_FIELD    (0xFFFFFFFF - (0xFUL<<JDU_VER_H_SAMPLING_C1_SHIFT))
#define JDU_VER_H_SAMPLING_C1_0        (0x0UL<<JDU_VER_H_SAMPLING_C1_SHIFT)
#define JDU_HOR_H_SAMPLING_C1_SHIFT    16
#define JDU_HOR_H_SAMPLING_C1_FIELD    (0xFFFFFFFF - (0xFUL<<JDU_HOR_H_SAMPLING_C1_SHIFT))
#define JDU_HOR_H_SAMPLING_C1_0        (0x0UL<<JDU_HOR_H_SAMPLING_C1_SHIFT)
#define JDU_VER_H_SAMPLING_C2_SHIFT    12
#define JDU_VER_H_SAMPLING_C2_FIELD    (0xFFFFFFFF - (0xFUL<<JDU_VER_H_SAMPLING_C2_SHIFT))
#define JDU_VER_H_SAMPLING_C2_0        (0x0UL<<JDU_VER_H_SAMPLING_C2_SHIFT)
#define JDU_HOR_H_SAMPLING_C2_SHIFT    8
#define JDU_HOR_H_SAMPLING_C2_FIELD    (0xFFFFFFFF - (0xFUL<<JDU_HOR_H_SAMPLING_C2_SHIFT))
#define JDU_HOR_H_SAMPLING_C2_0        (0x0UL<<JDU_HOR_H_SAMPLING_C2_SHIFT)

/*****************************************************************************/
/* Register description for NO_MB_LINES */

/* Reset value of register JDU_NO_MB_LINES */
#define JDU_NO_MB_LINES_VALUE          0x0

/* Bits definition for register JDU_NO_MB_LINES */
#define JDU_JNO_MB_LINES_SHIFT         0
#define JDU_JNO_MB_LINES_FIELD         (0xFFFFFFFF - (0xFFFFUL<<JDU_JNO_MB_LINES_SHIFT))
#define JDU_JNO_MB_LINES_0             (0x0UL<<JDU_JNO_MB_LINES_SHIFT)

/*****************************************************************************/
/* Register description for NO_MCU_PER_MBL */

/* Reset value of register JDU_NO_MCU_PER_MBL */
#define JDU_NO_MCU_PER_MBL_VALUE       0x0

/* Bits definition for register JDU_NO_MCU_PER_MBL */
#define JDU_NO_MCU_PER_MBL_SHIFT       0
#define JDU_NO_MCU_PER_MBL_FIELD       (0xFFFFFFFF - (0xFFFFUL<<JDU_NO_MCU_PER_MBL_SHIFT))
#define JDU_NO_MCU_PER_MBL_0           (0x0UL<<JDU_NO_MCU_PER_MBL_SHIFT)

/*****************************************************************************/
/* Register description for STRIDE_LENGTH */

/* Reset value of register JDU_STRIDE_LENGTH */
#define JDU_STRIDE_LENGTH_VALUE        0x0

/* Bits definition for register JDU_STRIDE_LENGTH */
#define JDU_STRIDE_LENGTH2_SHIFT       20
#define JDU_STRIDE_LENGTH2_FIELD       (0xFFFFFFFF - (0x3FFUL<<JDU_STRIDE_LENGTH2_SHIFT))
#define JDU_STRIDE_LENGTH2_0           (0x0UL<<JDU_STRIDE_LENGTH2_SHIFT)
#define JDU_STRIDE_LENGTH1_SHIFT       10
#define JDU_STRIDE_LENGTH1_FIELD       (0xFFFFFFFF - (0x3FFUL<<JDU_STRIDE_LENGTH1_SHIFT))
#define JDU_STRIDE_LENGTH1_0           (0x0UL<<JDU_STRIDE_LENGTH1_SHIFT)
#define JDU_STRIDE_LENGTH0_SHIFT       0
#define JDU_STRIDE_LENGTH0_FIELD       (0xFFFFFFFF - (0x3FFUL<<JDU_STRIDE_LENGTH0_SHIFT))
#define JDU_STRIDE_LENGTH0_0           (0x0UL<<JDU_STRIDE_LENGTH0_SHIFT)

/*****************************************************************************/
/* Register description for SB_ADDRESS */

/* Reset value of register JDU_SB_ADDRESS */
#define JDU_SB_ADDRESS_VALUE           0x0

/* Bits definition for register JDU_SB_ADDRESS */
#define JDU_SB_ADDRESS_SHIFT           0
#define JDU_SB_ADDRESS_FIELD           (0xFFFFFFFF - (0x7FFFFFFFUL<<JDU_SB_ADDRESS_SHIFT))
#define JDU_SB_ADDRESS_0               (0x0UL<<JDU_SB_ADDRESS_SHIFT)

/*****************************************************************************/
/* Register description for SB_ADDRESS_MASK */

/* Reset value of register JDU_SB_ADDRESS_MASK */
#define JDU_SB_ADDRESS_MASK_VALUE      0x0

/* Bits definition for register JDU_SB_ADDRESS_MASK */
#define JDU_SB_ADDRESS_MASK_SHIFT      0
#define JDU_SB_ADDRESS_MASK_FIELD      (0xFFFFFFFF - (0x7FFFFFFFUL<<JDU_SB_ADDRESS_MASK_SHIFT))
#define JDU_SB_ADDRESS_MASK_0          (0x0UL<<JDU_SB_ADDRESS_MASK_SHIFT)

/*****************************************************************************/
/* Register description for SB_BASE_ADDRESS */

/* Reset value of register JDU_SB_BASE_ADDRESS */

/* Bits definition for register JDU_SB_BASE_ADDRESS */

/*****************************************************************************/
/* Register description for START_BIT_LOCATION */

/* Reset value of register JDU_START_BIT_LOCATION */
#define JDU_START_BIT_LOCATION_VALUE   0x1F

/* Bits definition for register JDU_START_BIT_LOCATION */
#define JDU_BIT_START_SHIFT            0
#define JDU_BIT_START_FIELD            (0xFFFFFFFF - (0x1FUL<<JDU_BIT_START_SHIFT))
#define JDU_BIT_START_1F               (0x1FUL<<JDU_BIT_START_SHIFT)

/*****************************************************************************/
/* Register description for END_START_BIT_LOCATION */

/* Reset value of register JDU_END_START_BIT_LOCATION */
#define JDU_END_START_BIT_LOCATION_VALUE           0x0

/* Bits definition for register JDU_END_START_BIT_LOCATION */
#define JDU_END_START_BIT_SHIFT        0
#define JDU_END_START_BIT_FIELD        (0xFFFFFFFF - (0x7FFFFFFFUL<<JDU_END_START_BIT_SHIFT))
#define JDU_END_START_BIT_0            (0x0UL<<JDU_END_START_BIT_SHIFT)

/*****************************************************************************/
/* Register description for END_BIT_LOCATION */

/* Reset value of register JDU_END_BIT_LOCATION */
#define JDU_END_BIT_LOCATION_VALUE     0x0

/* Bits definition for register JDU_END_BIT_LOCATION */
#define JDU_END_BIT_SHIFT              0
#define JDU_END_BIT_FIELD              (0xFFFFFFFF - (0x1FUL<<JDU_END_BIT_SHIFT))
#define JDU_END_BIT_0                  (0x0UL<<JDU_END_BIT_SHIFT)

/*****************************************************************************/
/* Register description for DC[2:0]_DATA */

/* Reset value of register JDU_DC[2:0]_DATA */
#define JDU_DC0_DATA_VALUE             0x0
#define JDU_DC1_DATA_VALUE             0x0
#define JDU_DC2_DATA_VALUE             0x0

/* Bits definition for register JDU_DC[2:0]_DATA */
#define JDU_DC_SHIFT                   0
#define JDU_DC_FIELD                   (0xFFFFFFFF - (0xFFFUL<<JDU_DC_SHIFT))
#define JDU_DC_0                       (0x0UL<<JDU_DC_SHIFT)

/*****************************************************************************/
/* Register description for H_TABLE_BUFFER[0:347] */

/* Reset value of register JDU_H_TABLE_BUFFER[0:347] */
#define JDU_H_TABLE_BUFFER0_VALUE      0x0
#define JDU_H_TABLE_BUFFER1_VALUE      0x0
#define JDU_H_TABLE_BUFFER2_VALUE      0x0
#define JDU_H_TABLE_BUFFER3_VALUE      0x0
#define JDU_H_TABLE_BUFFER4_VALUE      0x0
#define JDU_H_TABLE_BUFFER5_VALUE      0x0
#define JDU_H_TABLE_BUFFER6_VALUE      0x0
#define JDU_H_TABLE_BUFFER7_VALUE      0x0
#define JDU_H_TABLE_BUFFER8_VALUE      0x0
#define JDU_H_TABLE_BUFFER9_VALUE      0x0
#define JDU_H_TABLE_BUFFER10_VALUE     0x0
#define JDU_H_TABLE_BUFFER11_VALUE     0x0
#define JDU_H_TABLE_BUFFER12_VALUE     0x0
#define JDU_H_TABLE_BUFFER13_VALUE     0x0
#define JDU_H_TABLE_BUFFER14_VALUE     0x0
#define JDU_H_TABLE_BUFFER15_VALUE     0x0
#define JDU_H_TABLE_BUFFER16_VALUE     0x0
#define JDU_H_TABLE_BUFFER17_VALUE     0x0
#define JDU_H_TABLE_BUFFER18_VALUE     0x0
#define JDU_H_TABLE_BUFFER19_VALUE     0x0
#define JDU_H_TABLE_BUFFER20_VALUE     0x0
#define JDU_H_TABLE_BUFFER21_VALUE     0x0
#define JDU_H_TABLE_BUFFER22_VALUE     0x0
#define JDU_H_TABLE_BUFFER23_VALUE     0x0
#define JDU_H_TABLE_BUFFER24_VALUE     0x0
#define JDU_H_TABLE_BUFFER25_VALUE     0x0
#define JDU_H_TABLE_BUFFER26_VALUE     0x0
#define JDU_H_TABLE_BUFFER27_VALUE     0x0
#define JDU_H_TABLE_BUFFER28_VALUE     0x0
#define JDU_H_TABLE_BUFFER29_VALUE     0x0
#define JDU_H_TABLE_BUFFER30_VALUE     0x0
#define JDU_H_TABLE_BUFFER31_VALUE     0x0
#define JDU_H_TABLE_BUFFER32_VALUE     0x0
#define JDU_H_TABLE_BUFFER33_VALUE     0x0
#define JDU_H_TABLE_BUFFER34_VALUE     0x0
#define JDU_H_TABLE_BUFFER35_VALUE     0x0
#define JDU_H_TABLE_BUFFER36_VALUE     0x0
#define JDU_H_TABLE_BUFFER37_VALUE     0x0
#define JDU_H_TABLE_BUFFER38_VALUE     0x0
#define JDU_H_TABLE_BUFFER39_VALUE     0x0
#define JDU_H_TABLE_BUFFER40_VALUE     0x0
#define JDU_H_TABLE_BUFFER41_VALUE     0x0
#define JDU_H_TABLE_BUFFER42_VALUE     0x0
#define JDU_H_TABLE_BUFFER43_VALUE     0x0
#define JDU_H_TABLE_BUFFER44_VALUE     0x0
#define JDU_H_TABLE_BUFFER45_VALUE     0x0
#define JDU_H_TABLE_BUFFER46_VALUE     0x0
#define JDU_H_TABLE_BUFFER47_VALUE     0x0
#define JDU_H_TABLE_BUFFER48_VALUE     0x0
#define JDU_H_TABLE_BUFFER49_VALUE     0x0
#define JDU_H_TABLE_BUFFER50_VALUE     0x0
#define JDU_H_TABLE_BUFFER51_VALUE     0x0
#define JDU_H_TABLE_BUFFER52_VALUE     0x0
#define JDU_H_TABLE_BUFFER53_VALUE     0x0
#define JDU_H_TABLE_BUFFER54_VALUE     0x0
#define JDU_H_TABLE_BUFFER55_VALUE     0x0
#define JDU_H_TABLE_BUFFER56_VALUE     0x0
#define JDU_H_TABLE_BUFFER57_VALUE     0x0
#define JDU_H_TABLE_BUFFER58_VALUE     0x0
#define JDU_H_TABLE_BUFFER59_VALUE     0x0
#define JDU_H_TABLE_BUFFER60_VALUE     0x0
#define JDU_H_TABLE_BUFFER61_VALUE     0x0
#define JDU_H_TABLE_BUFFER62_VALUE     0x0
#define JDU_H_TABLE_BUFFER63_VALUE     0x0
#define JDU_H_TABLE_BUFFER64_VALUE     0x0
#define JDU_H_TABLE_BUFFER65_VALUE     0x0
#define JDU_H_TABLE_BUFFER66_VALUE     0x0
#define JDU_H_TABLE_BUFFER67_VALUE     0x0
#define JDU_H_TABLE_BUFFER68_VALUE     0x0
#define JDU_H_TABLE_BUFFER69_VALUE     0x0
#define JDU_H_TABLE_BUFFER70_VALUE     0x0
#define JDU_H_TABLE_BUFFER71_VALUE     0x0
#define JDU_H_TABLE_BUFFER72_VALUE     0x0
#define JDU_H_TABLE_BUFFER73_VALUE     0x0
#define JDU_H_TABLE_BUFFER74_VALUE     0x0
#define JDU_H_TABLE_BUFFER75_VALUE     0x0
#define JDU_H_TABLE_BUFFER76_VALUE     0x0
#define JDU_H_TABLE_BUFFER77_VALUE     0x0
#define JDU_H_TABLE_BUFFER78_VALUE     0x0
#define JDU_H_TABLE_BUFFER79_VALUE     0x0
#define JDU_H_TABLE_BUFFER80_VALUE     0x0
#define JDU_H_TABLE_BUFFER81_VALUE     0x0
#define JDU_H_TABLE_BUFFER82_VALUE     0x0
#define JDU_H_TABLE_BUFFER83_VALUE     0x0
#define JDU_H_TABLE_BUFFER84_VALUE     0x0
#define JDU_H_TABLE_BUFFER85_VALUE     0x0
#define JDU_H_TABLE_BUFFER86_VALUE     0x0
#define JDU_H_TABLE_BUFFER87_VALUE     0x0
#define JDU_H_TABLE_BUFFER88_VALUE     0x0
#define JDU_H_TABLE_BUFFER89_VALUE     0x0
#define JDU_H_TABLE_BUFFER90_VALUE     0x0
#define JDU_H_TABLE_BUFFER91_VALUE     0x0
#define JDU_H_TABLE_BUFFER92_VALUE     0x0
#define JDU_H_TABLE_BUFFER93_VALUE     0x0
#define JDU_H_TABLE_BUFFER94_VALUE     0x0
#define JDU_H_TABLE_BUFFER95_VALUE     0x0
#define JDU_H_TABLE_BUFFER96_VALUE     0x0
#define JDU_H_TABLE_BUFFER97_VALUE     0x0
#define JDU_H_TABLE_BUFFER98_VALUE     0x0
#define JDU_H_TABLE_BUFFER99_VALUE     0x0
#define JDU_H_TABLE_BUFFER100_VALUE    0x0
#define JDU_H_TABLE_BUFFER101_VALUE    0x0
#define JDU_H_TABLE_BUFFER102_VALUE    0x0
#define JDU_H_TABLE_BUFFER103_VALUE    0x0
#define JDU_H_TABLE_BUFFER104_VALUE    0x0
#define JDU_H_TABLE_BUFFER105_VALUE    0x0
#define JDU_H_TABLE_BUFFER106_VALUE    0x0
#define JDU_H_TABLE_BUFFER107_VALUE    0x0
#define JDU_H_TABLE_BUFFER108_VALUE    0x0
#define JDU_H_TABLE_BUFFER109_VALUE    0x0
#define JDU_H_TABLE_BUFFER110_VALUE    0x0
#define JDU_H_TABLE_BUFFER111_VALUE    0x0
#define JDU_H_TABLE_BUFFER112_VALUE    0x0
#define JDU_H_TABLE_BUFFER113_VALUE    0x0
#define JDU_H_TABLE_BUFFER114_VALUE    0x0
#define JDU_H_TABLE_BUFFER115_VALUE    0x0
#define JDU_H_TABLE_BUFFER116_VALUE    0x0
#define JDU_H_TABLE_BUFFER117_VALUE    0x0
#define JDU_H_TABLE_BUFFER118_VALUE    0x0
#define JDU_H_TABLE_BUFFER119_VALUE    0x0
#define JDU_H_TABLE_BUFFER120_VALUE    0x0
#define JDU_H_TABLE_BUFFER121_VALUE    0x0
#define JDU_H_TABLE_BUFFER122_VALUE    0x0
#define JDU_H_TABLE_BUFFER123_VALUE    0x0
#define JDU_H_TABLE_BUFFER124_VALUE    0x0
#define JDU_H_TABLE_BUFFER125_VALUE    0x0
#define JDU_H_TABLE_BUFFER126_VALUE    0x0
#define JDU_H_TABLE_BUFFER127_VALUE    0x0
#define JDU_H_TABLE_BUFFER128_VALUE    0x0
#define JDU_H_TABLE_BUFFER129_VALUE    0x0
#define JDU_H_TABLE_BUFFER130_VALUE    0x0
#define JDU_H_TABLE_BUFFER131_VALUE    0x0
#define JDU_H_TABLE_BUFFER132_VALUE    0x0
#define JDU_H_TABLE_BUFFER133_VALUE    0x0
#define JDU_H_TABLE_BUFFER134_VALUE    0x0
#define JDU_H_TABLE_BUFFER135_VALUE    0x0
#define JDU_H_TABLE_BUFFER136_VALUE    0x0
#define JDU_H_TABLE_BUFFER137_VALUE    0x0
#define JDU_H_TABLE_BUFFER138_VALUE    0x0
#define JDU_H_TABLE_BUFFER139_VALUE    0x0
#define JDU_H_TABLE_BUFFER140_VALUE    0x0
#define JDU_H_TABLE_BUFFER141_VALUE    0x0
#define JDU_H_TABLE_BUFFER142_VALUE    0x0
#define JDU_H_TABLE_BUFFER143_VALUE    0x0
#define JDU_H_TABLE_BUFFER144_VALUE    0x0
#define JDU_H_TABLE_BUFFER145_VALUE    0x0
#define JDU_H_TABLE_BUFFER146_VALUE    0x0
#define JDU_H_TABLE_BUFFER147_VALUE    0x0
#define JDU_H_TABLE_BUFFER148_VALUE    0x0
#define JDU_H_TABLE_BUFFER149_VALUE    0x0
#define JDU_H_TABLE_BUFFER150_VALUE    0x0
#define JDU_H_TABLE_BUFFER151_VALUE    0x0
#define JDU_H_TABLE_BUFFER152_VALUE    0x0
#define JDU_H_TABLE_BUFFER153_VALUE    0x0
#define JDU_H_TABLE_BUFFER154_VALUE    0x0
#define JDU_H_TABLE_BUFFER155_VALUE    0x0
#define JDU_H_TABLE_BUFFER156_VALUE    0x0
#define JDU_H_TABLE_BUFFER157_VALUE    0x0
#define JDU_H_TABLE_BUFFER158_VALUE    0x0
#define JDU_H_TABLE_BUFFER159_VALUE    0x0
#define JDU_H_TABLE_BUFFER160_VALUE    0x0
#define JDU_H_TABLE_BUFFER161_VALUE    0x0
#define JDU_H_TABLE_BUFFER162_VALUE    0x0
#define JDU_H_TABLE_BUFFER163_VALUE    0x0
#define JDU_H_TABLE_BUFFER164_VALUE    0x0
#define JDU_H_TABLE_BUFFER165_VALUE    0x0
#define JDU_H_TABLE_BUFFER166_VALUE    0x0
#define JDU_H_TABLE_BUFFER167_VALUE    0x0
#define JDU_H_TABLE_BUFFER168_VALUE    0x0
#define JDU_H_TABLE_BUFFER169_VALUE    0x0
#define JDU_H_TABLE_BUFFER170_VALUE    0x0
#define JDU_H_TABLE_BUFFER171_VALUE    0x0
#define JDU_H_TABLE_BUFFER172_VALUE    0x0
#define JDU_H_TABLE_BUFFER173_VALUE    0x0
#define JDU_H_TABLE_BUFFER174_VALUE    0x0
#define JDU_H_TABLE_BUFFER175_VALUE    0x0
#define JDU_H_TABLE_BUFFER176_VALUE    0x0
#define JDU_H_TABLE_BUFFER177_VALUE    0x0
#define JDU_H_TABLE_BUFFER178_VALUE    0x0
#define JDU_H_TABLE_BUFFER179_VALUE    0x0
#define JDU_H_TABLE_BUFFER180_VALUE    0x0
#define JDU_H_TABLE_BUFFER181_VALUE    0x0
#define JDU_H_TABLE_BUFFER182_VALUE    0x0
#define JDU_H_TABLE_BUFFER183_VALUE    0x0
#define JDU_H_TABLE_BUFFER184_VALUE    0x0
#define JDU_H_TABLE_BUFFER185_VALUE    0x0
#define JDU_H_TABLE_BUFFER186_VALUE    0x0
#define JDU_H_TABLE_BUFFER187_VALUE    0x0
#define JDU_H_TABLE_BUFFER188_VALUE    0x0
#define JDU_H_TABLE_BUFFER189_VALUE    0x0
#define JDU_H_TABLE_BUFFER190_VALUE    0x0
#define JDU_H_TABLE_BUFFER191_VALUE    0x0
#define JDU_H_TABLE_BUFFER192_VALUE    0x0
#define JDU_H_TABLE_BUFFER193_VALUE    0x0
#define JDU_H_TABLE_BUFFER194_VALUE    0x0
#define JDU_H_TABLE_BUFFER195_VALUE    0x0
#define JDU_H_TABLE_BUFFER196_VALUE    0x0
#define JDU_H_TABLE_BUFFER197_VALUE    0x0
#define JDU_H_TABLE_BUFFER198_VALUE    0x0
#define JDU_H_TABLE_BUFFER199_VALUE    0x0
#define JDU_H_TABLE_BUFFER200_VALUE    0x0
#define JDU_H_TABLE_BUFFER201_VALUE    0x0
#define JDU_H_TABLE_BUFFER202_VALUE    0x0
#define JDU_H_TABLE_BUFFER203_VALUE    0x0
#define JDU_H_TABLE_BUFFER204_VALUE    0x0
#define JDU_H_TABLE_BUFFER205_VALUE    0x0
#define JDU_H_TABLE_BUFFER206_VALUE    0x0
#define JDU_H_TABLE_BUFFER207_VALUE    0x0
#define JDU_H_TABLE_BUFFER208_VALUE    0x0
#define JDU_H_TABLE_BUFFER209_VALUE    0x0
#define JDU_H_TABLE_BUFFER210_VALUE    0x0
#define JDU_H_TABLE_BUFFER211_VALUE    0x0
#define JDU_H_TABLE_BUFFER212_VALUE    0x0
#define JDU_H_TABLE_BUFFER213_VALUE    0x0
#define JDU_H_TABLE_BUFFER214_VALUE    0x0
#define JDU_H_TABLE_BUFFER215_VALUE    0x0
#define JDU_H_TABLE_BUFFER216_VALUE    0x0
#define JDU_H_TABLE_BUFFER217_VALUE    0x0
#define JDU_H_TABLE_BUFFER218_VALUE    0x0
#define JDU_H_TABLE_BUFFER219_VALUE    0x0
#define JDU_H_TABLE_BUFFER220_VALUE    0x0
#define JDU_H_TABLE_BUFFER221_VALUE    0x0
#define JDU_H_TABLE_BUFFER222_VALUE    0x0
#define JDU_H_TABLE_BUFFER223_VALUE    0x0
#define JDU_H_TABLE_BUFFER224_VALUE    0x0
#define JDU_H_TABLE_BUFFER225_VALUE    0x0
#define JDU_H_TABLE_BUFFER226_VALUE    0x0
#define JDU_H_TABLE_BUFFER227_VALUE    0x0
#define JDU_H_TABLE_BUFFER228_VALUE    0x0
#define JDU_H_TABLE_BUFFER229_VALUE    0x0
#define JDU_H_TABLE_BUFFER230_VALUE    0x0
#define JDU_H_TABLE_BUFFER231_VALUE    0x0
#define JDU_H_TABLE_BUFFER232_VALUE    0x0
#define JDU_H_TABLE_BUFFER233_VALUE    0x0
#define JDU_H_TABLE_BUFFER234_VALUE    0x0
#define JDU_H_TABLE_BUFFER235_VALUE    0x0
#define JDU_H_TABLE_BUFFER236_VALUE    0x0
#define JDU_H_TABLE_BUFFER237_VALUE    0x0
#define JDU_H_TABLE_BUFFER238_VALUE    0x0
#define JDU_H_TABLE_BUFFER239_VALUE    0x0
#define JDU_H_TABLE_BUFFER240_VALUE    0x0
#define JDU_H_TABLE_BUFFER241_VALUE    0x0
#define JDU_H_TABLE_BUFFER242_VALUE    0x0
#define JDU_H_TABLE_BUFFER243_VALUE    0x0
#define JDU_H_TABLE_BUFFER244_VALUE    0x0
#define JDU_H_TABLE_BUFFER245_VALUE    0x0
#define JDU_H_TABLE_BUFFER246_VALUE    0x0
#define JDU_H_TABLE_BUFFER247_VALUE    0x0
#define JDU_H_TABLE_BUFFER248_VALUE    0x0
#define JDU_H_TABLE_BUFFER249_VALUE    0x0
#define JDU_H_TABLE_BUFFER250_VALUE    0x0
#define JDU_H_TABLE_BUFFER251_VALUE    0x0
#define JDU_H_TABLE_BUFFER252_VALUE    0x0
#define JDU_H_TABLE_BUFFER253_VALUE    0x0
#define JDU_H_TABLE_BUFFER254_VALUE    0x0
#define JDU_H_TABLE_BUFFER255_VALUE    0x0
#define JDU_H_TABLE_BUFFER256_VALUE    0x0
#define JDU_H_TABLE_BUFFER257_VALUE    0x0
#define JDU_H_TABLE_BUFFER258_VALUE    0x0
#define JDU_H_TABLE_BUFFER259_VALUE    0x0
#define JDU_H_TABLE_BUFFER260_VALUE    0x0
#define JDU_H_TABLE_BUFFER261_VALUE    0x0
#define JDU_H_TABLE_BUFFER262_VALUE    0x0
#define JDU_H_TABLE_BUFFER263_VALUE    0x0
#define JDU_H_TABLE_BUFFER264_VALUE    0x0
#define JDU_H_TABLE_BUFFER265_VALUE    0x0
#define JDU_H_TABLE_BUFFER266_VALUE    0x0
#define JDU_H_TABLE_BUFFER267_VALUE    0x0
#define JDU_H_TABLE_BUFFER268_VALUE    0x0
#define JDU_H_TABLE_BUFFER269_VALUE    0x0
#define JDU_H_TABLE_BUFFER270_VALUE    0x0
#define JDU_H_TABLE_BUFFER271_VALUE    0x0
#define JDU_H_TABLE_BUFFER272_VALUE    0x0
#define JDU_H_TABLE_BUFFER273_VALUE    0x0
#define JDU_H_TABLE_BUFFER274_VALUE    0x0
#define JDU_H_TABLE_BUFFER275_VALUE    0x0
#define JDU_H_TABLE_BUFFER276_VALUE    0x0
#define JDU_H_TABLE_BUFFER277_VALUE    0x0
#define JDU_H_TABLE_BUFFER278_VALUE    0x0
#define JDU_H_TABLE_BUFFER279_VALUE    0x0
#define JDU_H_TABLE_BUFFER280_VALUE    0x0
#define JDU_H_TABLE_BUFFER281_VALUE    0x0
#define JDU_H_TABLE_BUFFER282_VALUE    0x0
#define JDU_H_TABLE_BUFFER283_VALUE    0x0
#define JDU_H_TABLE_BUFFER284_VALUE    0x0
#define JDU_H_TABLE_BUFFER285_VALUE    0x0
#define JDU_H_TABLE_BUFFER286_VALUE    0x0
#define JDU_H_TABLE_BUFFER287_VALUE    0x0
#define JDU_H_TABLE_BUFFER288_VALUE    0x0
#define JDU_H_TABLE_BUFFER289_VALUE    0x0
#define JDU_H_TABLE_BUFFER290_VALUE    0x0
#define JDU_H_TABLE_BUFFER291_VALUE    0x0
#define JDU_H_TABLE_BUFFER292_VALUE    0x0
#define JDU_H_TABLE_BUFFER293_VALUE    0x0
#define JDU_H_TABLE_BUFFER294_VALUE    0x0
#define JDU_H_TABLE_BUFFER295_VALUE    0x0
#define JDU_H_TABLE_BUFFER296_VALUE    0x0
#define JDU_H_TABLE_BUFFER297_VALUE    0x0
#define JDU_H_TABLE_BUFFER298_VALUE    0x0
#define JDU_H_TABLE_BUFFER299_VALUE    0x0
#define JDU_H_TABLE_BUFFER300_VALUE    0x0
#define JDU_H_TABLE_BUFFER301_VALUE    0x0
#define JDU_H_TABLE_BUFFER302_VALUE    0x0
#define JDU_H_TABLE_BUFFER303_VALUE    0x0
#define JDU_H_TABLE_BUFFER304_VALUE    0x0
#define JDU_H_TABLE_BUFFER305_VALUE    0x0
#define JDU_H_TABLE_BUFFER306_VALUE    0x0
#define JDU_H_TABLE_BUFFER307_VALUE    0x0
#define JDU_H_TABLE_BUFFER308_VALUE    0x0
#define JDU_H_TABLE_BUFFER309_VALUE    0x0
#define JDU_H_TABLE_BUFFER310_VALUE    0x0
#define JDU_H_TABLE_BUFFER311_VALUE    0x0
#define JDU_H_TABLE_BUFFER312_VALUE    0x0
#define JDU_H_TABLE_BUFFER313_VALUE    0x0
#define JDU_H_TABLE_BUFFER314_VALUE    0x0
#define JDU_H_TABLE_BUFFER315_VALUE    0x0
#define JDU_H_TABLE_BUFFER316_VALUE    0x0
#define JDU_H_TABLE_BUFFER317_VALUE    0x0
#define JDU_H_TABLE_BUFFER318_VALUE    0x0
#define JDU_H_TABLE_BUFFER319_VALUE    0x0
#define JDU_H_TABLE_BUFFER320_VALUE    0x0
#define JDU_H_TABLE_BUFFER321_VALUE    0x0
#define JDU_H_TABLE_BUFFER322_VALUE    0x0
#define JDU_H_TABLE_BUFFER323_VALUE    0x0
#define JDU_H_TABLE_BUFFER324_VALUE    0x0
#define JDU_H_TABLE_BUFFER325_VALUE    0x0
#define JDU_H_TABLE_BUFFER326_VALUE    0x0
#define JDU_H_TABLE_BUFFER327_VALUE    0x0
#define JDU_H_TABLE_BUFFER328_VALUE    0x0
#define JDU_H_TABLE_BUFFER329_VALUE    0x0
#define JDU_H_TABLE_BUFFER330_VALUE    0x0
#define JDU_H_TABLE_BUFFER331_VALUE    0x0
#define JDU_H_TABLE_BUFFER332_VALUE    0x0
#define JDU_H_TABLE_BUFFER333_VALUE    0x0
#define JDU_H_TABLE_BUFFER334_VALUE    0x0
#define JDU_H_TABLE_BUFFER335_VALUE    0x0
#define JDU_H_TABLE_BUFFER336_VALUE    0x0
#define JDU_H_TABLE_BUFFER337_VALUE    0x0
#define JDU_H_TABLE_BUFFER338_VALUE    0x0
#define JDU_H_TABLE_BUFFER339_VALUE    0x0
#define JDU_H_TABLE_BUFFER340_VALUE    0x0
#define JDU_H_TABLE_BUFFER341_VALUE    0x0
#define JDU_H_TABLE_BUFFER342_VALUE    0x0
#define JDU_H_TABLE_BUFFER343_VALUE    0x0
#define JDU_H_TABLE_BUFFER344_VALUE    0x0
#define JDU_H_TABLE_BUFFER345_VALUE    0x0
#define JDU_H_TABLE_BUFFER346_VALUE    0x0
#define JDU_H_TABLE_BUFFER347_VALUE    0x0

/* Bits definition for register JDU_H_TABLE_BUFFER[0:347] */
#define JDU_HUFFMAN_CODE_SHIFT         0
#define JDU_HUFFMAN_CODE_FIELD         (0xFFFFFFFF - (0xFFFFFUL<<JDU_HUFFMAN_CODE_SHIFT))

/*****************************************************************************/
/* Register description for MIN_CODE_BUFFER[0:63] */

/* Reset value of register JDU_MIN_CODE_BUFFER[0:63] */
#define JDU_MIN_CODE_BUFFER0_VALUE     0x0
#define JDU_MIN_CODE_BUFFER1_VALUE     0x0
#define JDU_MIN_CODE_BUFFER2_VALUE     0x0
#define JDU_MIN_CODE_BUFFER3_VALUE     0x0
#define JDU_MIN_CODE_BUFFER4_VALUE     0x0
#define JDU_MIN_CODE_BUFFER5_VALUE     0x0
#define JDU_MIN_CODE_BUFFER6_VALUE     0x0
#define JDU_MIN_CODE_BUFFER7_VALUE     0x0
#define JDU_MIN_CODE_BUFFER8_VALUE     0x0
#define JDU_MIN_CODE_BUFFER9_VALUE     0x0
#define JDU_MIN_CODE_BUFFER10_VALUE    0x0
#define JDU_MIN_CODE_BUFFER11_VALUE    0x0
#define JDU_MIN_CODE_BUFFER12_VALUE    0x0
#define JDU_MIN_CODE_BUFFER13_VALUE    0x0
#define JDU_MIN_CODE_BUFFER14_VALUE    0x0
#define JDU_MIN_CODE_BUFFER15_VALUE    0x0
#define JDU_MIN_CODE_BUFFER16_VALUE    0x0
#define JDU_MIN_CODE_BUFFER17_VALUE    0x0
#define JDU_MIN_CODE_BUFFER18_VALUE    0x0
#define JDU_MIN_CODE_BUFFER19_VALUE    0x0
#define JDU_MIN_CODE_BUFFER20_VALUE    0x0
#define JDU_MIN_CODE_BUFFER21_VALUE    0x0
#define JDU_MIN_CODE_BUFFER22_VALUE    0x0
#define JDU_MIN_CODE_BUFFER23_VALUE    0x0
#define JDU_MIN_CODE_BUFFER24_VALUE    0x0
#define JDU_MIN_CODE_BUFFER25_VALUE    0x0
#define JDU_MIN_CODE_BUFFER26_VALUE    0x0
#define JDU_MIN_CODE_BUFFER27_VALUE    0x0
#define JDU_MIN_CODE_BUFFER28_VALUE    0x0
#define JDU_MIN_CODE_BUFFER29_VALUE    0x0
#define JDU_MIN_CODE_BUFFER30_VALUE    0x0
#define JDU_MIN_CODE_BUFFER31_VALUE    0x0
#define JDU_MIN_CODE_BUFFER32_VALUE    0x0
#define JDU_MIN_CODE_BUFFER33_VALUE    0x0
#define JDU_MIN_CODE_BUFFER34_VALUE    0x0
#define JDU_MIN_CODE_BUFFER35_VALUE    0x0
#define JDU_MIN_CODE_BUFFER36_VALUE    0x0
#define JDU_MIN_CODE_BUFFER37_VALUE    0x0
#define JDU_MIN_CODE_BUFFER38_VALUE    0x0
#define JDU_MIN_CODE_BUFFER39_VALUE    0x0
#define JDU_MIN_CODE_BUFFER40_VALUE    0x0
#define JDU_MIN_CODE_BUFFER41_VALUE    0x0
#define JDU_MIN_CODE_BUFFER42_VALUE    0x0
#define JDU_MIN_CODE_BUFFER43_VALUE    0x0
#define JDU_MIN_CODE_BUFFER44_VALUE    0x0
#define JDU_MIN_CODE_BUFFER45_VALUE    0x0
#define JDU_MIN_CODE_BUFFER46_VALUE    0x0
#define JDU_MIN_CODE_BUFFER47_VALUE    0x0
#define JDU_MIN_CODE_BUFFER48_VALUE    0x0
#define JDU_MIN_CODE_BUFFER49_VALUE    0x0
#define JDU_MIN_CODE_BUFFER50_VALUE    0x0
#define JDU_MIN_CODE_BUFFER51_VALUE    0x0
#define JDU_MIN_CODE_BUFFER52_VALUE    0x0
#define JDU_MIN_CODE_BUFFER53_VALUE    0x0
#define JDU_MIN_CODE_BUFFER54_VALUE    0x0
#define JDU_MIN_CODE_BUFFER55_VALUE    0x0
#define JDU_MIN_CODE_BUFFER56_VALUE    0x0
#define JDU_MIN_CODE_BUFFER57_VALUE    0x0
#define JDU_MIN_CODE_BUFFER58_VALUE    0x0
#define JDU_MIN_CODE_BUFFER59_VALUE    0x0
#define JDU_MIN_CODE_BUFFER60_VALUE    0x0
#define JDU_MIN_CODE_BUFFER61_VALUE    0x0
#define JDU_MIN_CODE_BUFFER62_VALUE    0x0
#define JDU_MIN_CODE_BUFFER63_VALUE    0x0

/* Bits definition for register JDU_MIN_CODE_BUFFER[0:63] */
#define JDU_MIN_CODE_DC_SHIFT          0
#define JDU_MIN_CODE_DC_FIELD          (0xFFFFFFFF - (0x1FFFFUL<<JDU_MIN_CODE_DC_SHIFT))

/*****************************************************************************/
/* Register description for VAL_PTR_BUFFER[0:63] */

/* Reset value of register JDU_VAL_PTR_BUFFER[0:63] */
#define JDU_VAL_PTR_BUFFER0_VALUE      0x0
#define JDU_VAL_PTR_BUFFER1_VALUE      0x0
#define JDU_VAL_PTR_BUFFER2_VALUE      0x0
#define JDU_VAL_PTR_BUFFER3_VALUE      0x0
#define JDU_VAL_PTR_BUFFER4_VALUE      0x0
#define JDU_VAL_PTR_BUFFER5_VALUE      0x0
#define JDU_VAL_PTR_BUFFER6_VALUE      0x0
#define JDU_VAL_PTR_BUFFER7_VALUE      0x0
#define JDU_VAL_PTR_BUFFER8_VALUE      0x0
#define JDU_VAL_PTR_BUFFER9_VALUE      0x0
#define JDU_VAL_PTR_BUFFER10_VALUE     0x0
#define JDU_VAL_PTR_BUFFER11_VALUE     0x0
#define JDU_VAL_PTR_BUFFER12_VALUE     0x0
#define JDU_VAL_PTR_BUFFER13_VALUE     0x0
#define JDU_VAL_PTR_BUFFER14_VALUE     0x0
#define JDU_VAL_PTR_BUFFER15_VALUE     0x0
#define JDU_VAL_PTR_BUFFER16_VALUE     0x0
#define JDU_VAL_PTR_BUFFER17_VALUE     0x0
#define JDU_VAL_PTR_BUFFER18_VALUE     0x0
#define JDU_VAL_PTR_BUFFER19_VALUE     0x0
#define JDU_VAL_PTR_BUFFER20_VALUE     0x0
#define JDU_VAL_PTR_BUFFER21_VALUE     0x0
#define JDU_VAL_PTR_BUFFER22_VALUE     0x0
#define JDU_VAL_PTR_BUFFER23_VALUE     0x0
#define JDU_VAL_PTR_BUFFER24_VALUE     0x0
#define JDU_VAL_PTR_BUFFER25_VALUE     0x0
#define JDU_VAL_PTR_BUFFER26_VALUE     0x0
#define JDU_VAL_PTR_BUFFER27_VALUE     0x0
#define JDU_VAL_PTR_BUFFER28_VALUE     0x0
#define JDU_VAL_PTR_BUFFER29_VALUE     0x0
#define JDU_VAL_PTR_BUFFER30_VALUE     0x0
#define JDU_VAL_PTR_BUFFER31_VALUE     0x0
#define JDU_VAL_PTR_BUFFER32_VALUE     0x0
#define JDU_VAL_PTR_BUFFER33_VALUE     0x0
#define JDU_VAL_PTR_BUFFER34_VALUE     0x0
#define JDU_VAL_PTR_BUFFER35_VALUE     0x0
#define JDU_VAL_PTR_BUFFER36_VALUE     0x0
#define JDU_VAL_PTR_BUFFER37_VALUE     0x0
#define JDU_VAL_PTR_BUFFER38_VALUE     0x0
#define JDU_VAL_PTR_BUFFER39_VALUE     0x0
#define JDU_VAL_PTR_BUFFER40_VALUE     0x0
#define JDU_VAL_PTR_BUFFER41_VALUE     0x0
#define JDU_VAL_PTR_BUFFER42_VALUE     0x0
#define JDU_VAL_PTR_BUFFER43_VALUE     0x0
#define JDU_VAL_PTR_BUFFER44_VALUE     0x0
#define JDU_VAL_PTR_BUFFER45_VALUE     0x0
#define JDU_VAL_PTR_BUFFER46_VALUE     0x0
#define JDU_VAL_PTR_BUFFER47_VALUE     0x0
#define JDU_VAL_PTR_BUFFER48_VALUE     0x0
#define JDU_VAL_PTR_BUFFER49_VALUE     0x0
#define JDU_VAL_PTR_BUFFER50_VALUE     0x0
#define JDU_VAL_PTR_BUFFER51_VALUE     0x0
#define JDU_VAL_PTR_BUFFER52_VALUE     0x0
#define JDU_VAL_PTR_BUFFER53_VALUE     0x0
#define JDU_VAL_PTR_BUFFER54_VALUE     0x0
#define JDU_VAL_PTR_BUFFER55_VALUE     0x0
#define JDU_VAL_PTR_BUFFER56_VALUE     0x0
#define JDU_VAL_PTR_BUFFER57_VALUE     0x0
#define JDU_VAL_PTR_BUFFER58_VALUE     0x0
#define JDU_VAL_PTR_BUFFER59_VALUE     0x0
#define JDU_VAL_PTR_BUFFER60_VALUE     0x0
#define JDU_VAL_PTR_BUFFER61_VALUE     0x0
#define JDU_VAL_PTR_BUFFER62_VALUE     0x0
#define JDU_VAL_PTR_BUFFER63_VALUE     0x0

/* Bits definition for register JDU_VAL_PTR_BUFFER[0:63] */
#define JDU_VAL_PTR_SHIFT              0
#define JDU_VAL_PTR_FIELD              (0xFFFFFFFF - (0xFFFFUL<<JDU_VAL_PTR_SHIFT))

/*****************************************************************************/
/* Register description for Q_TABLE_BUFFER[0:191] */

/* Reset value of register JDU_Q_TABLE_BUFFER[0:191] */
#define JDU_Q_TABLE_BUFFER0_VALUE      0x0
#define JDU_Q_TABLE_BUFFER1_VALUE      0x0
#define JDU_Q_TABLE_BUFFER2_VALUE      0x0
#define JDU_Q_TABLE_BUFFER3_VALUE      0x0
#define JDU_Q_TABLE_BUFFER4_VALUE      0x0
#define JDU_Q_TABLE_BUFFER5_VALUE      0x0
#define JDU_Q_TABLE_BUFFER6_VALUE      0x0
#define JDU_Q_TABLE_BUFFER7_VALUE      0x0
#define JDU_Q_TABLE_BUFFER8_VALUE      0x0
#define JDU_Q_TABLE_BUFFER9_VALUE      0x0
#define JDU_Q_TABLE_BUFFER10_VALUE     0x0
#define JDU_Q_TABLE_BUFFER11_VALUE     0x0
#define JDU_Q_TABLE_BUFFER12_VALUE     0x0
#define JDU_Q_TABLE_BUFFER13_VALUE     0x0
#define JDU_Q_TABLE_BUFFER14_VALUE     0x0
#define JDU_Q_TABLE_BUFFER15_VALUE     0x0
#define JDU_Q_TABLE_BUFFER16_VALUE     0x0
#define JDU_Q_TABLE_BUFFER17_VALUE     0x0
#define JDU_Q_TABLE_BUFFER18_VALUE     0x0
#define JDU_Q_TABLE_BUFFER19_VALUE     0x0
#define JDU_Q_TABLE_BUFFER20_VALUE     0x0
#define JDU_Q_TABLE_BUFFER21_VALUE     0x0
#define JDU_Q_TABLE_BUFFER22_VALUE     0x0
#define JDU_Q_TABLE_BUFFER23_VALUE     0x0
#define JDU_Q_TABLE_BUFFER24_VALUE     0x0
#define JDU_Q_TABLE_BUFFER25_VALUE     0x0
#define JDU_Q_TABLE_BUFFER26_VALUE     0x0
#define JDU_Q_TABLE_BUFFER27_VALUE     0x0
#define JDU_Q_TABLE_BUFFER28_VALUE     0x0
#define JDU_Q_TABLE_BUFFER29_VALUE     0x0
#define JDU_Q_TABLE_BUFFER30_VALUE     0x0
#define JDU_Q_TABLE_BUFFER31_VALUE     0x0
#define JDU_Q_TABLE_BUFFER32_VALUE     0x0
#define JDU_Q_TABLE_BUFFER33_VALUE     0x0
#define JDU_Q_TABLE_BUFFER34_VALUE     0x0
#define JDU_Q_TABLE_BUFFER35_VALUE     0x0
#define JDU_Q_TABLE_BUFFER36_VALUE     0x0
#define JDU_Q_TABLE_BUFFER37_VALUE     0x0
#define JDU_Q_TABLE_BUFFER38_VALUE     0x0
#define JDU_Q_TABLE_BUFFER39_VALUE     0x0
#define JDU_Q_TABLE_BUFFER40_VALUE     0x0
#define JDU_Q_TABLE_BUFFER41_VALUE     0x0
#define JDU_Q_TABLE_BUFFER42_VALUE     0x0
#define JDU_Q_TABLE_BUFFER43_VALUE     0x0
#define JDU_Q_TABLE_BUFFER44_VALUE     0x0
#define JDU_Q_TABLE_BUFFER45_VALUE     0x0
#define JDU_Q_TABLE_BUFFER46_VALUE     0x0
#define JDU_Q_TABLE_BUFFER47_VALUE     0x0
#define JDU_Q_TABLE_BUFFER48_VALUE     0x0
#define JDU_Q_TABLE_BUFFER49_VALUE     0x0
#define JDU_Q_TABLE_BUFFER50_VALUE     0x0
#define JDU_Q_TABLE_BUFFER51_VALUE     0x0
#define JDU_Q_TABLE_BUFFER52_VALUE     0x0
#define JDU_Q_TABLE_BUFFER53_VALUE     0x0
#define JDU_Q_TABLE_BUFFER54_VALUE     0x0
#define JDU_Q_TABLE_BUFFER55_VALUE     0x0
#define JDU_Q_TABLE_BUFFER56_VALUE     0x0
#define JDU_Q_TABLE_BUFFER57_VALUE     0x0
#define JDU_Q_TABLE_BUFFER58_VALUE     0x0
#define JDU_Q_TABLE_BUFFER59_VALUE     0x0
#define JDU_Q_TABLE_BUFFER60_VALUE     0x0
#define JDU_Q_TABLE_BUFFER61_VALUE     0x0
#define JDU_Q_TABLE_BUFFER62_VALUE     0x0
#define JDU_Q_TABLE_BUFFER63_VALUE     0x0
#define JDU_Q_TABLE_BUFFER64_VALUE     0x0
#define JDU_Q_TABLE_BUFFER65_VALUE     0x0
#define JDU_Q_TABLE_BUFFER66_VALUE     0x0
#define JDU_Q_TABLE_BUFFER67_VALUE     0x0
#define JDU_Q_TABLE_BUFFER68_VALUE     0x0
#define JDU_Q_TABLE_BUFFER69_VALUE     0x0
#define JDU_Q_TABLE_BUFFER70_VALUE     0x0
#define JDU_Q_TABLE_BUFFER71_VALUE     0x0
#define JDU_Q_TABLE_BUFFER72_VALUE     0x0
#define JDU_Q_TABLE_BUFFER73_VALUE     0x0
#define JDU_Q_TABLE_BUFFER74_VALUE     0x0
#define JDU_Q_TABLE_BUFFER75_VALUE     0x0
#define JDU_Q_TABLE_BUFFER76_VALUE     0x0
#define JDU_Q_TABLE_BUFFER77_VALUE     0x0
#define JDU_Q_TABLE_BUFFER78_VALUE     0x0
#define JDU_Q_TABLE_BUFFER79_VALUE     0x0
#define JDU_Q_TABLE_BUFFER80_VALUE     0x0
#define JDU_Q_TABLE_BUFFER81_VALUE     0x0
#define JDU_Q_TABLE_BUFFER82_VALUE     0x0
#define JDU_Q_TABLE_BUFFER83_VALUE     0x0
#define JDU_Q_TABLE_BUFFER84_VALUE     0x0
#define JDU_Q_TABLE_BUFFER85_VALUE     0x0
#define JDU_Q_TABLE_BUFFER86_VALUE     0x0
#define JDU_Q_TABLE_BUFFER87_VALUE     0x0
#define JDU_Q_TABLE_BUFFER88_VALUE     0x0
#define JDU_Q_TABLE_BUFFER89_VALUE     0x0
#define JDU_Q_TABLE_BUFFER90_VALUE     0x0
#define JDU_Q_TABLE_BUFFER91_VALUE     0x0
#define JDU_Q_TABLE_BUFFER92_VALUE     0x0
#define JDU_Q_TABLE_BUFFER93_VALUE     0x0
#define JDU_Q_TABLE_BUFFER94_VALUE     0x0
#define JDU_Q_TABLE_BUFFER95_VALUE     0x0
#define JDU_Q_TABLE_BUFFER96_VALUE     0x0
#define JDU_Q_TABLE_BUFFER97_VALUE     0x0
#define JDU_Q_TABLE_BUFFER98_VALUE     0x0
#define JDU_Q_TABLE_BUFFER99_VALUE     0x0
#define JDU_Q_TABLE_BUFFER100_VALUE    0x0
#define JDU_Q_TABLE_BUFFER101_VALUE    0x0
#define JDU_Q_TABLE_BUFFER102_VALUE    0x0
#define JDU_Q_TABLE_BUFFER103_VALUE    0x0
#define JDU_Q_TABLE_BUFFER104_VALUE    0x0
#define JDU_Q_TABLE_BUFFER105_VALUE    0x0
#define JDU_Q_TABLE_BUFFER106_VALUE    0x0
#define JDU_Q_TABLE_BUFFER107_VALUE    0x0
#define JDU_Q_TABLE_BUFFER108_VALUE    0x0
#define JDU_Q_TABLE_BUFFER109_VALUE    0x0
#define JDU_Q_TABLE_BUFFER110_VALUE    0x0
#define JDU_Q_TABLE_BUFFER111_VALUE    0x0
#define JDU_Q_TABLE_BUFFER112_VALUE    0x0
#define JDU_Q_TABLE_BUFFER113_VALUE    0x0
#define JDU_Q_TABLE_BUFFER114_VALUE    0x0
#define JDU_Q_TABLE_BUFFER115_VALUE    0x0
#define JDU_Q_TABLE_BUFFER116_VALUE    0x0
#define JDU_Q_TABLE_BUFFER117_VALUE    0x0
#define JDU_Q_TABLE_BUFFER118_VALUE    0x0
#define JDU_Q_TABLE_BUFFER119_VALUE    0x0
#define JDU_Q_TABLE_BUFFER120_VALUE    0x0
#define JDU_Q_TABLE_BUFFER121_VALUE    0x0
#define JDU_Q_TABLE_BUFFER122_VALUE    0x0
#define JDU_Q_TABLE_BUFFER123_VALUE    0x0
#define JDU_Q_TABLE_BUFFER124_VALUE    0x0
#define JDU_Q_TABLE_BUFFER125_VALUE    0x0
#define JDU_Q_TABLE_BUFFER126_VALUE    0x0
#define JDU_Q_TABLE_BUFFER127_VALUE    0x0
#define JDU_Q_TABLE_BUFFER128_VALUE    0x0
#define JDU_Q_TABLE_BUFFER129_VALUE    0x0
#define JDU_Q_TABLE_BUFFER130_VALUE    0x0
#define JDU_Q_TABLE_BUFFER131_VALUE    0x0
#define JDU_Q_TABLE_BUFFER132_VALUE    0x0
#define JDU_Q_TABLE_BUFFER133_VALUE    0x0
#define JDU_Q_TABLE_BUFFER134_VALUE    0x0
#define JDU_Q_TABLE_BUFFER135_VALUE    0x0
#define JDU_Q_TABLE_BUFFER136_VALUE    0x0
#define JDU_Q_TABLE_BUFFER137_VALUE    0x0
#define JDU_Q_TABLE_BUFFER138_VALUE    0x0
#define JDU_Q_TABLE_BUFFER139_VALUE    0x0
#define JDU_Q_TABLE_BUFFER140_VALUE    0x0
#define JDU_Q_TABLE_BUFFER141_VALUE    0x0
#define JDU_Q_TABLE_BUFFER142_VALUE    0x0
#define JDU_Q_TABLE_BUFFER143_VALUE    0x0
#define JDU_Q_TABLE_BUFFER144_VALUE    0x0
#define JDU_Q_TABLE_BUFFER145_VALUE    0x0
#define JDU_Q_TABLE_BUFFER146_VALUE    0x0
#define JDU_Q_TABLE_BUFFER147_VALUE    0x0
#define JDU_Q_TABLE_BUFFER148_VALUE    0x0
#define JDU_Q_TABLE_BUFFER149_VALUE    0x0
#define JDU_Q_TABLE_BUFFER150_VALUE    0x0
#define JDU_Q_TABLE_BUFFER151_VALUE    0x0
#define JDU_Q_TABLE_BUFFER152_VALUE    0x0
#define JDU_Q_TABLE_BUFFER153_VALUE    0x0
#define JDU_Q_TABLE_BUFFER154_VALUE    0x0
#define JDU_Q_TABLE_BUFFER155_VALUE    0x0
#define JDU_Q_TABLE_BUFFER156_VALUE    0x0
#define JDU_Q_TABLE_BUFFER157_VALUE    0x0
#define JDU_Q_TABLE_BUFFER158_VALUE    0x0
#define JDU_Q_TABLE_BUFFER159_VALUE    0x0
#define JDU_Q_TABLE_BUFFER160_VALUE    0x0
#define JDU_Q_TABLE_BUFFER161_VALUE    0x0
#define JDU_Q_TABLE_BUFFER162_VALUE    0x0
#define JDU_Q_TABLE_BUFFER163_VALUE    0x0
#define JDU_Q_TABLE_BUFFER164_VALUE    0x0
#define JDU_Q_TABLE_BUFFER165_VALUE    0x0
#define JDU_Q_TABLE_BUFFER166_VALUE    0x0
#define JDU_Q_TABLE_BUFFER167_VALUE    0x0
#define JDU_Q_TABLE_BUFFER168_VALUE    0x0
#define JDU_Q_TABLE_BUFFER169_VALUE    0x0
#define JDU_Q_TABLE_BUFFER170_VALUE    0x0
#define JDU_Q_TABLE_BUFFER171_VALUE    0x0
#define JDU_Q_TABLE_BUFFER172_VALUE    0x0
#define JDU_Q_TABLE_BUFFER173_VALUE    0x0
#define JDU_Q_TABLE_BUFFER174_VALUE    0x0
#define JDU_Q_TABLE_BUFFER175_VALUE    0x0
#define JDU_Q_TABLE_BUFFER176_VALUE    0x0
#define JDU_Q_TABLE_BUFFER177_VALUE    0x0
#define JDU_Q_TABLE_BUFFER178_VALUE    0x0
#define JDU_Q_TABLE_BUFFER179_VALUE    0x0
#define JDU_Q_TABLE_BUFFER180_VALUE    0x0
#define JDU_Q_TABLE_BUFFER181_VALUE    0x0
#define JDU_Q_TABLE_BUFFER182_VALUE    0x0
#define JDU_Q_TABLE_BUFFER183_VALUE    0x0
#define JDU_Q_TABLE_BUFFER184_VALUE    0x0
#define JDU_Q_TABLE_BUFFER185_VALUE    0x0
#define JDU_Q_TABLE_BUFFER186_VALUE    0x0
#define JDU_Q_TABLE_BUFFER187_VALUE    0x0
#define JDU_Q_TABLE_BUFFER188_VALUE    0x0
#define JDU_Q_TABLE_BUFFER189_VALUE    0x0
#define JDU_Q_TABLE_BUFFER190_VALUE    0x0
#define JDU_Q_TABLE_BUFFER191_VALUE    0x0

/* Bits definition for register JDU_Q_TABLE_BUFFER[0:191] */
#define JDU_Q_TABLE_SHIFT              0
#define JDU_Q_TABLE_FIELD              (0xFFFFFFFF - (0x7FFFFFFFUL<<JDU_Q_TABLE_SHIFT))

/*****************************************************************************/
/* Register description for MB_SCAL_CTRL */

/* Reset value of register JDU_MB_SCAL_CTRL */
#define JDU_MB_SCAL_CTRL_VALUE         0x1

/* Bits definition for register JDU_MB_SCAL_CTRL */
#define JDU_CS_PERMA_ENABLE_SHIFT      16
#define JDU_CS_PERMA_ENABLE_FIELD      (0xFFFFFFFF - (0x1UL<<JDU_CS_PERMA_ENABLE_SHIFT))
#define JDU_CS_PERMA_ENABLE_0          (0x0UL<<JDU_CS_PERMA_ENABLE_SHIFT)
#define JDU_CS_PERMA_ENABLE_1          (0x1UL<<JDU_CS_PERMA_ENABLE_SHIFT)
#define JDU_CS_PERMA_ENABLE            (0x1UL<<JDU_CS_PERMA_ENABLE_SHIFT)
#define JDU_OUTPUT_FORMAT_SHIFT        15
#define JDU_OUTPUT_FORMAT_FIELD        (0xFFFFFFFF - (0x1UL<<JDU_OUTPUT_FORMAT_SHIFT))
#define JDU_OUTPUT_FORMAT_0            (0x0UL<<JDU_OUTPUT_FORMAT_SHIFT)
#define JDU_OUTPUT_FORMAT_1            (0x1UL<<JDU_OUTPUT_FORMAT_SHIFT)
#define JDU_OUTPUT_FORMAT              (0x1UL<<JDU_OUTPUT_FORMAT_SHIFT)
#define JDU_YUV_SWAP_4_SHIFT           13
#define JDU_YUV_SWAP_4_FIELD           (0xFFFFFFFF - (0x3UL<<JDU_YUV_SWAP_4_SHIFT))
#define JDU_YUV_SWAP_4_0               (0x0UL<<JDU_YUV_SWAP_4_SHIFT)
#define JDU_YUV_SWAP_4_1               (0x1UL<<JDU_YUV_SWAP_4_SHIFT)
#define JDU_YUV_SWAP_4_2               (0x2UL<<JDU_YUV_SWAP_4_SHIFT)
#define JDU_YUV_SWAP_4_3               (0x3UL<<JDU_YUV_SWAP_4_SHIFT)
#define JDU_YUV_SWAP_3_SHIFT           11
#define JDU_YUV_SWAP_3_FIELD           (0xFFFFFFFF - (0x3UL<<JDU_YUV_SWAP_3_SHIFT))
#define JDU_YUV_SWAP_3_0               (0x0UL<<JDU_YUV_SWAP_3_SHIFT)
#define JDU_YUV_SWAP_3_1               (0x1UL<<JDU_YUV_SWAP_3_SHIFT)
#define JDU_YUV_SWAP_3_2               (0x2UL<<JDU_YUV_SWAP_3_SHIFT)
#define JDU_YUV_SWAP_3_3               (0x3UL<<JDU_YUV_SWAP_3_SHIFT)
#define JDU_YUV_SWAP_2_SHIFT           9
#define JDU_YUV_SWAP_2_FIELD           (0xFFFFFFFF - (0x3UL<<JDU_YUV_SWAP_2_SHIFT))
#define JDU_YUV_SWAP_2_0               (0x0UL<<JDU_YUV_SWAP_2_SHIFT)
#define JDU_YUV_SWAP_2_1               (0x1UL<<JDU_YUV_SWAP_2_SHIFT)
#define JDU_YUV_SWAP_2_2               (0x2UL<<JDU_YUV_SWAP_2_SHIFT)
#define JDU_YUV_SWAP_2_3               (0x3UL<<JDU_YUV_SWAP_2_SHIFT)
#define JDU_YUV_SWAP_1_SHIFT           7
#define JDU_YUV_SWAP_1_FIELD           (0xFFFFFFFF - (0x3UL<<JDU_YUV_SWAP_1_SHIFT))
#define JDU_YUV_SWAP_1_0               (0x0UL<<JDU_YUV_SWAP_1_SHIFT)
#define JDU_YUV_SWAP_1_1               (0x1UL<<JDU_YUV_SWAP_1_SHIFT)
#define JDU_YUV_SWAP_1_2               (0x2UL<<JDU_YUV_SWAP_1_SHIFT)
#define JDU_YUV_SWAP_1_3               (0x3UL<<JDU_YUV_SWAP_1_SHIFT)
#define JDU_SUBSAMPLING_FORMAT_SHIFT   4
#define JDU_SUBSAMPLING_FORMAT_FIELD   (0xFFFFFFFF - (0x7UL<<JDU_SUBSAMPLING_FORMAT_SHIFT))
#define JDU_SUBSAMPLING_FORMAT_0       (0x0UL<<JDU_SUBSAMPLING_FORMAT_SHIFT)
#define JDU_SUBSAMPLING_FORMAT_1       (0x1UL<<JDU_SUBSAMPLING_FORMAT_SHIFT)
#define JDU_SUBSAMPLING_FORMAT_2       (0x2UL<<JDU_SUBSAMPLING_FORMAT_SHIFT)
#define JDU_SUBSAMPLING_FORMAT_3       (0x3UL<<JDU_SUBSAMPLING_FORMAT_SHIFT)
#define JDU_SUBSAMPLING_FORMAT_4       (0x4UL<<JDU_SUBSAMPLING_FORMAT_SHIFT)
#define JDU_DOWNSCALE_FACTOR_SHIFT     2
#define JDU_DOWNSCALE_FACTOR_FIELD     (0xFFFFFFFF - (0x3UL<<JDU_DOWNSCALE_FACTOR_SHIFT))
#define JDU_DOWNSCALE_FACTOR_0         (0x0UL<<JDU_DOWNSCALE_FACTOR_SHIFT)
#define JDU_DOWNSCALE_FACTOR_1         (0x1UL<<JDU_DOWNSCALE_FACTOR_SHIFT)
#define JDU_DOWNSCALE_FACTOR_2         (0x2UL<<JDU_DOWNSCALE_FACTOR_SHIFT)
#define JDU_DOWNSCALE_FACTOR_3         (0x3UL<<JDU_DOWNSCALE_FACTOR_SHIFT)
#define JDU_INTERLEAVED_FORMAT_SHIFT   1
#define JDU_INTERLEAVED_FORMAT_FIELD   (0xFFFFFFFF - (0x1UL<<JDU_INTERLEAVED_FORMAT_SHIFT))
#define JDU_INTERLEAVED_FORMAT_0       (0x0UL<<JDU_INTERLEAVED_FORMAT_SHIFT)
#define JDU_INTERLEAVED_FORMAT_1       (0x1UL<<JDU_INTERLEAVED_FORMAT_SHIFT)
#define JDU_INTERLEAVED_FORMAT         (0x1UL<<JDU_INTERLEAVED_FORMAT_SHIFT)
#define JDU_BYPASS_MODE_SHIFT          0
#define JDU_BYPASS_MODE_FIELD          (0xFFFFFFFF - (0x1UL<<JDU_BYPASS_MODE_SHIFT))
#define JDU_BYPASS_MODE_0              (0x0UL<<JDU_BYPASS_MODE_SHIFT)
#define JDU_BYPASS_MODE_1              (0x1UL<<JDU_BYPASS_MODE_SHIFT)
#define JDU_BYPASS_MODE                (0x1UL<<JDU_BYPASS_MODE_SHIFT)

/*****************************************************************************/
/* Register description for IMAGE_SIZE */

/* Reset value of register JDU_IMAGE_SIZE */
#define JDU_IMAGE_SIZE_VALUE           0x0

/* Bits definition for register JDU_IMAGE_SIZE */
#define JDU_IMAGE_SIZE_HEIGHT_SHIFT    16
#define JDU_IMAGE_SIZE_HEIGHT_FIELD    (0xFFFFFFFF - (0x1FFFUL<<JDU_IMAGE_SIZE_HEIGHT_SHIFT))
#define JDU_IMAGE_SIZE_HEIGHT_0        (0x0UL<<JDU_IMAGE_SIZE_HEIGHT_SHIFT)
#define JDU_IMAGE_SIZE_WIDTH_SHIFT     0
#define JDU_IMAGE_SIZE_WIDTH_FIELD     (0xFFFFFFFF - (0x1FFFUL<<JDU_IMAGE_SIZE_WIDTH_SHIFT))
#define JDU_IMAGE_SIZE_WIDTH_0         (0x0UL<<JDU_IMAGE_SIZE_WIDTH_SHIFT)

/*****************************************************************************/
/* Register description for H_CROP */

/* Reset value of register JDU_H_CROP */
#define JDU_H_CROP_VALUE               0x0

/* Bits definition for register JDU_H_CROP */
#define JDU_HOR_CROP_LAST_SHIFT        16
#define JDU_HOR_CROP_LAST_FIELD        (0xFFFFFFFF - (0x1FFFUL<<JDU_HOR_CROP_LAST_SHIFT))
#define JDU_HOR_CROP_LAST_0            (0x0UL<<JDU_HOR_CROP_LAST_SHIFT)
#define JDU_HOR_CROP_FIRST_SHIFT       0
#define JDU_HOR_CROP_FIRST_FIELD       (0xFFFFFFFF - (0x1FFFUL<<JDU_HOR_CROP_FIRST_SHIFT))
#define JDU_HOR_CROP_FIRST_0           (0x0UL<<JDU_HOR_CROP_FIRST_SHIFT)

/*****************************************************************************/
/* Register description for V_CROP */

/* Reset value of register JDU_V_CROP */
#define JDU_V_CROP_VALUE               0x0

/* Bits definition for register JDU_V_CROP */
#define JDU_VER_CROP_LAST_SHIFT        16
#define JDU_VER_CROP_LAST_FIELD        (0xFFFFFFFF - (0x1FFFUL<<JDU_VER_CROP_LAST_SHIFT))
#define JDU_VER_CROP_LAST_0            (0x0UL<<JDU_VER_CROP_LAST_SHIFT)
#define JDU_VER_CROP_FIRST_SHIFT       0
#define JDU_VER_CROP_FIRST_FIELD       (0xFFFFFFFF - (0x1FFFUL<<JDU_VER_CROP_FIRST_SHIFT))
#define JDU_VER_CROP_FIRST_0           (0x0UL<<JDU_VER_CROP_FIRST_SHIFT)

/*****************************************************************************/
/* Register description for PRE_DOWNSCALE */

/* Reset value of register JDU_PRE_DOWNSCALE */
#define JDU_PRE_DOWNSCALE_VALUE        0x1

/* Bits definition for register JDU_PRE_DOWNSCALE */
#define JDU_C0_H_DOWNSCALE_SHIFT       30
#define JDU_C0_H_DOWNSCALE_FIELD       (0xFFFFFFFF - (0x3UL<<JDU_C0_H_DOWNSCALE_SHIFT))
#define JDU_C0_H_DOWNSCALE_0           (0x0UL<<JDU_C0_H_DOWNSCALE_SHIFT)
#define JDU_C0_H_DOWNSCALE_1           (0x1UL<<JDU_C0_H_DOWNSCALE_SHIFT)
#define JDU_C0_V_DOWNSCALE_SHIFT       28
#define JDU_C0_V_DOWNSCALE_FIELD       (0xFFFFFFFF - (0x3UL<<JDU_C0_V_DOWNSCALE_SHIFT))
#define JDU_C0_V_DOWNSCALE_0           (0x0UL<<JDU_C0_V_DOWNSCALE_SHIFT)
#define JDU_C0_V_DOWNSCALE_1           (0x1UL<<JDU_C0_V_DOWNSCALE_SHIFT)
#define JDU_C1_H_DOWNSCALE_SHIFT       26
#define JDU_C1_H_DOWNSCALE_FIELD       (0xFFFFFFFF - (0x3UL<<JDU_C1_H_DOWNSCALE_SHIFT))
#define JDU_C1_H_DOWNSCALE_0           (0x0UL<<JDU_C1_H_DOWNSCALE_SHIFT)
#define JDU_C1_H_DOWNSCALE_1           (0x1UL<<JDU_C1_H_DOWNSCALE_SHIFT)
#define JDU_C1_V_DOWNSCALE_SHIFT       24
#define JDU_C1_V_DOWNSCALE_FIELD       (0xFFFFFFFF - (0x3UL<<JDU_C1_V_DOWNSCALE_SHIFT))
#define JDU_C1_V_DOWNSCALE_0           (0x0UL<<JDU_C1_V_DOWNSCALE_SHIFT)
#define JDU_C1_V_DOWNSCALE_1           (0x1UL<<JDU_C1_V_DOWNSCALE_SHIFT)
#define JDU_C2_H_DOWNSCALE_SHIFT       22
#define JDU_C2_H_DOWNSCALE_FIELD       (0xFFFFFFFF - (0x3UL<<JDU_C2_H_DOWNSCALE_SHIFT))
#define JDU_C2_H_DOWNSCALE_0           (0x0UL<<JDU_C2_H_DOWNSCALE_SHIFT)
#define JDU_C2_H_DOWNSCALE_1           (0x1UL<<JDU_C2_H_DOWNSCALE_SHIFT)
#define JDU_C2_V_DOWNSCALE_SHIFT       20
#define JDU_C2_V_DOWNSCALE_FIELD       (0xFFFFFFFF - (0x3UL<<JDU_C2_V_DOWNSCALE_SHIFT))
#define JDU_C2_V_DOWNSCALE_0           (0x0UL<<JDU_C2_V_DOWNSCALE_SHIFT)
#define JDU_C2_V_DOWNSCALE_1           (0x1UL<<JDU_C2_V_DOWNSCALE_SHIFT)
#define JDU_C0_INPUT_SAMPLING_H_SHIFT  12
#define JDU_C0_INPUT_SAMPLING_H_FIELD  (0xFFFFFFFF - (0xFUL<<JDU_C0_INPUT_SAMPLING_H_SHIFT))
#define JDU_C0_INPUT_SAMPLING_H_0      (0x0UL<<JDU_C0_INPUT_SAMPLING_H_SHIFT)
#define JDU_C0_INPUT_SAMPLING_V_SHIFT  8
#define JDU_C0_INPUT_SAMPLING_V_FIELD  (0xFFFFFFFF - (0xFUL<<JDU_C0_INPUT_SAMPLING_V_SHIFT))
#define JDU_C0_INPUT_SAMPLING_V_0      (0x0UL<<JDU_C0_INPUT_SAMPLING_V_SHIFT)
#define JDU_BYPASS_SHIFT               0
#define JDU_BYPASS_FIELD               (0xFFFFFFFF - (0x1UL<<JDU_BYPASS_SHIFT))
#define JDU_BYPASS_0                   (0x0UL<<JDU_BYPASS_SHIFT)
#define JDU_BYPASS_1                   (0x1UL<<JDU_BYPASS_SHIFT)
#define JDU_BYPASS                     (0x1UL<<JDU_BYPASS_SHIFT)

/*****************************************************************************/

/*****************************************************************************
* Definitions for: KBS
*****************************************************************************/

/* Pointer on base address */
#define KBS_BASE                       IOA(KBS_BASE_ADDR)

/* KBS DEB Register (32 bits) */
#define KBS_DEB_OFFSET                 0x0
#define KBS_DEB_REG                    IOA(KBS_BASE_ADDR + KBS_DEB_OFFSET)

/* KBS STATE_COND Register (32 bits) */
#define KBS_STATE_COND_OFFSET          0x4
#define KBS_STATE_COND_REG             IOA(KBS_BASE_ADDR + KBS_STATE_COND_OFFSET)

/* KBS IT Register (32 bits) */
#define KBS_IT_OFFSET                  0x8
#define KBS_IT_REG                     IOA(KBS_BASE_ADDR + KBS_IT_OFFSET)

/* KBS FAST_TEST Register (32 bits) */
#define KBS_FAST_TEST_OFFSET           0x10
#define KBS_FAST_TEST_REG              IOA(KBS_BASE_ADDR + KBS_FAST_TEST_OFFSET)

/* KBS MATRIX_DIM Register (32 bits) */
#define KBS_MATRIX_DIM_OFFSET          0x14
#define KBS_MATRIX_DIM_REG             IOA(KBS_BASE_ADDR + KBS_MATRIX_DIM_OFFSET)

/* KBS DATA0 Register (32 bits) */
#define KBS_DATA0_OFFSET               0x40
#define KBS_DATA0_REG                  IOA(KBS_BASE_ADDR + KBS_DATA0_OFFSET)

/* KBS DATA1 Register (32 bits) */
#define KBS_DATA1_OFFSET               0x44
#define KBS_DATA1_REG                  IOA(KBS_BASE_ADDR + KBS_DATA1_OFFSET)

/* KBS DATA2 Register (32 bits) */
#define KBS_DATA2_OFFSET               0x48
#define KBS_DATA2_REG                  IOA(KBS_BASE_ADDR + KBS_DATA2_OFFSET)

/* KBS DATA3 Register (32 bits) */
#define KBS_DATA3_OFFSET               0x4C
#define KBS_DATA3_REG                  IOA(KBS_BASE_ADDR + KBS_DATA3_OFFSET)

/* KBS DATA4 Register (32 bits) */
#define KBS_DATA4_OFFSET               0x50
#define KBS_DATA4_REG                  IOA(KBS_BASE_ADDR + KBS_DATA4_OFFSET)

/* KBS DATA5 Register (32 bits) */
#define KBS_DATA5_OFFSET               0x54
#define KBS_DATA5_REG                  IOA(KBS_BASE_ADDR + KBS_DATA5_OFFSET)

/* KBS DATA6 Register (32 bits) */
#define KBS_DATA6_OFFSET               0x58
#define KBS_DATA6_REG                  IOA(KBS_BASE_ADDR + KBS_DATA6_OFFSET)

/* KBS DATA7 Register (32 bits) */
#define KBS_DATA7_OFFSET               0x5C
#define KBS_DATA7_REG                  IOA(KBS_BASE_ADDR + KBS_DATA7_OFFSET)

/* Register description for DEB */

/* Reset value of register KBS_DEB */
#define KBS_DEB_VALUE                  0x5

/* Bits definition for register KBS_DEB */
#define KBS_DEBOUNCE_SHIFT             0
#define KBS_DEBOUNCE_FIELD             (0xFFFFFFFF - (0xFFUL<<KBS_DEBOUNCE_SHIFT))
#define KBS_DEBOUNCE_0                 (0x0UL<<KBS_DEBOUNCE_SHIFT)
#define KBS_DEBOUNCE_1                 (0x1UL<<KBS_DEBOUNCE_SHIFT)
#define KBS_DEBOUNCE_2                 (0x2UL<<KBS_DEBOUNCE_SHIFT)
#define KBS_DEBOUNCE_3                 (0x3UL<<KBS_DEBOUNCE_SHIFT)
#define KBS_DEBOUNCE_4                 (0x4UL<<KBS_DEBOUNCE_SHIFT)
#define KBS_DEBOUNCE_5                 (0x5UL<<KBS_DEBOUNCE_SHIFT)
#define KBS_DEBOUNCE_6                 (0x6UL<<KBS_DEBOUNCE_SHIFT)
#define KBS_DEBOUNCE_7                 (0x7UL<<KBS_DEBOUNCE_SHIFT)

/*****************************************************************************/
/* Register description for STATE_COND */

/* Reset value of register KBS_STATE_COND */
#define KBS_STATE_COND_VALUE           0x0

/* Bits definition for register KBS_STATE_COND */
#define KBS_KEY_STATE_SHIFT            0
#define KBS_KEY_STATE_FIELD            (0xFFFFFFFF - (0x7UL<<KBS_KEY_STATE_SHIFT))
#define KBS_KEY_STATE_0                (0x0UL<<KBS_KEY_STATE_SHIFT)

/*****************************************************************************/
/* Register description for IT */

/* Reset value of register KBS_IT */
#define KBS_IT_VALUE                   0x1

/* Bits definition for register KBS_IT */
#define KBS_IRQN_SHIFT                 0
#define KBS_IRQN_FIELD                 (0xFFFFFFFF - (0x1UL<<KBS_IRQN_SHIFT))
#define KBS_IRQN_0                     (0x0UL<<KBS_IRQN_SHIFT)
#define KBS_IRQN_1                     (0x1UL<<KBS_IRQN_SHIFT)
#define KBS_IRQN                       (0x1UL<<KBS_IRQN_SHIFT)

/*****************************************************************************/
/* Register description for FAST_TEST */

/* Reset value of register KBS_FAST_TEST */
#define KBS_FAST_TEST_VALUE            0x0

/* Bits definition for register KBS_FAST_TEST */
#define KBS_KBS_FAST_TEST1_SHIFT       1
#define KBS_KBS_FAST_TEST1_FIELD       (0xFFFFFFFF - (0x1UL<<KBS_KBS_FAST_TEST1_SHIFT))
#define KBS_KBS_FAST_TEST1_0           (0x0UL<<KBS_KBS_FAST_TEST1_SHIFT)
#define KBS_KBS_FAST_TEST1_1           (0x1UL<<KBS_KBS_FAST_TEST1_SHIFT)
#define KBS_KBS_FAST_TEST1             (0x1UL<<KBS_KBS_FAST_TEST1_SHIFT)
#define KBS_KBS_FAST_TEST0_SHIFT       0
#define KBS_KBS_FAST_TEST0_FIELD       (0xFFFFFFFF - (0x1UL<<KBS_KBS_FAST_TEST0_SHIFT))
#define KBS_KBS_FAST_TEST0_0           (0x0UL<<KBS_KBS_FAST_TEST0_SHIFT)
#define KBS_KBS_FAST_TEST0_1           (0x1UL<<KBS_KBS_FAST_TEST0_SHIFT)
#define KBS_KBS_FAST_TEST0             (0x1UL<<KBS_KBS_FAST_TEST0_SHIFT)

/*****************************************************************************/
/* Register description for MATRIX_DIM */

/* Reset value of register KBS_MATRIX_DIM */
#define KBS_MATRIX_DIM_VALUE           0x6

/* Bits definition for register KBS_MATRIX_DIM */
#define KBS_KBS_MATRIX_DIM_SHIFT       0
#define KBS_KBS_MATRIX_DIM_FIELD       (0xFFFFFFFF - (0xFUL<<KBS_KBS_MATRIX_DIM_SHIFT))
#define KBS_KBS_MATRIX_DIM_KEYPAD_MATRIX_DIMENSION_REGISTER (0x6UL<<KBS_KBS_MATRIX_DIM_SHIFT)

/*****************************************************************************/
/* Register description for DATA[0:7] */

/* Reset value of register KBS_DATA[0:7] */
#define KBS_DATA0_VALUE                0x0
#define KBS_DATA1_VALUE                0x0
#define KBS_DATA2_VALUE                0x0
#define KBS_DATA3_VALUE                0x0
#define KBS_DATA4_VALUE                0x0
#define KBS_DATA5_VALUE                0x0
#define KBS_DATA6_VALUE                0x0
#define KBS_DATA7_VALUE                0x0

/* Bits definition for register KBS_DATA[0:7] */
#define KBS_COL7_SHIFT                 7
#define KBS_COL7_FIELD                 (0xFFFFFFFF - (0x1UL<<KBS_COL7_SHIFT))
#define KBS_COL7_NOT_PRESSED           (0x0UL<<KBS_COL7_SHIFT)
#define KBS_COL7_PRESSED               (0x1UL<<KBS_COL7_SHIFT)
#define KBS_COL7                       (0x1UL<<KBS_COL7_SHIFT)
#define KBS_COL6_SHIFT                 6
#define KBS_COL6_FIELD                 (0xFFFFFFFF - (0x1UL<<KBS_COL6_SHIFT))
#define KBS_COL6_NOT_PRESSED           (0x0UL<<KBS_COL6_SHIFT)
#define KBS_COL6_PRESSED               (0x1UL<<KBS_COL6_SHIFT)
#define KBS_COL6                       (0x1UL<<KBS_COL6_SHIFT)
#define KBS_COL5_SHIFT                 5
#define KBS_COL5_FIELD                 (0xFFFFFFFF - (0x1UL<<KBS_COL5_SHIFT))
#define KBS_COL5_NOT_PRESSED           (0x0UL<<KBS_COL5_SHIFT)
#define KBS_COL5_PRESSED               (0x1UL<<KBS_COL5_SHIFT)
#define KBS_COL5                       (0x1UL<<KBS_COL5_SHIFT)
#define KBS_COL4_SHIFT                 4
#define KBS_COL4_FIELD                 (0xFFFFFFFF - (0x1UL<<KBS_COL4_SHIFT))
#define KBS_COL4_NOT_PRESSED           (0x0UL<<KBS_COL4_SHIFT)
#define KBS_COL4_PRESSED               (0x1UL<<KBS_COL4_SHIFT)
#define KBS_COL4                       (0x1UL<<KBS_COL4_SHIFT)
#define KBS_COL3_SHIFT                 3
#define KBS_COL3_FIELD                 (0xFFFFFFFF - (0x1UL<<KBS_COL3_SHIFT))
#define KBS_COL3_NOT_PRESSED           (0x0UL<<KBS_COL3_SHIFT)
#define KBS_COL3_PRESSED               (0x1UL<<KBS_COL3_SHIFT)
#define KBS_COL3                       (0x1UL<<KBS_COL3_SHIFT)
#define KBS_COL2_SHIFT                 2
#define KBS_COL2_FIELD                 (0xFFFFFFFF - (0x1UL<<KBS_COL2_SHIFT))
#define KBS_COL2_NOT_PRESSED           (0x0UL<<KBS_COL2_SHIFT)
#define KBS_COL2_PRESSED               (0x1UL<<KBS_COL2_SHIFT)
#define KBS_COL2                       (0x1UL<<KBS_COL2_SHIFT)
#define KBS_COL1_SHIFT                 1
#define KBS_COL1_FIELD                 (0xFFFFFFFF - (0x1UL<<KBS_COL1_SHIFT))
#define KBS_COL1_NOT_PRESSED           (0x0UL<<KBS_COL1_SHIFT)
#define KBS_COL1_PRESSED               (0x1UL<<KBS_COL1_SHIFT)
#define KBS_COL1                       (0x1UL<<KBS_COL1_SHIFT)
#define KBS_COL0_SHIFT                 0
#define KBS_COL0_FIELD                 (0xFFFFFFFF - (0x1UL<<KBS_COL0_SHIFT))
#define KBS_COL0_NOT_PRESSED           (0x0UL<<KBS_COL0_SHIFT)
#define KBS_COL0_PRESSED               (0x1UL<<KBS_COL0_SHIFT)
#define KBS_COL0                       (0x1UL<<KBS_COL0_SHIFT)

/*****************************************************************************/

/*****************************************************************************
* Definitions for: ME
*****************************************************************************/

/* Pointer on base address */
#define ME_BASE                        IOA(ME_BASE_ADDR)

/* ME START Register (32 bits) */
#define ME_START_OFFSET                0x0
#define ME_START_REG                   IOA(ME_BASE_ADDR + ME_START_OFFSET)

/* ME FORCE_SHADOW Register (32 bits) */
#define ME_FORCE_SHADOW_OFFSET         0x4
#define ME_FORCE_SHADOW_REG            IOA(ME_BASE_ADDR + ME_FORCE_SHADOW_OFFSET)

/* ME RUNNING Register (32 bits) */
#define ME_RUNNING_OFFSET              0x8
#define ME_RUNNING_REG                 IOA(ME_BASE_ADDR + ME_RUNNING_OFFSET)

/* ME BM_PTR Register (32 bits) */
#define ME_BM_PTR_OFFSET               0xC
#define ME_BM_PTR_REG                  IOA(ME_BASE_ADDR + ME_BM_PTR_OFFSET)

/* ME BM_LOAD_PTR Register (32 bits) */
#define ME_BM_LOAD_PTR_OFFSET          0x14
#define ME_BM_LOAD_PTR_REG             IOA(ME_BASE_ADDR + ME_BM_LOAD_PTR_OFFSET)

/* ME BM_BASE Register (32 bits) */
#define ME_BM_BASE_OFFSET              0x1C
#define ME_BM_BASE_REG                 IOA(ME_BASE_ADDR + ME_BM_BASE_OFFSET)

/* ME BM_END Register (32 bits) */
#define ME_BM_END_OFFSET               0x24
#define ME_BM_END_REG                  IOA(ME_BASE_ADDR + ME_BM_END_OFFSET)

/* ME MV_PTR Register (32 bits) */
#define ME_MV_PTR_OFFSET               0x2C
#define ME_MV_PTR_REG                  IOA(ME_BASE_ADDR + ME_MV_PTR_OFFSET)

/* ME MV_LOAD_PTR Register (32 bits) */
#define ME_MV_LOAD_PTR_OFFSET          0x34
#define ME_MV_LOAD_PTR_REG             IOA(ME_BASE_ADDR + ME_MV_LOAD_PTR_OFFSET)

/* ME MV_BASE Register (32 bits) */
#define ME_MV_BASE_OFFSET              0x3C
#define ME_MV_BASE_REG                 IOA(ME_BASE_ADDR + ME_MV_BASE_OFFSET)

/* ME MV_END Register (32 bits) */
#define ME_MV_END_OFFSET               0x44
#define ME_MV_END_REG                  IOA(ME_BASE_ADDR + ME_MV_END_OFFSET)

/* ME MV_PREV_BASE Register (32 bits) */
#define ME_MV_PREV_BASE_OFFSET         0x4C
#define ME_MV_PREV_BASE_REG            IOA(ME_BASE_ADDR + ME_MV_PREV_BASE_OFFSET)

/* ME MVC_PTR Register (32 bits) */
#define ME_MVC_PTR_OFFSET              0x54
#define ME_MVC_PTR_REG                 IOA(ME_BASE_ADDR + ME_MVC_PTR_OFFSET)

/* ME CURR_BASE_LUM_TOP Register (32 bits) */
#define ME_CURR_BASE_LUM_TOP_OFFSET    0x5C
#define ME_CURR_BASE_LUM_TOP_REG       IOA(ME_BASE_ADDR + ME_CURR_BASE_LUM_TOP_OFFSET)

/* ME CURR_STRIDE_LUM_FLD Register (32 bits) */
#define ME_CURR_STRIDE_LUM_FLD_OFFSET  0x6C
#define ME_CURR_STRIDE_LUM_FLD_REG     IOA(ME_BASE_ADDR + ME_CURR_STRIDE_LUM_FLD_OFFSET)

/* ME FWD_BASE_LUM_TOP Register (32 bits) */
#define ME_FWD_BASE_LUM_TOP_OFFSET     0x74
#define ME_FWD_BASE_LUM_TOP_REG        IOA(ME_BASE_ADDR + ME_FWD_BASE_LUM_TOP_OFFSET)

/* ME FWD_STRIDE_LUM_FLD Register (32 bits) */
#define ME_FWD_STRIDE_LUM_FLD_OFFSET   0x84
#define ME_FWD_STRIDE_LUM_FLD_REG      IOA(ME_BASE_ADDR + ME_FWD_STRIDE_LUM_FLD_OFFSET)

/* ME FWD_BASE_CHR_TOP_U Register (32 bits) */
#define ME_FWD_BASE_CHR_TOP_U_OFFSET   0x8C
#define ME_FWD_BASE_CHR_TOP_U_REG      IOA(ME_BASE_ADDR + ME_FWD_BASE_CHR_TOP_U_OFFSET)

/* ME FWD_BASE_CHR_TOP_V Register (32 bits) */
#define ME_FWD_BASE_CHR_TOP_V_OFFSET   0x9C
#define ME_FWD_BASE_CHR_TOP_V_REG      IOA(ME_BASE_ADDR + ME_FWD_BASE_CHR_TOP_V_OFFSET)

/* ME FWD_STRIDE_CHR_FLD Register (32 bits) */
#define ME_FWD_STRIDE_CHR_FLD_OFFSET   0xAC
#define ME_FWD_STRIDE_CHR_FLD_REG      IOA(ME_BASE_ADDR + ME_FWD_STRIDE_CHR_FLD_OFFSET)

/* ME SOFT_RESET Register (32 bits) */
#define ME_SOFT_RESET_OFFSET           0xB4
#define ME_SOFT_RESET_REG              IOA(ME_BASE_ADDR + ME_SOFT_RESET_OFFSET)

/* ME FRAME_MB_HEIGHT Register (32 bits) */
#define ME_FRAME_MB_HEIGHT_OFFSET      0xBC
#define ME_FRAME_MB_HEIGHT_REG         IOA(ME_BASE_ADDR + ME_FRAME_MB_HEIGHT_OFFSET)

/* ME CG_DISABLE Register (32 bits) */
#define ME_CG_DISABLE_OFFSET           0xC4
#define ME_CG_DISABLE_REG              IOA(ME_BASE_ADDR + ME_CG_DISABLE_OFFSET)

/* ME ABS_CLIP_HOR_MAX Register (32 bits) */
#define ME_ABS_CLIP_HOR_MAX_OFFSET     0xCC
#define ME_ABS_CLIP_HOR_MAX_REG        IOA(ME_BASE_ADDR + ME_ABS_CLIP_HOR_MAX_OFFSET)

/* ME ABS_CLIP_HOR_MIN Register (32 bits) */
#define ME_ABS_CLIP_HOR_MIN_OFFSET     0xD4
#define ME_ABS_CLIP_HOR_MIN_REG        IOA(ME_BASE_ADDR + ME_ABS_CLIP_HOR_MIN_OFFSET)

/* ME ABS_CLIP_VER_MAX Register (32 bits) */
#define ME_ABS_CLIP_VER_MAX_OFFSET     0xDC
#define ME_ABS_CLIP_VER_MAX_REG        IOA(ME_BASE_ADDR + ME_ABS_CLIP_VER_MAX_OFFSET)

/* ME ABS_CLIP_VER_MIN Register (32 bits) */
#define ME_ABS_CLIP_VER_MIN_OFFSET     0xE4
#define ME_ABS_CLIP_VER_MIN_REG        IOA(ME_BASE_ADDR + ME_ABS_CLIP_VER_MIN_OFFSET)

/* ME REL_CLIP_HOR_MAX Register (32 bits) */
#define ME_REL_CLIP_HOR_MAX_OFFSET     0xEC
#define ME_REL_CLIP_HOR_MAX_REG        IOA(ME_BASE_ADDR + ME_REL_CLIP_HOR_MAX_OFFSET)

/* ME REL_CLIP_HOR_MIN Register (32 bits) */
#define ME_REL_CLIP_HOR_MIN_OFFSET     0xF4
#define ME_REL_CLIP_HOR_MIN_REG        IOA(ME_BASE_ADDR + ME_REL_CLIP_HOR_MIN_OFFSET)

/* ME REL_CLIP_VER_MAX Register (32 bits) */
#define ME_REL_CLIP_VER_MAX_OFFSET     0xFC
#define ME_REL_CLIP_VER_MAX_REG        IOA(ME_BASE_ADDR + ME_REL_CLIP_VER_MAX_OFFSET)

/* ME REL_CLIP_VER_MIN Register (32 bits) */
#define ME_REL_CLIP_VER_MIN_OFFSET     0x104
#define ME_REL_CLIP_VER_MIN_REG        IOA(ME_BASE_ADDR + ME_REL_CLIP_VER_MIN_OFFSET)

/* ME SEGM_POS_START_HOR Register (32 bits) */
#define ME_SEGM_POS_START_HOR_OFFSET   0x10C
#define ME_SEGM_POS_START_HOR_REG      IOA(ME_BASE_ADDR + ME_SEGM_POS_START_HOR_OFFSET)

/* ME SEGM_POS_START_VER Register (32 bits) */
#define ME_SEGM_POS_START_VER_OFFSET   0x114
#define ME_SEGM_POS_START_VER_REG      IOA(ME_BASE_ADDR + ME_SEGM_POS_START_VER_OFFSET)

/* ME LOAD_RND_SEED Register (32 bits) */
#define ME_LOAD_RND_SEED_OFFSET        0x12C
#define ME_LOAD_RND_SEED_REG           IOA(ME_BASE_ADDR + ME_LOAD_RND_SEED_OFFSET)

/* ME RND_SEED Register (32 bits) */
#define ME_RND_SEED_OFFSET             0x134
#define ME_RND_SEED_REG                IOA(ME_BASE_ADDR + ME_RND_SEED_OFFSET)

/* ME SAD_INTER_MAX Register (32 bits) */
#define ME_SAD_INTER_MAX_OFFSET        0x13C
#define ME_SAD_INTER_MAX_REG           IOA(ME_BASE_ADDR + ME_SAD_INTER_MAX_OFFSET)

/* ME SAD_NOTCODED_MAX Register (32 bits) */
#define ME_SAD_NOTCODED_MAX_OFFSET     0x144
#define ME_SAD_NOTCODED_MAX_REG        IOA(ME_BASE_ADDR + ME_SAD_NOTCODED_MAX_OFFSET)

/* ME FORCE_INTRA Register (32 bits) */
#define ME_FORCE_INTRA_OFFSET          0x14C
#define ME_FORCE_INTRA_REG             IOA(ME_BASE_ADDR + ME_FORCE_INTRA_OFFSET)

/* ME DISABLE_4MV Register (32 bits) */
#define ME_DISABLE_4MV_OFFSET          0x154
#define ME_DISABLE_4MV_REG             IOA(ME_BASE_ADDR + ME_DISABLE_4MV_OFFSET)

/* ME FRAME_MB_WIDTH Register (32 bits) */
#define ME_FRAME_MB_WIDTH_OFFSET       0x164
#define ME_FRAME_MB_WIDTH_REG          IOA(ME_BASE_ADDR + ME_FRAME_MB_WIDTH_OFFSET)

/* ME SEGM_MB_SIZE Register (32 bits) */
#define ME_SEGM_MB_SIZE_OFFSET         0x170
#define ME_SEGM_MB_SIZE_REG            IOA(ME_BASE_ADDR + ME_SEGM_MB_SIZE_OFFSET)

/* ME SUM_SAD Register (32 bits) */
#define ME_SUM_SAD_OFFSET              0x178
#define ME_SUM_SAD_REG                 IOA(ME_BASE_ADDR + ME_SUM_SAD_OFFSET)

/* ME SUM_ACTIVITY Register (32 bits) */
#define ME_SUM_ACTIVITY_OFFSET         0x184
#define ME_SUM_ACTIVITY_REG            IOA(ME_BASE_ADDR + ME_SUM_ACTIVITY_OFFSET)

/* ME CURR_SH_RIGHT_LUM Register (32 bits) */
#define ME_CURR_SH_RIGHT_LUM_OFFSET    0x19C
#define ME_CURR_SH_RIGHT_LUM_REG       IOA(ME_BASE_ADDR + ME_CURR_SH_RIGHT_LUM_OFFSET)

/* ME CURR_SH_DOWN_LUM Register (32 bits) */
#define ME_CURR_SH_DOWN_LUM_OFFSET     0x1A4
#define ME_CURR_SH_DOWN_LUM_REG        IOA(ME_BASE_ADDR + ME_CURR_SH_DOWN_LUM_OFFSET)

/* ME MB_ACT_THRESH Register (32 bits) */
#define ME_MB_ACT_THRESH_OFFSET        0x1AC
#define ME_MB_ACT_THRESH_REG           IOA(ME_BASE_ADDR + ME_MB_ACT_THRESH_OFFSET)

/* ME BM_DIRECT Register (32 bits) */
#define ME_BM_DIRECT_OFFSET            0x1B4
#define ME_BM_DIRECT_REG               IOA(ME_BASE_ADDR + ME_BM_DIRECT_OFFSET)

/* ME TOP_RST Register (32 bits) */
#define ME_TOP_RST_OFFSET              0x1FC
#define ME_TOP_RST_REG                 IOA(ME_BASE_ADDR + ME_TOP_RST_OFFSET)

/* ME FORCE_INTRA_LACT Register (32 bits) */
#define ME_FORCE_INTRA_LACT_OFFSET     0x264
#define ME_FORCE_INTRA_LACT_REG        IOA(ME_BASE_ADDR + ME_FORCE_INTRA_LACT_OFFSET)

/* ME ENABLE_CLR Register (32 bits) */
#define ME_ENABLE_CLR_OFFSET           0xFA4
#define ME_ENABLE_CLR_REG              IOA(ME_BASE_ADDR + ME_ENABLE_CLR_OFFSET)

/* ME ENABLE_SET Register (32 bits) */
#define ME_ENABLE_SET_OFFSET           0xFA8
#define ME_ENABLE_SET_REG              IOA(ME_BASE_ADDR + ME_ENABLE_SET_OFFSET)

/* ME ENABLE Register (32 bits) */
#define ME_ENABLE_OFFSET               0xFAC
#define ME_ENABLE_REG                  IOA(ME_BASE_ADDR + ME_ENABLE_OFFSET)

/* ME STATUS Register (32 bits) */
#define ME_STATUS_OFFSET               0xFB0
#define ME_STATUS_REG                  IOA(ME_BASE_ADDR + ME_STATUS_OFFSET)

/* ME STATUS_CLR Register (32 bits) */
#define ME_STATUS_CLR_OFFSET           0xFB4
#define ME_STATUS_CLR_REG              IOA(ME_BASE_ADDR + ME_STATUS_CLR_OFFSET)

/* ME STATUS_SET Register (32 bits) */
#define ME_STATUS_SET_OFFSET           0xFB8
#define ME_STATUS_SET_REG              IOA(ME_BASE_ADDR + ME_STATUS_SET_OFFSET)

/* ME MODULE_ID Register (32 bits) */
#define ME_MODULE_ID_OFFSET            0xFC8
#define ME_MODULE_ID_REG               IOA(ME_BASE_ADDR + ME_MODULE_ID_OFFSET)

/* Register description for START */

/* Reset value of register ME_START */
#define ME_START_VALUE                 0x0

/* Bits definition for register ME_START */
#define ME_ME_START_SHIFT              0
#define ME_ME_START_FIELD              (0xFFFFFFFF - (0x1UL<<ME_ME_START_SHIFT))
#define ME_ME_START_0                  (0x0UL<<ME_ME_START_SHIFT)
#define ME_ME_START_1                  (0x1UL<<ME_ME_START_SHIFT)
#define ME_ME_START                    (0x1UL<<ME_ME_START_SHIFT)

/*****************************************************************************/
/* Register description for SOFT_RESET */

/* Reset value of register ME_SOFT_RESET */
#define ME_SOFT_RESET_VALUE            0x0

/* Bits definition for register ME_SOFT_RESET */
#define ME_ME_SOFT_RESET_SHIFT         0
#define ME_ME_SOFT_RESET_FIELD         (0xFFFFFFFF - (0x1UL<<ME_ME_SOFT_RESET_SHIFT))
#define ME_ME_SOFT_RESET_0             (0x0UL<<ME_ME_SOFT_RESET_SHIFT)
#define ME_ME_SOFT_RESET_1             (0x1UL<<ME_ME_SOFT_RESET_SHIFT)
#define ME_ME_SOFT_RESET               (0x1UL<<ME_ME_SOFT_RESET_SHIFT)

/*****************************************************************************/
/* Register description for FORCE_SHADOW */

/* Reset value of register ME_FORCE_SHADOW */
#define ME_FORCE_SHADOW_VALUE          0x0

/* Bits definition for register ME_FORCE_SHADOW */
#define ME_ME_FORCE_SHADOW_SHIFT       0
#define ME_ME_FORCE_SHADOW_FIELD       (0xFFFFFFFF - (0x1UL<<ME_ME_FORCE_SHADOW_SHIFT))
#define ME_ME_FORCE_SHADOW_0           (0x0UL<<ME_ME_FORCE_SHADOW_SHIFT)
#define ME_ME_FORCE_SHADOW_1           (0x1UL<<ME_ME_FORCE_SHADOW_SHIFT)
#define ME_ME_FORCE_SHADOW             (0x1UL<<ME_ME_FORCE_SHADOW_SHIFT)

/*****************************************************************************/
/* Register description for RUNNING */

/* Reset value of register ME_RUNNING */
#define ME_RUNNING_VALUE               0x0

/* Bits definition for register ME_RUNNING */
#define ME_ME_RUNNING_SHIFT            0
#define ME_ME_RUNNING_FIELD            (0xFFFFFFFF - (0x1UL<<ME_ME_RUNNING_SHIFT))
#define ME_ME_RUNNING_1                (0x1UL<<ME_ME_RUNNING_SHIFT)
#define ME_ME_RUNNING_0                (0x0UL<<ME_ME_RUNNING_SHIFT)
#define ME_ME_RUNNING                  (0x1UL<<ME_ME_RUNNING_SHIFT)

/*****************************************************************************/
/* Register description for SEGM_POS_START_HOR */

/* Reset value of register ME_SEGM_POS_START_HOR */
#define ME_SEGM_POS_START_HOR_VALUE    0x0

/* Bits definition for register ME_SEGM_POS_START_HOR */
#define ME_ME_SEGM_POS_START_HOR_SHIFT 0
#define ME_ME_SEGM_POS_START_HOR_FIELD (0xFFFFFFFF - (0x3FUL<<ME_ME_SEGM_POS_START_HOR_SHIFT))
#define ME_ME_SEGM_POS_START_HOR_0     (0x0UL<<ME_ME_SEGM_POS_START_HOR_SHIFT)

/*****************************************************************************/
/* Register description for SEGM_POS_START_VER */

/* Reset value of register ME_SEGM_POS_START_VER */
#define ME_SEGM_POS_START_VER_VALUE    0x0

/* Bits definition for register ME_SEGM_POS_START_VER */
#define ME_ME_SEGM_POS_START_VER_SHIFT 0
#define ME_ME_SEGM_POS_START_VER_FIELD (0xFFFFFFFF - (0x3FUL<<ME_ME_SEGM_POS_START_VER_SHIFT))
#define ME_ME_SEGM_POS_START_VER_0     (0x0UL<<ME_ME_SEGM_POS_START_VER_SHIFT)

/*****************************************************************************/
/* Register description for SEGM_MB_SIZE */

/* Reset value of register ME_SEGM_MB_SIZE */
#define ME_SEGM_MB_SIZE_VALUE          0x0

/* Bits definition for register ME_SEGM_MB_SIZE */
#define ME_ME_SEGM_MB_SIZE_SHIFT       0
#define ME_ME_SEGM_MB_SIZE_FIELD       (0xFFFFFFFF - (0x7FFUL<<ME_ME_SEGM_MB_SIZE_SHIFT))
#define ME_ME_SEGM_MB_SIZE_0           (0x0UL<<ME_ME_SEGM_MB_SIZE_SHIFT)

/*****************************************************************************/
/* Register description for FRAME_MB_WIDTH */

/* Reset value of register ME_FRAME_MB_WIDTH */
#define ME_FRAME_MB_WIDTH_VALUE        0x0

/* Bits definition for register ME_FRAME_MB_WIDTH */
#define ME_ME_FRAME_MB_WIDTH_SHIFT     0
#define ME_ME_FRAME_MB_WIDTH_FIELD     (0xFFFFFFFF - (0x3FUL<<ME_ME_FRAME_MB_WIDTH_SHIFT))
#define ME_ME_FRAME_MB_WIDTH_0         (0x0UL<<ME_ME_FRAME_MB_WIDTH_SHIFT)

/*****************************************************************************/
/* Register description for FRAME_MB_HEIGHT */

/* Reset value of register ME_FRAME_MB_HEIGHT */
#define ME_FRAME_MB_HEIGHT_VALUE       0x0

/* Bits definition for register ME_FRAME_MB_HEIGHT */
#define ME_ME_FRAME_MB_HEIGHT_SHIFT    0
#define ME_ME_FRAME_MB_HEIGHT_FIELD    (0xFFFFFFFF - (0x3FUL<<ME_ME_FRAME_MB_HEIGHT_SHIFT))

/*****************************************************************************/
/* Register description for CURR_BASE_LUM_TOP */

/* Reset value of register ME_CURR_BASE_LUM_TOP */
#define ME_CURR_BASE_LUM_TOP_VALUE     0x0

/* Bits definition for register ME_CURR_BASE_LUM_TOP */
#define ME_ME_CURR_BASE_LUM_TOP_SHIFT  2
#define ME_ME_CURR_BASE_LUM_TOP_FIELD  (0xFFFFFFFF - (0x3FFFFFFFUL<<ME_ME_CURR_BASE_LUM_TOP_SHIFT))

/*****************************************************************************/
/* Register description for CURR_STRIDE_LUM_FLD */

/* Reset value of register ME_CURR_STRIDE_LUM_FLD */
#define ME_CURR_STRIDE_LUM_FLD_VALUE   0x0

/* Bits definition for register ME_CURR_STRIDE_LUM_FLD */
#define ME_ME_CURR_STRIDE_LUM_FLD_SHIFT            3
#define ME_ME_CURR_STRIDE_LUM_FLD_FIELD            (0xFFFFFFFF - (0x1FFUL<<ME_ME_CURR_STRIDE_LUM_FLD_SHIFT))

/*****************************************************************************/
/* Register description for FWD_BASE_LUM_TOP */

/* Reset value of register ME_FWD_BASE_LUM_TOP */
#define ME_FWD_BASE_LUM_TOP_VALUE      0x0

/* Bits definition for register ME_FWD_BASE_LUM_TOP */
#define ME_ME_FWD_BASE_LUM_TOP_SHIFT   6
#define ME_ME_FWD_BASE_LUM_TOP_FIELD   (0xFFFFFFFF - (0x3FFFFFFUL<<ME_ME_FWD_BASE_LUM_TOP_SHIFT))

/*****************************************************************************/
/* Register description for FWD_STRIDE_LUM_FLD */

/* Reset value of register ME_FWD_STRIDE_LUM_FLD */
#define ME_FWD_STRIDE_LUM_FLD_VALUE    0x0

/* Bits definition for register ME_FWD_STRIDE_LUM_FLD */
#define ME_ME_FWD_STRIDE_LUM_FLD_SHIFT 4
#define ME_ME_FWD_STRIDE_LUM_FLD_FIELD (0xFFFFFFFF - (0xFFUL<<ME_ME_FWD_STRIDE_LUM_FLD_SHIFT))

/*****************************************************************************/
/* Register description for FWD_BASE_CHR_TOP_U */

/* Reset value of register ME_FWD_BASE_CHR_TOP_U */
#define ME_FWD_BASE_CHR_TOP_U_VALUE    0x0

/* Bits definition for register ME_FWD_BASE_CHR_TOP_U */
#define ME_ME_FWD_BASE_CHR_TOP_U_SHIFT 6
#define ME_ME_FWD_BASE_CHR_TOP_U_FIELD (0xFFFFFFFF - (0x3FFFFFFUL<<ME_ME_FWD_BASE_CHR_TOP_U_SHIFT))

/*****************************************************************************/
/* Register description for FWD_BASE_CHR_TOP_V */

/* Reset value of register ME_FWD_BASE_CHR_TOP_V */
#define ME_FWD_BASE_CHR_TOP_V_VALUE    0x0

/* Bits definition for register ME_FWD_BASE_CHR_TOP_V */
#define ME_ME_FWD_BASE_CHR_TOP_V_SHIFT 6
#define ME_ME_FWD_BASE_CHR_TOP_V_FIELD (0xFFFFFFFF - (0x3FFFFFFUL<<ME_ME_FWD_BASE_CHR_TOP_V_SHIFT))

/*****************************************************************************/
/* Register description for FWD_STRIDE_CHR_FLD */

/* Reset value of register ME_FWD_STRIDE_CHR_FLD */
#define ME_FWD_STRIDE_CHR_FLD_VALUE    0x0

/* Bits definition for register ME_FWD_STRIDE_CHR_FLD */
#define ME_ME_FWD_STRIDE_CHR_FLD_SHIFT 3
#define ME_ME_FWD_STRIDE_CHR_FLD_FIELD (0xFFFFFFFF - (0x1FFUL<<ME_ME_FWD_STRIDE_CHR_FLD_SHIFT))

/*****************************************************************************/
/* Register description for BM_BASE */

/* Reset value of register ME_BM_BASE */
#define ME_BM_BASE_VALUE               0x0

/* Bits definition for register ME_BM_BASE */
#define ME_ME_BM_BASE_SHIFT            8
#define ME_ME_BM_BASE_FIELD            (0xFFFFFFFF - (0xFFFFFFUL<<ME_ME_BM_BASE_SHIFT))

/*****************************************************************************/
/* Register description for BM_END */

/* Reset value of register ME_BM_END */
#define ME_BM_END_VALUE                0x0

/* Bits definition for register ME_BM_END */
#define ME_ME_BM_END_SHIFT             7
#define ME_ME_BM_END_FIELD             (0xFFFFFFFF - (0x1FFFFFFUL<<ME_ME_BM_END_SHIFT))

/*****************************************************************************/
/* Register description for BM_PTR */

/* Reset value of register ME_BM_PTR */
#define ME_BM_PTR_VALUE                0x0

/* Bits definition for register ME_BM_PTR */
#define ME_ME_BM_PTR_SHIFT             6
#define ME_ME_BM_PTR_FIELD             (0xFFFFFFFF - (0x3FFFFFFUL<<ME_ME_BM_PTR_SHIFT))

/*****************************************************************************/
/* Register description for BM_LOAD_PTR */

/* Reset value of register ME_BM_LOAD_PTR */
#define ME_BM_LOAD_PTR_VALUE           0x0

/* Bits definition for register ME_BM_LOAD_PTR */
#define ME_ME_BM_LOAD_PTR_SHIFT        0
#define ME_ME_BM_LOAD_PTR_FIELD        (0xFFFFFFFF - (0x1UL<<ME_ME_BM_LOAD_PTR_SHIFT))
#define ME_ME_BM_LOAD_PTR_1            (0x1UL<<ME_ME_BM_LOAD_PTR_SHIFT)
#define ME_ME_BM_LOAD_PTR_0            (0x0UL<<ME_ME_BM_LOAD_PTR_SHIFT)
#define ME_ME_BM_LOAD_PTR              (0x1UL<<ME_ME_BM_LOAD_PTR_SHIFT)

/*****************************************************************************/
/* Register description for BM_DIRECT */

/* Reset value of register ME_BM_DIRECT */
#define ME_BM_DIRECT_VALUE             0x0

/* Bits definition for register ME_BM_DIRECT */
#define ME_ME_BM_DIRECT_SHIFT          0
#define ME_ME_BM_DIRECT_FIELD          (0xFFFFFFFF - (0x1UL<<ME_ME_BM_DIRECT_SHIFT))
#define ME_ME_BM_DIRECT_0              (0x0UL<<ME_ME_BM_DIRECT_SHIFT)
#define ME_ME_BM_DIRECT_1              (0x1UL<<ME_ME_BM_DIRECT_SHIFT)
#define ME_ME_BM_DIRECT                (0x1UL<<ME_ME_BM_DIRECT_SHIFT)

/*****************************************************************************/
/* Register description for MVC_PTR */

/* Reset value of register ME_MVC_PTR */
#define ME_MVC_PTR_VALUE               0x0

/* Bits definition for register ME_MVC_PTR */
#define ME_ME_MVC_PTR_SHIFT            2
#define ME_ME_MVC_PTR_FIELD            (0xFFFFFFFF - (0x3FFFFFFFUL<<ME_ME_MVC_PTR_SHIFT))

/*****************************************************************************/
/* Register description for MV_BASE */

/* Reset value of register ME_MV_BASE */
#define ME_MV_BASE_VALUE               0x0

/* Bits definition for register ME_MV_BASE */
#define ME_ME_MV_BASE_SHIFT            4
#define ME_ME_MV_BASE_FIELD            (0xFFFFFFFF - (0xFFFFFFFUL<<ME_ME_MV_BASE_SHIFT))

/*****************************************************************************/
/* Register description for MV_END */

/* Reset value of register ME_MV_END */
#define ME_MV_END_VALUE                0x0

/* Bits definition for register ME_MV_END */
#define ME_ME_MV_END_SHIFT             4
#define ME_ME_MV_END_FIELD             (0xFFFFFFFF - (0xFFFFFFFUL<<ME_ME_MV_END_SHIFT))

/*****************************************************************************/
/* Register description for MV_PTR */

/* Reset value of register ME_MV_PTR */
#define ME_MV_PTR_VALUE                0x0

/* Bits definition for register ME_MV_PTR */
#define ME_ME_MV_PTR_SHIFT             4
#define ME_ME_MV_PTR_FIELD             (0xFFFFFFFF - (0xFFFFFFFUL<<ME_ME_MV_PTR_SHIFT))

/*****************************************************************************/
/* Register description for MV_LOAD_PTR */

/* Reset value of register ME_MV_LOAD_PTR */
#define ME_MV_LOAD_PTR_VALUE           0x0

/* Bits definition for register ME_MV_LOAD_PTR */
#define ME_ME_MV_LOAD_PTR_SHIFT        0
#define ME_ME_MV_LOAD_PTR_FIELD        (0xFFFFFFFF - (0x1UL<<ME_ME_MV_LOAD_PTR_SHIFT))
#define ME_ME_MV_LOAD_PTR_1            (0x1UL<<ME_ME_MV_LOAD_PTR_SHIFT)
#define ME_ME_MV_LOAD_PTR_0            (0x0UL<<ME_ME_MV_LOAD_PTR_SHIFT)
#define ME_ME_MV_LOAD_PTR              (0x1UL<<ME_ME_MV_LOAD_PTR_SHIFT)

/*****************************************************************************/
/* Register description for MV_PREV_BASE */

/* Reset value of register ME_MV_PREV_BASE */
#define ME_MV_PREV_BASE_VALUE          0x0

/* Bits definition for register ME_MV_PREV_BASE */
#define ME_ME_MV_PREV_BASE_SHIFT       4
#define ME_ME_MV_PREV_BASE_FIELD       (0xFFFFFFFF - (0xFFFFFFFUL<<ME_ME_MV_PREV_BASE_SHIFT))

/*****************************************************************************/
/* Register description for CURR_SH_RIGHT_LUM */

/* Reset value of register ME_CURR_SH_RIGHT_LUM */
#define ME_CURR_SH_RIGHT_LUM_VALUE     0x0

/* Bits definition for register ME_CURR_SH_RIGHT_LUM */
#define ME_ME_CURR_SH_RIGHT_LUM_SHIFT  0
#define ME_ME_CURR_SH_RIGHT_LUM_FIELD  (0xFFFFFFFF - (0x3FUL<<ME_ME_CURR_SH_RIGHT_LUM_SHIFT))

/*****************************************************************************/
/* Register description for CURR_SH_DOWN_LUM */

/* Reset value of register ME_CURR_SH_DOWN_LUM */
#define ME_CURR_SH_DOWN_LUM_VALUE      0x0

/* Bits definition for register ME_CURR_SH_DOWN_LUM */
#define ME_ME_CURR_SH_DOWN_LUM_SHIFT   0
#define ME_ME_CURR_SH_DOWN_LUM_FIELD   (0xFFFFFFFF - (0xFUL<<ME_ME_CURR_SH_DOWN_LUM_SHIFT))

/*****************************************************************************/
/* Register description for ABS_CLIP_HOR_MAX */

/* Reset value of register ME_ABS_CLIP_HOR_MAX */
#define ME_ABS_CLIP_HOR_MAX_VALUE      0x0

/* Bits definition for register ME_ABS_CLIP_HOR_MAX */
#define ME_ME_ABS_CLIP_HOR_MAX_SHIFT   0
#define ME_ME_ABS_CLIP_HOR_MAX_FIELD   (0xFFFFFFFF - (0x1FFFUL<<ME_ME_ABS_CLIP_HOR_MAX_SHIFT))

/*****************************************************************************/
/* Register description for ABS_CLIP_HOR_MIN */

/* Reset value of register ME_ABS_CLIP_HOR_MIN */
#define ME_ABS_CLIP_HOR_MIN_VALUE      0x0

/* Bits definition for register ME_ABS_CLIP_HOR_MIN */
#define ME_ME_ABS_CLIP_HOR_MIN_SHIFT   0
#define ME_ME_ABS_CLIP_HOR_MIN_FIELD   (0xFFFFFFFF - (0x1FFFUL<<ME_ME_ABS_CLIP_HOR_MIN_SHIFT))

/*****************************************************************************/
/* Register description for ABS_CLIP_VER_MAX */

/* Reset value of register ME_ABS_CLIP_VER_MAX */
#define ME_ABS_CLIP_VER_MAX_VALUE      0x0

/* Bits definition for register ME_ABS_CLIP_VER_MAX */
#define ME_ME_ABS_CLIP_VER_MAX_SHIFT   0
#define ME_ME_ABS_CLIP_VER_MAX_FIELD   (0xFFFFFFFF - (0x1FFFUL<<ME_ME_ABS_CLIP_VER_MAX_SHIFT))

/*****************************************************************************/
/* Register description for ABS_CLIP_VER_MIN */

/* Reset value of register ME_ABS_CLIP_VER_MIN */
#define ME_ABS_CLIP_VER_MIN_VALUE      0x0

/* Bits definition for register ME_ABS_CLIP_VER_MIN */
#define ME_ME_ABS_CLIP_VER_MIN_SHIFT   0
#define ME_ME_ABS_CLIP_VER_MIN_FIELD   (0xFFFFFFFF - (0x1FFFUL<<ME_ME_ABS_CLIP_VER_MIN_SHIFT))

/*****************************************************************************/
/* Register description for REL_CLIP_HOR_MAX */

/* Reset value of register ME_REL_CLIP_HOR_MAX */
#define ME_REL_CLIP_HOR_MAX_VALUE      0x0

/* Bits definition for register ME_REL_CLIP_HOR_MAX */
#define ME_ME_REL_CLIP_HOR_MAX_SHIFT   0
#define ME_ME_REL_CLIP_HOR_MAX_FIELD   (0xFFFFFFFF - (0x1FFFUL<<ME_ME_REL_CLIP_HOR_MAX_SHIFT))

/*****************************************************************************/
/* Register description for REL_CLIP_HOR_MIN */

/* Reset value of register ME_REL_CLIP_HOR_MIN */
#define ME_REL_CLIP_HOR_MIN_VALUE      0x0

/* Bits definition for register ME_REL_CLIP_HOR_MIN */
#define ME_ME_REL_CLIP_HOR_MIN_SHIFT   0
#define ME_ME_REL_CLIP_HOR_MIN_FIELD   (0xFFFFFFFF - (0x1FFFUL<<ME_ME_REL_CLIP_HOR_MIN_SHIFT))

/*****************************************************************************/
/* Register description for REL_CLIP_VER_MAX */

/* Reset value of register ME_REL_CLIP_VER_MAX */
#define ME_REL_CLIP_VER_MAX_VALUE      0x0

/* Bits definition for register ME_REL_CLIP_VER_MAX */
#define ME_ME_REL_CLIP_VER_MAX_SHIFT   0
#define ME_ME_REL_CLIP_VER_MAX_FIELD   (0xFFFFFFFF - (0x1FFFUL<<ME_ME_REL_CLIP_VER_MAX_SHIFT))

/*****************************************************************************/
/* Register description for REL_CLIP_VER_MIN */

/* Reset value of register ME_REL_CLIP_VER_MIN */
#define ME_REL_CLIP_VER_MIN_VALUE      0x0

/* Bits definition for register ME_REL_CLIP_VER_MIN */
#define ME_ME_REL_CLIP_VER_MIN_SHIFT   0
#define ME_ME_REL_CLIP_VER_MIN_FIELD   (0xFFFFFFFF - (0x1FFFUL<<ME_ME_REL_CLIP_VER_MIN_SHIFT))

/*****************************************************************************/
/* Register description for FORCE_INTRA */

/* Reset value of register ME_FORCE_INTRA */
#define ME_FORCE_INTRA_VALUE           0x0

/* Bits definition for register ME_FORCE_INTRA */
#define ME_ME_FORCE_INTRA_SHIFT        0
#define ME_ME_FORCE_INTRA_FIELD        (0xFFFFFFFF - (0x1UL<<ME_ME_FORCE_INTRA_SHIFT))
#define ME_ME_FORCE_INTRA_0            (0x0UL<<ME_ME_FORCE_INTRA_SHIFT)
#define ME_ME_FORCE_INTRA_1            (0x1UL<<ME_ME_FORCE_INTRA_SHIFT)
#define ME_ME_FORCE_INTRA              (0x1UL<<ME_ME_FORCE_INTRA_SHIFT)

/*****************************************************************************/
/* Register description for FORCE_INTRA_LACT */

/* Reset value of register ME_FORCE_INTRA_LACT */
#define ME_FORCE_INTRA_LACT_VALUE      0x1

/* Bits definition for register ME_FORCE_INTRA_LACT */
#define ME_ME_FORCE_INTRA_LACT_SHIFT   0
#define ME_ME_FORCE_INTRA_LACT_FIELD   (0xFFFFFFFF - (0x1UL<<ME_ME_FORCE_INTRA_LACT_SHIFT))
#define ME_ME_FORCE_INTRA_LACT_0       (0x0UL<<ME_ME_FORCE_INTRA_LACT_SHIFT)
#define ME_ME_FORCE_INTRA_LACT_1       (0x1UL<<ME_ME_FORCE_INTRA_LACT_SHIFT)
#define ME_ME_FORCE_INTRA_LACT         (0x1UL<<ME_ME_FORCE_INTRA_LACT_SHIFT)

/*****************************************************************************/
/* Register description for SAD_INTER_MAX */

/* Reset value of register ME_SAD_INTER_MAX */
#define ME_SAD_INTER_MAX_VALUE         0x0

/* Bits definition for register ME_SAD_INTER_MAX */
#define ME_ME_SAD_INTER_MAX_SHIFT      0
#define ME_ME_SAD_INTER_MAX_FIELD      (0xFFFFFFFF - (0x1FFFFUL<<ME_ME_SAD_INTER_MAX_SHIFT))
#define ME_ME_SAD_INTER_MAX_0          (0x0UL<<ME_ME_SAD_INTER_MAX_SHIFT)

/*****************************************************************************/
/* Register description for SAD_NOTCODED_MAX */

/* Reset value of register ME_SAD_NOTCODED_MAX */
#define ME_SAD_NOTCODED_MAX_VALUE      0x0

/* Bits definition for register ME_SAD_NOTCODED_MAX */
#define ME_ME_SAD_NOTCODED_MAX_SHIFT   0
#define ME_ME_SAD_NOTCODED_MAX_FIELD   (0xFFFFFFFF - (0x1FFFFUL<<ME_ME_SAD_NOTCODED_MAX_SHIFT))
#define ME_ME_SAD_NOTCODED_MAX_0       (0x0UL<<ME_ME_SAD_NOTCODED_MAX_SHIFT)

/*****************************************************************************/
/* Register description for LOAD_RND_SEED */

/* Reset value of register ME_LOAD_RND_SEED */
#define ME_LOAD_RND_SEED_VALUE         0x0

/* Bits definition for register ME_LOAD_RND_SEED */
#define ME_ME_LOAD_RND_SEED_SHIFT      0
#define ME_ME_LOAD_RND_SEED_FIELD      (0xFFFFFFFF - (0x1UL<<ME_ME_LOAD_RND_SEED_SHIFT))
#define ME_ME_LOAD_RND_SEED_0          (0x0UL<<ME_ME_LOAD_RND_SEED_SHIFT)
#define ME_ME_LOAD_RND_SEED_1          (0x1UL<<ME_ME_LOAD_RND_SEED_SHIFT)
#define ME_ME_LOAD_RND_SEED            (0x1UL<<ME_ME_LOAD_RND_SEED_SHIFT)

/*****************************************************************************/
/* Register description for RND_SEED */

/* Reset value of register ME_RND_SEED */
#define ME_RND_SEED_VALUE              0xA26545

/* Bits definition for register ME_RND_SEED */
#define ME_ME_RND_SEED_SHIFT           0
#define ME_ME_RND_SEED_FIELD           (0xFFFFFFFF - (0xFFFFFFUL<<ME_ME_RND_SEED_SHIFT))
#define ME_ME_RND_SEED_A26545          (0xA26545UL<<ME_ME_RND_SEED_SHIFT)

/*****************************************************************************/
/* Register description for DISABLE_4MV */

/* Reset value of register ME_DISABLE_4MV */
#define ME_DISABLE_4MV_VALUE           0x0

/* Bits definition for register ME_DISABLE_4MV */
#define ME_ME_DISABLE_4MV_SHIFT        0
#define ME_ME_DISABLE_4MV_FIELD        (0xFFFFFFFF - (0x1UL<<ME_ME_DISABLE_4MV_SHIFT))
#define ME_ME_DISABLE_4MV_0            (0x0UL<<ME_ME_DISABLE_4MV_SHIFT)
#define ME_ME_DISABLE_4MV_1            (0x1UL<<ME_ME_DISABLE_4MV_SHIFT)
#define ME_ME_DISABLE_4MV              (0x1UL<<ME_ME_DISABLE_4MV_SHIFT)

/*****************************************************************************/
/* Register description for MB_ACT_THRESH */

/* Reset value of register ME_MB_ACT_THRESH */
#define ME_MB_ACT_THRESH_VALUE         0x0

/* Bits definition for register ME_MB_ACT_THRESH */
#define ME_ME_MB_ACT_THRESH_SHIFT      0
#define ME_ME_MB_ACT_THRESH_FIELD      (0xFFFFFFFF - (0x3FFFFUL<<ME_ME_MB_ACT_THRESH_SHIFT))
#define ME_ME_MB_ACT_THRESH_0          (0x0UL<<ME_ME_MB_ACT_THRESH_SHIFT)

/*****************************************************************************/
/* Register description for SUM_SAD */

/* Reset value of register ME_SUM_SAD */
#define ME_SUM_SAD_VALUE               0x0

/* Bits definition for register ME_SUM_SAD */
#define ME_ME_SUM_SAD_SHIFT            0
#define ME_ME_SUM_SAD_FIELD            (0xFFFFFFFF - (0x7FFFFFUL<<ME_ME_SUM_SAD_SHIFT))

/*****************************************************************************/
/* Register description for SUM_ACTIVITY */

/* Reset value of register ME_SUM_ACTIVITY */
#define ME_SUM_ACTIVITY_VALUE          0x0

/* Bits definition for register ME_SUM_ACTIVITY */
#define ME_ME_SUM_ACTIVITY_SHIFT       0
#define ME_ME_SUM_ACTIVITY_FIELD       (0xFFFFFFFF - (0x1FFFFFFUL<<ME_ME_SUM_ACTIVITY_SHIFT))

/*****************************************************************************/
/* Register description for TOP_RST */

/* Reset value of register ME_TOP_RST */
#define ME_TOP_RST_VALUE               0x1

/* Bits definition for register ME_TOP_RST */
#define ME_ME_TOP_RST_SHIFT            0
#define ME_ME_TOP_RST_FIELD            (0xFFFFFFFF - (0x1UL<<ME_ME_TOP_RST_SHIFT))
#define ME_ME_TOP_RST_0                (0x0UL<<ME_ME_TOP_RST_SHIFT)
#define ME_ME_TOP_RST_1                (0x1UL<<ME_ME_TOP_RST_SHIFT)
#define ME_ME_TOP_RST                  (0x1UL<<ME_ME_TOP_RST_SHIFT)

/*****************************************************************************/
/* Register description for CG_DISABLE */

/* Reset value of register ME_CG_DISABLE */
#define ME_CG_DISABLE_VALUE            0x0

/* Bits definition for register ME_CG_DISABLE */
#define ME_ME_CG_DISABLE_SHIFT         0
#define ME_ME_CG_DISABLE_FIELD         (0xFFFFFFFF - (0x1UL<<ME_ME_CG_DISABLE_SHIFT))
#define ME_ME_CG_DISABLE_0             (0x0UL<<ME_ME_CG_DISABLE_SHIFT)
#define ME_ME_CG_DISABLE_1             (0x1UL<<ME_ME_CG_DISABLE_SHIFT)
#define ME_ME_CG_DISABLE               (0x1UL<<ME_ME_CG_DISABLE_SHIFT)

/*****************************************************************************/
/* Register description for STATUS_SET */

/* Reset value of register ME_STATUS_SET */
#define ME_STATUS_SET_VALUE            0x0

/* Bits definition for register ME_STATUS_SET */
#define ME_ME_STATUS_SET_SHIFT         0
#define ME_ME_STATUS_SET_FIELD         (0xFFFFFFFF - (0x1FUL<<ME_ME_STATUS_SET_SHIFT))
#define ME_ME_STATUS_SET_0             (0x0UL<<ME_ME_STATUS_SET_SHIFT)

/*****************************************************************************/
/* Register description for STATUS */

/* Reset value of register ME_STATUS */
#define ME_STATUS_VALUE                0x0

/* Bits definition for register ME_STATUS */
#define ME_ME_STATUS_SHIFT             0
#define ME_ME_STATUS_FIELD             (0xFFFFFFFF - (0x1FUL<<ME_ME_STATUS_SHIFT))
#define ME_ME_STATUS_0                 (0x0UL<<ME_ME_STATUS_SHIFT)

/*****************************************************************************/
/* Register description for STATUS_CLR */

/* Reset value of register ME_STATUS_CLR */
#define ME_STATUS_CLR_VALUE            0x0

/* Bits definition for register ME_STATUS_CLR */
#define ME_ME_STATUS_CLR_SHIFT         0
#define ME_ME_STATUS_CLR_FIELD         (0xFFFFFFFF - (0x1FUL<<ME_ME_STATUS_CLR_SHIFT))
#define ME_ME_STATUS_CLR_0             (0x0UL<<ME_ME_STATUS_CLR_SHIFT)

/*****************************************************************************/
/* Register description for ENABLE_SET */

/* Reset value of register ME_ENABLE_SET */
#define ME_ENABLE_SET_VALUE            0x0

/* Bits definition for register ME_ENABLE_SET */
#define ME_ME_ENABLE_SET_SHIFT         0
#define ME_ME_ENABLE_SET_FIELD         (0xFFFFFFFF - (0x1FUL<<ME_ME_ENABLE_SET_SHIFT))
#define ME_ME_ENABLE_SET_0             (0x0UL<<ME_ME_ENABLE_SET_SHIFT)

/*****************************************************************************/
/* Register description for ENABLE */

/* Reset value of register ME_ENABLE */
#define ME_ENABLE_VALUE                0x0

/* Bits definition for register ME_ENABLE */
#define ME_ME_ENABLE_SHIFT             0
#define ME_ME_ENABLE_FIELD             (0xFFFFFFFF - (0x1FUL<<ME_ME_ENABLE_SHIFT))
#define ME_ME_ENABLE_0                 (0x0UL<<ME_ME_ENABLE_SHIFT)

/*****************************************************************************/
/* Register description for ENABLE_CLR */

/* Reset value of register ME_ENABLE_CLR */
#define ME_ENABLE_CLR_VALUE            0x0

/* Bits definition for register ME_ENABLE_CLR */
#define ME_ME_ENABLE_CLR_SHIFT         0
#define ME_ME_ENABLE_CLR_FIELD         (0xFFFFFFFF - (0x1FUL<<ME_ME_ENABLE_CLR_SHIFT))
#define ME_ME_ENABLE_CLR_0             (0x0UL<<ME_ME_ENABLE_CLR_SHIFT)

/*****************************************************************************/
/* Register description for MODULE_ID */

/* Reset value of register ME_MODULE_ID */
#define ME_MODULE_ID_VALUE             0xA0701100

/* Bits definition for register ME_MODULE_ID */
#define ME_ME_MODULE_ID_SHIFT          0
#define ME_ME_MODULE_ID_FIELD          (0xFFFFFFFF - (0x7FFFFFFFUL<<ME_ME_MODULE_ID_SHIFT))
#define ME_ME_MODULE_ID_A0701100       (0xA0701100UL<<ME_ME_MODULE_ID_SHIFT)

/*****************************************************************************/

/*****************************************************************************
* Definitions for: MTU
*****************************************************************************/

/* Pointer on base address */
#define MTU_BASE                       IOA(MTU_BASE_ADDR)

/* MTU CON Register (32 bits) */
#define MTU_CON_OFFSET                 0x0
#define MTU_CON_REG                    IOA(MTU_BASE_ADDR + MTU_CON_OFFSET)

/* MTU TCVAL Register (32 bits) */
#define MTU_TCVAL_OFFSET               0x4
#define MTU_TCVAL_REG                  IOA(MTU_BASE_ADDR + MTU_TCVAL_OFFSET)

/* MTU PRESCALER Register (32 bits) */
#define MTU_PRESCALER_OFFSET           0x8
#define MTU_PRESCALER_REG              IOA(MTU_BASE_ADDR + MTU_PRESCALER_OFFSET)

/* MTU MATCH_CON Register (32 bits) */
#define MTU_MATCH_CON_OFFSET           0xC
#define MTU_MATCH_CON_REG              IOA(MTU_BASE_ADDR + MTU_MATCH_CON_OFFSET)

/* MTU DSPIRQ_CON Register (32 bits) */
#define MTU_DSPIRQ_CON_OFFSET          0x10
#define MTU_DSPIRQ_CON_REG             IOA(MTU_BASE_ADDR + MTU_DSPIRQ_CON_OFFSET)

/* MTU MATCH0 Register (32 bits) */
#define MTU_MATCH0_OFFSET              0x14
#define MTU_MATCH0_REG                 IOA(MTU_BASE_ADDR + MTU_MATCH0_OFFSET)

/* MTU MATCH1 Register (32 bits) */
#define MTU_MATCH1_OFFSET              0x18
#define MTU_MATCH1_REG                 IOA(MTU_BASE_ADDR + MTU_MATCH1_OFFSET)

/* MTU CAPTURE_CON Register (32 bits) */
#define MTU_CAPTURE_CON_OFFSET         0x24
#define MTU_CAPTURE_CON_REG            IOA(MTU_BASE_ADDR + MTU_CAPTURE_CON_OFFSET)

/* MTU CAPTURE0 Register (32 bits) */
#define MTU_CAPTURE0_OFFSET            0x28
#define MTU_CAPTURE0_REG               IOA(MTU_BASE_ADDR + MTU_CAPTURE0_OFFSET)

/* MTU CAPTURE1 Register (32 bits) */
#define MTU_CAPTURE1_OFFSET            0x2C
#define MTU_CAPTURE1_REG               IOA(MTU_BASE_ADDR + MTU_CAPTURE1_OFFSET)

/* MTU CAPTURE2 Register (32 bits) */
#define MTU_CAPTURE2_OFFSET            0x30
#define MTU_CAPTURE2_REG               IOA(MTU_BASE_ADDR + MTU_CAPTURE2_OFFSET)

/* MTU CAPTURE3 Register (32 bits) */
#define MTU_CAPTURE3_OFFSET            0x34
#define MTU_CAPTURE3_REG               IOA(MTU_BASE_ADDR + MTU_CAPTURE3_OFFSET)

/* MTU MOD_CONF Register (32 bits) */
#define MTU_MOD_CONF_OFFSET            0xFD4
#define MTU_MOD_CONF_REG               IOA(MTU_BASE_ADDR + MTU_MOD_CONF_OFFSET)

/* MTU INT_CLR_ENA Register (32 bits) */
#define MTU_INT_CLR_ENA_OFFSET         0xFD8
#define MTU_INT_CLR_ENA_REG            IOA(MTU_BASE_ADDR + MTU_INT_CLR_ENA_OFFSET)

/* MTU INT_SET_ENA Register (32 bits) */
#define MTU_INT_SET_ENA_OFFSET         0xFDC
#define MTU_INT_SET_ENA_REG            IOA(MTU_BASE_ADDR + MTU_INT_SET_ENA_OFFSET)

/* MTU INT_STATUS Register (32 bits) */
#define MTU_INT_STATUS_OFFSET          0xFE0
#define MTU_INT_STATUS_REG             IOA(MTU_BASE_ADDR + MTU_INT_STATUS_OFFSET)

/* MTU INT_ENABLE Register (32 bits) */
#define MTU_INT_ENABLE_OFFSET          0xFE4
#define MTU_INT_ENABLE_REG             IOA(MTU_BASE_ADDR + MTU_INT_ENABLE_OFFSET)

/* MTU INT_CLR_STAT Register (32 bits) */
#define MTU_INT_CLR_STAT_OFFSET        0xFE8
#define MTU_INT_CLR_STAT_REG           IOA(MTU_BASE_ADDR + MTU_INT_CLR_STAT_OFFSET)

/* MTU INT_SET_STAT Register (32 bits) */
#define MTU_INT_SET_STAT_OFFSET        0xFEC
#define MTU_INT_SET_STAT_REG           IOA(MTU_BASE_ADDR + MTU_INT_SET_STAT_OFFSET)

/* MTU IP_ID Register (32 bits) */
#define MTU_IP_ID_OFFSET               0xFFC
#define MTU_IP_ID_REG                  IOA(MTU_BASE_ADDR + MTU_IP_ID_OFFSET)

/* Register description for CON */

/* Reset value of register MTU_CON */
#define MTU_CON_VALUE                  0x0

/* Bits definition for register MTU_CON */
#define MTU_CNT_PAUSE_SHIFT            2
#define MTU_CNT_PAUSE_FIELD            (0xFFFFFFFF - (0x1UL<<MTU_CNT_PAUSE_SHIFT))
#define MTU_CNT_PAUSE_0                (0x0UL<<MTU_CNT_PAUSE_SHIFT)
#define MTU_CNT_PAUSE_1                (0x1UL<<MTU_CNT_PAUSE_SHIFT)
#define MTU_CNT_PAUSE                  (0x1UL<<MTU_CNT_PAUSE_SHIFT)
#define MTU_CNT_RESET_SHIFT            1
#define MTU_CNT_RESET_FIELD            (0xFFFFFFFF - (0x1UL<<MTU_CNT_RESET_SHIFT))
#define MTU_CNT_RESET_0                (0x0UL<<MTU_CNT_RESET_SHIFT)
#define MTU_CNT_RESET_1                (0x1UL<<MTU_CNT_RESET_SHIFT)
#define MTU_CNT_RESET                  (0x1UL<<MTU_CNT_RESET_SHIFT)
#define MTU_CNT_ENABLE_SHIFT           0
#define MTU_CNT_ENABLE_FIELD           (0xFFFFFFFF - (0x1UL<<MTU_CNT_ENABLE_SHIFT))
#define MTU_CNT_ENABLE_0               (0x0UL<<MTU_CNT_ENABLE_SHIFT)
#define MTU_CNT_ENABLE_1               (0x1UL<<MTU_CNT_ENABLE_SHIFT)
#define MTU_CNT_ENABLE                 (0x1UL<<MTU_CNT_ENABLE_SHIFT)

/*****************************************************************************/
/* Register description for TCVAL */

/* Reset value of register MTU_TCVAL */
#define MTU_TCVAL_VALUE                0x0

/* Bits definition for register MTU_TCVAL */
#define MTU_TC_VALUE_SHIFT             0
#define MTU_TC_VALUE_FIELD             (0xFFFFFFFF - (0x7FFFFFFFUL<<MTU_TC_VALUE_SHIFT))
#define MTU_TC_VALUE_0                 (0x0UL<<MTU_TC_VALUE_SHIFT)

/*****************************************************************************/
/* Register description for PRESCALER */

/* Reset value of register MTU_PRESCALER */
#define MTU_PRESCALER_VALUE            0x0

/* Bits definition for register MTU_PRESCALER */
#define MTU_PRESCALER_SHIFT            0
#define MTU_PRESCALER_FIELD            (0xFFFFFFFF - (0x7FFFFFFFUL<<MTU_PRESCALER_SHIFT))
#define MTU_PRESCALER_0                (0x0UL<<MTU_PRESCALER_SHIFT)

/*****************************************************************************/
/* Register description for MATCH_CON */

/* Reset value of register MTU_MATCH_CON */
#define MTU_MATCH_CON_VALUE            0x0

/* Bits definition for register MTU_MATCH_CON */
#define MTU_STOP_M1_SHIFT              3
#define MTU_STOP_M1_FIELD              (0xFFFFFFFF - (0x1UL<<MTU_STOP_M1_SHIFT))
#define MTU_STOP_M1_0                  (0x0UL<<MTU_STOP_M1_SHIFT)
#define MTU_STOP_M1_1                  (0x1UL<<MTU_STOP_M1_SHIFT)
#define MTU_STOP_M1                    (0x1UL<<MTU_STOP_M1_SHIFT)
#define MTU_RESET_M1_SHIFT             2
#define MTU_RESET_M1_FIELD             (0xFFFFFFFF - (0x1UL<<MTU_RESET_M1_SHIFT))
#define MTU_RESET_M1_0                 (0x0UL<<MTU_RESET_M1_SHIFT)
#define MTU_RESET_M1_1                 (0x1UL<<MTU_RESET_M1_SHIFT)
#define MTU_RESET_M1                   (0x1UL<<MTU_RESET_M1_SHIFT)
#define MTU_STOP_M0_SHIFT              1
#define MTU_STOP_M0_FIELD              (0xFFFFFFFF - (0x1UL<<MTU_STOP_M0_SHIFT))
#define MTU_STOP_M0_0                  (0x0UL<<MTU_STOP_M0_SHIFT)
#define MTU_STOP_M0_1                  (0x1UL<<MTU_STOP_M0_SHIFT)
#define MTU_STOP_M0                    (0x1UL<<MTU_STOP_M0_SHIFT)
#define MTU_RESET_M0_SHIFT             0
#define MTU_RESET_M0_FIELD             (0xFFFFFFFF - (0x1UL<<MTU_RESET_M0_SHIFT))
#define MTU_RESET_M0_0                 (0x0UL<<MTU_RESET_M0_SHIFT)
#define MTU_RESET_M0_1                 (0x1UL<<MTU_RESET_M0_SHIFT)
#define MTU_RESET_M0                   (0x1UL<<MTU_RESET_M0_SHIFT)

/*****************************************************************************/
/* Register description for MATCH0 */

/* Reset value of register MTU_MATCH0 */
#define MTU_MATCH0_VALUE               0x0

/* Bits definition for register MTU_MATCH0 */
#define MTU_MATCH_VAL_SHIFT            0
#define MTU_MATCH_VAL_FIELD            (0xFFFFFFFF - (0x7FFFFFFFUL<<MTU_MATCH_VAL_SHIFT))
#define MTU_MATCH_VAL_0                (0x0UL<<MTU_MATCH_VAL_SHIFT)

/*****************************************************************************/
/* Register description for MATCH1 */

/* Reset value of register MTU_MATCH1 */
#define MTU_MATCH1_VALUE               0x0

/* Bits definition for register MTU_MATCH1 */
#define MTU_MATCH_VAL_SHIFT            0
#define MTU_MATCH_VAL_FIELD            (0xFFFFFFFF - (0x7FFFFFFFUL<<MTU_MATCH_VAL_SHIFT))
#define MTU_MATCH_VAL_0                (0x0UL<<MTU_MATCH_VAL_SHIFT)

/*****************************************************************************/
/* Register description for DSPIRQ_CON */

/* Reset value of register MTU_DSPIRQ_CON */
#define MTU_DSPIRQ_CON_VALUE           0x0

/* Bits definition for register MTU_DSPIRQ_CON */
#define MTU_MTUIORQ_CON_SHIFT          4
#define MTU_MTUIORQ_CON_FIELD          (0xFFFFFFFF - (0x3UL<<MTU_MTUIORQ_CON_SHIFT))
#define MTU_MTUIORQ_CON_0              (0x0UL<<MTU_MTUIORQ_CON_SHIFT)
#define MTU_MTUIORQ_CON_LOW            (0x1UL<<MTU_MTUIORQ_CON_SHIFT)
#define MTU_MTUIORQ_CON_HIGH           (0x2UL<<MTU_MTUIORQ_CON_SHIFT)
#define MTU_MTUIORQ_CON_TOGGLE         (0x3UL<<MTU_MTUIORQ_CON_SHIFT)
#define MTU_MTUIORQ_VAL_SHIFT          0
#define MTU_MTUIORQ_VAL_FIELD          (0xFFFFFFFF - (0x1UL<<MTU_MTUIORQ_VAL_SHIFT))
#define MTU_MTUIORQ_VAL_0              (0x0UL<<MTU_MTUIORQ_VAL_SHIFT)
#define MTU_MTUIORQ_VAL_1              (0x1UL<<MTU_MTUIORQ_VAL_SHIFT)
#define MTU_MTUIORQ_VAL                (0x1UL<<MTU_MTUIORQ_VAL_SHIFT)

/*****************************************************************************/
/* Register description for CAPTURE_CON */

/* Reset value of register MTU_CAPTURE_CON */
#define MTU_CAPTURE_CON_VALUE          0x0

/* Bits definition for register MTU_CAPTURE_CON */
#define MTU_FALL_C3_SHIFT              7
#define MTU_FALL_C3_FIELD              (0xFFFFFFFF - (0x1UL<<MTU_FALL_C3_SHIFT))
#define MTU_FALL_C3_0                  (0x0UL<<MTU_FALL_C3_SHIFT)
#define MTU_FALL_C3_1                  (0x1UL<<MTU_FALL_C3_SHIFT)
#define MTU_FALL_C3                    (0x1UL<<MTU_FALL_C3_SHIFT)
#define MTU_RISE_C3_SHIFT              6
#define MTU_RISE_C3_FIELD              (0xFFFFFFFF - (0x1UL<<MTU_RISE_C3_SHIFT))
#define MTU_RISE_C3_0                  (0x0UL<<MTU_RISE_C3_SHIFT)
#define MTU_RISE_C3_1                  (0x1UL<<MTU_RISE_C3_SHIFT)
#define MTU_RISE_C3                    (0x1UL<<MTU_RISE_C3_SHIFT)
#define MTU_FALL_C2_SHIFT              5
#define MTU_FALL_C2_FIELD              (0xFFFFFFFF - (0x1UL<<MTU_FALL_C2_SHIFT))
#define MTU_FALL_C2_0                  (0x0UL<<MTU_FALL_C2_SHIFT)
#define MTU_FALL_C2_1                  (0x1UL<<MTU_FALL_C2_SHIFT)
#define MTU_FALL_C2                    (0x1UL<<MTU_FALL_C2_SHIFT)
#define MTU_RISE_C2_SHIFT              4
#define MTU_RISE_C2_FIELD              (0xFFFFFFFF - (0x1UL<<MTU_RISE_C2_SHIFT))
#define MTU_RISE_C2_0                  (0x0UL<<MTU_RISE_C2_SHIFT)
#define MTU_RISE_C2_1                  (0x1UL<<MTU_RISE_C2_SHIFT)
#define MTU_RISE_C2                    (0x1UL<<MTU_RISE_C2_SHIFT)
#define MTU_FALL_C1_SHIFT              3
#define MTU_FALL_C1_FIELD              (0xFFFFFFFF - (0x1UL<<MTU_FALL_C1_SHIFT))
#define MTU_FALL_C1_0                  (0x0UL<<MTU_FALL_C1_SHIFT)
#define MTU_FALL_C1_1                  (0x1UL<<MTU_FALL_C1_SHIFT)
#define MTU_FALL_C1                    (0x1UL<<MTU_FALL_C1_SHIFT)
#define MTU_RISE_C1_SHIFT              2
#define MTU_RISE_C1_FIELD              (0xFFFFFFFF - (0x1UL<<MTU_RISE_C1_SHIFT))
#define MTU_RISE_C1_0                  (0x0UL<<MTU_RISE_C1_SHIFT)
#define MTU_RISE_C1_1                  (0x1UL<<MTU_RISE_C1_SHIFT)
#define MTU_RISE_C1                    (0x1UL<<MTU_RISE_C1_SHIFT)
#define MTU_FALL_C0_SHIFT              1
#define MTU_FALL_C0_FIELD              (0xFFFFFFFF - (0x1UL<<MTU_FALL_C0_SHIFT))
#define MTU_FALL_C0_0                  (0x0UL<<MTU_FALL_C0_SHIFT)
#define MTU_FALL_C0_1                  (0x1UL<<MTU_FALL_C0_SHIFT)
#define MTU_FALL_C0                    (0x1UL<<MTU_FALL_C0_SHIFT)
#define MTU_RISE_C0_SHIFT              0
#define MTU_RISE_C0_FIELD              (0xFFFFFFFF - (0x1UL<<MTU_RISE_C0_SHIFT))
#define MTU_RISE_C0_0                  (0x0UL<<MTU_RISE_C0_SHIFT)
#define MTU_RISE_C0_1                  (0x1UL<<MTU_RISE_C0_SHIFT)
#define MTU_RISE_C0                    (0x1UL<<MTU_RISE_C0_SHIFT)

/*****************************************************************************/
/* Register description for CAPTURE0 */

/* Reset value of register MTU_CAPTURE0 */
#define MTU_CAPTURE0_VALUE             0x0

/* Bits definition for register MTU_CAPTURE0 */
#define MTU_CAP_VAL_SHIFT              0
#define MTU_CAP_VAL_FIELD              (0xFFFFFFFF - (0x7FFFFFFFUL<<MTU_CAP_VAL_SHIFT))
#define MTU_CAP_VAL_0                  (0x0UL<<MTU_CAP_VAL_SHIFT)

/*****************************************************************************/
/* Register description for CAPTURE1 */

/* Reset value of register MTU_CAPTURE1 */
#define MTU_CAPTURE1_VALUE             0x0

/* Bits definition for register MTU_CAPTURE1 */
#define MTU_CAP_VAL_SHIFT              0
#define MTU_CAP_VAL_FIELD              (0xFFFFFFFF - (0x7FFFFFFFUL<<MTU_CAP_VAL_SHIFT))
#define MTU_CAP_VAL_0                  (0x0UL<<MTU_CAP_VAL_SHIFT)

/*****************************************************************************/
/* Register description for CAPTURE2 */

/* Reset value of register MTU_CAPTURE2 */
#define MTU_CAPTURE2_VALUE             0x0

/* Bits definition for register MTU_CAPTURE2 */
#define MTU_CAP_VAL_SHIFT              0
#define MTU_CAP_VAL_FIELD              (0xFFFFFFFF - (0x7FFFFFFFUL<<MTU_CAP_VAL_SHIFT))
#define MTU_CAP_VAL_0                  (0x0UL<<MTU_CAP_VAL_SHIFT)

/*****************************************************************************/
/* Register description for CAPTURE3 */

/* Reset value of register MTU_CAPTURE3 */
#define MTU_CAPTURE3_VALUE             0x0

/* Bits definition for register MTU_CAPTURE3 */
#define MTU_CAP_VAL_SHIFT              0
#define MTU_CAP_VAL_FIELD              (0xFFFFFFFF - (0x7FFFFFFFUL<<MTU_CAP_VAL_SHIFT))
#define MTU_CAP_VAL_0                  (0x0UL<<MTU_CAP_VAL_SHIFT)

/*****************************************************************************/
/* Register description for INT_CLR_ENA */

/* Reset value of register MTU_INT_CLR_ENA */
#define MTU_INT_CLR_ENA_VALUE          0x0

/* Bits definition for register MTU_INT_CLR_ENA */
#define MTU_INT_C3_SHIFT               7
#define MTU_INT_C3_FIELD               (0xFFFFFFFF - (0x1UL<<MTU_INT_C3_SHIFT))
#define MTU_INT_C3_0                   (0x0UL<<MTU_INT_C3_SHIFT)
#define MTU_INT_C3_1                   (0x1UL<<MTU_INT_C3_SHIFT)
#define MTU_INT_C3                     (0x1UL<<MTU_INT_C3_SHIFT)
#define MTU_INT_C2_SHIFT               6
#define MTU_INT_C2_FIELD               (0xFFFFFFFF - (0x1UL<<MTU_INT_C2_SHIFT))
#define MTU_INT_C2_0                   (0x0UL<<MTU_INT_C2_SHIFT)
#define MTU_INT_C2_1                   (0x1UL<<MTU_INT_C2_SHIFT)
#define MTU_INT_C2                     (0x1UL<<MTU_INT_C2_SHIFT)
#define MTU_INT_C1_SHIFT               5
#define MTU_INT_C1_FIELD               (0xFFFFFFFF - (0x1UL<<MTU_INT_C1_SHIFT))
#define MTU_INT_C1_0                   (0x0UL<<MTU_INT_C1_SHIFT)
#define MTU_INT_C1_1                   (0x1UL<<MTU_INT_C1_SHIFT)
#define MTU_INT_C1                     (0x1UL<<MTU_INT_C1_SHIFT)
#define MTU_INT_C0_SHIFT               4
#define MTU_INT_C0_FIELD               (0xFFFFFFFF - (0x1UL<<MTU_INT_C0_SHIFT))
#define MTU_INT_C0_0                   (0x0UL<<MTU_INT_C0_SHIFT)
#define MTU_INT_C0_1                   (0x1UL<<MTU_INT_C0_SHIFT)
#define MTU_INT_C0                     (0x1UL<<MTU_INT_C0_SHIFT)
#define MTU_INT_M1_SHIFT               1
#define MTU_INT_M1_FIELD               (0xFFFFFFFF - (0x1UL<<MTU_INT_M1_SHIFT))
#define MTU_INT_M1_0                   (0x0UL<<MTU_INT_M1_SHIFT)
#define MTU_INT_M1_1                   (0x1UL<<MTU_INT_M1_SHIFT)
#define MTU_INT_M1                     (0x1UL<<MTU_INT_M1_SHIFT)
#define MTU_INT_M0_SHIFT               0
#define MTU_INT_M0_FIELD               (0xFFFFFFFF - (0x1UL<<MTU_INT_M0_SHIFT))
#define MTU_INT_M0_0                   (0x0UL<<MTU_INT_M0_SHIFT)
#define MTU_INT_M0_1                   (0x1UL<<MTU_INT_M0_SHIFT)
#define MTU_INT_M0                     (0x1UL<<MTU_INT_M0_SHIFT)

/*****************************************************************************/
/* Register description for INT_SET_ENA */

/* Reset value of register MTU_INT_SET_ENA */
#define MTU_INT_SET_ENA_VALUE          0x0

/* Bits definition for register MTU_INT_SET_ENA */
#define MTU_INT_C3_SHIFT               7
#define MTU_INT_C3_FIELD               (0xFFFFFFFF - (0x1UL<<MTU_INT_C3_SHIFT))
#define MTU_INT_C3_0                   (0x0UL<<MTU_INT_C3_SHIFT)
#define MTU_INT_C3_1                   (0x1UL<<MTU_INT_C3_SHIFT)
#define MTU_INT_C3                     (0x1UL<<MTU_INT_C3_SHIFT)
#define MTU_INT_C2_SHIFT               6
#define MTU_INT_C2_FIELD               (0xFFFFFFFF - (0x1UL<<MTU_INT_C2_SHIFT))
#define MTU_INT_C2_0                   (0x0UL<<MTU_INT_C2_SHIFT)
#define MTU_INT_C2_1                   (0x1UL<<MTU_INT_C2_SHIFT)
#define MTU_INT_C2                     (0x1UL<<MTU_INT_C2_SHIFT)
#define MTU_INT_C1_SHIFT               5
#define MTU_INT_C1_FIELD               (0xFFFFFFFF - (0x1UL<<MTU_INT_C1_SHIFT))
#define MTU_INT_C1_0                   (0x0UL<<MTU_INT_C1_SHIFT)
#define MTU_INT_C1_1                   (0x1UL<<MTU_INT_C1_SHIFT)
#define MTU_INT_C1                     (0x1UL<<MTU_INT_C1_SHIFT)
#define MTU_INT_C0_SHIFT               4
#define MTU_INT_C0_FIELD               (0xFFFFFFFF - (0x1UL<<MTU_INT_C0_SHIFT))
#define MTU_INT_C0_0                   (0x0UL<<MTU_INT_C0_SHIFT)
#define MTU_INT_C0_1                   (0x1UL<<MTU_INT_C0_SHIFT)
#define MTU_INT_C0                     (0x1UL<<MTU_INT_C0_SHIFT)
#define MTU_INT_M1_SHIFT               1
#define MTU_INT_M1_FIELD               (0xFFFFFFFF - (0x1UL<<MTU_INT_M1_SHIFT))
#define MTU_INT_M1_0                   (0x0UL<<MTU_INT_M1_SHIFT)
#define MTU_INT_M1_1                   (0x1UL<<MTU_INT_M1_SHIFT)
#define MTU_INT_M1                     (0x1UL<<MTU_INT_M1_SHIFT)
#define MTU_INT_M0_SHIFT               0
#define MTU_INT_M0_FIELD               (0xFFFFFFFF - (0x1UL<<MTU_INT_M0_SHIFT))
#define MTU_INT_M0_0                   (0x0UL<<MTU_INT_M0_SHIFT)
#define MTU_INT_M0_1                   (0x1UL<<MTU_INT_M0_SHIFT)
#define MTU_INT_M0                     (0x1UL<<MTU_INT_M0_SHIFT)

/*****************************************************************************/
/* Register description for INT_ENABLE */

/* Reset value of register MTU_INT_ENABLE */
#define MTU_INT_ENABLE_VALUE           0x0

/* Bits definition for register MTU_INT_ENABLE */
#define MTU_INT_C3_SHIFT               7
#define MTU_INT_C3_FIELD               (0xFFFFFFFF - (0x1UL<<MTU_INT_C3_SHIFT))
#define MTU_INT_C3_0                   (0x0UL<<MTU_INT_C3_SHIFT)
#define MTU_INT_C3_1                   (0x1UL<<MTU_INT_C3_SHIFT)
#define MTU_INT_C3                     (0x1UL<<MTU_INT_C3_SHIFT)
#define MTU_INT_C2_SHIFT               6
#define MTU_INT_C2_FIELD               (0xFFFFFFFF - (0x1UL<<MTU_INT_C2_SHIFT))
#define MTU_INT_C2_0                   (0x0UL<<MTU_INT_C2_SHIFT)
#define MTU_INT_C2_1                   (0x1UL<<MTU_INT_C2_SHIFT)
#define MTU_INT_C2                     (0x1UL<<MTU_INT_C2_SHIFT)
#define MTU_INT_C1_SHIFT               5
#define MTU_INT_C1_FIELD               (0xFFFFFFFF - (0x1UL<<MTU_INT_C1_SHIFT))
#define MTU_INT_C1_0                   (0x0UL<<MTU_INT_C1_SHIFT)
#define MTU_INT_C1_1                   (0x1UL<<MTU_INT_C1_SHIFT)
#define MTU_INT_C1                     (0x1UL<<MTU_INT_C1_SHIFT)
#define MTU_INT_C0_SHIFT               4
#define MTU_INT_C0_FIELD               (0xFFFFFFFF - (0x1UL<<MTU_INT_C0_SHIFT))
#define MTU_INT_C0_0                   (0x0UL<<MTU_INT_C0_SHIFT)
#define MTU_INT_C0_1                   (0x1UL<<MTU_INT_C0_SHIFT)
#define MTU_INT_C0                     (0x1UL<<MTU_INT_C0_SHIFT)
#define MTU_INT_M1_SHIFT               1
#define MTU_INT_M1_FIELD               (0xFFFFFFFF - (0x1UL<<MTU_INT_M1_SHIFT))
#define MTU_INT_M1_0                   (0x0UL<<MTU_INT_M1_SHIFT)
#define MTU_INT_M1_1                   (0x1UL<<MTU_INT_M1_SHIFT)
#define MTU_INT_M1                     (0x1UL<<MTU_INT_M1_SHIFT)
#define MTU_INT_M0_SHIFT               0
#define MTU_INT_M0_FIELD               (0xFFFFFFFF - (0x1UL<<MTU_INT_M0_SHIFT))
#define MTU_INT_M0_0                   (0x0UL<<MTU_INT_M0_SHIFT)
#define MTU_INT_M0_1                   (0x1UL<<MTU_INT_M0_SHIFT)
#define MTU_INT_M0                     (0x1UL<<MTU_INT_M0_SHIFT)

/*****************************************************************************/
/* Register description for INT_CLR_STAT */

/* Reset value of register MTU_INT_CLR_STAT */
#define MTU_INT_CLR_STAT_VALUE         0x0

/* Bits definition for register MTU_INT_CLR_STAT */
#define MTU_INT_C3_SHIFT               7
#define MTU_INT_C3_FIELD               (0xFFFFFFFF - (0x1UL<<MTU_INT_C3_SHIFT))
#define MTU_INT_C3_0                   (0x0UL<<MTU_INT_C3_SHIFT)
#define MTU_INT_C3_1                   (0x1UL<<MTU_INT_C3_SHIFT)
#define MTU_INT_C3                     (0x1UL<<MTU_INT_C3_SHIFT)
#define MTU_INT_C2_SHIFT               6
#define MTU_INT_C2_FIELD               (0xFFFFFFFF - (0x1UL<<MTU_INT_C2_SHIFT))
#define MTU_INT_C2_0                   (0x0UL<<MTU_INT_C2_SHIFT)
#define MTU_INT_C2_1                   (0x1UL<<MTU_INT_C2_SHIFT)
#define MTU_INT_C2                     (0x1UL<<MTU_INT_C2_SHIFT)
#define MTU_INT_C1_SHIFT               5
#define MTU_INT_C1_FIELD               (0xFFFFFFFF - (0x1UL<<MTU_INT_C1_SHIFT))
#define MTU_INT_C1_0                   (0x0UL<<MTU_INT_C1_SHIFT)
#define MTU_INT_C1_1                   (0x1UL<<MTU_INT_C1_SHIFT)
#define MTU_INT_C1                     (0x1UL<<MTU_INT_C1_SHIFT)
#define MTU_INT_C0_SHIFT               4
#define MTU_INT_C0_FIELD               (0xFFFFFFFF - (0x1UL<<MTU_INT_C0_SHIFT))
#define MTU_INT_C0_0                   (0x0UL<<MTU_INT_C0_SHIFT)
#define MTU_INT_C0_1                   (0x1UL<<MTU_INT_C0_SHIFT)
#define MTU_INT_C0                     (0x1UL<<MTU_INT_C0_SHIFT)
#define MTU_INT_M1_SHIFT               1
#define MTU_INT_M1_FIELD               (0xFFFFFFFF - (0x1UL<<MTU_INT_M1_SHIFT))
#define MTU_INT_M1_0                   (0x0UL<<MTU_INT_M1_SHIFT)
#define MTU_INT_M1_1                   (0x1UL<<MTU_INT_M1_SHIFT)
#define MTU_INT_M1                     (0x1UL<<MTU_INT_M1_SHIFT)
#define MTU_INT_M0_SHIFT               0
#define MTU_INT_M0_FIELD               (0xFFFFFFFF - (0x1UL<<MTU_INT_M0_SHIFT))
#define MTU_INT_M0_0                   (0x0UL<<MTU_INT_M0_SHIFT)
#define MTU_INT_M0_1                   (0x1UL<<MTU_INT_M0_SHIFT)
#define MTU_INT_M0                     (0x1UL<<MTU_INT_M0_SHIFT)

/*****************************************************************************/
/* Register description for INT_SET_STAT */

/* Reset value of register MTU_INT_SET_STAT */
#define MTU_INT_SET_STAT_VALUE         0x0

/* Bits definition for register MTU_INT_SET_STAT */
#define MTU_INT_C3_SHIFT               7
#define MTU_INT_C3_FIELD               (0xFFFFFFFF - (0x1UL<<MTU_INT_C3_SHIFT))
#define MTU_INT_C3_0                   (0x0UL<<MTU_INT_C3_SHIFT)
#define MTU_INT_C3_1                   (0x1UL<<MTU_INT_C3_SHIFT)
#define MTU_INT_C3                     (0x1UL<<MTU_INT_C3_SHIFT)
#define MTU_INT_C2_SHIFT               6
#define MTU_INT_C2_FIELD               (0xFFFFFFFF - (0x1UL<<MTU_INT_C2_SHIFT))
#define MTU_INT_C2_0                   (0x0UL<<MTU_INT_C2_SHIFT)
#define MTU_INT_C2_1                   (0x1UL<<MTU_INT_C2_SHIFT)
#define MTU_INT_C2                     (0x1UL<<MTU_INT_C2_SHIFT)
#define MTU_INT_C1_SHIFT               5
#define MTU_INT_C1_FIELD               (0xFFFFFFFF - (0x1UL<<MTU_INT_C1_SHIFT))
#define MTU_INT_C1_0                   (0x0UL<<MTU_INT_C1_SHIFT)
#define MTU_INT_C1_1                   (0x1UL<<MTU_INT_C1_SHIFT)
#define MTU_INT_C1                     (0x1UL<<MTU_INT_C1_SHIFT)
#define MTU_INT_C0_SHIFT               4
#define MTU_INT_C0_FIELD               (0xFFFFFFFF - (0x1UL<<MTU_INT_C0_SHIFT))
#define MTU_INT_C0_0                   (0x0UL<<MTU_INT_C0_SHIFT)
#define MTU_INT_C0_1                   (0x1UL<<MTU_INT_C0_SHIFT)
#define MTU_INT_C0                     (0x1UL<<MTU_INT_C0_SHIFT)
#define MTU_INT_M1_SHIFT               1
#define MTU_INT_M1_FIELD               (0xFFFFFFFF - (0x1UL<<MTU_INT_M1_SHIFT))
#define MTU_INT_M1_0                   (0x0UL<<MTU_INT_M1_SHIFT)
#define MTU_INT_M1_1                   (0x1UL<<MTU_INT_M1_SHIFT)
#define MTU_INT_M1                     (0x1UL<<MTU_INT_M1_SHIFT)
#define MTU_INT_M0_SHIFT               0
#define MTU_INT_M0_FIELD               (0xFFFFFFFF - (0x1UL<<MTU_INT_M0_SHIFT))
#define MTU_INT_M0_0                   (0x0UL<<MTU_INT_M0_SHIFT)
#define MTU_INT_M0_1                   (0x1UL<<MTU_INT_M0_SHIFT)
#define MTU_INT_M0                     (0x1UL<<MTU_INT_M0_SHIFT)

/*****************************************************************************/
/* Register description for INT_STATUS */

/* Reset value of register MTU_INT_STATUS */
#define MTU_INT_STATUS_VALUE           0x0

/* Bits definition for register MTU_INT_STATUS */
#define MTU_INT_C3_SHIFT               7
#define MTU_INT_C3_FIELD               (0xFFFFFFFF - (0x1UL<<MTU_INT_C3_SHIFT))
#define MTU_INT_C3_0                   (0x0UL<<MTU_INT_C3_SHIFT)
#define MTU_INT_C3_1                   (0x1UL<<MTU_INT_C3_SHIFT)
#define MTU_INT_C3                     (0x1UL<<MTU_INT_C3_SHIFT)
#define MTU_INT_C2_SHIFT               6
#define MTU_INT_C2_FIELD               (0xFFFFFFFF - (0x1UL<<MTU_INT_C2_SHIFT))
#define MTU_INT_C2_0                   (0x0UL<<MTU_INT_C2_SHIFT)
#define MTU_INT_C2_1                   (0x1UL<<MTU_INT_C2_SHIFT)
#define MTU_INT_C2                     (0x1UL<<MTU_INT_C2_SHIFT)
#define MTU_INT_C1_SHIFT               5
#define MTU_INT_C1_FIELD               (0xFFFFFFFF - (0x1UL<<MTU_INT_C1_SHIFT))
#define MTU_INT_C1_0                   (0x0UL<<MTU_INT_C1_SHIFT)
#define MTU_INT_C1_1                   (0x1UL<<MTU_INT_C1_SHIFT)
#define MTU_INT_C1                     (0x1UL<<MTU_INT_C1_SHIFT)
#define MTU_INT_C0_SHIFT               4
#define MTU_INT_C0_FIELD               (0xFFFFFFFF - (0x1UL<<MTU_INT_C0_SHIFT))
#define MTU_INT_C0_0                   (0x0UL<<MTU_INT_C0_SHIFT)
#define MTU_INT_C0_1                   (0x1UL<<MTU_INT_C0_SHIFT)
#define MTU_INT_C0                     (0x1UL<<MTU_INT_C0_SHIFT)
#define MTU_INT_M1_SHIFT               1
#define MTU_INT_M1_FIELD               (0xFFFFFFFF - (0x1UL<<MTU_INT_M1_SHIFT))
#define MTU_INT_M1_0                   (0x0UL<<MTU_INT_M1_SHIFT)
#define MTU_INT_M1_1                   (0x1UL<<MTU_INT_M1_SHIFT)
#define MTU_INT_M1                     (0x1UL<<MTU_INT_M1_SHIFT)
#define MTU_INT_M0_SHIFT               0
#define MTU_INT_M0_FIELD               (0xFFFFFFFF - (0x1UL<<MTU_INT_M0_SHIFT))
#define MTU_INT_M0_0                   (0x0UL<<MTU_INT_M0_SHIFT)
#define MTU_INT_M0_1                   (0x1UL<<MTU_INT_M0_SHIFT)
#define MTU_INT_M0                     (0x1UL<<MTU_INT_M0_SHIFT)

/*****************************************************************************/
/* Register description for MOD_CONF */

/* Reset value of register MTU_MOD_CONF */
#define MTU_MOD_CONF_VALUE             0xA8

/* Bits definition for register MTU_MOD_CONF */
#define MTU_MATCH_OUT_SHIFT            7
#define MTU_MATCH_OUT_FIELD            (0xFFFFFFFF - (0x1UL<<MTU_MATCH_OUT_SHIFT))
#define MTU_MATCH_OUT_1                (0x1UL<<MTU_MATCH_OUT_SHIFT)
#define MTU_MATCH_OUT_0                (0x0UL<<MTU_MATCH_OUT_SHIFT)
#define MTU_MATCH_OUT                  (0x1UL<<MTU_MATCH_OUT_SHIFT)
#define MTU_N_MATCH_SHIFT              4
#define MTU_N_MATCH_FIELD              (0xFFFFFFFF - (0x7UL<<MTU_N_MATCH_SHIFT))
#define MTU_N_MATCH_2                  (0x2UL<<MTU_N_MATCH_SHIFT)
#define MTU_N_CAP_SHIFT                1
#define MTU_N_CAP_FIELD                (0xFFFFFFFF - (0x7UL<<MTU_N_CAP_SHIFT))
#define MTU_N_CAP_4                    (0x4UL<<MTU_N_CAP_SHIFT)
#define MTU_WATCHDOG_SHIFT             0
#define MTU_WATCHDOG_FIELD             (0xFFFFFFFF - (0x1UL<<MTU_WATCHDOG_SHIFT))
#define MTU_WATCHDOG_0                 (0x0UL<<MTU_WATCHDOG_SHIFT)
#define MTU_WATCHDOG_1                 (0x1UL<<MTU_WATCHDOG_SHIFT)
#define MTU_WATCHDOG                   (0x1UL<<MTU_WATCHDOG_SHIFT)

/*****************************************************************************/
/* Register description for IP_ID */

/* Reset value of register MTU_IP_ID */
#define MTU_IP_ID_VALUE                0x30122500

/* Bits definition for register MTU_IP_ID */
#define MTU_IP_ID_SHIFT                16
#define MTU_IP_ID_FIELD                (0xFFFFFFFF - (0xFFFFUL<<MTU_IP_ID_SHIFT))
#define MTU_IP_ID_3012                 (0x3012UL<<MTU_IP_ID_SHIFT)
#define MTU_MAJOR_REV_SHIFT            12
#define MTU_MAJOR_REV_FIELD            (0xFFFFFFFF - (0xFUL<<MTU_MAJOR_REV_SHIFT))
#define MTU_MAJOR_REV_2                (0x2UL<<MTU_MAJOR_REV_SHIFT)
#define MTU_MINOR_REV_SHIFT            8
#define MTU_MINOR_REV_FIELD            (0xFFFFFFFF - (0xFUL<<MTU_MINOR_REV_SHIFT))
#define MTU_MINOR_REV_5                (0x5UL<<MTU_MINOR_REV_SHIFT)
#define MTU_APERTURE_SHIFT             0
#define MTU_APERTURE_FIELD             (0xFFFFFFFF - (0xFFUL<<MTU_APERTURE_SHIFT))
#define MTU_APERTURE_0                 (0x0UL<<MTU_APERTURE_SHIFT)

/*****************************************************************************/

/*****************************************************************************
* Definitions for: NFI
*****************************************************************************/

/* Pointer on base address */
#define NFI_BASE                       IOA(NFI_BASE_ADDR)

/* NFI DATA Register (32 bits) */
#define NFI_DATA_OFFSET                0x0
#define NFI_DATA_REG                   IOA(NFI_BASE_ADDR + NFI_DATA_OFFSET)

/* NFI ADDR Register (32 bits) */
#define NFI_ADDR_OFFSET                0x4
#define NFI_ADDR_REG                   IOA(NFI_BASE_ADDR + NFI_ADDR_OFFSET)

/* NFI CMD Register (32 bits) */
#define NFI_CMD_OFFSET                 0x8
#define NFI_CMD_REG                    IOA(NFI_BASE_ADDR + NFI_CMD_OFFSET)

/* NFI STOP Register (32 bits) */
#define NFI_STOP_OFFSET                0xC
#define NFI_STOP_REG                   IOA(NFI_BASE_ADDR + NFI_STOP_OFFSET)

/* NFI CTRL Register (32 bits) */
#define NFI_CTRL_OFFSET                0x10
#define NFI_CTRL_REG                   IOA(NFI_BASE_ADDR + NFI_CTRL_OFFSET)

/* NFI CONFIG Register (32 bits) */
#define NFI_CONFIG_OFFSET              0x14
#define NFI_CONFIG_REG                 IOA(NFI_BASE_ADDR + NFI_CONFIG_OFFSET)

/* NFI STAT Register (32 bits) */
#define NFI_STAT_OFFSET                0x18
#define NFI_STAT_REG                   IOA(NFI_BASE_ADDR + NFI_STAT_OFFSET)

/* NFI INT_STAT Register (32 bits) */
#define NFI_INT_STAT_OFFSET            0x1C
#define NFI_INT_STAT_REG               IOA(NFI_BASE_ADDR + NFI_INT_STAT_OFFSET)

/* NFI IEN Register (32 bits) */
#define NFI_IEN_OFFSET                 0x20
#define NFI_IEN_REG                    IOA(NFI_BASE_ADDR + NFI_IEN_OFFSET)

/* NFI ISR Register (32 bits) */
#define NFI_ISR_OFFSET                 0x24
#define NFI_ISR_REG                    IOA(NFI_BASE_ADDR + NFI_ISR_OFFSET)

/* NFI ICR Register (32 bits) */
#define NFI_ICR_OFFSET                 0x28
#define NFI_ICR_REG                    IOA(NFI_BASE_ADDR + NFI_ICR_OFFSET)

/* NFI TAC Register (32 bits) */
#define NFI_TAC_OFFSET                 0x2C
#define NFI_TAC_REG                    IOA(NFI_BASE_ADDR + NFI_TAC_OFFSET)

/* NFI TC Register (32 bits) */
#define NFI_TC_OFFSET                  0x30
#define NFI_TC_REG                     IOA(NFI_BASE_ADDR + NFI_TC_OFFSET)

/* NFI ECC Register (32 bits) */
#define NFI_ECC_OFFSET                 0x34
#define NFI_ECC_REG                    IOA(NFI_BASE_ADDR + NFI_ECC_OFFSET)

/* NFI DMA_DATA Register (32 bits) */
#define NFI_DMA_DATA_OFFSET            0x38
#define NFI_DMA_DATA_REG               IOA(NFI_BASE_ADDR + NFI_DMA_DATA_OFFSET)

/* NFI PAGE_SIZE Register (32 bits) */
#define NFI_PAGE_SIZE_OFFSET           0x3C
#define NFI_PAGE_SIZE_REG              IOA(NFI_BASE_ADDR + NFI_PAGE_SIZE_OFFSET)

/* NFI READY Register (32 bits) */
#define NFI_READY_OFFSET               0x40
#define NFI_READY_REG                  IOA(NFI_BASE_ADDR + NFI_READY_OFFSET)

/* NFI TAC_READ Register (32 bits) */
#define NFI_TAC_READ_OFFSET            0x44
#define NFI_TAC_READ_REG               IOA(NFI_BASE_ADDR + NFI_TAC_READ_OFFSET)

/* Register description for DATA */

/* Reset value of register NFI_DATA */
#define NFI_DATA_VALUE                 0x0

/* Bits definition for register NFI_DATA */
#define NFI_DATA_LSB_SHIFT             0
#define NFI_DATA_LSB_FIELD             (0xFFFFFFFF - (0xFFUL<<NFI_DATA_LSB_SHIFT))
#define NFI_DATA_LSB_0                 (0x0UL<<NFI_DATA_LSB_SHIFT)

/*****************************************************************************/
/* Register description for ADDR */

/* Reset value of register NFI_ADDR */
#define NFI_ADDR_VALUE                 0x0

/* Bits definition for register NFI_ADDR */
#define NFI_ADDR_SHIFT                 0
#define NFI_ADDR_FIELD                 (0xFFFFFFFF - (0xFFUL<<NFI_ADDR_SHIFT))

/*****************************************************************************/
/* Register description for CMD */

/* Reset value of register NFI_CMD */
#define NFI_CMD_VALUE                  0x0

/* Bits definition for register NFI_CMD */
#define NFI_CMD_SHIFT                  0
#define NFI_CMD_FIELD                  (0xFFFFFFFF - (0xFFUL<<NFI_CMD_SHIFT))

/*****************************************************************************/
/* Register description for STOP */

/* Reset value of register NFI_STOP */
#define NFI_STOP_VALUE                 0x0

/* Bits definition for register NFI_STOP */

/*****************************************************************************/
/* Register description for READY */

/* Reset value of register NFI_READY */
#define NFI_READY_VALUE                0x0

/* Bits definition for register NFI_READY */

/*****************************************************************************/
/* Register description for CTRL */

/* Reset value of register NFI_CTRL */
#define NFI_CTRL_VALUE                 0x0

/* Bits definition for register NFI_CTRL */
#define NFI_SW_RESET_SHIFT             2
#define NFI_SW_RESET_FIELD             (0xFFFFFFFF - (0x1UL<<NFI_SW_RESET_SHIFT))
#define NFI_SW_RESET_0                 (0x0UL<<NFI_SW_RESET_SHIFT)
#define NFI_SW_RESET_1                 (0x1UL<<NFI_SW_RESET_SHIFT)
#define NFI_SW_RESET                   (0x1UL<<NFI_SW_RESET_SHIFT)
#define NFI_ECC_CLEAR_SHIFT            1
#define NFI_ECC_CLEAR_FIELD            (0xFFFFFFFF - (0x1UL<<NFI_ECC_CLEAR_SHIFT))
#define NFI_ECC_CLEAR_0                (0x0UL<<NFI_ECC_CLEAR_SHIFT)
#define NFI_ECC_CLEAR_1                (0x1UL<<NFI_ECC_CLEAR_SHIFT)
#define NFI_ECC_CLEAR                  (0x1UL<<NFI_ECC_CLEAR_SHIFT)
#define NFI_DMA_START_SHIFT            0
#define NFI_DMA_START_FIELD            (0xFFFFFFFF - (0x1UL<<NFI_DMA_START_SHIFT))
#define NFI_DMA_START_0                (0x0UL<<NFI_DMA_START_SHIFT)
#define NFI_DMA_START_1                (0x1UL<<NFI_DMA_START_SHIFT)
#define NFI_DMA_START                  (0x1UL<<NFI_DMA_START_SHIFT)

/*****************************************************************************/
/* Register description for CONFIG */

/* Reset value of register NFI_CONFIG */
#define NFI_CONFIG_VALUE               0x0

/* Bits definition for register NFI_CONFIG */
#define NFI_CMD_UNDER_BUSY_SHIFT       7
#define NFI_CMD_UNDER_BUSY_FIELD       (0xFFFFFFFF - (0x1UL<<NFI_CMD_UNDER_BUSY_SHIFT))
#define NFI_CMD_UNDER_BUSY_DISABLE     (0x0UL<<NFI_CMD_UNDER_BUSY_SHIFT)
#define NFI_CMD_UNDER_BUSY_ENABLE      (0x1UL<<NFI_CMD_UNDER_BUSY_SHIFT)
#define NFI_CMD_UNDER_BUSY             (0x1UL<<NFI_CMD_UNDER_BUSY_SHIFT)
#define NFI_TAC_MODE_SHIFT             6
#define NFI_TAC_MODE_FIELD             (0xFFFFFFFF - (0x1UL<<NFI_TAC_MODE_SHIFT))
#define NFI_TAC_MODE_0                 (0x0UL<<NFI_TAC_MODE_SHIFT)
#define NFI_TAC_MODE_NFI_TAC           (0x1UL<<NFI_TAC_MODE_SHIFT)
#define NFI_TAC_MODE                   (0x1UL<<NFI_TAC_MODE_SHIFT)
#define NFI_CE_LOW_SHIFT               5
#define NFI_CE_LOW_FIELD               (0xFFFFFFFF - (0x1UL<<NFI_CE_LOW_SHIFT))
#define NFI_CE_LOW_0                   (0x0UL<<NFI_CE_LOW_SHIFT)
#define NFI_CE_LOW_ALWAYS              (0x1UL<<NFI_CE_LOW_SHIFT)
#define NFI_CE_LOW                     (0x1UL<<NFI_CE_LOW_SHIFT)
#define NFI_DMA_ECC_SHIFT              4
#define NFI_DMA_ECC_FIELD              (0xFFFFFFFF - (0x1UL<<NFI_DMA_ECC_SHIFT))
#define NFI_DMA_ECC_0                  (0x0UL<<NFI_DMA_ECC_SHIFT)
#define NFI_DMA_ECC_ENABLE             (0x1UL<<NFI_DMA_ECC_SHIFT)
#define NFI_DMA_ECC                    (0x1UL<<NFI_DMA_ECC_SHIFT)
#define NFI_ECC_SHIFT                  3
#define NFI_ECC_FIELD                  (0xFFFFFFFF - (0x1UL<<NFI_ECC_SHIFT))
#define NFI_ECC_DISABLE                (0x0UL<<NFI_ECC_SHIFT)
#define NFI_ECC_ENABLE                 (0x1UL<<NFI_ECC_SHIFT)
#define NFI_ECC                        (0x1UL<<NFI_ECC_SHIFT)
#define NFI_DMA_BURST_SHIFT            2
#define NFI_DMA_BURST_FIELD            (0xFFFFFFFF - (0x1UL<<NFI_DMA_BURST_SHIFT))
#define NFI_DMA_BURST_DISABLE          (0x0UL<<NFI_DMA_BURST_SHIFT)
#define NFI_DMA_BURST_ENABLE           (0x1UL<<NFI_DMA_BURST_SHIFT)
#define NFI_DMA_BURST                  (0x1UL<<NFI_DMA_BURST_SHIFT)
#define NFI_DMA_DIR_SHIFT              1
#define NFI_DMA_DIR_FIELD              (0xFFFFFFFF - (0x1UL<<NFI_DMA_DIR_SHIFT))
#define NFI_DMA_DIR_WRITE              (0x0UL<<NFI_DMA_DIR_SHIFT)
#define NFI_DMA_DIR_READ               (0x1UL<<NFI_DMA_DIR_SHIFT)
#define NFI_DMA_DIR                    (0x1UL<<NFI_DMA_DIR_SHIFT)
#define NFI_WIDTH_SHIFT                0
#define NFI_WIDTH_FIELD                (0xFFFFFFFF - (0x1UL<<NFI_WIDTH_SHIFT))
#define NFI_WIDTH_8_BIT                (0x0UL<<NFI_WIDTH_SHIFT)
#define NFI_WIDTH_16_BIT               (0x1UL<<NFI_WIDTH_SHIFT)
#define NFI_WIDTH                      (0x1UL<<NFI_WIDTH_SHIFT)

/*****************************************************************************/
/* Register description for STAT */

/* Reset value of register NFI_STAT */
#define NFI_STAT_VALUE                 0x0

/* Bits definition for register NFI_STAT */
#define NFI_DMA_READY_SHIFT            4
#define NFI_DMA_READY_FIELD            (0xFFFFFFFF - (0x1UL<<NFI_DMA_READY_SHIFT))
#define NFI_DMA_READY_READY            (0x0UL<<NFI_DMA_READY_SHIFT)
#define NFI_DMA_READY_NOT_READY        (0x1UL<<NFI_DMA_READY_SHIFT)
#define NFI_DMA_READY                  (0x1UL<<NFI_DMA_READY_SHIFT)
#define NFI_IF_READY_SHIFT             3
#define NFI_IF_READY_FIELD             (0xFFFFFFFF - (0x1UL<<NFI_IF_READY_SHIFT))
#define NFI_IF_READY_READY             (0x0UL<<NFI_IF_READY_SHIFT)
#define NFI_IF_READY_NOT_READY         (0x1UL<<NFI_IF_READY_SHIFT)
#define NFI_IF_READY                   (0x1UL<<NFI_IF_READY_SHIFT)
#define NFI_DMA_ACTIVE_SHIFT           2
#define NFI_DMA_ACTIVE_FIELD           (0xFFFFFFFF - (0x1UL<<NFI_DMA_ACTIVE_SHIFT))
#define NFI_DMA_ACTIVE_NOT_ACTIVE      (0x0UL<<NFI_DMA_ACTIVE_SHIFT)
#define NFI_DMA_ACTIVE_ACTIVE          (0x1UL<<NFI_DMA_ACTIVE_SHIFT)
#define NFI_DMA_ACTIVE                 (0x1UL<<NFI_DMA_ACTIVE_SHIFT)
#define NFI_IF_ACTIVE_SHIFT            1
#define NFI_IF_ACTIVE_FIELD            (0xFFFFFFFF - (0x1UL<<NFI_IF_ACTIVE_SHIFT))
#define NFI_IF_ACTIVE_NOT_ACTIVE       (0x0UL<<NFI_IF_ACTIVE_SHIFT)
#define NFI_IF_ACTIVE_ACTIVE           (0x1UL<<NFI_IF_ACTIVE_SHIFT)
#define NFI_IF_ACTIVE                  (0x1UL<<NFI_IF_ACTIVE_SHIFT)
#define NFI_RDY_SHIFT                  0
#define NFI_RDY_FIELD                  (0xFFFFFFFF - (0x1UL<<NFI_RDY_SHIFT))
#define NFI_RDY_NOT_READY              (0x0UL<<NFI_RDY_SHIFT)
#define NFI_RDY_READY                  (0x1UL<<NFI_RDY_SHIFT)
#define NFI_RDY                        (0x1UL<<NFI_RDY_SHIFT)

/*****************************************************************************/
/* Register description for INT_STAT */

/* Reset value of register NFI_INT_STAT */
#define NFI_INT_STAT_VALUE             0x0

/* Bits definition for register NFI_INT_STAT */
#define NFI_TCZINT_SHIFT               1
#define NFI_TCZINT_FIELD               (0xFFFFFFFF - (0x1UL<<NFI_TCZINT_SHIFT))
#define NFI_TCZINT_0                   (0x0UL<<NFI_TCZINT_SHIFT)
#define NFI_TCZINT_1                   (0x1UL<<NFI_TCZINT_SHIFT)
#define NFI_TCZINT                     (0x1UL<<NFI_TCZINT_SHIFT)
#define NFI_RDYINT_SHIFT               0
#define NFI_RDYINT_FIELD               (0xFFFFFFFF - (0x1UL<<NFI_RDYINT_SHIFT))
#define NFI_RDYINT_0                   (0x0UL<<NFI_RDYINT_SHIFT)
#define NFI_RDYINT_1                   (0x1UL<<NFI_RDYINT_SHIFT)
#define NFI_RDYINT                     (0x1UL<<NFI_RDYINT_SHIFT)

/*****************************************************************************/
/* Register description for IEN */

/* Reset value of register NFI_IEN */
#define NFI_IEN_VALUE                  0x0

/* Bits definition for register NFI_IEN */
#define NFI_TCZINT_SHIFT               1
#define NFI_TCZINT_FIELD               (0xFFFFFFFF - (0x1UL<<NFI_TCZINT_SHIFT))
#define NFI_TCZINT_0                   (0x0UL<<NFI_TCZINT_SHIFT)
#define NFI_TCZINT_1                   (0x1UL<<NFI_TCZINT_SHIFT)
#define NFI_TCZINT                     (0x1UL<<NFI_TCZINT_SHIFT)
#define NFI_RDYINT_SHIFT               0
#define NFI_RDYINT_FIELD               (0xFFFFFFFF - (0x1UL<<NFI_RDYINT_SHIFT))
#define NFI_RDYINT_0                   (0x0UL<<NFI_RDYINT_SHIFT)
#define NFI_RDYINT_1                   (0x1UL<<NFI_RDYINT_SHIFT)
#define NFI_RDYINT                     (0x1UL<<NFI_RDYINT_SHIFT)

/*****************************************************************************/
/* Register description for ISR */

/* Reset value of register NFI_ISR */
#define NFI_ISR_VALUE                  0x0

/* Bits definition for register NFI_ISR */
#define NFI_TCZINT_SHIFT               1
#define NFI_TCZINT_FIELD               (0xFFFFFFFF - (0x1UL<<NFI_TCZINT_SHIFT))
#define NFI_TCZINT_0                   (0x0UL<<NFI_TCZINT_SHIFT)
#define NFI_TCZINT_1                   (0x1UL<<NFI_TCZINT_SHIFT)
#define NFI_TCZINT                     (0x1UL<<NFI_TCZINT_SHIFT)
#define NFI_RDYINT_SHIFT               0
#define NFI_RDYINT_FIELD               (0xFFFFFFFF - (0x1UL<<NFI_RDYINT_SHIFT))
#define NFI_RDYINT_0                   (0x0UL<<NFI_RDYINT_SHIFT)
#define NFI_RDYINT_1                   (0x1UL<<NFI_RDYINT_SHIFT)
#define NFI_RDYINT                     (0x1UL<<NFI_RDYINT_SHIFT)

/*****************************************************************************/
/* Register description for ICR */

/* Reset value of register NFI_ICR */
#define NFI_ICR_VALUE                  0x0

/* Bits definition for register NFI_ICR */
#define NFI_TCZINT_SHIFT               1
#define NFI_TCZINT_FIELD               (0xFFFFFFFF - (0x1UL<<NFI_TCZINT_SHIFT))
#define NFI_TCZINT_0                   (0x0UL<<NFI_TCZINT_SHIFT)
#define NFI_TCZINT_1                   (0x1UL<<NFI_TCZINT_SHIFT)
#define NFI_TCZINT                     (0x1UL<<NFI_TCZINT_SHIFT)
#define NFI_RDYINT_SHIFT               0
#define NFI_RDYINT_FIELD               (0xFFFFFFFF - (0x1UL<<NFI_RDYINT_SHIFT))
#define NFI_RDYINT_0                   (0x0UL<<NFI_RDYINT_SHIFT)
#define NFI_RDYINT_1                   (0x1UL<<NFI_RDYINT_SHIFT)
#define NFI_RDYINT                     (0x1UL<<NFI_RDYINT_SHIFT)

/*****************************************************************************/
/* Register description for TAC */

/* Reset value of register NFI_TAC */
#define NFI_TAC_VALUE                  0x0

/* Bits definition for register NFI_TAC */
#define NFI_BUSY_SHIFT                 12
#define NFI_BUSY_FIELD                 (0xFFFFFFFF - (0xFUL<<NFI_BUSY_SHIFT))
#define NFI_BUSY_0                     (0x0UL<<NFI_BUSY_SHIFT)
#define NFI_WI_SHIFT                   8
#define NFI_WI_FIELD                   (0xFFFFFFFF - (0xFUL<<NFI_WI_SHIFT))
#define NFI_WI_0                       (0x0UL<<NFI_WI_SHIFT)
#define NFI_HO_SHIFT                   4
#define NFI_HO_FIELD                   (0xFFFFFFFF - (0xFUL<<NFI_HO_SHIFT))
#define NFI_HO_0                       (0x0UL<<NFI_HO_SHIFT)
#define NFI_SU_SHIFT                   0
#define NFI_SU_FIELD                   (0xFFFFFFFF - (0xFUL<<NFI_SU_SHIFT))
#define NFI_SU_0                       (0x0UL<<NFI_SU_SHIFT)

/*****************************************************************************/
/* Register description for TAC_READ */

/* Reset value of register NFI_TAC_READ */
#define NFI_TAC_READ_VALUE             0x0

/* Bits definition for register NFI_TAC_READ */
#define NFI_WI_SHIFT                   8
#define NFI_WI_FIELD                   (0xFFFFFFFF - (0xFUL<<NFI_WI_SHIFT))
#define NFI_WI_0                       (0x0UL<<NFI_WI_SHIFT)
#define NFI_HO_SHIFT                   4
#define NFI_HO_FIELD                   (0xFFFFFFFF - (0xFUL<<NFI_HO_SHIFT))
#define NFI_HO_0                       (0x0UL<<NFI_HO_SHIFT)
#define NFI_SU_SHIFT                   0
#define NFI_SU_FIELD                   (0xFFFFFFFF - (0xFUL<<NFI_SU_SHIFT))
#define NFI_SU_0                       (0x0UL<<NFI_SU_SHIFT)

/*****************************************************************************/
/* Register description for TC */

/* Reset value of register NFI_TC */
#define NFI_TC_VALUE                   0x0

/* Bits definition for register NFI_TC */
#define NFI_TC_SHIFT                   0
#define NFI_TC_FIELD                   (0xFFFFFFFF - (0x7FFFFFFFUL<<NFI_TC_SHIFT))
#define NFI_TC_0                       (0x0UL<<NFI_TC_SHIFT)

/*****************************************************************************/
/* Register description for ECC */

/* Reset value of register NFI_ECC */
#define NFI_ECC_VALUE                  0x0

/* Bits definition for register NFI_ECC */
#define NFI_P1024_SHIFT                21
#define NFI_P1024_FIELD                (0xFFFFFFFF - (0x1UL<<NFI_P1024_SHIFT))
#define NFI_P1024_0                    (0x0UL<<NFI_P1024_SHIFT)
#define NFI_P1024_1                    (0x1UL<<NFI_P1024_SHIFT)
#define NFI_P1024                      (0x1UL<<NFI_P1024_SHIFT)
#define NFI_PP1024_SHIFT               20
#define NFI_PP1024_FIELD               (0xFFFFFFFF - (0x1UL<<NFI_PP1024_SHIFT))
#define NFI_PP1024_0                   (0x0UL<<NFI_PP1024_SHIFT)
#define NFI_PP1024_1                   (0x1UL<<NFI_PP1024_SHIFT)
#define NFI_PP1024                     (0x1UL<<NFI_PP1024_SHIFT)
#define NFI_P512_SHIFT                 19
#define NFI_P512_FIELD                 (0xFFFFFFFF - (0x1UL<<NFI_P512_SHIFT))
#define NFI_P512_0                     (0x0UL<<NFI_P512_SHIFT)
#define NFI_P512_1                     (0x1UL<<NFI_P512_SHIFT)
#define NFI_P512                       (0x1UL<<NFI_P512_SHIFT)
#define NFI_PP512_SHIFT                18
#define NFI_PP512_FIELD                (0xFFFFFFFF - (0x1UL<<NFI_PP512_SHIFT))
#define NFI_PP512_0                    (0x0UL<<NFI_PP512_SHIFT)
#define NFI_PP512_1                    (0x1UL<<NFI_PP512_SHIFT)
#define NFI_PP512                      (0x1UL<<NFI_PP512_SHIFT)
#define NFI_P256_SHIFT                 17
#define NFI_P256_FIELD                 (0xFFFFFFFF - (0x1UL<<NFI_P256_SHIFT))
#define NFI_P256_0                     (0x0UL<<NFI_P256_SHIFT)
#define NFI_P256_1                     (0x1UL<<NFI_P256_SHIFT)
#define NFI_P256                       (0x1UL<<NFI_P256_SHIFT)
#define NFI_PP256_SHIFT                16
#define NFI_PP256_FIELD                (0xFFFFFFFF - (0x1UL<<NFI_PP256_SHIFT))
#define NFI_PP256_0                    (0x0UL<<NFI_PP256_SHIFT)
#define NFI_PP256_1                    (0x1UL<<NFI_PP256_SHIFT)
#define NFI_PP256                      (0x1UL<<NFI_PP256_SHIFT)
#define NFI_P128_SHIFT                 15
#define NFI_P128_FIELD                 (0xFFFFFFFF - (0x1UL<<NFI_P128_SHIFT))
#define NFI_P128_0                     (0x0UL<<NFI_P128_SHIFT)
#define NFI_P128_1                     (0x1UL<<NFI_P128_SHIFT)
#define NFI_P128                       (0x1UL<<NFI_P128_SHIFT)
#define NFI_PP128_SHIFT                14
#define NFI_PP128_FIELD                (0xFFFFFFFF - (0x1UL<<NFI_PP128_SHIFT))
#define NFI_PP128_0                    (0x0UL<<NFI_PP128_SHIFT)
#define NFI_PP128_1                    (0x1UL<<NFI_PP128_SHIFT)
#define NFI_PP128                      (0x1UL<<NFI_PP128_SHIFT)
#define NFI_P64_SHIFT                  13
#define NFI_P64_FIELD                  (0xFFFFFFFF - (0x1UL<<NFI_P64_SHIFT))
#define NFI_P64_0                      (0x0UL<<NFI_P64_SHIFT)
#define NFI_P64_1                      (0x1UL<<NFI_P64_SHIFT)
#define NFI_P64                        (0x1UL<<NFI_P64_SHIFT)
#define NFI_PP64_SHIFT                 12
#define NFI_PP64_FIELD                 (0xFFFFFFFF - (0x1UL<<NFI_PP64_SHIFT))
#define NFI_PP64_0                     (0x0UL<<NFI_PP64_SHIFT)
#define NFI_PP64_1                     (0x1UL<<NFI_PP64_SHIFT)
#define NFI_PP64                       (0x1UL<<NFI_PP64_SHIFT)
#define NFI_P32_SHIFT                  11
#define NFI_P32_FIELD                  (0xFFFFFFFF - (0x1UL<<NFI_P32_SHIFT))
#define NFI_P32_0                      (0x0UL<<NFI_P32_SHIFT)
#define NFI_P32_1                      (0x1UL<<NFI_P32_SHIFT)
#define NFI_P32                        (0x1UL<<NFI_P32_SHIFT)
#define NFI_PP32_SHIFT                 10
#define NFI_PP32_FIELD                 (0xFFFFFFFF - (0x1UL<<NFI_PP32_SHIFT))
#define NFI_PP32_0                     (0x0UL<<NFI_PP32_SHIFT)
#define NFI_PP32_1                     (0x1UL<<NFI_PP32_SHIFT)
#define NFI_PP32                       (0x1UL<<NFI_PP32_SHIFT)
#define NFI_P16_SHIFT                  9
#define NFI_P16_FIELD                  (0xFFFFFFFF - (0x1UL<<NFI_P16_SHIFT))
#define NFI_P16_0                      (0x0UL<<NFI_P16_SHIFT)
#define NFI_P16_1                      (0x1UL<<NFI_P16_SHIFT)
#define NFI_P16                        (0x1UL<<NFI_P16_SHIFT)
#define NFI_PP16_SHIFT                 8
#define NFI_PP16_FIELD                 (0xFFFFFFFF - (0x1UL<<NFI_PP16_SHIFT))
#define NFI_PP16_0                     (0x0UL<<NFI_PP16_SHIFT)
#define NFI_PP16_1                     (0x1UL<<NFI_PP16_SHIFT)
#define NFI_PP16                       (0x1UL<<NFI_PP16_SHIFT)
#define NFI_P8_SHIFT                   7
#define NFI_P8_FIELD                   (0xFFFFFFFF - (0x1UL<<NFI_P8_SHIFT))
#define NFI_P8_0                       (0x0UL<<NFI_P8_SHIFT)
#define NFI_P8_1                       (0x1UL<<NFI_P8_SHIFT)
#define NFI_P8                         (0x1UL<<NFI_P8_SHIFT)
#define NFI_PP8_SHIFT                  6
#define NFI_PP8_FIELD                  (0xFFFFFFFF - (0x1UL<<NFI_PP8_SHIFT))
#define NFI_PP8_0                      (0x0UL<<NFI_PP8_SHIFT)
#define NFI_PP8_1                      (0x1UL<<NFI_PP8_SHIFT)
#define NFI_PP8                        (0x1UL<<NFI_PP8_SHIFT)
#define NFI_P4_SHIFT                   5
#define NFI_P4_FIELD                   (0xFFFFFFFF - (0x1UL<<NFI_P4_SHIFT))
#define NFI_P4_0                       (0x0UL<<NFI_P4_SHIFT)
#define NFI_P4_1                       (0x1UL<<NFI_P4_SHIFT)
#define NFI_P4                         (0x1UL<<NFI_P4_SHIFT)
#define NFI_PP4_SHIFT                  4
#define NFI_PP4_FIELD                  (0xFFFFFFFF - (0x1UL<<NFI_PP4_SHIFT))
#define NFI_PP4_0                      (0x0UL<<NFI_PP4_SHIFT)
#define NFI_PP4_1                      (0x1UL<<NFI_PP4_SHIFT)
#define NFI_PP4                        (0x1UL<<NFI_PP4_SHIFT)
#define NFI_P2_SHIFT                   3
#define NFI_P2_FIELD                   (0xFFFFFFFF - (0x1UL<<NFI_P2_SHIFT))
#define NFI_P2_0                       (0x0UL<<NFI_P2_SHIFT)
#define NFI_P2_1                       (0x1UL<<NFI_P2_SHIFT)
#define NFI_P2                         (0x1UL<<NFI_P2_SHIFT)
#define NFI_PP2_SHIFT                  2
#define NFI_PP2_FIELD                  (0xFFFFFFFF - (0x1UL<<NFI_PP2_SHIFT))
#define NFI_PP2_0                      (0x0UL<<NFI_PP2_SHIFT)
#define NFI_PP2_1                      (0x1UL<<NFI_PP2_SHIFT)
#define NFI_PP2                        (0x1UL<<NFI_PP2_SHIFT)
#define NFI_P1_SHIFT                   1
#define NFI_P1_FIELD                   (0xFFFFFFFF - (0x1UL<<NFI_P1_SHIFT))
#define NFI_P1_0                       (0x0UL<<NFI_P1_SHIFT)
#define NFI_P1_1                       (0x1UL<<NFI_P1_SHIFT)
#define NFI_P1                         (0x1UL<<NFI_P1_SHIFT)
#define NFI_PP1_SHIFT                  0
#define NFI_PP1_FIELD                  (0xFFFFFFFF - (0x1UL<<NFI_PP1_SHIFT))
#define NFI_PP1_0                      (0x0UL<<NFI_PP1_SHIFT)
#define NFI_PP1_1                      (0x1UL<<NFI_PP1_SHIFT)
#define NFI_PP1                        (0x1UL<<NFI_PP1_SHIFT)

/*****************************************************************************/
/* Register description for DMA_DATA */

/* Reset value of register NFI_DMA_DATA */
#define NFI_DMA_DATA_VALUE             0x0

/* Bits definition for register NFI_DMA_DATA */
#define NFI_DMA_DATA_SHIFT             0
#define NFI_DMA_DATA_FIELD             (0xFFFFFFFF - (0x7FFFFFFFUL<<NFI_DMA_DATA_SHIFT))
#define NFI_DMA_DATA_0                 (0x0UL<<NFI_DMA_DATA_SHIFT)

/*****************************************************************************/
/* Register description for PAGE_SIZE */

/* Reset value of register NFI_PAGE_SIZE */
#define NFI_PAGE_SIZE_VALUE            0x0

/* Bits definition for register NFI_PAGE_SIZE */
#define NFI_PAGE_SIZE_SHIFT            0
#define NFI_PAGE_SIZE_FIELD            (0xFFFFFFFF - (0xFFFFUL<<NFI_PAGE_SIZE_SHIFT))
#define NFI_PAGE_SIZE_0                (0x0UL<<NFI_PAGE_SIZE_SHIFT)

/*****************************************************************************/

/*****************************************************************************
* Definitions for: PAK
*****************************************************************************/

/* Pointer on base address */
#define PAK_BASE                       IOA(PAK_BASE_ADDR)

/* PAK SOFT_RESET Register (32 bits) */
#define PAK_SOFT_RESET_OFFSET          0x0
#define PAK_SOFT_RESET_REG             IOA(PAK_BASE_ADDR + PAK_SOFT_RESET_OFFSET)

/* PAK FB0_RD_PTR Register (32 bits) */
#define PAK_FB0_RD_PTR_OFFSET          0x8
#define PAK_FB0_RD_PTR_REG             IOA(PAK_BASE_ADDR + PAK_FB0_RD_PTR_OFFSET)

/* PAK FB0_BASE Register (32 bits) */
#define PAK_FB0_BASE_OFFSET            0x10
#define PAK_FB0_BASE_REG               IOA(PAK_BASE_ADDR + PAK_FB0_BASE_OFFSET)

/* PAK FB0_END Register (32 bits) */
#define PAK_FB0_END_OFFSET             0x18
#define PAK_FB0_END_REG                IOA(PAK_BASE_ADDR + PAK_FB0_END_OFFSET)

/* PAK FB0_CMT_PTR Register (32 bits) */
#define PAK_FB0_CMT_PTR_OFFSET         0x20
#define PAK_FB0_CMT_PTR_REG            IOA(PAK_BASE_ADDR + PAK_FB0_CMT_PTR_OFFSET)

/* PAK FB1_RD_PTR Register (32 bits) */
#define PAK_FB1_RD_PTR_OFFSET          0x28
#define PAK_FB1_RD_PTR_REG             IOA(PAK_BASE_ADDR + PAK_FB1_RD_PTR_OFFSET)

/* PAK FB1_BASE Register (32 bits) */
#define PAK_FB1_BASE_OFFSET            0x30
#define PAK_FB1_BASE_REG               IOA(PAK_BASE_ADDR + PAK_FB1_BASE_OFFSET)

/* PAK FB1_END Register (32 bits) */
#define PAK_FB1_END_OFFSET             0x38
#define PAK_FB1_END_REG                IOA(PAK_BASE_ADDR + PAK_FB1_END_OFFSET)

/* PAK FB1_CMT_PTR Register (32 bits) */
#define PAK_FB1_CMT_PTR_OFFSET         0x40
#define PAK_FB1_CMT_PTR_REG            IOA(PAK_BASE_ADDR + PAK_FB1_CMT_PTR_OFFSET)

/* PAK FB2_RD_PTR Register (32 bits) */
#define PAK_FB2_RD_PTR_OFFSET          0x48
#define PAK_FB2_RD_PTR_REG             IOA(PAK_BASE_ADDR + PAK_FB2_RD_PTR_OFFSET)

/* PAK FB2_BASE Register (32 bits) */
#define PAK_FB2_BASE_OFFSET            0x50
#define PAK_FB2_BASE_REG               IOA(PAK_BASE_ADDR + PAK_FB2_BASE_OFFSET)

/* PAK FB2_END Register (32 bits) */
#define PAK_FB2_END_OFFSET             0x58
#define PAK_FB2_END_REG                IOA(PAK_BASE_ADDR + PAK_FB2_END_OFFSET)

/* PAK FB2_CMT_PTR Register (32 bits) */
#define PAK_FB2_CMT_PTR_OFFSET         0x60
#define PAK_FB2_CMT_PTR_REG            IOA(PAK_BASE_ADDR + PAK_FB2_CMT_PTR_OFFSET)

/* PAK FB3_RD_PTR Register (32 bits) */
#define PAK_FB3_RD_PTR_OFFSET          0x68
#define PAK_FB3_RD_PTR_REG             IOA(PAK_BASE_ADDR + PAK_FB3_RD_PTR_OFFSET)

/* PAK FB3_BASE Register (32 bits) */
#define PAK_FB3_BASE_OFFSET            0x70
#define PAK_FB3_BASE_REG               IOA(PAK_BASE_ADDR + PAK_FB3_BASE_OFFSET)

/* PAK FB3_END Register (32 bits) */
#define PAK_FB3_END_OFFSET             0x78
#define PAK_FB3_END_REG                IOA(PAK_BASE_ADDR + PAK_FB3_END_OFFSET)

/* PAK FB3_CMT_PTR Register (32 bits) */
#define PAK_FB3_CMT_PTR_OFFSET         0x80
#define PAK_FB3_CMT_PTR_REG            IOA(PAK_BASE_ADDR + PAK_FB3_CMT_PTR_OFFSET)

/* PAK FB4_RD_PTR Register (32 bits) */
#define PAK_FB4_RD_PTR_OFFSET          0x88
#define PAK_FB4_RD_PTR_REG             IOA(PAK_BASE_ADDR + PAK_FB4_RD_PTR_OFFSET)

/* PAK FB4_BASE Register (32 bits) */
#define PAK_FB4_BASE_OFFSET            0x90
#define PAK_FB4_BASE_REG               IOA(PAK_BASE_ADDR + PAK_FB4_BASE_OFFSET)

/* PAK FB4_END Register (32 bits) */
#define PAK_FB4_END_OFFSET             0x98
#define PAK_FB4_END_REG                IOA(PAK_BASE_ADDR + PAK_FB4_END_OFFSET)

/* PAK FB4_CMT_PTR Register (32 bits) */
#define PAK_FB4_CMT_PTR_OFFSET         0xA0
#define PAK_FB4_CMT_PTR_REG            IOA(PAK_BASE_ADDR + PAK_FB4_CMT_PTR_OFFSET)

/* PAK OUT_PTR Register (32 bits) */
#define PAK_OUT_PTR_OFFSET             0xA8
#define PAK_OUT_PTR_REG                IOA(PAK_BASE_ADDR + PAK_OUT_PTR_OFFSET)

/* PAK OUT_BASE Register (32 bits) */
#define PAK_OUT_BASE_OFFSET            0xB0
#define PAK_OUT_BASE_REG               IOA(PAK_BASE_ADDR + PAK_OUT_BASE_OFFSET)

/* PAK OUT_END Register (32 bits) */
#define PAK_OUT_END_OFFSET             0xB8
#define PAK_OUT_END_REG                IOA(PAK_BASE_ADDR + PAK_OUT_END_OFFSET)

/* PAK OUT_CMT_PTR Register (32 bits) */
#define PAK_OUT_CMT_PTR_OFFSET         0xC0
#define PAK_OUT_CMT_PTR_REG            IOA(PAK_BASE_ADDR + PAK_OUT_CMT_PTR_OFFSET)

/* PAK OUT_RD_PTR Register (32 bits) */
#define PAK_OUT_RD_PTR_OFFSET          0xC8
#define PAK_OUT_RD_PTR_REG             IOA(PAK_BASE_ADDR + PAK_OUT_RD_PTR_OFFSET)

/* PAK ACTIVE_TABLE Register (32 bits) */
#define PAK_ACTIVE_TABLE_OFFSET        0xD0
#define PAK_ACTIVE_TABLE_REG           IOA(PAK_BASE_ADDR + PAK_ACTIVE_TABLE_OFFSET)

/* PAK RUNNING Register (32 bits) */
#define PAK_RUNNING_OFFSET             0xD8
#define PAK_RUNNING_REG                IOA(PAK_BASE_ADDR + PAK_RUNNING_OFFSET)

/* PAK START Register (32 bits) */
#define PAK_START_OFFSET               0xE0
#define PAK_START_REG                  IOA(PAK_BASE_ADDR + PAK_START_OFFSET)

/* PAK OUT_IRQ_PTR Register (32 bits) */
#define PAK_OUT_IRQ_PTR_OFFSET         0xF0
#define PAK_OUT_IRQ_PTR_REG            IOA(PAK_BASE_ADDR + PAK_OUT_IRQ_PTR_OFFSET)

/* PAK OUT_DISABLE Register (32 bits) */
#define PAK_OUT_DISABLE_OFFSET         0xF8
#define PAK_OUT_DISABLE_REG            IOA(PAK_BASE_ADDR + PAK_OUT_DISABLE_OFFSET)

/* PAK OUT_PTR_TGL Register (32 bits) */
#define PAK_OUT_PTR_TGL_OFFSET         0x100
#define PAK_OUT_PTR_TGL_REG            IOA(PAK_BASE_ADDR + PAK_OUT_PTR_TGL_OFFSET)

/* PAK OUT_RD_PTR_TGL Register (32 bits) */
#define PAK_OUT_RD_PTR_TGL_OFFSET      0x108
#define PAK_OUT_RD_PTR_TGL_REG         IOA(PAK_BASE_ADDR + PAK_OUT_RD_PTR_TGL_OFFSET)

/* PAK ENABLE_CLR Register (32 bits) */
#define PAK_ENABLE_CLR_OFFSET          0xFD8
#define PAK_ENABLE_CLR_REG             IOA(PAK_BASE_ADDR + PAK_ENABLE_CLR_OFFSET)

/* PAK ENABLE_SET Register (32 bits) */
#define PAK_ENABLE_SET_OFFSET          0xFDC
#define PAK_ENABLE_SET_REG             IOA(PAK_BASE_ADDR + PAK_ENABLE_SET_OFFSET)

/* PAK ENABLE Register (32 bits) */
#define PAK_ENABLE_OFFSET              0xFE0
#define PAK_ENABLE_REG                 IOA(PAK_BASE_ADDR + PAK_ENABLE_OFFSET)

/* PAK STATUS Register (32 bits) */
#define PAK_STATUS_OFFSET              0xFE4
#define PAK_STATUS_REG                 IOA(PAK_BASE_ADDR + PAK_STATUS_OFFSET)

/* PAK STATUS_CLR Register (32 bits) */
#define PAK_STATUS_CLR_OFFSET          0xFE8
#define PAK_STATUS_CLR_REG             IOA(PAK_BASE_ADDR + PAK_STATUS_CLR_OFFSET)

/* PAK STATUS_SET Register (32 bits) */
#define PAK_STATUS_SET_OFFSET          0xFEC
#define PAK_STATUS_SET_REG             IOA(PAK_BASE_ADDR + PAK_STATUS_SET_OFFSET)

/* PAK MODULE_ID Register (32 bits) */
#define PAK_MODULE_ID_OFFSET           0xFFC
#define PAK_MODULE_ID_REG              IOA(PAK_BASE_ADDR + PAK_MODULE_ID_OFFSET)

/* Register description for START */

/* Reset value of register PAK_START */
#define PAK_START_VALUE                0x0

/* Bits definition for register PAK_START */
#define PAK_PAK_START_SHIFT            0
#define PAK_PAK_START_FIELD            (0xFFFFFFFF - (0x1UL<<PAK_PAK_START_SHIFT))
#define PAK_PAK_START_0                (0x0UL<<PAK_PAK_START_SHIFT)
#define PAK_PAK_START_1                (0x1UL<<PAK_PAK_START_SHIFT)
#define PAK_PAK_START                  (0x1UL<<PAK_PAK_START_SHIFT)

/*****************************************************************************/
/* Register description for RUNNING */

/* Reset value of register PAK_RUNNING */
#define PAK_RUNNING_VALUE              0x0

/* Bits definition for register PAK_RUNNING */
#define PAK_PAK_RUNNING_SHIFT          0
#define PAK_PAK_RUNNING_FIELD          (0xFFFFFFFF - (0x1UL<<PAK_PAK_RUNNING_SHIFT))
#define PAK_PAK_RUNNING_0              (0x0UL<<PAK_PAK_RUNNING_SHIFT)
#define PAK_PAK_RUNNING_1              (0x1UL<<PAK_PAK_RUNNING_SHIFT)
#define PAK_PAK_RUNNING                (0x1UL<<PAK_PAK_RUNNING_SHIFT)

/*****************************************************************************/
/* Register description for SOFT_RESET */

/* Reset value of register PAK_SOFT_RESET */
#define PAK_SOFT_RESET_VALUE           0x0

/* Bits definition for register PAK_SOFT_RESET */
#define PAK_PAK_SOFT_RESET_SHIFT       0
#define PAK_PAK_SOFT_RESET_FIELD       (0xFFFFFFFF - (0x1UL<<PAK_PAK_SOFT_RESET_SHIFT))
#define PAK_PAK_SOFT_RESET             (0x1UL<<PAK_PAK_SOFT_RESET_SHIFT)

/*****************************************************************************/
/* Register description for ACTIVE_TABLE */

/* Reset value of register PAK_ACTIVE_TABLE */
#define PAK_ACTIVE_TABLE_VALUE         0x0

/* Bits definition for register PAK_ACTIVE_TABLE */
#define PAK_PAK_ACTIVE_TABLE_SHIFT     0
#define PAK_PAK_ACTIVE_TABLE_FIELD     (0xFFFFFFFF - (0x7UL<<PAK_PAK_ACTIVE_TABLE_SHIFT))
#define PAK_PAK_ACTIVE_TABLE_0         (0x0UL<<PAK_PAK_ACTIVE_TABLE_SHIFT)

/*****************************************************************************/
/* Register description for FB0_BASE */

/* Reset value of register PAK_FB0_BASE */
#define PAK_FB0_BASE_VALUE             0x0

/* Bits definition for register PAK_FB0_BASE */
#define PAK_PAK_FB0_BASE_SHIFT         8
#define PAK_PAK_FB0_BASE_FIELD         (0xFFFFFFFF - (0xFFFFFFUL<<PAK_PAK_FB0_BASE_SHIFT))

/*****************************************************************************/
/* Register description for FB0_END */

/* Reset value of register PAK_FB0_END */
#define PAK_FB0_END_VALUE              0x0

/* Bits definition for register PAK_FB0_END */
#define PAK_PAK_FB0_END_SHIFT          8
#define PAK_PAK_FB0_END_FIELD          (0xFFFFFFFF - (0xFFFFFFUL<<PAK_PAK_FB0_END_SHIFT))

/*****************************************************************************/
/* Register description for FB0_RD_PTR */

/* Reset value of register PAK_FB0_RD_PTR */
#define PAK_FB0_RD_PTR_VALUE           0x0

/* Bits definition for register PAK_FB0_RD_PTR */
#define PAK_PAK_FB0_RD_PTR_SHIFT       2
#define PAK_PAK_FB0_RD_PTR_FIELD       (0xFFFFFFFF - (0x3FFFFFFFUL<<PAK_PAK_FB0_RD_PTR_SHIFT))

/*****************************************************************************/
/* Register description for FB0_CMT_PTR */

/* Reset value of register PAK_FB0_CMT_PTR */
#define PAK_FB0_CMT_PTR_VALUE          0x0

/* Bits definition for register PAK_FB0_CMT_PTR */
#define PAK_PAK_FB0_CMT_PTR_SHIFT      2
#define PAK_PAK_FB0_CMT_PTR_FIELD      (0xFFFFFFFF - (0x3FFFFFFFUL<<PAK_PAK_FB0_CMT_PTR_SHIFT))

/*****************************************************************************/
/* Register description for FB1_BASE */

/* Reset value of register PAK_FB1_BASE */
#define PAK_FB1_BASE_VALUE             0x0

/* Bits definition for register PAK_FB1_BASE */
#define PAK_PAK_FB1_BASE_SHIFT         8
#define PAK_PAK_FB1_BASE_FIELD         (0xFFFFFFFF - (0xFFFFFFUL<<PAK_PAK_FB1_BASE_SHIFT))

/*****************************************************************************/
/* Register description for FB1_END */

/* Reset value of register PAK_FB1_END */
#define PAK_FB1_END_VALUE              0x0

/* Bits definition for register PAK_FB1_END */
#define PAK_PAK_FB1_END_SHIFT          8
#define PAK_PAK_FB1_END_FIELD          (0xFFFFFFFF - (0xFFFFFFUL<<PAK_PAK_FB1_END_SHIFT))

/*****************************************************************************/
/* Register description for FB1_RD_PTR */

/* Reset value of register PAK_FB1_RD_PTR */
#define PAK_FB1_RD_PTR_VALUE           0x0

/* Bits definition for register PAK_FB1_RD_PTR */
#define PAK_PAK_FB1_RD_PTR_SHIFT       2
#define PAK_PAK_FB1_RD_PTR_FIELD       (0xFFFFFFFF - (0x3FFFFFFFUL<<PAK_PAK_FB1_RD_PTR_SHIFT))

/*****************************************************************************/
/* Register description for FB1_CMT_PTR */

/* Reset value of register PAK_FB1_CMT_PTR */
#define PAK_FB1_CMT_PTR_VALUE          0x0

/* Bits definition for register PAK_FB1_CMT_PTR */
#define PAK_PAK_FB1_CMT_PTR_SHIFT      2
#define PAK_PAK_FB1_CMT_PTR_FIELD      (0xFFFFFFFF - (0x3FFFFFFFUL<<PAK_PAK_FB1_CMT_PTR_SHIFT))

/*****************************************************************************/
/* Register description for FB2_BASE */

/* Reset value of register PAK_FB2_BASE */
#define PAK_FB2_BASE_VALUE             0x0

/* Bits definition for register PAK_FB2_BASE */
#define PAK_PAK_FB2_BASE_SHIFT         8
#define PAK_PAK_FB2_BASE_FIELD         (0xFFFFFFFF - (0xFFFFFFUL<<PAK_PAK_FB2_BASE_SHIFT))

/*****************************************************************************/
/* Register description for FB2_END */

/* Reset value of register PAK_FB2_END */
#define PAK_FB2_END_VALUE              0x0

/* Bits definition for register PAK_FB2_END */
#define PAK_PAK_FB2_END_SHIFT          8
#define PAK_PAK_FB2_END_FIELD          (0xFFFFFFFF - (0xFFFFFFUL<<PAK_PAK_FB2_END_SHIFT))

/*****************************************************************************/
/* Register description for FB2_RD_PTR */

/* Reset value of register PAK_FB2_RD_PTR */
#define PAK_FB2_RD_PTR_VALUE           0x0

/* Bits definition for register PAK_FB2_RD_PTR */
#define PAK_PAK_FB2_RD_PTR_SHIFT       2
#define PAK_PAK_FB2_RD_PTR_FIELD       (0xFFFFFFFF - (0x3FFFFFFFUL<<PAK_PAK_FB2_RD_PTR_SHIFT))

/*****************************************************************************/
/* Register description for FB2_CMT_PTR */

/* Reset value of register PAK_FB2_CMT_PTR */
#define PAK_FB2_CMT_PTR_VALUE          0x0

/* Bits definition for register PAK_FB2_CMT_PTR */
#define PAK_PAK_FB2_CMT_PTR_SHIFT      2
#define PAK_PAK_FB2_CMT_PTR_FIELD      (0xFFFFFFFF - (0x3FFFFFFFUL<<PAK_PAK_FB2_CMT_PTR_SHIFT))

/*****************************************************************************/
/* Register description for FB3_BASE */

/* Reset value of register PAK_FB3_BASE */
#define PAK_FB3_BASE_VALUE             0x0

/* Bits definition for register PAK_FB3_BASE */
#define PAK_PAK_FB3_BASE_SHIFT         8
#define PAK_PAK_FB3_BASE_FIELD         (0xFFFFFFFF - (0xFFFFFFUL<<PAK_PAK_FB3_BASE_SHIFT))

/*****************************************************************************/
/* Register description for FB3_END */

/* Reset value of register PAK_FB3_END */
#define PAK_FB3_END_VALUE              0x0

/* Bits definition for register PAK_FB3_END */
#define PAK_PAK_FB3_END_SHIFT          8
#define PAK_PAK_FB3_END_FIELD          (0xFFFFFFFF - (0xFFFFFFUL<<PAK_PAK_FB3_END_SHIFT))

/*****************************************************************************/
/* Register description for FB3_RD_PTR */

/* Reset value of register PAK_FB3_RD_PTR */
#define PAK_FB3_RD_PTR_VALUE           0x0

/* Bits definition for register PAK_FB3_RD_PTR */
#define PAK_PAK_FB3_RD_PTR_SHIFT       2
#define PAK_PAK_FB3_RD_PTR_FIELD       (0xFFFFFFFF - (0x3FFFFFFFUL<<PAK_PAK_FB3_RD_PTR_SHIFT))

/*****************************************************************************/
/* Register description for FB3_CMT_PTR */

/* Reset value of register PAK_FB3_CMT_PTR */
#define PAK_FB3_CMT_PTR_VALUE          0x0

/* Bits definition for register PAK_FB3_CMT_PTR */
#define PAK_PAK_FB3_CMT_PTR_SHIFT      2
#define PAK_PAK_FB3_CMT_PTR_FIELD      (0xFFFFFFFF - (0x3FFFFFFFUL<<PAK_PAK_FB3_CMT_PTR_SHIFT))

/*****************************************************************************/
/* Register description for FB4_BASE */

/* Reset value of register PAK_FB4_BASE */
#define PAK_FB4_BASE_VALUE             0x0

/* Bits definition for register PAK_FB4_BASE */
#define PAK_PAK_FB4_BASE_SHIFT         8
#define PAK_PAK_FB4_BASE_FIELD         (0xFFFFFFFF - (0xFFFFFFUL<<PAK_PAK_FB4_BASE_SHIFT))

/*****************************************************************************/
/* Register description for FB4_END */

/* Reset value of register PAK_FB4_END */
#define PAK_FB4_END_VALUE              0x0

/* Bits definition for register PAK_FB4_END */
#define PAK_PAK_FB4_END_SHIFT          8
#define PAK_PAK_FB4_END_FIELD          (0xFFFFFFFF - (0xFFFFFFUL<<PAK_PAK_FB4_END_SHIFT))

/*****************************************************************************/
/* Register description for FB4_RD_PTR */

/* Reset value of register PAK_FB4_RD_PTR */
#define PAK_FB4_RD_PTR_VALUE           0x0

/* Bits definition for register PAK_FB4_RD_PTR */
#define PAK_PAK_FB4_RD_PTR_SHIFT       2
#define PAK_PAK_FB4_RD_PTR_FIELD       (0xFFFFFFFF - (0x3FFFFFFFUL<<PAK_PAK_FB4_RD_PTR_SHIFT))

/*****************************************************************************/
/* Register description for FB4_CMT_PTR */

/* Reset value of register PAK_FB4_CMT_PTR */
#define PAK_FB4_CMT_PTR_VALUE          0x0

/* Bits definition for register PAK_FB4_CMT_PTR */
#define PAK_PAK_FB4_CMT_PTR_SHIFT      2
#define PAK_PAK_FB4_CMT_PTR_FIELD      (0xFFFFFFFF - (0x3FFFFFFFUL<<PAK_PAK_FB4_CMT_PTR_SHIFT))

/*****************************************************************************/
/* Register description for OUT_BASE */

/* Reset value of register PAK_OUT_BASE */
#define PAK_OUT_BASE_VALUE             0x0

/* Bits definition for register PAK_OUT_BASE */
#define PAK_PAK_OUT_BASE_SHIFT         8
#define PAK_PAK_OUT_BASE_FIELD         (0xFFFFFFFF - (0xFFFFFFUL<<PAK_PAK_OUT_BASE_SHIFT))

/*****************************************************************************/
/* Register description for OUT_END */

/* Reset value of register PAK_OUT_END */
#define PAK_OUT_END_VALUE              0x0

/* Bits definition for register PAK_OUT_END */
#define PAK_PAK_OUT_END_SHIFT          8
#define PAK_PAK_OUT_END_FIELD          (0xFFFFFFFF - (0xFFFFFFUL<<PAK_PAK_OUT_END_SHIFT))

/*****************************************************************************/
/* Register description for OUT_DISABLE */

/* Reset value of register PAK_OUT_DISABLE */
#define PAK_OUT_DISABLE_VALUE          0x0

/* Bits definition for register PAK_OUT_DISABLE */
#define PAK_PAK_OUT_DISABLE_SHIFT      0
#define PAK_PAK_OUT_DISABLE_FIELD      (0xFFFFFFFF - (0x1UL<<PAK_PAK_OUT_DISABLE_SHIFT))
#define PAK_PAK_OUT_DISABLE_0          (0x0UL<<PAK_PAK_OUT_DISABLE_SHIFT)
#define PAK_PAK_OUT_DISABLE_1          (0x1UL<<PAK_PAK_OUT_DISABLE_SHIFT)
#define PAK_PAK_OUT_DISABLE            (0x1UL<<PAK_PAK_OUT_DISABLE_SHIFT)

/*****************************************************************************/
/* Register description for OUT_PTR */

/* Reset value of register PAK_OUT_PTR */
#define PAK_OUT_PTR_VALUE              0x0

/* Bits definition for register PAK_OUT_PTR */
#define PAK_PAK_OUT_PTR_SHIFT          2
#define PAK_PAK_OUT_PTR_FIELD          (0xFFFFFFFF - (0x3FFFFFFFUL<<PAK_PAK_OUT_PTR_SHIFT))

/*****************************************************************************/
/* Register description for OUT_PTR_TGL */

/* Reset value of register PAK_OUT_PTR_TGL */
#define PAK_OUT_PTR_TGL_VALUE          0x0

/* Bits definition for register PAK_OUT_PTR_TGL */
#define PAK_PAK_OUT_PTR_TGL_SHIFT      0
#define PAK_PAK_OUT_PTR_TGL_FIELD      (0xFFFFFFFF - (0x1UL<<PAK_PAK_OUT_PTR_TGL_SHIFT))
#define PAK_PAK_OUT_PTR_TGL            (0x1UL<<PAK_PAK_OUT_PTR_TGL_SHIFT)

/*****************************************************************************/
/* Register description for OUT_CMT_PTR */

/* Reset value of register PAK_OUT_CMT_PTR */
#define PAK_OUT_CMT_PTR_VALUE          0x0

/* Bits definition for register PAK_OUT_CMT_PTR */
#define PAK_PAK_OUT_CMT_PTR_SHIFT      2
#define PAK_PAK_OUT_CMT_PTR_FIELD      (0xFFFFFFFF - (0x3FFFFFFFUL<<PAK_PAK_OUT_CMT_PTR_SHIFT))

/*****************************************************************************/
/* Register description for OUT_IRQ_PTR */

/* Reset value of register PAK_OUT_IRQ_PTR */
#define PAK_OUT_IRQ_PTR_VALUE          0x0

/* Bits definition for register PAK_OUT_IRQ_PTR */
#define PAK_PAK_OUT_IRQ_PTR_SHIFT      2
#define PAK_PAK_OUT_IRQ_PTR_FIELD      (0xFFFFFFFF - (0x3FFFFFFFUL<<PAK_PAK_OUT_IRQ_PTR_SHIFT))

/*****************************************************************************/
/* Register description for OUT_RD_PTR */

/* Reset value of register PAK_OUT_RD_PTR */
#define PAK_OUT_RD_PTR_VALUE           0x0

/* Bits definition for register PAK_OUT_RD_PTR */
#define PAK_PAK_OUT_RD_PTR_SHIFT       2
#define PAK_PAK_OUT_RD_PTR_FIELD       (0xFFFFFFFF - (0x3FFFFFFFUL<<PAK_PAK_OUT_RD_PTR_SHIFT))

/*****************************************************************************/
/* Register description for OUT_RD_PTR_TGL */

/* Reset value of register PAK_OUT_RD_PTR_TGL */
#define PAK_OUT_RD_PTR_TGL_VALUE       0x0

/* Bits definition for register PAK_OUT_RD_PTR_TGL */
#define PAK_PAK_OUT_RD_PTR_TGL_SHIFT   0
#define PAK_PAK_OUT_RD_PTR_TGL_FIELD   (0xFFFFFFFF - (0x1UL<<PAK_PAK_OUT_RD_PTR_TGL_SHIFT))
#define PAK_PAK_OUT_RD_PTR_TGL         (0x1UL<<PAK_PAK_OUT_RD_PTR_TGL_SHIFT)

/*****************************************************************************/
/* Register description for STATUS_SET */

/* Reset value of register PAK_STATUS_SET */
#define PAK_STATUS_SET_VALUE           0x0

/* Bits definition for register PAK_STATUS_SET */
#define PAK_PAK_STATUS_SET_SHIFT       0
#define PAK_PAK_STATUS_SET_FIELD       (0xFFFFFFFF - (0x1FUL<<PAK_PAK_STATUS_SET_SHIFT))
#define PAK_PAK_STATUS_SET_0           (0x0UL<<PAK_PAK_STATUS_SET_SHIFT)

/*****************************************************************************/
/* Register description for STATUS */

/* Reset value of register PAK_STATUS */
#define PAK_STATUS_VALUE               0x0

/* Bits definition for register PAK_STATUS */
#define PAK_PAK_STATUS_SHIFT           0
#define PAK_PAK_STATUS_FIELD           (0xFFFFFFFF - (0x1FUL<<PAK_PAK_STATUS_SHIFT))
#define PAK_PAK_STATUS_0               (0x0UL<<PAK_PAK_STATUS_SHIFT)

/*****************************************************************************/
/* Register description for STATUS_CLR */

/* Reset value of register PAK_STATUS_CLR */
#define PAK_STATUS_CLR_VALUE           0x0

/* Bits definition for register PAK_STATUS_CLR */
#define PAK_PAK_STATUS_CLR_SHIFT       0
#define PAK_PAK_STATUS_CLR_FIELD       (0xFFFFFFFF - (0x1FUL<<PAK_PAK_STATUS_CLR_SHIFT))
#define PAK_PAK_STATUS_CLR_0           (0x0UL<<PAK_PAK_STATUS_CLR_SHIFT)

/*****************************************************************************/
/* Register description for ENABLE_SET */

/* Reset value of register PAK_ENABLE_SET */
#define PAK_ENABLE_SET_VALUE           0x0

/* Bits definition for register PAK_ENABLE_SET */
#define PAK_PAK_ENABLE_SET_SHIFT       0
#define PAK_PAK_ENABLE_SET_FIELD       (0xFFFFFFFF - (0x1FUL<<PAK_PAK_ENABLE_SET_SHIFT))
#define PAK_PAK_ENABLE_SET_0           (0x0UL<<PAK_PAK_ENABLE_SET_SHIFT)

/*****************************************************************************/
/* Register description for ENABLE */

/* Reset value of register PAK_ENABLE */
#define PAK_ENABLE_VALUE               0x0

/* Bits definition for register PAK_ENABLE */
#define PAK_PAK_ENABLE_SHIFT           0
#define PAK_PAK_ENABLE_FIELD           (0xFFFFFFFF - (0x1FUL<<PAK_PAK_ENABLE_SHIFT))
#define PAK_PAK_ENABLE_0               (0x0UL<<PAK_PAK_ENABLE_SHIFT)

/*****************************************************************************/
/* Register description for ENABLE_CLR */

/* Reset value of register PAK_ENABLE_CLR */
#define PAK_ENABLE_CLR_VALUE           0x0

/* Bits definition for register PAK_ENABLE_CLR */
#define PAK_PAK_ENABLE_CLR_SHIFT       0
#define PAK_PAK_ENABLE_CLR_FIELD       (0xFFFFFFFF - (0x1FUL<<PAK_PAK_ENABLE_CLR_SHIFT))
#define PAK_PAK_ENABLE_CLR_0           (0x0UL<<PAK_PAK_ENABLE_CLR_SHIFT)

/*****************************************************************************/
/* Register description for MODULE_ID */

/* Reset value of register PAK_MODULE_ID */
#define PAK_MODULE_ID_VALUE            0xA0732100

/* Bits definition for register PAK_MODULE_ID */
#define PAK_PAK_MODULE_ID_SHIFT        0
#define PAK_PAK_MODULE_ID_FIELD        (0xFFFFFFFF - (0x7FFFFFFFUL<<PAK_PAK_MODULE_ID_SHIFT))
#define PAK_PAK_MODULE_ID_A0732100     (0xA0732100UL<<PAK_PAK_MODULE_ID_SHIFT)

/*****************************************************************************/

/*****************************************************************************
* Definitions for: PDCU
*****************************************************************************/

/* Pointer on base address */
#define PDCU_BASE                      IOA(PDCU_BASE_ADDR)

/* PDCU CON Register (16 bits) */
#define PDCU_CON_OFFSET                0x0
#define PDCU_CON_REG                   IOA(PDCU_BASE_ADDR + PDCU_CON_OFFSET)

/* PDCU GPON0 Register (16 bits) */
#define PDCU_GPON0_OFFSET              0x4
#define PDCU_GPON0_REG                 IOA(PDCU_BASE_ADDR + PDCU_GPON0_OFFSET)

/* PDCU GPON1 Register (16 bits) */
#define PDCU_GPON1_OFFSET              0x8
#define PDCU_GPON1_REG                 IOA(PDCU_BASE_ADDR + PDCU_GPON1_OFFSET)

/* PDCU GPON2 Register (16 bits) */
#define PDCU_GPON2_OFFSET              0xC
#define PDCU_GPON2_REG                 IOA(PDCU_BASE_ADDR + PDCU_GPON2_OFFSET)

/* PDCU SSTOPCNT Register (16 bits) */
#define PDCU_SSTOPCNT_OFFSET           0x10
#define PDCU_SSTOPCNT_REG              IOA(PDCU_BASE_ADDR + PDCU_SSTOPCNT_OFFSET)

/* PDCU SSLEEPCNT Register (16 bits) */
#define PDCU_SSLEEPCNT_OFFSET          0x14
#define PDCU_SSLEEPCNT_REG             IOA(PDCU_BASE_ADDR + PDCU_SSLEEPCNT_OFFSET)

/* PDCU CPD Register (32 bits) */
#define PDCU_CPD_OFFSET                0x18
#define PDCU_CPD_REG                   IOA(PDCU_BASE_ADDR + PDCU_CPD_OFFSET)

/* PDCU SUBGPON0 Register (16 bits) */
#define PDCU_SUBGPON0_OFFSET           0x20
#define PDCU_SUBGPON0_REG              IOA(PDCU_BASE_ADDR + PDCU_SUBGPON0_OFFSET)

/* PDCU SUBGPON1 Register (16 bits) */
#define PDCU_SUBGPON1_OFFSET           0x24
#define PDCU_SUBGPON1_REG              IOA(PDCU_BASE_ADDR + PDCU_SUBGPON1_OFFSET)

/* PDCU SUBGPON2 Register (16 bits) */
#define PDCU_SUBGPON2_OFFSET           0x28
#define PDCU_SUBGPON2_REG              IOA(PDCU_BASE_ADDR + PDCU_SUBGPON2_OFFSET)

/* PDCU SUBSSLEEPCNT Register (16 bits) */
#define PDCU_SUBSSLEEPCNT_OFFSET       0x2C
#define PDCU_SUBSSLEEPCNT_REG          IOA(PDCU_BASE_ADDR + PDCU_SUBSSLEEPCNT_OFFSET)

/* PDCU PLLPD Register (32 bits) */
#define PDCU_PLLPD_OFFSET              0x30
#define PDCU_PLLPD_REG                 IOA(PDCU_BASE_ADDR + PDCU_PLLPD_OFFSET)

/* Register description for CON */

/* Reset value of register PDCU_CON */
#define PDCU_CON_VALUE                 0x2381

/* Bits definition for register PDCU_CON */
#define PDCU_3GMIDLE_SHIFT             14
#define PDCU_3GMIDLE_FIELD             (0xFFFFFFFF - (0x1UL<<PDCU_3GMIDLE_SHIFT))
#define PDCU_3GMIDLE_0                 (0x0UL<<PDCU_3GMIDLE_SHIFT)
#define PDCU_3GMIDLE_1                 (0x1UL<<PDCU_3GMIDLE_SHIFT)
#define PDCU_3GMIDLE                   (0x1UL<<PDCU_3GMIDLE_SHIFT)
#define PDCU_3GMSLEEP_SHIFT            13
#define PDCU_3GMSLEEP_FIELD            (0xFFFFFFFF - (0x1UL<<PDCU_3GMSLEEP_SHIFT))
#define PDCU_3GMSLEEP_0                (0x0UL<<PDCU_3GMSLEEP_SHIFT)
#define PDCU_3GMSLEEP_1                (0x1UL<<PDCU_3GMSLEEP_SHIFT)
#define PDCU_3GMSLEEP                  (0x1UL<<PDCU_3GMSLEEP_SHIFT)
#define PDCU_SUBMODE_SHIFT             12
#define PDCU_SUBMODE_FIELD             (0xFFFFFFFF - (0x1UL<<PDCU_SUBMODE_SHIFT))
#define PDCU_SUBMODE_0                 (0x0UL<<PDCU_SUBMODE_SHIFT)
#define PDCU_SUBMODE_1                 (0x1UL<<PDCU_SUBMODE_SHIFT)
#define PDCU_SUBMODE                   (0x1UL<<PDCU_SUBMODE_SHIFT)
#define PDCU_INT_SHIFT                 11
#define PDCU_INT_FIELD                 (0xFFFFFFFF - (0x1UL<<PDCU_INT_SHIFT))
#define PDCU_INT_0                     (0x0UL<<PDCU_INT_SHIFT)
#define PDCU_INT_1                     (0x1UL<<PDCU_INT_SHIFT)
#define PDCU_INT                       (0x1UL<<PDCU_INT_SHIFT)
#define PDCU_RF_OFF_MSK_SHIFT          9
#define PDCU_RF_OFF_MSK_FIELD          (0xFFFFFFFF - (0x1UL<<PDCU_RF_OFF_MSK_SHIFT))
#define PDCU_RF_OFF_MSK_0              (0x0UL<<PDCU_RF_OFF_MSK_SHIFT)
#define PDCU_RF_OFF_MSK_1              (0x1UL<<PDCU_RF_OFF_MSK_SHIFT)
#define PDCU_RF_OFF_MSK                (0x1UL<<PDCU_RF_OFF_MSK_SHIFT)
#define PDCU_RF_OFF_DEP_GPON2_SHIFT    8
#define PDCU_RF_OFF_DEP_GPON2_FIELD    (0xFFFFFFFF - (0x1UL<<PDCU_RF_OFF_DEP_GPON2_SHIFT))
#define PDCU_RF_OFF_DEP_GPON2_0        (0x0UL<<PDCU_RF_OFF_DEP_GPON2_SHIFT)
#define PDCU_RF_OFF_DEP_GPON2_1        (0x1UL<<PDCU_RF_OFF_DEP_GPON2_SHIFT)
#define PDCU_RF_OFF_DEP_GPON2          (0x1UL<<PDCU_RF_OFF_DEP_GPON2_SHIFT)
#define PDCU_RF_OFF_DEP_GPON1_SHIFT    7
#define PDCU_RF_OFF_DEP_GPON1_FIELD    (0xFFFFFFFF - (0x1UL<<PDCU_RF_OFF_DEP_GPON1_SHIFT))
#define PDCU_RF_OFF_DEP_GPON1_0        (0x0UL<<PDCU_RF_OFF_DEP_GPON1_SHIFT)
#define PDCU_RF_OFF_DEP_GPON1_1        (0x1UL<<PDCU_RF_OFF_DEP_GPON1_SHIFT)
#define PDCU_RF_OFF_DEP_GPON1          (0x1UL<<PDCU_RF_OFF_DEP_GPON1_SHIFT)
#define PDCU_RF_OFF_DEP_GPON0_SHIFT    6
#define PDCU_RF_OFF_DEP_GPON0_FIELD    (0xFFFFFFFF - (0x1UL<<PDCU_RF_OFF_DEP_GPON0_SHIFT))
#define PDCU_RF_OFF_DEP_GPON0_0        (0x0UL<<PDCU_RF_OFF_DEP_GPON0_SHIFT)
#define PDCU_RF_OFF_DEP_GPON0_1        (0x1UL<<PDCU_RF_OFF_DEP_GPON0_SHIFT)
#define PDCU_RF_OFF_DEP_GPON0          (0x1UL<<PDCU_RF_OFF_DEP_GPON0_SHIFT)
#define PDCU_GPON2_MASK_SHIFT          5
#define PDCU_GPON2_MASK_FIELD          (0xFFFFFFFF - (0x1UL<<PDCU_GPON2_MASK_SHIFT))
#define PDCU_GPON2_MASK_0              (0x0UL<<PDCU_GPON2_MASK_SHIFT)
#define PDCU_GPON2_MASK_GPO            (0x1UL<<PDCU_GPON2_MASK_SHIFT)
#define PDCU_GPON2_MASK                (0x1UL<<PDCU_GPON2_MASK_SHIFT)
#define PDCU_GPON1_MASK_SHIFT          4
#define PDCU_GPON1_MASK_FIELD          (0xFFFFFFFF - (0x1UL<<PDCU_GPON1_MASK_SHIFT))
#define PDCU_GPON1_MASK_0              (0x0UL<<PDCU_GPON1_MASK_SHIFT)
#define PDCU_GPON1_MASK_GPO            (0x1UL<<PDCU_GPON1_MASK_SHIFT)
#define PDCU_GPON1_MASK                (0x1UL<<PDCU_GPON1_MASK_SHIFT)
#define PDCU_GPON0_MASK_SHIFT          3
#define PDCU_GPON0_MASK_FIELD          (0xFFFFFFFF - (0x1UL<<PDCU_GPON0_MASK_SHIFT))
#define PDCU_GPON0_MASK_0              (0x0UL<<PDCU_GPON0_MASK_SHIFT)
#define PDCU_GPON0_MASK_GPO            (0x1UL<<PDCU_GPON0_MASK_SHIFT)
#define PDCU_GPON0_MASK                (0x1UL<<PDCU_GPON0_MASK_SHIFT)
#define PDCU_GPON2_POL_SHIFT           2
#define PDCU_GPON2_POL_FIELD           (0xFFFFFFFF - (0x1UL<<PDCU_GPON2_POL_SHIFT))
#define PDCU_GPON2_POL_LOW             (0x0UL<<PDCU_GPON2_POL_SHIFT)
#define PDCU_GPON2_POL_HIGH            (0x1UL<<PDCU_GPON2_POL_SHIFT)
#define PDCU_GPON2_POL                 (0x1UL<<PDCU_GPON2_POL_SHIFT)
#define PDCU_GPON1_POL_SHIFT           1
#define PDCU_GPON1_POL_FIELD           (0xFFFFFFFF - (0x1UL<<PDCU_GPON1_POL_SHIFT))
#define PDCU_GPON1_POL_LOW             (0x0UL<<PDCU_GPON1_POL_SHIFT)
#define PDCU_GPON1_POL_HIGH            (0x1UL<<PDCU_GPON1_POL_SHIFT)
#define PDCU_GPON1_POL                 (0x1UL<<PDCU_GPON1_POL_SHIFT)
#define PDCU_GPON0_POL_SHIFT           0
#define PDCU_GPON0_POL_FIELD           (0xFFFFFFFF - (0x1UL<<PDCU_GPON0_POL_SHIFT))
#define PDCU_GPON0_POL_LOW             (0x0UL<<PDCU_GPON0_POL_SHIFT)
#define PDCU_GPON0_POL_HIGH            (0x1UL<<PDCU_GPON0_POL_SHIFT)
#define PDCU_GPON0_POL                 (0x1UL<<PDCU_GPON0_POL_SHIFT)

/*****************************************************************************/
/* Register description for GPON0 */

/* Reset value of register PDCU_GPON0 */
#define PDCU_GPON0_VALUE               0x7

/* Bits definition for register PDCU_GPON0 */
#define PDCU_GPON0_SHIFT               0
#define PDCU_GPON0_FIELD               (0xFFFFFFFF - (0x1FUL<<PDCU_GPON0_SHIFT))
#define PDCU_GPON0_7                   (0x7UL<<PDCU_GPON0_SHIFT)

/*****************************************************************************/
/* Register description for SUBGPON0 */

/* Reset value of register PDCU_SUBGPON0 */
#define PDCU_SUBGPON0_VALUE            0x0

/* Bits definition for register PDCU_SUBGPON0 */
#define PDCU_SUBGPON0_SHIFT            0
#define PDCU_SUBGPON0_FIELD            (0xFFFFFFFF - (0xFUL<<PDCU_SUBGPON0_SHIFT))
#define PDCU_SUBGPON0_0                (0x0UL<<PDCU_SUBGPON0_SHIFT)

/*****************************************************************************/
/* Register description for GPON1 */

/* Reset value of register PDCU_GPON1 */
#define PDCU_GPON1_VALUE               0x7

/* Bits definition for register PDCU_GPON1 */
#define PDCU_GPON1_SHIFT               0
#define PDCU_GPON1_FIELD               (0xFFFFFFFF - (0x1FUL<<PDCU_GPON1_SHIFT))
#define PDCU_GPON1_7                   (0x7UL<<PDCU_GPON1_SHIFT)

/*****************************************************************************/
/* Register description for SUBGPON1 */

/* Reset value of register PDCU_SUBGPON1 */
#define PDCU_SUBGPON1_VALUE            0x0

/* Bits definition for register PDCU_SUBGPON1 */
#define PDCU_SUBGPON1_SHIFT            0
#define PDCU_SUBGPON1_FIELD            (0xFFFFFFFF - (0xFUL<<PDCU_SUBGPON1_SHIFT))
#define PDCU_SUBGPON1_0                (0x0UL<<PDCU_SUBGPON1_SHIFT)

/*****************************************************************************/
/* Register description for GPON2 */

/* Reset value of register PDCU_GPON2 */
#define PDCU_GPON2_VALUE               0x7

/* Bits definition for register PDCU_GPON2 */
#define PDCU_GPON2_SHIFT               0
#define PDCU_GPON2_FIELD               (0xFFFFFFFF - (0x1FUL<<PDCU_GPON2_SHIFT))
#define PDCU_GPON2_7                   (0x7UL<<PDCU_GPON2_SHIFT)

/*****************************************************************************/
/* Register description for SUBGPON2 */

/* Reset value of register PDCU_SUBGPON2 */
#define PDCU_SUBGPON2_VALUE            0x0

/* Bits definition for register PDCU_SUBGPON2 */
#define PDCU_SUBGPON2_SHIFT            0
#define PDCU_SUBGPON2_FIELD            (0xFFFFFFFF - (0xFUL<<PDCU_SUBGPON2_SHIFT))
#define PDCU_SUBGPON2_0                (0x0UL<<PDCU_SUBGPON2_SHIFT)

/*****************************************************************************/
/* Register description for SSLEEPCNT */

/* Reset value of register PDCU_SSLEEPCNT */
#define PDCU_SSLEEPCNT_VALUE           0x0

/* Bits definition for register PDCU_SSLEEPCNT */
#define PDCU_SSLEEPCNT_SHIFT           0
#define PDCU_SSLEEPCNT_FIELD           (0xFFFFFFFF - (0xFFFFUL<<PDCU_SSLEEPCNT_SHIFT))
#define PDCU_SSLEEPCNT_0               (0x0UL<<PDCU_SSLEEPCNT_SHIFT)
#define PDCU_SSLEEPCNT_0               (0x0UL<<PDCU_SSLEEPCNT_SHIFT)

/*****************************************************************************/
/* Register description for SUBSSLEEPCNT */

/* Reset value of register PDCU_SUBSSLEEPCNT */
#define PDCU_SUBSSLEEPCNT_VALUE        0x0

/* Bits definition for register PDCU_SUBSSLEEPCNT */
#define PDCU_SUBSSLEEPCNT_SHIFT        0
#define PDCU_SUBSSLEEPCNT_FIELD        (0xFFFFFFFF - (0xFUL<<PDCU_SUBSSLEEPCNT_SHIFT))
#define PDCU_SUBSSLEEPCNT_0            (0x0UL<<PDCU_SUBSSLEEPCNT_SHIFT)
#define PDCU_SUBSSLEEPCNT_0            (0x0UL<<PDCU_SUBSSLEEPCNT_SHIFT)

/*****************************************************************************/
/* Register description for SSTOPCNT */

/* Reset value of register PDCU_SSTOPCNT */
#define PDCU_SSTOPCNT_VALUE            0x0

/* Bits definition for register PDCU_SSTOPCNT */
#define PDCU_SSTOPCNT_SHIFT            0
#define PDCU_SSTOPCNT_FIELD            (0xFFFFFFFF - (0xFFFFUL<<PDCU_SSTOPCNT_SHIFT))
#define PDCU_SSTOPCNT_0                (0x0UL<<PDCU_SSTOPCNT_SHIFT)
#define PDCU_SSTOPCNT_0                (0x0UL<<PDCU_SSTOPCNT_SHIFT)

/*****************************************************************************/
/* Register description for CPD */

/* Reset value of register PDCU_CPD */
#define PDCU_CPD_VALUE                 0x1FFC007C

/* Bits definition for register PDCU_CPD */
#define PDCU_3GMISOCNT_SHIFT           23
#define PDCU_3GMISOCNT_FIELD           (0xFFFFFFFF - (0x3FUL<<PDCU_3GMISOCNT_SHIFT))
#define PDCU_3GMISOCNT_3F              (0x3FUL<<PDCU_3GMISOCNT_SHIFT)
#define PDCU_3GMWAKEUP_SHIFT           19
#define PDCU_3GMWAKEUP_FIELD           (0xFFFFFFFF - (0xFUL<<PDCU_3GMWAKEUP_SHIFT))
#define PDCU_3GMWAKEUP_F               (0xFUL<<PDCU_3GMWAKEUP_SHIFT)
#define PDCU_3GMON_SHIFT               18
#define PDCU_3GMON_FIELD               (0xFFFFFFFF - (0x1UL<<PDCU_3GMON_SHIFT))
#define PDCU_3GMON_0                   (0x0UL<<PDCU_3GMON_SHIFT)
#define PDCU_3GMON_1                   (0x1UL<<PDCU_3GMON_SHIFT)
#define PDCU_3GMON                     (0x1UL<<PDCU_3GMON_SHIFT)
#define PDCU_3GMPD_SHIFT               16
#define PDCU_3GMPD_FIELD               (0xFFFFFFFF - (0x3UL<<PDCU_3GMPD_SHIFT))
#define PDCU_3GMPD_0                   (0x0UL<<PDCU_3GMPD_SHIFT)
#define PDCU_3GMPD_1                   (0x1UL<<PDCU_3GMPD_SHIFT)
#define PDCU_3GMPD_2                   (0x2UL<<PDCU_3GMPD_SHIFT)
#define PDCU_3GMPD_3                   (0x3UL<<PDCU_3GMPD_SHIFT)
#define PDCU_IVSWAKEUP_SHIFT           3
#define PDCU_IVSWAKEUP_FIELD           (0xFFFFFFFF - (0xFUL<<PDCU_IVSWAKEUP_SHIFT))
#define PDCU_IVSWAKEUP_F               (0xFUL<<PDCU_IVSWAKEUP_SHIFT)
#define PDCU_IVSON_SHIFT               2
#define PDCU_IVSON_FIELD               (0xFFFFFFFF - (0x1UL<<PDCU_IVSON_SHIFT))
#define PDCU_IVSON_0                   (0x0UL<<PDCU_IVSON_SHIFT)
#define PDCU_IVSON_1                   (0x1UL<<PDCU_IVSON_SHIFT)
#define PDCU_IVSON                     (0x1UL<<PDCU_IVSON_SHIFT)
#define PDCU_IVSPD_SHIFT               0
#define PDCU_IVSPD_FIELD               (0xFFFFFFFF - (0x3UL<<PDCU_IVSPD_SHIFT))
#define PDCU_IVSPD_0                   (0x0UL<<PDCU_IVSPD_SHIFT)
#define PDCU_IVSPD_1                   (0x1UL<<PDCU_IVSPD_SHIFT)
#define PDCU_IVSPD_2                   (0x2UL<<PDCU_IVSPD_SHIFT)
#define PDCU_IVSPD_3                   (0x3UL<<PDCU_IVSPD_SHIFT)

/*****************************************************************************/
/* Register description for PLLPD */

/* Reset value of register PDCU_PLLPD */
#define PDCU_PLLPD_VALUE               0xF

/* Bits definition for register PDCU_PLLPD */
#define PDCU_PLLPOWERUP_SHIFT          0
#define PDCU_PLLPOWERUP_FIELD          (0xFFFFFFFF - (0xFUL<<PDCU_PLLPOWERUP_SHIFT))
#define PDCU_PLLPOWERUP_F              (0xFUL<<PDCU_PLLPOWERUP_SHIFT)

/*****************************************************************************/

/*****************************************************************************
* Definitions for: PWM1
*****************************************************************************/

/* Pointer on base address */
#define PWM1_BASE                      IOA(PWM1_BASE_ADDR)

/* PWM PF Register (16 bits) */
#define PWM1_PF_OFFSET                 0x0
#define PWM1_PF_REG                    IOA(PWM1_BASE_ADDR + PWM1_PF_OFFSET)

/* PWM TMR Register (16 bits) */
#define PWM1_TMR_OFFSET                0x4
#define PWM1_TMR_REG                   IOA(PWM1_BASE_ADDR + PWM1_TMR_OFFSET)

/* PWM CNTL Register (16 bits) */
#define PWM1_CNTL_OFFSET               0x8
#define PWM1_CNTL_REG                  IOA(PWM1_BASE_ADDR + PWM1_CNTL_OFFSET)

/*****************************************************************************
* Definitions for: PWM2
*****************************************************************************/

/* Pointer on base address */
#define PWM2_BASE                      IOA(PWM2_BASE_ADDR)

/* PWM PF Register (16 bits) */
#define PWM2_PF_OFFSET                 0x0
#define PWM2_PF_REG                    IOA(PWM2_BASE_ADDR + PWM2_PF_OFFSET)

/* PWM TMR Register (16 bits) */
#define PWM2_TMR_OFFSET                0x4
#define PWM2_TMR_REG                   IOA(PWM2_BASE_ADDR + PWM2_TMR_OFFSET)

/* PWM CNTL Register (16 bits) */
#define PWM2_CNTL_OFFSET               0x8
#define PWM2_CNTL_REG                  IOA(PWM2_BASE_ADDR + PWM2_CNTL_OFFSET)

/*****************************************************************************
* Definitions for: PWM3
*****************************************************************************/

/* Pointer on base address */
#define PWM3_BASE                      IOA(PWM3_BASE_ADDR)

/* PWM PF Register (16 bits) */
#define PWM3_PF_OFFSET                 0x0
#define PWM3_PF_REG                    IOA(PWM3_BASE_ADDR + PWM3_PF_OFFSET)

/* PWM TMR Register (16 bits) */
#define PWM3_TMR_OFFSET                0x4
#define PWM3_TMR_REG                   IOA(PWM3_BASE_ADDR + PWM3_TMR_OFFSET)

/* PWM CNTL Register (16 bits) */
#define PWM3_CNTL_OFFSET               0x8
#define PWM3_CNTL_REG                  IOA(PWM3_BASE_ADDR + PWM3_CNTL_OFFSET)

/* Register description for PF */

/* Reset value of register PWM[3:1]_PF */
#define PWM1_PF_VALUE                  0x0
#define PWM2_PF_VALUE                  0x0
#define PWM3_PF_VALUE                  0x0

/* Bits definition for register PWM[3:1]_PF */
#define PWM_PF_SHIFT                   0
#define PWM_PF_FIELD                   (0xFFFFFFFF - (0xFFFFUL<<PWM_PF_SHIFT))
#define PWM_PF_PERIOD_OF_THE_PWM_OUTPUT            (0x0UL<<PWM_PF_SHIFT)

/*****************************************************************************/
/* Register description for TMR */

/* Reset value of register PWM[3:1]_TMR */
#define PWM1_TMR_VALUE                 0x0
#define PWM2_TMR_VALUE                 0x0
#define PWM3_TMR_VALUE                 0x0

/* Bits definition for register PWM[3:1]_TMR */
#define PWM_TMR_SHIFT                  0
#define PWM_TMR_FIELD                  (0xFFFFFFFF - (0xFFFFUL<<PWM_TMR_SHIFT))
#define PWM_TMR_HIGH_TIME_OF_THE_PWM_OUTPUT        (0x0UL<<PWM_TMR_SHIFT)

/*****************************************************************************/
/* Register description for CNTL */

/* Reset value of register PWM[3:1]_CNTL */
#define PWM1_CNTL_VALUE                0x0
#define PWM2_CNTL_VALUE                0x0
#define PWM3_CNTL_VALUE                0x0

/* Bits definition for register PWM[3:1]_CNTL */
#define PWM_PDM_MODE_SHIFT             2
#define PWM_PDM_MODE_FIELD             (0xFFFFFFFF - (0x1UL<<PWM_PDM_MODE_SHIFT))
#define PWM_PDM_MODE_0                 (0x0UL<<PWM_PDM_MODE_SHIFT)
#define PWM_PDM_MODE_1                 (0x1UL<<PWM_PDM_MODE_SHIFT)
#define PWM_PDM_MODE                   (0x1UL<<PWM_PDM_MODE_SHIFT)
#define PWM_ALERT_MODE_SHIFT           1
#define PWM_ALERT_MODE_FIELD           (0xFFFFFFFF - (0x1UL<<PWM_ALERT_MODE_SHIFT))
#define PWM_ALERT_MODE_0               (0x0UL<<PWM_ALERT_MODE_SHIFT)
#define PWM_ALERT_MODE_1               (0x1UL<<PWM_ALERT_MODE_SHIFT)
#define PWM_ALERT_MODE                 (0x1UL<<PWM_ALERT_MODE_SHIFT)
#define PWM_HI_OUTPUT_SHIFT            0
#define PWM_HI_OUTPUT_FIELD            (0xFFFFFFFF - (0x1UL<<PWM_HI_OUTPUT_SHIFT))
#define PWM_HI_OUTPUT_0                (0x0UL<<PWM_HI_OUTPUT_SHIFT)
#define PWM_HI_OUTPUT_1                (0x1UL<<PWM_HI_OUTPUT_SHIFT)
#define PWM_HI_OUTPUT                  (0x1UL<<PWM_HI_OUTPUT_SHIFT)

/*****************************************************************************/

/*****************************************************************************
* Definitions for: SCON
*****************************************************************************/

/* Pointer on base address */
#define SCON_BASE                      IOA(SCON_BASE_ADDR)

/* SCON SYSVER Register (32 bits) */
#define SCON_SYSVER_OFFSET             0x0
#define SCON_SYSVER_REG                IOA(SCON_BASE_ADDR + SCON_SYSVER_OFFSET)

/* SCON SYSCON0 Register (32 bits) */
#define SCON_SYSCON0_OFFSET            0x4
#define SCON_SYSCON0_REG               IOA(SCON_BASE_ADDR + SCON_SYSCON0_OFFSET)

/* SCON SYSPROT Register (32 bits) */
#define SCON_SYSPROT_OFFSET            0x8
#define SCON_SYSPROT_REG               IOA(SCON_BASE_ADDR + SCON_SYSPROT_OFFSET)

/* SCON SYSMUX0 Register (32 bits) */
#define SCON_SYSMUX0_OFFSET            0xC
#define SCON_SYSMUX0_REG               IOA(SCON_BASE_ADDR + SCON_SYSMUX0_OFFSET)

/* SCON SYSMUX1 Register (32 bits) */
#define SCON_SYSMUX1_OFFSET            0x10
#define SCON_SYSMUX1_REG               IOA(SCON_BASE_ADDR + SCON_SYSMUX1_OFFSET)

/* SCON SYSMUX2 Register (32 bits) */
#define SCON_SYSMUX2_OFFSET            0x14
#define SCON_SYSMUX2_REG               IOA(SCON_BASE_ADDR + SCON_SYSMUX2_OFFSET)

/* SCON SYSMUX3 Register (32 bits) */
#define SCON_SYSMUX3_OFFSET            0x18
#define SCON_SYSMUX3_REG               IOA(SCON_BASE_ADDR + SCON_SYSMUX3_OFFSET)

/* SCON SYSMUX4 Register (32 bits) */
#define SCON_SYSMUX4_OFFSET            0x1C
#define SCON_SYSMUX4_REG               IOA(SCON_BASE_ADDR + SCON_SYSMUX4_OFFSET)

/* SCON SYSMUX5 Register (32 bits) */
#define SCON_SYSMUX5_OFFSET            0x20
#define SCON_SYSMUX5_REG               IOA(SCON_BASE_ADDR + SCON_SYSMUX5_OFFSET)

/* SCON SYSMUX6 Register (32 bits) */
#define SCON_SYSMUX6_OFFSET            0x24
#define SCON_SYSMUX6_REG               IOA(SCON_BASE_ADDR + SCON_SYSMUX6_OFFSET)

/* SCON SYSMUX7 Register (32 bits) */
#define SCON_SYSMUX7_OFFSET            0x28
#define SCON_SYSMUX7_REG               IOA(SCON_BASE_ADDR + SCON_SYSMUX7_OFFSET)

/* SCON SYSMUX8 Register (32 bits) */
#define SCON_SYSMUX8_OFFSET            0x2C
#define SCON_SYSMUX8_REG               IOA(SCON_BASE_ADDR + SCON_SYSMUX8_OFFSET)

/* SCON SYSMUX9 Register (32 bits) */
#define SCON_SYSMUX9_OFFSET            0x30
#define SCON_SYSMUX9_REG               IOA(SCON_BASE_ADDR + SCON_SYSMUX9_OFFSET)

/* SCON SYSMUX10 Register (32 bits) */
#define SCON_SYSMUX10_OFFSET           0x34
#define SCON_SYSMUX10_REG              IOA(SCON_BASE_ADDR + SCON_SYSMUX10_OFFSET)

/* SCON SYSMUX11 Register (32 bits) */
#define SCON_SYSMUX11_OFFSET           0x38
#define SCON_SYSMUX11_REG              IOA(SCON_BASE_ADDR + SCON_SYSMUX11_OFFSET)

/* SCON SYSPAD0 Register (32 bits) */
#define SCON_SYSPAD0_OFFSET            0x50
#define SCON_SYSPAD0_REG               IOA(SCON_BASE_ADDR + SCON_SYSPAD0_OFFSET)

/* SCON SYSPAD1 Register (32 bits) */
#define SCON_SYSPAD1_OFFSET            0x54
#define SCON_SYSPAD1_REG               IOA(SCON_BASE_ADDR + SCON_SYSPAD1_OFFSET)

/* SCON SYSPAD2 Register (32 bits) */
#define SCON_SYSPAD2_OFFSET            0x58
#define SCON_SYSPAD2_REG               IOA(SCON_BASE_ADDR + SCON_SYSPAD2_OFFSET)

/* SCON SYSCON1 Register (32 bits) */
#define SCON_SYSCON1_OFFSET            0x70
#define SCON_SYSCON1_REG               IOA(SCON_BASE_ADDR + SCON_SYSCON1_OFFSET)

/* SCON SYSIISMUX Register (32 bits) */
#define SCON_SYSIISMUX_OFFSET          0x74
#define SCON_SYSIISMUX_REG             IOA(SCON_BASE_ADDR + SCON_SYSIISMUX_OFFSET)

/* SCON SYSAHBPROT Register (32 bits) */
#define SCON_SYSAHBPROT_OFFSET         0x78
#define SCON_SYSAHBPROT_REG            IOA(SCON_BASE_ADDR + SCON_SYSAHBPROT_OFFSET)

/* SCON SYSIVSBRIDGE Register (32 bits) */
#define SCON_SYSIVSBRIDGE_OFFSET       0x7C
#define SCON_SYSIVSBRIDGE_REG          IOA(SCON_BASE_ADDR + SCON_SYSIVSBRIDGE_OFFSET)

/* Register description for SYSVER */

/* Reset value of register SCON_SYSVER */
#define SCON_SYSVER_VALUE              0x3621

/* Bits definition for register SCON_SYSVER */
#define SCON_ICFAB_SHIFT               12
#define SCON_ICFAB_FIELD               (0xFFFFFFFF - (0xFUL<<SCON_ICFAB_SHIFT))
#define SCON_ICFAB_SSMC                (0x1UL<<SCON_ICFAB_SHIFT)
#define SCON_ICFAB_MOS4                (0x2UL<<SCON_ICFAB_SHIFT)
#define SCON_ICFAB_TSMC                (0x3UL<<SCON_ICFAB_SHIFT)
#define SCON_ICFAB_CROLLES2            (0x4UL<<SCON_ICFAB_SHIFT)
#define SCON_ICFAB_UMC                 (0x5UL<<SCON_ICFAB_SHIFT)
#define SCON_ICFAB_PROTOTYPING         (0xFUL<<SCON_ICFAB_SHIFT)
#define SCON_ICID_SHIFT                8
#define SCON_ICID_FIELD                (0xFFFFFFFF - (0xFUL<<SCON_ICID_SHIFT))
#define SCON_ICID_1                    (0x1UL<<SCON_ICID_SHIFT)
#define SCON_ICID_2                    (0x2UL<<SCON_ICID_SHIFT)
#define SCON_ICID_3                    (0x3UL<<SCON_ICID_SHIFT)
#define SCON_ICID_4                    (0x4UL<<SCON_ICID_SHIFT)
#define SCON_ICID_5                    (0x5UL<<SCON_ICID_SHIFT)
#define SCON_ICID_6                    (0x6UL<<SCON_ICID_SHIFT)
#define SCON_ICID_7                    (0x7UL<<SCON_ICID_SHIFT)
#define SCON_ICID_8                    (0x8UL<<SCON_ICID_SHIFT)
#define SCON_ICID_9                    (0x9UL<<SCON_ICID_SHIFT)
#define SCON_ICID_A                    (0xAUL<<SCON_ICID_SHIFT)
#define SCON_ICID_B                    (0xBUL<<SCON_ICID_SHIFT)
#define SCON_ICMASK_SHIFT              4
#define SCON_ICMASK_FIELD              (0xFFFFFFFF - (0xFUL<<SCON_ICMASK_SHIFT))
#define SCON_ICMASK_1                  (0x1UL<<SCON_ICMASK_SHIFT)
#define SCON_ICMASK_2                  (0x2UL<<SCON_ICMASK_SHIFT)
#define SCON_ICMET_SHIFT               0
#define SCON_ICMET_FIELD               (0xFFFFFFFF - (0xFUL<<SCON_ICMET_SHIFT))
#define SCON_ICMET_1                   (0x1UL<<SCON_ICMET_SHIFT)
#define SCON_ICMET_2                   (0x2UL<<SCON_ICMET_SHIFT)

/*****************************************************************************/
/* Register description for SYSCON0 */

/* Reset value of register SCON_SYSCON0 */
#define SCON_SYSCON0_VALUE             0x1

/* Bits definition for register SCON_SYSCON0 */
#define SCON_HDPAHS_SHIFT              30
#define SCON_HDPAHS_FIELD              (0xFFFFFFFF - (0x1UL<<SCON_HDPAHS_SHIFT))
#define SCON_HDPAHS_0                  (0x0UL<<SCON_HDPAHS_SHIFT)
#define SCON_HDPAHS_1                  (0x1UL<<SCON_HDPAHS_SHIFT)
#define SCON_HDPAHS                    (0x1UL<<SCON_HDPAHS_SHIFT)
#define SCON_HDPBCON_SHIFT             27
#define SCON_HDPBCON_FIELD             (0xFFFFFFFF - (0x7UL<<SCON_HDPBCON_SHIFT))
#define SCON_HDPBCON_0                 (0x0UL<<SCON_HDPBCON_SHIFT)
#define SCON_JSELSTAT_SHIFT            13
#define SCON_JSELSTAT_FIELD            (0xFFFFFFFF - (0x3UL<<SCON_JSELSTAT_SHIFT))
#define SCON_PWMOR3_SHIFT              11
#define SCON_PWMOR3_FIELD              (0xFFFFFFFF - (0x3UL<<SCON_PWMOR3_SHIFT))
#define SCON_PWMOR3_PWM3               (0x0UL<<SCON_PWMOR3_SHIFT)
#define SCON_PWMOR3_PWM13              (0x1UL<<SCON_PWMOR3_SHIFT)
#define SCON_PWMOR3_PWM23              (0x2UL<<SCON_PWMOR3_SHIFT)
#define SCON_PWMOR3_PWM123             (0x3UL<<SCON_PWMOR3_SHIFT)
#define SCON_PWMOR2_SHIFT              9
#define SCON_PWMOR2_FIELD              (0xFFFFFFFF - (0x3UL<<SCON_PWMOR2_SHIFT))
#define SCON_PWMOR2_PWM2               (0x0UL<<SCON_PWMOR2_SHIFT)
#define SCON_PWMOR2_PWM12              (0x1UL<<SCON_PWMOR2_SHIFT)
#define SCON_PWMOR2_PWM23              (0x2UL<<SCON_PWMOR2_SHIFT)
#define SCON_PWMOR2_PWM123             (0x3UL<<SCON_PWMOR2_SHIFT)
#define SCON_PWMOR1_SHIFT              7
#define SCON_PWMOR1_FIELD              (0xFFFFFFFF - (0x3UL<<SCON_PWMOR1_SHIFT))
#define SCON_PWMOR1_PWM1               (0x0UL<<SCON_PWMOR1_SHIFT)
#define SCON_PWMOR1_PWM12              (0x1UL<<SCON_PWMOR1_SHIFT)
#define SCON_PWMOR1_PWM13              (0x2UL<<SCON_PWMOR1_SHIFT)
#define SCON_PWMOR1_PWM123             (0x3UL<<SCON_PWMOR1_SHIFT)
#define SCON_HDPACON_SHIFT             1
#define SCON_HDPACON_FIELD             (0xFFFFFFFF - (0x3FUL<<SCON_HDPACON_SHIFT))
#define SCON_HDPACON_0                 (0x0UL<<SCON_HDPACON_SHIFT)
#define SCON_HDPEN_SHIFT               0
#define SCON_HDPEN_FIELD               (0xFFFFFFFF - (0x1UL<<SCON_HDPEN_SHIFT))
#define SCON_HDPEN_0                   (0x0UL<<SCON_HDPEN_SHIFT)
#define SCON_HDPEN_1                   (0x1UL<<SCON_HDPEN_SHIFT)
#define SCON_HDPEN                     (0x1UL<<SCON_HDPEN_SHIFT)

/*****************************************************************************/
/* Register description for SYSCON1 */

/* Reset value of register SCON_SYSCON1 */
#define SCON_SYSCON1_VALUE             0x506

/* Bits definition for register SCON_SYSCON1 */
#define SCON_SDI_SYNC_SHIFT            12
#define SCON_SDI_SYNC_FIELD            (0xFFFFFFFF - (0x1UL<<SCON_SDI_SYNC_SHIFT))
#define SCON_SDI_SYNC_0                (0x0UL<<SCON_SDI_SYNC_SHIFT)
#define SCON_SDI_SYNC_1                (0x1UL<<SCON_SDI_SYNC_SHIFT)
#define SCON_SDI_SYNC                  (0x1UL<<SCON_SDI_SYNC_SHIFT)
#define SCON_TVO_LOADID_EN_SHIFT       11
#define SCON_TVO_LOADID_EN_FIELD       (0xFFFFFFFF - (0x1UL<<SCON_TVO_LOADID_EN_SHIFT))
#define SCON_TVO_LOADID_EN_0           (0x0UL<<SCON_TVO_LOADID_EN_SHIFT)
#define SCON_TVO_LOADID_EN_1           (0x1UL<<SCON_TVO_LOADID_EN_SHIFT)
#define SCON_TVO_LOADID_EN             (0x1UL<<SCON_TVO_LOADID_EN_SHIFT)
#define SCON_TVO_SET_VREF_SHIFT        8
#define SCON_TVO_SET_VREF_FIELD        (0xFFFFFFFF - (0x7UL<<SCON_TVO_SET_VREF_SHIFT))
#define SCON_TVO_SET_VREF_0V1          (0x0UL<<SCON_TVO_SET_VREF_SHIFT)
#define SCON_TVO_SET_VREF_0V2          (0x1UL<<SCON_TVO_SET_VREF_SHIFT)
#define SCON_TVO_SET_VREF_0V3          (0x2UL<<SCON_TVO_SET_VREF_SHIFT)
#define SCON_TVO_SET_VREF_0V4          (0x4UL<<SCON_TVO_SET_VREF_SHIFT)
#define SCON_TVO_SET_VREF_0V5          (0x4UL<<SCON_TVO_SET_VREF_SHIFT)
#define SCON_TVO_SET_VREF_0V6          (0x5UL<<SCON_TVO_SET_VREF_SHIFT)
#define SCON_TVO_SET_VREF_0V7          (0x6UL<<SCON_TVO_SET_VREF_SHIFT)
#define SCON_TVO_SET_VREF_0V8          (0x7UL<<SCON_TVO_SET_VREF_SHIFT)
#define SCON_WAKEUP_3GM_SHIFT          7
#define SCON_WAKEUP_3GM_FIELD          (0xFFFFFFFF - (0x1UL<<SCON_WAKEUP_3GM_SHIFT))
#define SCON_WAKEUP_3GM_0              (0x0UL<<SCON_WAKEUP_3GM_SHIFT)
#define SCON_WAKEUP_3GM_1              (0x1UL<<SCON_WAKEUP_3GM_SHIFT)
#define SCON_WAKEUP_3GM                (0x1UL<<SCON_WAKEUP_3GM_SHIFT)
#define SCON_PAD_VREF_EI_SHIFT         6
#define SCON_PAD_VREF_EI_FIELD         (0xFFFFFFFF - (0x1UL<<SCON_PAD_VREF_EI_SHIFT))
#define SCON_PAD_VREF_EI_NORMAL_MODE   (0x0UL<<SCON_PAD_VREF_EI_SHIFT)
#define SCON_PAD_VREF_EI_POWER_DOWN_MODE           (0x1UL<<SCON_PAD_VREF_EI_SHIFT)
#define SCON_PAD_VREF_EI               (0x1UL<<SCON_PAD_VREF_EI_SHIFT)
#define SCON_SUSPEND_SHIFT             2
#define SCON_SUSPEND_FIELD             (0xFFFFFFFF - (0x1UL<<SCON_SUSPEND_SHIFT))
#define SCON_SUSPEND_CONTROLLED_BY_USB (0x0UL<<SCON_SUSPEND_SHIFT)
#define SCON_SUSPEND_FORCED_ACTIVE     (0x1UL<<SCON_SUSPEND_SHIFT)
#define SCON_SUSPEND                   (0x1UL<<SCON_SUSPEND_SHIFT)
#define SCON_OTG_EN_SHIFT              1
#define SCON_OTG_EN_FIELD              (0xFFFFFFFF - (0x1UL<<SCON_OTG_EN_SHIFT))
#define SCON_OTG_EN_0                  (0x0UL<<SCON_OTG_EN_SHIFT)
#define SCON_OTG_EN_1                  (0x1UL<<SCON_OTG_EN_SHIFT)
#define SCON_OTG_EN                    (0x1UL<<SCON_OTG_EN_SHIFT)
#define SCON_WD_BREAK_SHIFT            0
#define SCON_WD_BREAK_FIELD            (0xFFFFFFFF - (0x1UL<<SCON_WD_BREAK_SHIFT))
#define SCON_WD_BREAK_0                (0x0UL<<SCON_WD_BREAK_SHIFT)
#define SCON_WD_BREAK_1                (0x1UL<<SCON_WD_BREAK_SHIFT)
#define SCON_WD_BREAK                  (0x1UL<<SCON_WD_BREAK_SHIFT)

/*****************************************************************************/
/* Register description for SYSPROT */

/* Reset value of register SCON_SYSPROT */
#define SCON_SYSPROT_VALUE             0x12

/* Bits definition for register SCON_SYSPROT */
#define SCON_SCROM_PROT2_SHIFT         18
#define SCON_SCROM_PROT2_FIELD         (0xFFFFFFFF - (0x1UL<<SCON_SCROM_PROT2_SHIFT))
#define SCON_SCROM_PROT2_0             (0x0UL<<SCON_SCROM_PROT2_SHIFT)
#define SCON_SCROM_PROT2_1             (0x1UL<<SCON_SCROM_PROT2_SHIFT)
#define SCON_SCROM_PROT2               (0x1UL<<SCON_SCROM_PROT2_SHIFT)
#define SCON_SCROM_PROT1_SHIFT         17
#define SCON_SCROM_PROT1_FIELD         (0xFFFFFFFF - (0x1UL<<SCON_SCROM_PROT1_SHIFT))
#define SCON_SCROM_PROT1_0             (0x0UL<<SCON_SCROM_PROT1_SHIFT)
#define SCON_SCROM_PROT1_1             (0x1UL<<SCON_SCROM_PROT1_SHIFT)
#define SCON_SCROM_PROT1               (0x1UL<<SCON_SCROM_PROT1_SHIFT)
#define SCON_SCROM_PROT0_SHIFT         16
#define SCON_SCROM_PROT0_FIELD         (0xFFFFFFFF - (0x1UL<<SCON_SCROM_PROT0_SHIFT))
#define SCON_SCROM_PROT0_0             (0x0UL<<SCON_SCROM_PROT0_SHIFT)
#define SCON_SCROM_PROT0_1             (0x1UL<<SCON_SCROM_PROT0_SHIFT)
#define SCON_SCROM_PROT0               (0x1UL<<SCON_SCROM_PROT0_SHIFT)
#define SCON_JTAG_DIS_SHIFT            4
#define SCON_JTAG_DIS_FIELD            (0xFFFFFFFF - (0x1UL<<SCON_JTAG_DIS_SHIFT))
#define SCON_JTAG_DIS_0                (0x0UL<<SCON_JTAG_DIS_SHIFT)
#define SCON_JTAG_DIS_1                (0x1UL<<SCON_JTAG_DIS_SHIFT)
#define SCON_JTAG_DIS                  (0x1UL<<SCON_JTAG_DIS_SHIFT)
#define SCON_OTP_MSB_SHIFT             3
#define SCON_OTP_MSB_FIELD             (0xFFFFFFFF - (0x1UL<<SCON_OTP_MSB_SHIFT))
#define SCON_OTP_MSB_0                 (0x0UL<<SCON_OTP_MSB_SHIFT)
#define SCON_OTP_MSB_1                 (0x1UL<<SCON_OTP_MSB_SHIFT)
#define SCON_OTP_MSB                   (0x1UL<<SCON_OTP_MSB_SHIFT)
#define SCON_TEST_SHIFT                2
#define SCON_TEST_FIELD                (0xFFFFFFFF - (0x1UL<<SCON_TEST_SHIFT))
#define SCON_TEST_0                    (0x0UL<<SCON_TEST_SHIFT)
#define SCON_TEST_1                    (0x1UL<<SCON_TEST_SHIFT)
#define SCON_TEST                      (0x1UL<<SCON_TEST_SHIFT)
#define SCON_SECURE_SHIFT              1
#define SCON_SECURE_FIELD              (0xFFFFFFFF - (0x1UL<<SCON_SECURE_SHIFT))
#define SCON_SECURE_0                  (0x0UL<<SCON_SECURE_SHIFT)
#define SCON_SECURE_1                  (0x1UL<<SCON_SECURE_SHIFT)
#define SCON_SECURE                    (0x1UL<<SCON_SECURE_SHIFT)
#define SCON_LOCK_SHIFT                0
#define SCON_LOCK_FIELD                (0xFFFFFFFF - (0x1UL<<SCON_LOCK_SHIFT))
#define SCON_LOCK_0                    (0x0UL<<SCON_LOCK_SHIFT)
#define SCON_LOCK_1                    (0x1UL<<SCON_LOCK_SHIFT)
#define SCON_LOCK                      (0x1UL<<SCON_LOCK_SHIFT)

/*****************************************************************************/
/* Register description for SYSMUX0 */

/* Reset value of register SCON_SYSMUX0 */
#define SCON_SYSMUX0_VALUE             0x0

/* Bits definition for register SCON_SYSMUX0 */
#define SCON_GPIOA15C_SHIFT            30
#define SCON_GPIOA15C_FIELD            (0xFFFFFFFF - (0x3UL<<SCON_GPIOA15C_SHIFT))
#define SCON_GPIOA15C_0                (0x0UL<<SCON_GPIOA15C_SHIFT)
#define SCON_GPIOA14C_SHIFT            28
#define SCON_GPIOA14C_FIELD            (0xFFFFFFFF - (0x3UL<<SCON_GPIOA14C_SHIFT))
#define SCON_GPIOA14C_0                (0x0UL<<SCON_GPIOA14C_SHIFT)
#define SCON_GPIOA13C_SHIFT            26
#define SCON_GPIOA13C_FIELD            (0xFFFFFFFF - (0x3UL<<SCON_GPIOA13C_SHIFT))
#define SCON_GPIOA13C_0                (0x0UL<<SCON_GPIOA13C_SHIFT)
#define SCON_GPIOA12C_SHIFT            24
#define SCON_GPIOA12C_FIELD            (0xFFFFFFFF - (0x3UL<<SCON_GPIOA12C_SHIFT))
#define SCON_GPIOA12C_0                (0x0UL<<SCON_GPIOA12C_SHIFT)
#define SCON_GPIOA11C_SHIFT            22
#define SCON_GPIOA11C_FIELD            (0xFFFFFFFF - (0x3UL<<SCON_GPIOA11C_SHIFT))
#define SCON_GPIOA11C_0                (0x0UL<<SCON_GPIOA11C_SHIFT)
#define SCON_GPIOA10C_SHIFT            20
#define SCON_GPIOA10C_FIELD            (0xFFFFFFFF - (0x3UL<<SCON_GPIOA10C_SHIFT))
#define SCON_GPIOA10C_0                (0x0UL<<SCON_GPIOA10C_SHIFT)
#define SCON_GPIOA9C_SHIFT             18
#define SCON_GPIOA9C_FIELD             (0xFFFFFFFF - (0x3UL<<SCON_GPIOA9C_SHIFT))
#define SCON_GPIOA9C_0                 (0x0UL<<SCON_GPIOA9C_SHIFT)
#define SCON_GPIOA8C_SHIFT             16
#define SCON_GPIOA8C_FIELD             (0xFFFFFFFF - (0x3UL<<SCON_GPIOA8C_SHIFT))
#define SCON_GPIOA8C_0                 (0x0UL<<SCON_GPIOA8C_SHIFT)
#define SCON_GPIOA7C_SHIFT             14
#define SCON_GPIOA7C_FIELD             (0xFFFFFFFF - (0x3UL<<SCON_GPIOA7C_SHIFT))
#define SCON_GPIOA7C_0                 (0x0UL<<SCON_GPIOA7C_SHIFT)
#define SCON_GPIOA6C_SHIFT             12
#define SCON_GPIOA6C_FIELD             (0xFFFFFFFF - (0x3UL<<SCON_GPIOA6C_SHIFT))
#define SCON_GPIOA6C_0                 (0x0UL<<SCON_GPIOA6C_SHIFT)
#define SCON_GPIOA5C_SHIFT             10
#define SCON_GPIOA5C_FIELD             (0xFFFFFFFF - (0x3UL<<SCON_GPIOA5C_SHIFT))
#define SCON_GPIOA5C_0                 (0x0UL<<SCON_GPIOA5C_SHIFT)
#define SCON_GPIOA4C_SHIFT             8
#define SCON_GPIOA4C_FIELD             (0xFFFFFFFF - (0x3UL<<SCON_GPIOA4C_SHIFT))
#define SCON_GPIOA4C_0                 (0x0UL<<SCON_GPIOA4C_SHIFT)
#define SCON_GPIOA3C_SHIFT             6
#define SCON_GPIOA3C_FIELD             (0xFFFFFFFF - (0x3UL<<SCON_GPIOA3C_SHIFT))
#define SCON_GPIOA3C_0                 (0x0UL<<SCON_GPIOA3C_SHIFT)
#define SCON_GPIOA2C_SHIFT             4
#define SCON_GPIOA2C_FIELD             (0xFFFFFFFF - (0x3UL<<SCON_GPIOA2C_SHIFT))
#define SCON_GPIOA2C_0                 (0x0UL<<SCON_GPIOA2C_SHIFT)
#define SCON_GPIOA1C_SHIFT             2
#define SCON_GPIOA1C_FIELD             (0xFFFFFFFF - (0x3UL<<SCON_GPIOA1C_SHIFT))
#define SCON_GPIOA1C_0                 (0x0UL<<SCON_GPIOA1C_SHIFT)
#define SCON_GPIOA0C_SHIFT             0
#define SCON_GPIOA0C_FIELD             (0xFFFFFFFF - (0x3UL<<SCON_GPIOA0C_SHIFT))
#define SCON_GPIOA0C_0                 (0x0UL<<SCON_GPIOA0C_SHIFT)

/*****************************************************************************/
/* Register description for SYSMUX1 */

/* Reset value of register SCON_SYSMUX1 */
#define SCON_SYSMUX1_VALUE             0x0

/* Bits definition for register SCON_SYSMUX1 */
#define SCON_GPIOA31C_SHIFT            30
#define SCON_GPIOA31C_FIELD            (0xFFFFFFFF - (0x3UL<<SCON_GPIOA31C_SHIFT))
#define SCON_GPIOA31C_0                (0x0UL<<SCON_GPIOA31C_SHIFT)
#define SCON_GPIOA30C_SHIFT            28
#define SCON_GPIOA30C_FIELD            (0xFFFFFFFF - (0x3UL<<SCON_GPIOA30C_SHIFT))
#define SCON_GPIOA30C_0                (0x0UL<<SCON_GPIOA30C_SHIFT)
#define SCON_GPIOA29C_SHIFT            26
#define SCON_GPIOA29C_FIELD            (0xFFFFFFFF - (0x3UL<<SCON_GPIOA29C_SHIFT))
#define SCON_GPIOA29C_0                (0x0UL<<SCON_GPIOA29C_SHIFT)
#define SCON_GPIOA28C_SHIFT            24
#define SCON_GPIOA28C_FIELD            (0xFFFFFFFF - (0x3UL<<SCON_GPIOA28C_SHIFT))
#define SCON_GPIOA28C_0                (0x0UL<<SCON_GPIOA28C_SHIFT)
#define SCON_GPIOA27C_SHIFT            22
#define SCON_GPIOA27C_FIELD            (0xFFFFFFFF - (0x3UL<<SCON_GPIOA27C_SHIFT))
#define SCON_GPIOA27C_0                (0x0UL<<SCON_GPIOA27C_SHIFT)
#define SCON_GPIOA26C_SHIFT            20
#define SCON_GPIOA26C_FIELD            (0xFFFFFFFF - (0x3UL<<SCON_GPIOA26C_SHIFT))
#define SCON_GPIOA26C_0                (0x0UL<<SCON_GPIOA26C_SHIFT)
#define SCON_GPIOA25C_SHIFT            18
#define SCON_GPIOA25C_FIELD            (0xFFFFFFFF - (0x3UL<<SCON_GPIOA25C_SHIFT))
#define SCON_GPIOA25C_0                (0x0UL<<SCON_GPIOA25C_SHIFT)
#define SCON_GPIOA24C_SHIFT            16
#define SCON_GPIOA24C_FIELD            (0xFFFFFFFF - (0x3UL<<SCON_GPIOA24C_SHIFT))
#define SCON_GPIOA24C_0                (0x0UL<<SCON_GPIOA24C_SHIFT)
#define SCON_GPIOA23C_SHIFT            14
#define SCON_GPIOA23C_FIELD            (0xFFFFFFFF - (0x3UL<<SCON_GPIOA23C_SHIFT))
#define SCON_GPIOA23C_0                (0x0UL<<SCON_GPIOA23C_SHIFT)
#define SCON_GPIOA22C_SHIFT            12
#define SCON_GPIOA22C_FIELD            (0xFFFFFFFF - (0x3UL<<SCON_GPIOA22C_SHIFT))
#define SCON_GPIOA22C_0                (0x0UL<<SCON_GPIOA22C_SHIFT)
#define SCON_GPIOA21C_SHIFT            10
#define SCON_GPIOA21C_FIELD            (0xFFFFFFFF - (0x3UL<<SCON_GPIOA21C_SHIFT))
#define SCON_GPIOA21C_0                (0x0UL<<SCON_GPIOA21C_SHIFT)
#define SCON_GPIOA20C_SHIFT            8
#define SCON_GPIOA20C_FIELD            (0xFFFFFFFF - (0x3UL<<SCON_GPIOA20C_SHIFT))
#define SCON_GPIOA20C_0                (0x0UL<<SCON_GPIOA20C_SHIFT)
#define SCON_GPIOA19C_SHIFT            6
#define SCON_GPIOA19C_FIELD            (0xFFFFFFFF - (0x3UL<<SCON_GPIOA19C_SHIFT))
#define SCON_GPIOA19C_0                (0x0UL<<SCON_GPIOA19C_SHIFT)
#define SCON_GPIOA18C_SHIFT            4
#define SCON_GPIOA18C_FIELD            (0xFFFFFFFF - (0x3UL<<SCON_GPIOA18C_SHIFT))
#define SCON_GPIOA18C_0                (0x0UL<<SCON_GPIOA18C_SHIFT)
#define SCON_GPIOA17C_SHIFT            2
#define SCON_GPIOA17C_FIELD            (0xFFFFFFFF - (0x3UL<<SCON_GPIOA17C_SHIFT))
#define SCON_GPIOA17C_0                (0x0UL<<SCON_GPIOA17C_SHIFT)
#define SCON_GPIOA16C_SHIFT            0
#define SCON_GPIOA16C_FIELD            (0xFFFFFFFF - (0x3UL<<SCON_GPIOA16C_SHIFT))
#define SCON_GPIOA16C_0                (0x0UL<<SCON_GPIOA16C_SHIFT)

/*****************************************************************************/
/* Register description for SYSMUX2 */

/* Reset value of register SCON_SYSMUX2 */
#define SCON_SYSMUX2_VALUE             0x0

/* Bits definition for register SCON_SYSMUX2 */
#define SCON_GPIOB15C_SHIFT            30
#define SCON_GPIOB15C_FIELD            (0xFFFFFFFF - (0x3UL<<SCON_GPIOB15C_SHIFT))
#define SCON_GPIOB15C_0                (0x0UL<<SCON_GPIOB15C_SHIFT)
#define SCON_GPIOB14C_SHIFT            28
#define SCON_GPIOB14C_FIELD            (0xFFFFFFFF - (0x3UL<<SCON_GPIOB14C_SHIFT))
#define SCON_GPIOB14C_0                (0x0UL<<SCON_GPIOB14C_SHIFT)
#define SCON_GPIOB13C_SHIFT            26
#define SCON_GPIOB13C_FIELD            (0xFFFFFFFF - (0x3UL<<SCON_GPIOB13C_SHIFT))
#define SCON_GPIOB13C_0                (0x0UL<<SCON_GPIOB13C_SHIFT)
#define SCON_GPIOB12C_SHIFT            24
#define SCON_GPIOB12C_FIELD            (0xFFFFFFFF - (0x3UL<<SCON_GPIOB12C_SHIFT))
#define SCON_GPIOB12C_0                (0x0UL<<SCON_GPIOB12C_SHIFT)
#define SCON_GPIOB11C_SHIFT            22
#define SCON_GPIOB11C_FIELD            (0xFFFFFFFF - (0x3UL<<SCON_GPIOB11C_SHIFT))
#define SCON_GPIOB11C_0                (0x0UL<<SCON_GPIOB11C_SHIFT)
#define SCON_GPIOB10C_SHIFT            20
#define SCON_GPIOB10C_FIELD            (0xFFFFFFFF - (0x3UL<<SCON_GPIOB10C_SHIFT))
#define SCON_GPIOB10C_0                (0x0UL<<SCON_GPIOB10C_SHIFT)
#define SCON_GPIOB9C_SHIFT             18
#define SCON_GPIOB9C_FIELD             (0xFFFFFFFF - (0x3UL<<SCON_GPIOB9C_SHIFT))
#define SCON_GPIOB9C_0                 (0x0UL<<SCON_GPIOB9C_SHIFT)
#define SCON_GPIOB8C_SHIFT             16
#define SCON_GPIOB8C_FIELD             (0xFFFFFFFF - (0x3UL<<SCON_GPIOB8C_SHIFT))
#define SCON_GPIOB8C_0                 (0x0UL<<SCON_GPIOB8C_SHIFT)
#define SCON_GPIOB7C_SHIFT             14
#define SCON_GPIOB7C_FIELD             (0xFFFFFFFF - (0x3UL<<SCON_GPIOB7C_SHIFT))
#define SCON_GPIOB7C_0                 (0x0UL<<SCON_GPIOB7C_SHIFT)
#define SCON_GPIOB6C_SHIFT             12
#define SCON_GPIOB6C_FIELD             (0xFFFFFFFF - (0x3UL<<SCON_GPIOB6C_SHIFT))
#define SCON_GPIOB6C_0                 (0x0UL<<SCON_GPIOB6C_SHIFT)
#define SCON_GPIOB5C_SHIFT             10
#define SCON_GPIOB5C_FIELD             (0xFFFFFFFF - (0x3UL<<SCON_GPIOB5C_SHIFT))
#define SCON_GPIOB5C_0                 (0x0UL<<SCON_GPIOB5C_SHIFT)
#define SCON_GPIOB4C_SHIFT             8
#define SCON_GPIOB4C_FIELD             (0xFFFFFFFF - (0x3UL<<SCON_GPIOB4C_SHIFT))
#define SCON_GPIOB4C_0                 (0x0UL<<SCON_GPIOB4C_SHIFT)
#define SCON_GPIOB3C_SHIFT             6
#define SCON_GPIOB3C_FIELD             (0xFFFFFFFF - (0x3UL<<SCON_GPIOB3C_SHIFT))
#define SCON_GPIOB3C_0                 (0x0UL<<SCON_GPIOB3C_SHIFT)
#define SCON_GPIOB2C_SHIFT             4
#define SCON_GPIOB2C_FIELD             (0xFFFFFFFF - (0x3UL<<SCON_GPIOB2C_SHIFT))
#define SCON_GPIOB2C_0                 (0x0UL<<SCON_GPIOB2C_SHIFT)
#define SCON_GPIOB1C_SHIFT             2
#define SCON_GPIOB1C_FIELD             (0xFFFFFFFF - (0x3UL<<SCON_GPIOB1C_SHIFT))
#define SCON_GPIOB1C_0                 (0x0UL<<SCON_GPIOB1C_SHIFT)
#define SCON_GPIOB0C_SHIFT             0
#define SCON_GPIOB0C_FIELD             (0xFFFFFFFF - (0x3UL<<SCON_GPIOB0C_SHIFT))
#define SCON_GPIOB0C_0                 (0x0UL<<SCON_GPIOB0C_SHIFT)

/*****************************************************************************/
/* Register description for SYSMUX3 */

/* Reset value of register SCON_SYSMUX3 */
#define SCON_SYSMUX3_VALUE             0x0

/* Bits definition for register SCON_SYSMUX3 */

/*****************************************************************************/
/* Register description for SYSMUX4 */

/* Reset value of register SCON_SYSMUX4 */
#define SCON_SYSMUX4_VALUE             0x0

/* Bits definition for register SCON_SYSMUX4 */
#define SCON_GPIOC15C_SHIFT            30
#define SCON_GPIOC15C_FIELD            (0xFFFFFFFF - (0x3UL<<SCON_GPIOC15C_SHIFT))
#define SCON_GPIOC15C_0                (0x0UL<<SCON_GPIOC15C_SHIFT)
#define SCON_GPIOC14C_SHIFT            28
#define SCON_GPIOC14C_FIELD            (0xFFFFFFFF - (0x3UL<<SCON_GPIOC14C_SHIFT))
#define SCON_GPIOC14C_0                (0x0UL<<SCON_GPIOC14C_SHIFT)
#define SCON_GPIOC13C_SHIFT            26
#define SCON_GPIOC13C_FIELD            (0xFFFFFFFF - (0x3UL<<SCON_GPIOC13C_SHIFT))
#define SCON_GPIOC13C_0                (0x0UL<<SCON_GPIOC13C_SHIFT)
#define SCON_GPIOC12C_SHIFT            24
#define SCON_GPIOC12C_FIELD            (0xFFFFFFFF - (0x3UL<<SCON_GPIOC12C_SHIFT))
#define SCON_GPIOC12C_0                (0x0UL<<SCON_GPIOC12C_SHIFT)
#define SCON_GPIOC11C_SHIFT            22
#define SCON_GPIOC11C_FIELD            (0xFFFFFFFF - (0x3UL<<SCON_GPIOC11C_SHIFT))
#define SCON_GPIOC11C_0                (0x0UL<<SCON_GPIOC11C_SHIFT)
#define SCON_GPIOC10C_SHIFT            20
#define SCON_GPIOC10C_FIELD            (0xFFFFFFFF - (0x3UL<<SCON_GPIOC10C_SHIFT))
#define SCON_GPIOC10C_0                (0x0UL<<SCON_GPIOC10C_SHIFT)
#define SCON_GPIOC9C_SHIFT             18
#define SCON_GPIOC9C_FIELD             (0xFFFFFFFF - (0x3UL<<SCON_GPIOC9C_SHIFT))
#define SCON_GPIOC9C_0                 (0x0UL<<SCON_GPIOC9C_SHIFT)
#define SCON_GPIOC8C_SHIFT             16
#define SCON_GPIOC8C_FIELD             (0xFFFFFFFF - (0x3UL<<SCON_GPIOC8C_SHIFT))
#define SCON_GPIOC8C_0                 (0x0UL<<SCON_GPIOC8C_SHIFT)
#define SCON_GPIOC7C_SHIFT             14
#define SCON_GPIOC7C_FIELD             (0xFFFFFFFF - (0x3UL<<SCON_GPIOC7C_SHIFT))
#define SCON_GPIOC7C_0                 (0x0UL<<SCON_GPIOC7C_SHIFT)
#define SCON_GPIOC6C_SHIFT             12
#define SCON_GPIOC6C_FIELD             (0xFFFFFFFF - (0x3UL<<SCON_GPIOC6C_SHIFT))
#define SCON_GPIOC6C_0                 (0x0UL<<SCON_GPIOC6C_SHIFT)
#define SCON_GPIOC5C_SHIFT             10
#define SCON_GPIOC5C_FIELD             (0xFFFFFFFF - (0x3UL<<SCON_GPIOC5C_SHIFT))
#define SCON_GPIOC5C_0                 (0x0UL<<SCON_GPIOC5C_SHIFT)
#define SCON_GPIOC4C_SHIFT             8
#define SCON_GPIOC4C_FIELD             (0xFFFFFFFF - (0x3UL<<SCON_GPIOC4C_SHIFT))
#define SCON_GPIOC4C_0                 (0x0UL<<SCON_GPIOC4C_SHIFT)
#define SCON_GPIOC3C_SHIFT             6
#define SCON_GPIOC3C_FIELD             (0xFFFFFFFF - (0x3UL<<SCON_GPIOC3C_SHIFT))
#define SCON_GPIOC3C_0                 (0x0UL<<SCON_GPIOC3C_SHIFT)
#define SCON_GPIOC2C_SHIFT             4
#define SCON_GPIOC2C_FIELD             (0xFFFFFFFF - (0x3UL<<SCON_GPIOC2C_SHIFT))
#define SCON_GPIOC2C_0                 (0x0UL<<SCON_GPIOC2C_SHIFT)
#define SCON_GPIOC1C_SHIFT             2
#define SCON_GPIOC1C_FIELD             (0xFFFFFFFF - (0x3UL<<SCON_GPIOC1C_SHIFT))
#define SCON_GPIOC1C_0                 (0x0UL<<SCON_GPIOC1C_SHIFT)
#define SCON_GPIOC0C_SHIFT             0
#define SCON_GPIOC0C_FIELD             (0xFFFFFFFF - (0x3UL<<SCON_GPIOC0C_SHIFT))
#define SCON_GPIOC0C_0                 (0x0UL<<SCON_GPIOC0C_SHIFT)

/*****************************************************************************/
/* Register description for SYSMUX5 */

/* Reset value of register SCON_SYSMUX5 */
#define SCON_SYSMUX5_VALUE             0x0

/* Bits definition for register SCON_SYSMUX5 */
#define SCON_GPIOC31C_SHIFT            30
#define SCON_GPIOC31C_FIELD            (0xFFFFFFFF - (0x3UL<<SCON_GPIOC31C_SHIFT))
#define SCON_GPIOC31C_0                (0x0UL<<SCON_GPIOC31C_SHIFT)
#define SCON_GPIOC30C_SHIFT            28
#define SCON_GPIOC30C_FIELD            (0xFFFFFFFF - (0x3UL<<SCON_GPIOC30C_SHIFT))
#define SCON_GPIOC30C_0                (0x0UL<<SCON_GPIOC30C_SHIFT)
#define SCON_GPIOC29C_SHIFT            26
#define SCON_GPIOC29C_FIELD            (0xFFFFFFFF - (0x3UL<<SCON_GPIOC29C_SHIFT))
#define SCON_GPIOC29C_0                (0x0UL<<SCON_GPIOC29C_SHIFT)
#define SCON_GPIOC28C_SHIFT            24
#define SCON_GPIOC28C_FIELD            (0xFFFFFFFF - (0x3UL<<SCON_GPIOC28C_SHIFT))
#define SCON_GPIOC28C_0                (0x0UL<<SCON_GPIOC28C_SHIFT)
#define SCON_GPIOC27C_SHIFT            22
#define SCON_GPIOC27C_FIELD            (0xFFFFFFFF - (0x3UL<<SCON_GPIOC27C_SHIFT))
#define SCON_GPIOC27C_0                (0x0UL<<SCON_GPIOC27C_SHIFT)
#define SCON_GPIOC26C_SHIFT            20
#define SCON_GPIOC26C_FIELD            (0xFFFFFFFF - (0x3UL<<SCON_GPIOC26C_SHIFT))
#define SCON_GPIOC26C_0                (0x0UL<<SCON_GPIOC26C_SHIFT)
#define SCON_GPIOC25C_SHIFT            18
#define SCON_GPIOC25C_FIELD            (0xFFFFFFFF - (0x3UL<<SCON_GPIOC25C_SHIFT))
#define SCON_GPIOC25C_0                (0x0UL<<SCON_GPIOC25C_SHIFT)
#define SCON_GPIOC24C_SHIFT            16
#define SCON_GPIOC24C_FIELD            (0xFFFFFFFF - (0x3UL<<SCON_GPIOC24C_SHIFT))
#define SCON_GPIOC24C_0                (0x0UL<<SCON_GPIOC24C_SHIFT)
#define SCON_GPIOC23C_SHIFT            14
#define SCON_GPIOC23C_FIELD            (0xFFFFFFFF - (0x3UL<<SCON_GPIOC23C_SHIFT))
#define SCON_GPIOC23C_0                (0x0UL<<SCON_GPIOC23C_SHIFT)
#define SCON_GPIOC22C_SHIFT            12
#define SCON_GPIOC22C_FIELD            (0xFFFFFFFF - (0x3UL<<SCON_GPIOC22C_SHIFT))
#define SCON_GPIOC22C_0                (0x0UL<<SCON_GPIOC22C_SHIFT)
#define SCON_GPIOC21C_SHIFT            10
#define SCON_GPIOC21C_FIELD            (0xFFFFFFFF - (0x3UL<<SCON_GPIOC21C_SHIFT))
#define SCON_GPIOC21C_0                (0x0UL<<SCON_GPIOC21C_SHIFT)
#define SCON_GPIOC20C_SHIFT            8
#define SCON_GPIOC20C_FIELD            (0xFFFFFFFF - (0x3UL<<SCON_GPIOC20C_SHIFT))
#define SCON_GPIOC20C_0                (0x0UL<<SCON_GPIOC20C_SHIFT)
#define SCON_GPIOC19C_SHIFT            6
#define SCON_GPIOC19C_FIELD            (0xFFFFFFFF - (0x3UL<<SCON_GPIOC19C_SHIFT))
#define SCON_GPIOC19C_0                (0x0UL<<SCON_GPIOC19C_SHIFT)
#define SCON_GPIOC18C_SHIFT            4
#define SCON_GPIOC18C_FIELD            (0xFFFFFFFF - (0x3UL<<SCON_GPIOC18C_SHIFT))
#define SCON_GPIOC18C_0                (0x0UL<<SCON_GPIOC18C_SHIFT)
#define SCON_GPIOC17C_SHIFT            2
#define SCON_GPIOC17C_FIELD            (0xFFFFFFFF - (0x3UL<<SCON_GPIOC17C_SHIFT))
#define SCON_GPIOC17C_0                (0x0UL<<SCON_GPIOC17C_SHIFT)
#define SCON_GPIOC16C_SHIFT            0
#define SCON_GPIOC16C_FIELD            (0xFFFFFFFF - (0x3UL<<SCON_GPIOC16C_SHIFT))
#define SCON_GPIOC16C_0                (0x0UL<<SCON_GPIOC16C_SHIFT)

/*****************************************************************************/
/* Register description for SYSMUX6 */

/* Reset value of register SCON_SYSMUX6 */
#define SCON_SYSMUX6_VALUE             0x0

/* Bits definition for register SCON_SYSMUX6 */
#define SCON_GPIOD15C_SHIFT            30
#define SCON_GPIOD15C_FIELD            (0xFFFFFFFF - (0x3UL<<SCON_GPIOD15C_SHIFT))
#define SCON_GPIOD15C_0                (0x0UL<<SCON_GPIOD15C_SHIFT)
#define SCON_GPIOD14C_SHIFT            28
#define SCON_GPIOD14C_FIELD            (0xFFFFFFFF - (0x3UL<<SCON_GPIOD14C_SHIFT))
#define SCON_GPIOD14C_0                (0x0UL<<SCON_GPIOD14C_SHIFT)
#define SCON_GPIOD13C_SHIFT            26
#define SCON_GPIOD13C_FIELD            (0xFFFFFFFF - (0x3UL<<SCON_GPIOD13C_SHIFT))
#define SCON_GPIOD13C_0                (0x0UL<<SCON_GPIOD13C_SHIFT)
#define SCON_GPIOD12C_SHIFT            24
#define SCON_GPIOD12C_FIELD            (0xFFFFFFFF - (0x3UL<<SCON_GPIOD12C_SHIFT))
#define SCON_GPIOD12C_0                (0x0UL<<SCON_GPIOD12C_SHIFT)
#define SCON_GPIOD11C_SHIFT            22
#define SCON_GPIOD11C_FIELD            (0xFFFFFFFF - (0x3UL<<SCON_GPIOD11C_SHIFT))
#define SCON_GPIOD11C_0                (0x0UL<<SCON_GPIOD11C_SHIFT)
#define SCON_GPIOD10C_SHIFT            20
#define SCON_GPIOD10C_FIELD            (0xFFFFFFFF - (0x3UL<<SCON_GPIOD10C_SHIFT))
#define SCON_GPIOD10C_0                (0x0UL<<SCON_GPIOD10C_SHIFT)
#define SCON_GPIOD9C_SHIFT             18
#define SCON_GPIOD9C_FIELD             (0xFFFFFFFF - (0x3UL<<SCON_GPIOD9C_SHIFT))
#define SCON_GPIOD9C_0                 (0x0UL<<SCON_GPIOD9C_SHIFT)
#define SCON_GPIOD8C_SHIFT             16
#define SCON_GPIOD8C_FIELD             (0xFFFFFFFF - (0x3UL<<SCON_GPIOD8C_SHIFT))
#define SCON_GPIOD8C_0                 (0x0UL<<SCON_GPIOD8C_SHIFT)
#define SCON_GPIOD7C_SHIFT             14
#define SCON_GPIOD7C_FIELD             (0xFFFFFFFF - (0x3UL<<SCON_GPIOD7C_SHIFT))
#define SCON_GPIOD7C_0                 (0x0UL<<SCON_GPIOD7C_SHIFT)
#define SCON_GPIOD6C_SHIFT             12
#define SCON_GPIOD6C_FIELD             (0xFFFFFFFF - (0x3UL<<SCON_GPIOD6C_SHIFT))
#define SCON_GPIOD6C_0                 (0x0UL<<SCON_GPIOD6C_SHIFT)
#define SCON_GPIOD5C_SHIFT             10
#define SCON_GPIOD5C_FIELD             (0xFFFFFFFF - (0x3UL<<SCON_GPIOD5C_SHIFT))
#define SCON_GPIOD5C_0                 (0x0UL<<SCON_GPIOD5C_SHIFT)
#define SCON_GPIOD4C_SHIFT             8
#define SCON_GPIOD4C_FIELD             (0xFFFFFFFF - (0x3UL<<SCON_GPIOD4C_SHIFT))
#define SCON_GPIOD4C_0                 (0x0UL<<SCON_GPIOD4C_SHIFT)
#define SCON_GPIOD3C_SHIFT             6
#define SCON_GPIOD3C_FIELD             (0xFFFFFFFF - (0x3UL<<SCON_GPIOD3C_SHIFT))
#define SCON_GPIOD3C_0                 (0x0UL<<SCON_GPIOD3C_SHIFT)
#define SCON_GPIOD2C_SHIFT             4
#define SCON_GPIOD2C_FIELD             (0xFFFFFFFF - (0x3UL<<SCON_GPIOD2C_SHIFT))
#define SCON_GPIOD2C_0                 (0x0UL<<SCON_GPIOD2C_SHIFT)
#define SCON_GPIOD1C_SHIFT             2
#define SCON_GPIOD1C_FIELD             (0xFFFFFFFF - (0x3UL<<SCON_GPIOD1C_SHIFT))
#define SCON_GPIOD1C_0                 (0x0UL<<SCON_GPIOD1C_SHIFT)
#define SCON_GPIOD0C_SHIFT             0
#define SCON_GPIOD0C_FIELD             (0xFFFFFFFF - (0x3UL<<SCON_GPIOD0C_SHIFT))
#define SCON_GPIOD0C_0                 (0x0UL<<SCON_GPIOD0C_SHIFT)

/*****************************************************************************/
/* Register description for SYSMUX7 */

/* Reset value of register SCON_SYSMUX7 */
#define SCON_SYSMUX7_VALUE             0x0

/* Bits definition for register SCON_SYSMUX7 */
#define SCON_GPIOD31C_SHIFT            30
#define SCON_GPIOD31C_FIELD            (0xFFFFFFFF - (0x3UL<<SCON_GPIOD31C_SHIFT))
#define SCON_GPIOD31C_0                (0x0UL<<SCON_GPIOD31C_SHIFT)
#define SCON_GPIOD30C_SHIFT            28
#define SCON_GPIOD30C_FIELD            (0xFFFFFFFF - (0x3UL<<SCON_GPIOD30C_SHIFT))
#define SCON_GPIOD30C_0                (0x0UL<<SCON_GPIOD30C_SHIFT)
#define SCON_GPIOD29C_SHIFT            26
#define SCON_GPIOD29C_FIELD            (0xFFFFFFFF - (0x3UL<<SCON_GPIOD29C_SHIFT))
#define SCON_GPIOD29C_0                (0x0UL<<SCON_GPIOD29C_SHIFT)
#define SCON_GPIOD28C_SHIFT            24
#define SCON_GPIOD28C_FIELD            (0xFFFFFFFF - (0x3UL<<SCON_GPIOD28C_SHIFT))
#define SCON_GPIOD28C_0                (0x0UL<<SCON_GPIOD28C_SHIFT)
#define SCON_GPIOD27C_SHIFT            22
#define SCON_GPIOD27C_FIELD            (0xFFFFFFFF - (0x3UL<<SCON_GPIOD27C_SHIFT))
#define SCON_GPIOD27C_0                (0x0UL<<SCON_GPIOD27C_SHIFT)
#define SCON_GPIOD26C_SHIFT            20
#define SCON_GPIOD26C_FIELD            (0xFFFFFFFF - (0x3UL<<SCON_GPIOD26C_SHIFT))
#define SCON_GPIOD26C_0                (0x0UL<<SCON_GPIOD26C_SHIFT)
#define SCON_GPIOD25C_SHIFT            18
#define SCON_GPIOD25C_FIELD            (0xFFFFFFFF - (0x3UL<<SCON_GPIOD25C_SHIFT))
#define SCON_GPIOD25C_0                (0x0UL<<SCON_GPIOD25C_SHIFT)
#define SCON_GPIOD24C_SHIFT            16
#define SCON_GPIOD24C_FIELD            (0xFFFFFFFF - (0x3UL<<SCON_GPIOD24C_SHIFT))
#define SCON_GPIOD24C_0                (0x0UL<<SCON_GPIOD24C_SHIFT)
#define SCON_GPIOD23C_SHIFT            14
#define SCON_GPIOD23C_FIELD            (0xFFFFFFFF - (0x3UL<<SCON_GPIOD23C_SHIFT))
#define SCON_GPIOD23C_0                (0x0UL<<SCON_GPIOD23C_SHIFT)
#define SCON_GPIOD22C_SHIFT            12
#define SCON_GPIOD22C_FIELD            (0xFFFFFFFF - (0x3UL<<SCON_GPIOD22C_SHIFT))
#define SCON_GPIOD22C_0                (0x0UL<<SCON_GPIOD22C_SHIFT)
#define SCON_GPIOD21C_SHIFT            10
#define SCON_GPIOD21C_FIELD            (0xFFFFFFFF - (0x3UL<<SCON_GPIOD21C_SHIFT))
#define SCON_GPIOD21C_0                (0x0UL<<SCON_GPIOD21C_SHIFT)
#define SCON_GPIOD20C_SHIFT            8
#define SCON_GPIOD20C_FIELD            (0xFFFFFFFF - (0x3UL<<SCON_GPIOD20C_SHIFT))
#define SCON_GPIOD20C_0                (0x0UL<<SCON_GPIOD20C_SHIFT)
#define SCON_GPIOD19C_SHIFT            6
#define SCON_GPIOD19C_FIELD            (0xFFFFFFFF - (0x3UL<<SCON_GPIOD19C_SHIFT))
#define SCON_GPIOD19C_0                (0x0UL<<SCON_GPIOD19C_SHIFT)
#define SCON_GPIOD18C_SHIFT            4
#define SCON_GPIOD18C_FIELD            (0xFFFFFFFF - (0x3UL<<SCON_GPIOD18C_SHIFT))
#define SCON_GPIOD18C_0                (0x0UL<<SCON_GPIOD18C_SHIFT)
#define SCON_GPIOD17C_SHIFT            2
#define SCON_GPIOD17C_FIELD            (0xFFFFFFFF - (0x3UL<<SCON_GPIOD17C_SHIFT))
#define SCON_GPIOD17C_0                (0x0UL<<SCON_GPIOD17C_SHIFT)
#define SCON_GPIOD16C_SHIFT            0
#define SCON_GPIOD16C_FIELD            (0xFFFFFFFF - (0x3UL<<SCON_GPIOD16C_SHIFT))
#define SCON_GPIOD16C_0                (0x0UL<<SCON_GPIOD16C_SHIFT)

/*****************************************************************************/
/* Register description for SYSMUX8 */

/* Reset value of register SCON_SYSMUX8 */
#define SCON_SYSMUX8_VALUE             0x0

/* Bits definition for register SCON_SYSMUX8 */
#define SCON_GPIOE15C_SHIFT            30
#define SCON_GPIOE15C_FIELD            (0xFFFFFFFF - (0x3UL<<SCON_GPIOE15C_SHIFT))
#define SCON_GPIOE15C_0                (0x0UL<<SCON_GPIOE15C_SHIFT)
#define SCON_GPIOE14C_SHIFT            28
#define SCON_GPIOE14C_FIELD            (0xFFFFFFFF - (0x3UL<<SCON_GPIOE14C_SHIFT))
#define SCON_GPIOE14C_0                (0x0UL<<SCON_GPIOE14C_SHIFT)
#define SCON_GPIOE13C_SHIFT            26
#define SCON_GPIOE13C_FIELD            (0xFFFFFFFF - (0x3UL<<SCON_GPIOE13C_SHIFT))
#define SCON_GPIOE13C_0                (0x0UL<<SCON_GPIOE13C_SHIFT)
#define SCON_GPIOE12C_SHIFT            24
#define SCON_GPIOE12C_FIELD            (0xFFFFFFFF - (0x3UL<<SCON_GPIOE12C_SHIFT))
#define SCON_GPIOE12C_0                (0x0UL<<SCON_GPIOE12C_SHIFT)
#define SCON_GPIOE11C_SHIFT            22
#define SCON_GPIOE11C_FIELD            (0xFFFFFFFF - (0x3UL<<SCON_GPIOE11C_SHIFT))
#define SCON_GPIOE11C_0                (0x0UL<<SCON_GPIOE11C_SHIFT)
#define SCON_GPIOE10C_SHIFT            20
#define SCON_GPIOE10C_FIELD            (0xFFFFFFFF - (0x3UL<<SCON_GPIOE10C_SHIFT))
#define SCON_GPIOE10C_0                (0x0UL<<SCON_GPIOE10C_SHIFT)
#define SCON_GPIOE9C_SHIFT             18
#define SCON_GPIOE9C_FIELD             (0xFFFFFFFF - (0x3UL<<SCON_GPIOE9C_SHIFT))
#define SCON_GPIOE9C_0                 (0x0UL<<SCON_GPIOE9C_SHIFT)
#define SCON_GPIOE8C_SHIFT             16
#define SCON_GPIOE8C_FIELD             (0xFFFFFFFF - (0x3UL<<SCON_GPIOE8C_SHIFT))
#define SCON_GPIOE8C_0                 (0x0UL<<SCON_GPIOE8C_SHIFT)
#define SCON_GPIOE7C_SHIFT             14
#define SCON_GPIOE7C_FIELD             (0xFFFFFFFF - (0x3UL<<SCON_GPIOE7C_SHIFT))
#define SCON_GPIOE7C_0                 (0x0UL<<SCON_GPIOE7C_SHIFT)
#define SCON_GPIOE6C_SHIFT             12
#define SCON_GPIOE6C_FIELD             (0xFFFFFFFF - (0x3UL<<SCON_GPIOE6C_SHIFT))
#define SCON_GPIOE6C_0                 (0x0UL<<SCON_GPIOE6C_SHIFT)
#define SCON_GPIOE5C_SHIFT             10
#define SCON_GPIOE5C_FIELD             (0xFFFFFFFF - (0x3UL<<SCON_GPIOE5C_SHIFT))
#define SCON_GPIOE5C_0                 (0x0UL<<SCON_GPIOE5C_SHIFT)
#define SCON_GPIOE4C_SHIFT             8
#define SCON_GPIOE4C_FIELD             (0xFFFFFFFF - (0x3UL<<SCON_GPIOE4C_SHIFT))
#define SCON_GPIOE4C_0                 (0x0UL<<SCON_GPIOE4C_SHIFT)
#define SCON_GPIOE3C_SHIFT             6
#define SCON_GPIOE3C_FIELD             (0xFFFFFFFF - (0x3UL<<SCON_GPIOE3C_SHIFT))
#define SCON_GPIOE3C_0                 (0x0UL<<SCON_GPIOE3C_SHIFT)
#define SCON_GPIOE2C_SHIFT             4
#define SCON_GPIOE2C_FIELD             (0xFFFFFFFF - (0x3UL<<SCON_GPIOE2C_SHIFT))
#define SCON_GPIOE2C_0                 (0x0UL<<SCON_GPIOE2C_SHIFT)
#define SCON_GPIOE1C_SHIFT             2
#define SCON_GPIOE1C_FIELD             (0xFFFFFFFF - (0x3UL<<SCON_GPIOE1C_SHIFT))
#define SCON_GPIOE1C_0                 (0x0UL<<SCON_GPIOE1C_SHIFT)
#define SCON_GPIOE0C_SHIFT             0
#define SCON_GPIOE0C_FIELD             (0xFFFFFFFF - (0x3UL<<SCON_GPIOE0C_SHIFT))
#define SCON_GPIOE0C_0                 (0x0UL<<SCON_GPIOE0C_SHIFT)

/*****************************************************************************/
/* Register description for SYSMUX9 */

/* Reset value of register SCON_SYSMUX9 */
#define SCON_SYSMUX9_VALUE             0x0

/* Bits definition for register SCON_SYSMUX9 */
#define SCON_GPIOE31C_SHIFT            30
#define SCON_GPIOE31C_FIELD            (0xFFFFFFFF - (0x3UL<<SCON_GPIOE31C_SHIFT))
#define SCON_GPIOE31C_0                (0x0UL<<SCON_GPIOE31C_SHIFT)
#define SCON_GPIOE30C_SHIFT            28
#define SCON_GPIOE30C_FIELD            (0xFFFFFFFF - (0x3UL<<SCON_GPIOE30C_SHIFT))
#define SCON_GPIOE30C_0                (0x0UL<<SCON_GPIOE30C_SHIFT)
#define SCON_GPIOE29C_SHIFT            26
#define SCON_GPIOE29C_FIELD            (0xFFFFFFFF - (0x3UL<<SCON_GPIOE29C_SHIFT))
#define SCON_GPIOE29C_0                (0x0UL<<SCON_GPIOE29C_SHIFT)
#define SCON_GPIOE28C_SHIFT            24
#define SCON_GPIOE28C_FIELD            (0xFFFFFFFF - (0x3UL<<SCON_GPIOE28C_SHIFT))
#define SCON_GPIOE28C_0                (0x0UL<<SCON_GPIOE28C_SHIFT)
#define SCON_GPIOE27C_SHIFT            22
#define SCON_GPIOE27C_FIELD            (0xFFFFFFFF - (0x3UL<<SCON_GPIOE27C_SHIFT))
#define SCON_GPIOE27C_0                (0x0UL<<SCON_GPIOE27C_SHIFT)
#define SCON_GPIOE26C_SHIFT            20
#define SCON_GPIOE26C_FIELD            (0xFFFFFFFF - (0x3UL<<SCON_GPIOE26C_SHIFT))
#define SCON_GPIOE26C_0                (0x0UL<<SCON_GPIOE26C_SHIFT)
#define SCON_GPIOE25C_SHIFT            18
#define SCON_GPIOE25C_FIELD            (0xFFFFFFFF - (0x3UL<<SCON_GPIOE25C_SHIFT))
#define SCON_GPIOE25C_0                (0x0UL<<SCON_GPIOE25C_SHIFT)
#define SCON_GPIOE24C_SHIFT            16
#define SCON_GPIOE24C_FIELD            (0xFFFFFFFF - (0x3UL<<SCON_GPIOE24C_SHIFT))
#define SCON_GPIOE24C_0                (0x0UL<<SCON_GPIOE24C_SHIFT)
#define SCON_GPIOE23C_SHIFT            14
#define SCON_GPIOE23C_FIELD            (0xFFFFFFFF - (0x3UL<<SCON_GPIOE23C_SHIFT))
#define SCON_GPIOE23C_0                (0x0UL<<SCON_GPIOE23C_SHIFT)
#define SCON_GPIOE22C_SHIFT            12
#define SCON_GPIOE22C_FIELD            (0xFFFFFFFF - (0x3UL<<SCON_GPIOE22C_SHIFT))
#define SCON_GPIOE22C_0                (0x0UL<<SCON_GPIOE22C_SHIFT)
#define SCON_GPIOE21C_SHIFT            10
#define SCON_GPIOE21C_FIELD            (0xFFFFFFFF - (0x3UL<<SCON_GPIOE21C_SHIFT))
#define SCON_GPIOE21C_0                (0x0UL<<SCON_GPIOE21C_SHIFT)
#define SCON_GPIOE20C_SHIFT            8
#define SCON_GPIOE20C_FIELD            (0xFFFFFFFF - (0x3UL<<SCON_GPIOE20C_SHIFT))
#define SCON_GPIOE20C_0                (0x0UL<<SCON_GPIOE20C_SHIFT)
#define SCON_GPIOE19C_SHIFT            6
#define SCON_GPIOE19C_FIELD            (0xFFFFFFFF - (0x3UL<<SCON_GPIOE19C_SHIFT))
#define SCON_GPIOE19C_0                (0x0UL<<SCON_GPIOE19C_SHIFT)
#define SCON_GPIOE18C_SHIFT            4
#define SCON_GPIOE18C_FIELD            (0xFFFFFFFF - (0x3UL<<SCON_GPIOE18C_SHIFT))
#define SCON_GPIOE18C_0                (0x0UL<<SCON_GPIOE18C_SHIFT)
#define SCON_GPIOE17C_SHIFT            2
#define SCON_GPIOE17C_FIELD            (0xFFFFFFFF - (0x3UL<<SCON_GPIOE17C_SHIFT))
#define SCON_GPIOE17C_0                (0x0UL<<SCON_GPIOE17C_SHIFT)
#define SCON_GPIOE16C_SHIFT            0
#define SCON_GPIOE16C_FIELD            (0xFFFFFFFF - (0x3UL<<SCON_GPIOE16C_SHIFT))
#define SCON_GPIOE16C_0                (0x0UL<<SCON_GPIOE16C_SHIFT)

/*****************************************************************************/
/* Register description for SYSMUX10 */

/* Reset value of register SCON_SYSMUX10 */
#define SCON_SYSMUX10_VALUE            0x0

/* Bits definition for register SCON_SYSMUX10 */
#define SCON_GPIOF15C_SHIFT            30
#define SCON_GPIOF15C_FIELD            (0xFFFFFFFF - (0x3UL<<SCON_GPIOF15C_SHIFT))
#define SCON_GPIOF15C_0                (0x0UL<<SCON_GPIOF15C_SHIFT)
#define SCON_GPIOF14C_SHIFT            28
#define SCON_GPIOF14C_FIELD            (0xFFFFFFFF - (0x3UL<<SCON_GPIOF14C_SHIFT))
#define SCON_GPIOF14C_0                (0x0UL<<SCON_GPIOF14C_SHIFT)
#define SCON_GPIOF13C_SHIFT            26
#define SCON_GPIOF13C_FIELD            (0xFFFFFFFF - (0x3UL<<SCON_GPIOF13C_SHIFT))
#define SCON_GPIOF13C_0                (0x0UL<<SCON_GPIOF13C_SHIFT)
#define SCON_GPIOF12C_SHIFT            24
#define SCON_GPIOF12C_FIELD            (0xFFFFFFFF - (0x3UL<<SCON_GPIOF12C_SHIFT))
#define SCON_GPIOF12C_0                (0x0UL<<SCON_GPIOF12C_SHIFT)
#define SCON_GPIOF11C_SHIFT            22
#define SCON_GPIOF11C_FIELD            (0xFFFFFFFF - (0x3UL<<SCON_GPIOF11C_SHIFT))
#define SCON_GPIOF11C_0                (0x0UL<<SCON_GPIOF11C_SHIFT)
#define SCON_GPIOF10C_SHIFT            20
#define SCON_GPIOF10C_FIELD            (0xFFFFFFFF - (0x3UL<<SCON_GPIOF10C_SHIFT))
#define SCON_GPIOF10C_0                (0x0UL<<SCON_GPIOF10C_SHIFT)
#define SCON_GPIOF9C_SHIFT             18
#define SCON_GPIOF9C_FIELD             (0xFFFFFFFF - (0x3UL<<SCON_GPIOF9C_SHIFT))
#define SCON_GPIOF9C_0                 (0x0UL<<SCON_GPIOF9C_SHIFT)
#define SCON_GPIOF8C_SHIFT             16
#define SCON_GPIOF8C_FIELD             (0xFFFFFFFF - (0x3UL<<SCON_GPIOF8C_SHIFT))
#define SCON_GPIOF8C_0                 (0x0UL<<SCON_GPIOF8C_SHIFT)
#define SCON_GPIOF7C_SHIFT             14
#define SCON_GPIOF7C_FIELD             (0xFFFFFFFF - (0x3UL<<SCON_GPIOF7C_SHIFT))
#define SCON_GPIOF7C_0                 (0x0UL<<SCON_GPIOF7C_SHIFT)
#define SCON_GPIOF6C_SHIFT             12
#define SCON_GPIOF6C_FIELD             (0xFFFFFFFF - (0x3UL<<SCON_GPIOF6C_SHIFT))
#define SCON_GPIOF6C_0                 (0x0UL<<SCON_GPIOF6C_SHIFT)
#define SCON_GPIOF5C_SHIFT             10
#define SCON_GPIOF5C_FIELD             (0xFFFFFFFF - (0x3UL<<SCON_GPIOF5C_SHIFT))
#define SCON_GPIOF5C_0                 (0x0UL<<SCON_GPIOF5C_SHIFT)
#define SCON_GPIOF4C_SHIFT             8
#define SCON_GPIOF4C_FIELD             (0xFFFFFFFF - (0x3UL<<SCON_GPIOF4C_SHIFT))
#define SCON_GPIOF4C_0                 (0x0UL<<SCON_GPIOF4C_SHIFT)
#define SCON_GPIOF3C_SHIFT             6
#define SCON_GPIOF3C_FIELD             (0xFFFFFFFF - (0x3UL<<SCON_GPIOF3C_SHIFT))
#define SCON_GPIOF3C_0                 (0x0UL<<SCON_GPIOF3C_SHIFT)
#define SCON_GPIOF2C_SHIFT             4
#define SCON_GPIOF2C_FIELD             (0xFFFFFFFF - (0x3UL<<SCON_GPIOF2C_SHIFT))
#define SCON_GPIOF2C_0                 (0x0UL<<SCON_GPIOF2C_SHIFT)
#define SCON_GPIOF1C_SHIFT             2
#define SCON_GPIOF1C_FIELD             (0xFFFFFFFF - (0x3UL<<SCON_GPIOF1C_SHIFT))
#define SCON_GPIOF1C_0                 (0x0UL<<SCON_GPIOF1C_SHIFT)
#define SCON_GPIOF0C_SHIFT             0
#define SCON_GPIOF0C_FIELD             (0xFFFFFFFF - (0x3UL<<SCON_GPIOF0C_SHIFT))
#define SCON_GPIOF0C_0                 (0x0UL<<SCON_GPIOF0C_SHIFT)

/*****************************************************************************/
/* Register description for SYSMUX11 */

/* Reset value of register SCON_SYSMUX11 */
#define SCON_SYSMUX11_VALUE            0x0

/* Bits definition for register SCON_SYSMUX11 */
#define SCON_GPIOF18C_SHIFT            4
#define SCON_GPIOF18C_FIELD            (0xFFFFFFFF - (0x3UL<<SCON_GPIOF18C_SHIFT))
#define SCON_GPIOF18C_0                (0x0UL<<SCON_GPIOF18C_SHIFT)
#define SCON_GPIOF17C_SHIFT            2
#define SCON_GPIOF17C_FIELD            (0xFFFFFFFF - (0x3UL<<SCON_GPIOF17C_SHIFT))
#define SCON_GPIOF17C_0                (0x0UL<<SCON_GPIOF17C_SHIFT)
#define SCON_GPIOF16C_SHIFT            0
#define SCON_GPIOF16C_FIELD            (0xFFFFFFFF - (0x3UL<<SCON_GPIOF16C_SHIFT))
#define SCON_GPIOF16C_0                (0x0UL<<SCON_GPIOF16C_SHIFT)

/*****************************************************************************/
/* Register description for SYSPAD0 */

/* Reset value of register SCON_SYSPAD0 */
#define SCON_SYSPAD0_VALUE             0x55555555

/* Bits definition for register SCON_SYSPAD0 */
#define SCON_GPIOA15P_SHIFT            30
#define SCON_GPIOA15P_FIELD            (0xFFFFFFFF - (0x3UL<<SCON_GPIOA15P_SHIFT))
#define SCON_GPIOA15P_PULLUP           (0x0UL<<SCON_GPIOA15P_SHIFT)
#define SCON_GPIOA15P_REPEATER         (0x1UL<<SCON_GPIOA15P_SHIFT)
#define SCON_GPIOA15P_PLAIN            (0x2UL<<SCON_GPIOA15P_SHIFT)
#define SCON_GPIOA15P_PULLDOWN         (0x3UL<<SCON_GPIOA15P_SHIFT)
#define SCON_GPIOA14P_SHIFT            28
#define SCON_GPIOA14P_FIELD            (0xFFFFFFFF - (0x3UL<<SCON_GPIOA14P_SHIFT))
#define SCON_GPIOA14P_1                (0x1UL<<SCON_GPIOA14P_SHIFT)
#define SCON_GPIOA13P_SHIFT            26
#define SCON_GPIOA13P_FIELD            (0xFFFFFFFF - (0x3UL<<SCON_GPIOA13P_SHIFT))
#define SCON_GPIOA13P_1                (0x1UL<<SCON_GPIOA13P_SHIFT)
#define SCON_GPIOA12P_SHIFT            24
#define SCON_GPIOA12P_FIELD            (0xFFFFFFFF - (0x3UL<<SCON_GPIOA12P_SHIFT))
#define SCON_GPIOA12P_1                (0x1UL<<SCON_GPIOA12P_SHIFT)
#define SCON_GPIOA11P_SHIFT            22
#define SCON_GPIOA11P_FIELD            (0xFFFFFFFF - (0x3UL<<SCON_GPIOA11P_SHIFT))
#define SCON_GPIOA11P_1                (0x1UL<<SCON_GPIOA11P_SHIFT)
#define SCON_GPIOA10P_SHIFT            20
#define SCON_GPIOA10P_FIELD            (0xFFFFFFFF - (0x3UL<<SCON_GPIOA10P_SHIFT))
#define SCON_GPIOA10P_1                (0x1UL<<SCON_GPIOA10P_SHIFT)
#define SCON_GPIOA9P_SHIFT             18
#define SCON_GPIOA9P_FIELD             (0xFFFFFFFF - (0x3UL<<SCON_GPIOA9P_SHIFT))
#define SCON_GPIOA9P_1                 (0x1UL<<SCON_GPIOA9P_SHIFT)
#define SCON_GPIOA8P_SHIFT             16
#define SCON_GPIOA8P_FIELD             (0xFFFFFFFF - (0x3UL<<SCON_GPIOA8P_SHIFT))
#define SCON_GPIOA8P_1                 (0x1UL<<SCON_GPIOA8P_SHIFT)
#define SCON_GPIOA7P_SHIFT             14
#define SCON_GPIOA7P_FIELD             (0xFFFFFFFF - (0x3UL<<SCON_GPIOA7P_SHIFT))
#define SCON_GPIOA7P_1                 (0x1UL<<SCON_GPIOA7P_SHIFT)
#define SCON_GPIOA6P_SHIFT             12
#define SCON_GPIOA6P_FIELD             (0xFFFFFFFF - (0x3UL<<SCON_GPIOA6P_SHIFT))
#define SCON_GPIOA6P_1                 (0x1UL<<SCON_GPIOA6P_SHIFT)
#define SCON_GPIOA5P_SHIFT             10
#define SCON_GPIOA5P_FIELD             (0xFFFFFFFF - (0x3UL<<SCON_GPIOA5P_SHIFT))
#define SCON_GPIOA5P_1                 (0x1UL<<SCON_GPIOA5P_SHIFT)
#define SCON_GPIOA4P_SHIFT             8
#define SCON_GPIOA4P_FIELD             (0xFFFFFFFF - (0x3UL<<SCON_GPIOA4P_SHIFT))
#define SCON_GPIOA4P_1                 (0x1UL<<SCON_GPIOA4P_SHIFT)
#define SCON_GPIOA3P_SHIFT             6
#define SCON_GPIOA3P_FIELD             (0xFFFFFFFF - (0x3UL<<SCON_GPIOA3P_SHIFT))
#define SCON_GPIOA3P_1                 (0x1UL<<SCON_GPIOA3P_SHIFT)
#define SCON_GPIOA2P_SHIFT             4
#define SCON_GPIOA2P_FIELD             (0xFFFFFFFF - (0x3UL<<SCON_GPIOA2P_SHIFT))
#define SCON_GPIOA2P_1                 (0x1UL<<SCON_GPIOA2P_SHIFT)
#define SCON_GPIOA1P_SHIFT             2
#define SCON_GPIOA1P_FIELD             (0xFFFFFFFF - (0x3UL<<SCON_GPIOA1P_SHIFT))
#define SCON_GPIOA1P_1                 (0x1UL<<SCON_GPIOA1P_SHIFT)
#define SCON_GPIOA0P_SHIFT             0
#define SCON_GPIOA0P_FIELD             (0xFFFFFFFF - (0x3UL<<SCON_GPIOA0P_SHIFT))
#define SCON_GPIOA0P_1                 (0x1UL<<SCON_GPIOA0P_SHIFT)

/*****************************************************************************/
/* Register description for SYSPAD1 */

/* Reset value of register SCON_SYSPAD1 */
#define SCON_SYSPAD1_VALUE             0x55555555

/* Bits definition for register SCON_SYSPAD1 */
#define SCON_GPIOA31P_SHIFT            30
#define SCON_GPIOA31P_FIELD            (0xFFFFFFFF - (0x3UL<<SCON_GPIOA31P_SHIFT))
#define SCON_GPIOA31P_1                (0x1UL<<SCON_GPIOA31P_SHIFT)
#define SCON_GPIOA30P_SHIFT            28
#define SCON_GPIOA30P_FIELD            (0xFFFFFFFF - (0x3UL<<SCON_GPIOA30P_SHIFT))
#define SCON_GPIOA30P_1                (0x1UL<<SCON_GPIOA30P_SHIFT)
#define SCON_GPIOA29P_SHIFT            26
#define SCON_GPIOA29P_FIELD            (0xFFFFFFFF - (0x3UL<<SCON_GPIOA29P_SHIFT))
#define SCON_GPIOA29P_1                (0x1UL<<SCON_GPIOA29P_SHIFT)
#define SCON_GPIOA28P_SHIFT            24
#define SCON_GPIOA28P_FIELD            (0xFFFFFFFF - (0x3UL<<SCON_GPIOA28P_SHIFT))
#define SCON_GPIOA28P_1                (0x1UL<<SCON_GPIOA28P_SHIFT)
#define SCON_GPIOA27P_SHIFT            22
#define SCON_GPIOA27P_FIELD            (0xFFFFFFFF - (0x3UL<<SCON_GPIOA27P_SHIFT))
#define SCON_GPIOA27P_1                (0x1UL<<SCON_GPIOA27P_SHIFT)
#define SCON_GPIOA26P_SHIFT            20
#define SCON_GPIOA26P_FIELD            (0xFFFFFFFF - (0x3UL<<SCON_GPIOA26P_SHIFT))
#define SCON_GPIOA26P_1                (0x1UL<<SCON_GPIOA26P_SHIFT)
#define SCON_GPIOA25P_SHIFT            18
#define SCON_GPIOA25P_FIELD            (0xFFFFFFFF - (0x3UL<<SCON_GPIOA25P_SHIFT))
#define SCON_GPIOA25P_1                (0x1UL<<SCON_GPIOA25P_SHIFT)
#define SCON_GPIOA24P_SHIFT            16
#define SCON_GPIOA24P_FIELD            (0xFFFFFFFF - (0x3UL<<SCON_GPIOA24P_SHIFT))
#define SCON_GPIOA24P_1                (0x1UL<<SCON_GPIOA24P_SHIFT)
#define SCON_GPIOA23P_SHIFT            14
#define SCON_GPIOA23P_FIELD            (0xFFFFFFFF - (0x3UL<<SCON_GPIOA23P_SHIFT))
#define SCON_GPIOA23P_1                (0x1UL<<SCON_GPIOA23P_SHIFT)
#define SCON_GPIOA22P_SHIFT            12
#define SCON_GPIOA22P_FIELD            (0xFFFFFFFF - (0x3UL<<SCON_GPIOA22P_SHIFT))
#define SCON_GPIOA22P_1                (0x1UL<<SCON_GPIOA22P_SHIFT)
#define SCON_GPIOA21P_SHIFT            10
#define SCON_GPIOA21P_FIELD            (0xFFFFFFFF - (0x3UL<<SCON_GPIOA21P_SHIFT))
#define SCON_GPIOA21P_1                (0x1UL<<SCON_GPIOA21P_SHIFT)
#define SCON_GPIOA20P_SHIFT            8
#define SCON_GPIOA20P_FIELD            (0xFFFFFFFF - (0x3UL<<SCON_GPIOA20P_SHIFT))
#define SCON_GPIOA20P_1                (0x1UL<<SCON_GPIOA20P_SHIFT)
#define SCON_GPIOA19P_SHIFT            6
#define SCON_GPIOA19P_FIELD            (0xFFFFFFFF - (0x3UL<<SCON_GPIOA19P_SHIFT))
#define SCON_GPIOA19P_1                (0x1UL<<SCON_GPIOA19P_SHIFT)
#define SCON_GPIOA18P_SHIFT            4
#define SCON_GPIOA18P_FIELD            (0xFFFFFFFF - (0x3UL<<SCON_GPIOA18P_SHIFT))
#define SCON_GPIOA18P_1                (0x1UL<<SCON_GPIOA18P_SHIFT)
#define SCON_GPIOA17P_SHIFT            2
#define SCON_GPIOA17P_FIELD            (0xFFFFFFFF - (0x3UL<<SCON_GPIOA17P_SHIFT))
#define SCON_GPIOA17P_1                (0x1UL<<SCON_GPIOA17P_SHIFT)
#define SCON_GPIOA16P_SHIFT            0
#define SCON_GPIOA16P_FIELD            (0xFFFFFFFF - (0x3UL<<SCON_GPIOA16P_SHIFT))
#define SCON_GPIOA16P_1                (0x1UL<<SCON_GPIOA16P_SHIFT)

/*****************************************************************************/
/* Register description for SYSPAD2 */

/* Reset value of register SCON_SYSPAD2 */
#define SCON_SYSPAD2_VALUE             0x95DE45F0

/* Bits definition for register SCON_SYSPAD2 */
#define SCON_GPIOB15P_SHIFT            30
#define SCON_GPIOB15P_FIELD            (0xFFFFFFFF - (0x3UL<<SCON_GPIOB15P_SHIFT))
#define SCON_GPIOB15P_2                (0x2UL<<SCON_GPIOB15P_SHIFT)
#define SCON_GPIOB14P_SHIFT            28
#define SCON_GPIOB14P_FIELD            (0xFFFFFFFF - (0x3UL<<SCON_GPIOB14P_SHIFT))
#define SCON_GPIOB14P_1                (0x1UL<<SCON_GPIOB14P_SHIFT)
#define SCON_GPIOB13P_SHIFT            26
#define SCON_GPIOB13P_FIELD            (0xFFFFFFFF - (0x3UL<<SCON_GPIOB13P_SHIFT))
#define SCON_GPIOB13P_1                (0x1UL<<SCON_GPIOB13P_SHIFT)
#define SCON_GPIOB12P_SHIFT            24
#define SCON_GPIOB12P_FIELD            (0xFFFFFFFF - (0x3UL<<SCON_GPIOB12P_SHIFT))
#define SCON_GPIOB12P_1                (0x1UL<<SCON_GPIOB12P_SHIFT)
#define SCON_GPIOB11P_SHIFT            22
#define SCON_GPIOB11P_FIELD            (0xFFFFFFFF - (0x3UL<<SCON_GPIOB11P_SHIFT))
#define SCON_GPIOB11P_3                (0x3UL<<SCON_GPIOB11P_SHIFT)
#define SCON_GPIOB10P_SHIFT            20
#define SCON_GPIOB10P_FIELD            (0xFFFFFFFF - (0x3UL<<SCON_GPIOB10P_SHIFT))
#define SCON_GPIOB10P_1                (0x1UL<<SCON_GPIOB10P_SHIFT)
#define SCON_GPIOB9P_SHIFT             18
#define SCON_GPIOB9P_FIELD             (0xFFFFFFFF - (0x3UL<<SCON_GPIOB9P_SHIFT))
#define SCON_GPIOB9P_3                 (0x3UL<<SCON_GPIOB9P_SHIFT)
#define SCON_GPIOB8P_SHIFT             16
#define SCON_GPIOB8P_FIELD             (0xFFFFFFFF - (0x3UL<<SCON_GPIOB8P_SHIFT))
#define SCON_GPIOB8P_2                 (0x2UL<<SCON_GPIOB8P_SHIFT)
#define SCON_GPIOB7P_SHIFT             14
#define SCON_GPIOB7P_FIELD             (0xFFFFFFFF - (0x3UL<<SCON_GPIOB7P_SHIFT))
#define SCON_GPIOB7P_1                 (0x1UL<<SCON_GPIOB7P_SHIFT)
#define SCON_GPIOB6P_SHIFT             12
#define SCON_GPIOB6P_FIELD             (0xFFFFFFFF - (0x3UL<<SCON_GPIOB6P_SHIFT))
#define SCON_GPIOB6P_0                 (0x0UL<<SCON_GPIOB6P_SHIFT)
#define SCON_GPIOB5P_SHIFT             10
#define SCON_GPIOB5P_FIELD             (0xFFFFFFFF - (0x3UL<<SCON_GPIOB5P_SHIFT))
#define SCON_GPIOB5P_1                 (0x1UL<<SCON_GPIOB5P_SHIFT)
#define SCON_GPIOB4P_SHIFT             8
#define SCON_GPIOB4P_FIELD             (0xFFFFFFFF - (0x3UL<<SCON_GPIOB4P_SHIFT))
#define SCON_GPIOB4P_1                 (0x1UL<<SCON_GPIOB4P_SHIFT)
#define SCON_GPIOB3P_SHIFT             6
#define SCON_GPIOB3P_FIELD             (0xFFFFFFFF - (0x3UL<<SCON_GPIOB3P_SHIFT))
#define SCON_GPIOB3P_3                 (0x3UL<<SCON_GPIOB3P_SHIFT)
#define SCON_GPIOB2P_SHIFT             4
#define SCON_GPIOB2P_FIELD             (0xFFFFFFFF - (0x3UL<<SCON_GPIOB2P_SHIFT))
#define SCON_GPIOB2P_3                 (0x3UL<<SCON_GPIOB2P_SHIFT)
#define SCON_GPIOB1P_SHIFT             2
#define SCON_GPIOB1P_FIELD             (0xFFFFFFFF - (0x3UL<<SCON_GPIOB1P_SHIFT))
#define SCON_GPIOB1P_0                 (0x0UL<<SCON_GPIOB1P_SHIFT)
#define SCON_GPIOB0P_SHIFT             0
#define SCON_GPIOB0P_FIELD             (0xFFFFFFFF - (0x3UL<<SCON_GPIOB0P_SHIFT))
#define SCON_GPIOB0P_0                 (0x0UL<<SCON_GPIOB0P_SHIFT)

/*****************************************************************************/
/* Register description for SYSIISMUX */

/* Reset value of register SCON_SYSIISMUX */
#define SCON_SYSIISMUX_VALUE           0x0

/* Bits definition for register SCON_SYSIISMUX */
#define SCON_BIISSEL_SHIFT             14
#define SCON_BIISSEL_FIELD             (0xFFFFFFFF - (0x3UL<<SCON_BIISSEL_SHIFT))
#define SCON_BIISSEL_DIISO1            (0x0UL<<SCON_BIISSEL_SHIFT)
#define SCON_BIISSEL_DIISO2            (0x1UL<<SCON_BIISSEL_SHIFT)
#define SCON_BIISSEL_SIIS              (0x2UL<<SCON_BIISSEL_SHIFT)
#define SCON_BIISSEL_IISTX1            (0x3UL<<SCON_BIISSEL_SHIFT)
#define SCON_CIISMODE_SHIFT            13
#define SCON_CIISMODE_FIELD            (0xFFFFFFFF - (0x1UL<<SCON_CIISMODE_SHIFT))
#define SCON_CIISMODE_MASTER           (0x0UL<<SCON_CIISMODE_SHIFT)
#define SCON_CIISMODE_SLAVE            (0x1UL<<SCON_CIISMODE_SHIFT)
#define SCON_CIISMODE                  (0x1UL<<SCON_CIISMODE_SHIFT)
#define SCON_CIISSEL_SHIFT             11
#define SCON_CIISSEL_FIELD             (0xFFFFFFFF - (0x3UL<<SCON_CIISSEL_SHIFT))
#define SCON_CIISSEL_DIISO1            (0x0UL<<SCON_CIISSEL_SHIFT)
#define SCON_CIISSEL_DIISO2            (0x1UL<<SCON_CIISSEL_SHIFT)
#define SCON_CIISSEL_SIIS              (0x2UL<<SCON_CIISSEL_SHIFT)
#define SCON_CIISSEL_IISTX1            (0x3UL<<SCON_CIISSEL_SHIFT)
#define SCON_DIISMODE_SHIFT            10
#define SCON_DIISMODE_FIELD            (0xFFFFFFFF - (0x1UL<<SCON_DIISMODE_SHIFT))
#define SCON_DIISMODE_MASTER           (0x0UL<<SCON_DIISMODE_SHIFT)
#define SCON_DIISMODE_SLAVE            (0x1UL<<SCON_DIISMODE_SHIFT)
#define SCON_DIISMODE                  (0x1UL<<SCON_DIISMODE_SHIFT)
#define SCON_DIISSEL_SHIFT             8
#define SCON_DIISSEL_FIELD             (0xFFFFFFFF - (0x3UL<<SCON_DIISSEL_SHIFT))
#define SCON_DIISSEL_DIISO1            (0x0UL<<SCON_DIISSEL_SHIFT)
#define SCON_DIISSEL_DIISO2            (0x1UL<<SCON_DIISSEL_SHIFT)
#define SCON_DIISSEL_SIIS              (0x2UL<<SCON_DIISSEL_SHIFT)
#define SCON_DIISSEL_IISTX1            (0x3UL<<SCON_DIISSEL_SHIFT)
#define SCON_DIISINSEL_SHIFT           6
#define SCON_DIISINSEL_FIELD           (0xFFFFFFFF - (0x3UL<<SCON_DIISINSEL_SHIFT))
#define SCON_DIISINSEL_AIIS            (0x0UL<<SCON_DIISINSEL_SHIFT)
#define SCON_DIISINSEL_CIIS            (0x1UL<<SCON_DIISINSEL_SHIFT)
#define SCON_DIISINSEL_DIIS            (0x2UL<<SCON_DIISINSEL_SHIFT)
#define SCON_EIISSEL_SHIFT             3
#define SCON_EIISSEL_FIELD             (0xFFFFFFFF - (0x7UL<<SCON_EIISSEL_SHIFT))
#define SCON_EIISSEL_DIISO1            (0x0UL<<SCON_EIISSEL_SHIFT)
#define SCON_EIISSEL_DIISO2            (0x1UL<<SCON_EIISSEL_SHIFT)
#define SCON_EIISSEL_SIIS              (0x2UL<<SCON_EIISSEL_SHIFT)
#define SCON_EIISSEL_IISTX1            (0x3UL<<SCON_EIISSEL_SHIFT)
#define SCON_EIISSEL_CIIS              (0x4UL<<SCON_EIISSEL_SHIFT)
#define SCON_EIISSEL_DIIS              (0x5UL<<SCON_EIISSEL_SHIFT)
#define SCON_FIISSEL_SHIFT             0
#define SCON_FIISSEL_FIELD             (0xFFFFFFFF - (0x7UL<<SCON_FIISSEL_SHIFT))
#define SCON_FIISSEL_DIISO1            (0x0UL<<SCON_FIISSEL_SHIFT)
#define SCON_FIISSEL_DIISO2            (0x1UL<<SCON_FIISSEL_SHIFT)
#define SCON_FIISSEL_SIIS              (0x2UL<<SCON_FIISSEL_SHIFT)
#define SCON_FIISSEL_IISTX1            (0x3UL<<SCON_FIISSEL_SHIFT)
#define SCON_FIISSEL_CIIS              (0x4UL<<SCON_FIISSEL_SHIFT)
#define SCON_FIISSEL_DIIS              (0x5UL<<SCON_FIISSEL_SHIFT)

/*****************************************************************************/
/* Register description for SYSAHBPROT */

/* Reset value of register SCON_SYSAHBPROT */
#define SCON_SYSAHBPROT_VALUE          0x0

/* Bits definition for register SCON_SYSAHBPROT */
#define SCON_HPROT_MC4_SHIFT           24
#define SCON_HPROT_MC4_FIELD           (0xFFFFFFFF - (0x3UL<<SCON_HPROT_MC4_SHIFT))
#define SCON_HPROT_MC4_UNCHANGED       (0x0UL<<SCON_HPROT_MC4_SHIFT)
#define SCON_HPROT_MC4_NOT_BUFFERABLE  (0x1UL<<SCON_HPROT_MC4_SHIFT)
#define SCON_HPROT_MC4_BUFFERABLE      (0x2UL<<SCON_HPROT_MC4_SHIFT)
#define SCON_HPROT_MC4_3               (0x3UL<<SCON_HPROT_MC4_SHIFT)
#define SCON_HPROT_MC3_SHIFT           22
#define SCON_HPROT_MC3_FIELD           (0xFFFFFFFF - (0x3UL<<SCON_HPROT_MC3_SHIFT))
#define SCON_HPROT_MC3_UNCHANGED       (0x0UL<<SCON_HPROT_MC3_SHIFT)
#define SCON_HPROT_MC3_NOT_BUFFERABLE  (0x1UL<<SCON_HPROT_MC3_SHIFT)
#define SCON_HPROT_MC3_BUFFERABLE      (0x2UL<<SCON_HPROT_MC3_SHIFT)
#define SCON_HPROT_MC3_3               (0x3UL<<SCON_HPROT_MC3_SHIFT)
#define SCON_HPROT_MC2_SHIFT           20
#define SCON_HPROT_MC2_FIELD           (0xFFFFFFFF - (0x3UL<<SCON_HPROT_MC2_SHIFT))
#define SCON_HPROT_MC2_UNCHANGED       (0x0UL<<SCON_HPROT_MC2_SHIFT)
#define SCON_HPROT_MC2_NOT_BUFFERABLE  (0x1UL<<SCON_HPROT_MC2_SHIFT)
#define SCON_HPROT_MC2_BUFFERABLE      (0x2UL<<SCON_HPROT_MC2_SHIFT)
#define SCON_HPROT_MC2_3               (0x3UL<<SCON_HPROT_MC2_SHIFT)
#define SCON_HPROT_MC1_SHIFT           18
#define SCON_HPROT_MC1_FIELD           (0xFFFFFFFF - (0x3UL<<SCON_HPROT_MC1_SHIFT))
#define SCON_HPROT_MC1_UNCHANGED       (0x0UL<<SCON_HPROT_MC1_SHIFT)
#define SCON_HPROT_MC1_NOT_BUFFERABLE  (0x1UL<<SCON_HPROT_MC1_SHIFT)
#define SCON_HPROT_MC1_BUFFERABLE      (0x2UL<<SCON_HPROT_MC1_SHIFT)
#define SCON_HPROT_MC1_3               (0x3UL<<SCON_HPROT_MC1_SHIFT)
#define SCON_HPROT_MC0_SHIFT           16
#define SCON_HPROT_MC0_FIELD           (0xFFFFFFFF - (0x3UL<<SCON_HPROT_MC0_SHIFT))
#define SCON_HPROT_MC0_UNCHANGED       (0x0UL<<SCON_HPROT_MC0_SHIFT)
#define SCON_HPROT_MC0_NOT_BUFFERABLE  (0x1UL<<SCON_HPROT_MC0_SHIFT)
#define SCON_HPROT_MC0_BUFFERABLE      (0x2UL<<SCON_HPROT_MC0_SHIFT)
#define SCON_HPROT_MC0_3               (0x3UL<<SCON_HPROT_MC0_SHIFT)
#define SCON_HPROT_MB2_SHIFT           12
#define SCON_HPROT_MB2_FIELD           (0xFFFFFFFF - (0x3UL<<SCON_HPROT_MB2_SHIFT))
#define SCON_HPROT_MB2_UNCHANGED       (0x0UL<<SCON_HPROT_MB2_SHIFT)
#define SCON_HPROT_MB2_NOT_BUFFERABLE  (0x1UL<<SCON_HPROT_MB2_SHIFT)
#define SCON_HPROT_MB2_BUFFERABLE      (0x2UL<<SCON_HPROT_MB2_SHIFT)
#define SCON_HPROT_MB2_3               (0x3UL<<SCON_HPROT_MB2_SHIFT)
#define SCON_HPROT_MB1_SHIFT           10
#define SCON_HPROT_MB1_FIELD           (0xFFFFFFFF - (0x3UL<<SCON_HPROT_MB1_SHIFT))
#define SCON_HPROT_MB1_UNCHANGED       (0x0UL<<SCON_HPROT_MB1_SHIFT)
#define SCON_HPROT_MB1_NOT_BUFFERABLE  (0x1UL<<SCON_HPROT_MB1_SHIFT)
#define SCON_HPROT_MB1_BUFFERABLE      (0x2UL<<SCON_HPROT_MB1_SHIFT)
#define SCON_HPROT_MB1_3               (0x3UL<<SCON_HPROT_MB1_SHIFT)
#define SCON_HPROT_MB0_SHIFT           8
#define SCON_HPROT_MB0_FIELD           (0xFFFFFFFF - (0x3UL<<SCON_HPROT_MB0_SHIFT))
#define SCON_HPROT_MB0_UNCHANGED       (0x0UL<<SCON_HPROT_MB0_SHIFT)
#define SCON_HPROT_MB0_NOT_BUFFERABLE  (0x1UL<<SCON_HPROT_MB0_SHIFT)
#define SCON_HPROT_MB0_BUFFERABLE      (0x2UL<<SCON_HPROT_MB0_SHIFT)
#define SCON_HPROT_MB0_3               (0x3UL<<SCON_HPROT_MB0_SHIFT)
#define SCON_HPROT_MA2_SHIFT           4
#define SCON_HPROT_MA2_FIELD           (0xFFFFFFFF - (0x3UL<<SCON_HPROT_MA2_SHIFT))
#define SCON_HPROT_MA2_UNCHANGED       (0x0UL<<SCON_HPROT_MA2_SHIFT)
#define SCON_HPROT_MA2_NOT_BUFFERABLE  (0x1UL<<SCON_HPROT_MA2_SHIFT)
#define SCON_HPROT_MA2_BUFFERABLE      (0x2UL<<SCON_HPROT_MA2_SHIFT)
#define SCON_HPROT_MA2_3               (0x3UL<<SCON_HPROT_MA2_SHIFT)
#define SCON_HPROT_MA1_SHIFT           2
#define SCON_HPROT_MA1_FIELD           (0xFFFFFFFF - (0x3UL<<SCON_HPROT_MA1_SHIFT))
#define SCON_HPROT_MA1_UNCHANGED       (0x0UL<<SCON_HPROT_MA1_SHIFT)
#define SCON_HPROT_MA1_NOT_BUFFERABLE  (0x1UL<<SCON_HPROT_MA1_SHIFT)
#define SCON_HPROT_MA1_BUFFERABLE      (0x2UL<<SCON_HPROT_MA1_SHIFT)
#define SCON_HPROT_MA1_3               (0x3UL<<SCON_HPROT_MA1_SHIFT)
#define SCON_HPROT_MA0_SHIFT           0
#define SCON_HPROT_MA0_FIELD           (0xFFFFFFFF - (0x3UL<<SCON_HPROT_MA0_SHIFT))
#define SCON_HPROT_MA0_UNCHANGED       (0x0UL<<SCON_HPROT_MA0_SHIFT)
#define SCON_HPROT_MA0_NOT_BUFFERABLE  (0x1UL<<SCON_HPROT_MA0_SHIFT)
#define SCON_HPROT_MA0_BUFFERABLE      (0x2UL<<SCON_HPROT_MA0_SHIFT)
#define SCON_HPROT_MA0_3               (0x3UL<<SCON_HPROT_MA0_SHIFT)

/*****************************************************************************/
/* Register description for SYSIVSBRIDGE */

/* Reset value of register SCON_SYSIVSBRIDGE */
#define SCON_SYSIVSBRIDGE_VALUE        0xF

/* Bits definition for register SCON_SYSIVSBRIDGE */
#define SCON_THRESHOLD_SHIFT           0
#define SCON_THRESHOLD_FIELD           (0xFFFFFFFF - (0xFUL<<SCON_THRESHOLD_SHIFT))
#define SCON_THRESHOLD_F               (0xFUL<<SCON_THRESHOLD_SHIFT)

/*****************************************************************************/

/*****************************************************************************
* Definitions for: SCTU1
*****************************************************************************/

/* Pointer on base address */
#define SCTU1_BASE                     IOA(SCTU1_BASE_ADDR)

/* SCTU CR Register (16 bits) */
#define SCTU1_CR_OFFSET                0x0
#define SCTU1_CR_REG                   IOA(SCTU1_BASE_ADDR + SCTU1_CR_OFFSET)

/* SCTU RR Register (16 bits) */
#define SCTU1_RR_OFFSET                0x4
#define SCTU1_RR_REG                   IOA(SCTU1_BASE_ADDR + SCTU1_RR_OFFSET)

/* SCTU WR Register (16 bits) */
#define SCTU1_WR_OFFSET                0x8
#define SCTU1_WR_REG                   IOA(SCTU1_BASE_ADDR + SCTU1_WR_OFFSET)

/* SCTU C0 Register (16 bits) */
#define SCTU1_C0_OFFSET                0xC
#define SCTU1_C0_REG                   IOA(SCTU1_BASE_ADDR + SCTU1_C0_OFFSET)

/* SCTU C1 Register (16 bits) */
#define SCTU1_C1_OFFSET                0x10
#define SCTU1_C1_REG                   IOA(SCTU1_BASE_ADDR + SCTU1_C1_OFFSET)

/* SCTU C2 Register (16 bits) */
#define SCTU1_C2_OFFSET                0x14
#define SCTU1_C2_REG                   IOA(SCTU1_BASE_ADDR + SCTU1_C2_OFFSET)

/* SCTU C3 Register (16 bits) */
#define SCTU1_C3_OFFSET                0x18
#define SCTU1_C3_REG                   IOA(SCTU1_BASE_ADDR + SCTU1_C3_OFFSET)

/* SCTU SR Register (8 bits) */
#define SCTU1_SR_OFFSET                0x1C
#define SCTU1_SR_REG                   IOA(SCTU1_BASE_ADDR + SCTU1_SR_OFFSET)

/* SCTU PR Register (8 bits) */
#define SCTU1_PR_OFFSET                0x20
#define SCTU1_PR_REG                   IOA(SCTU1_BASE_ADDR + SCTU1_PR_OFFSET)

/*****************************************************************************
* Definitions for: SCTU2
*****************************************************************************/

/* Pointer on base address */
#define SCTU2_BASE                     IOA(SCTU2_BASE_ADDR)

/* SCTU CR Register (16 bits) */
#define SCTU2_CR_OFFSET                0x0
#define SCTU2_CR_REG                   IOA(SCTU2_BASE_ADDR + SCTU2_CR_OFFSET)

/* SCTU RR Register (16 bits) */
#define SCTU2_RR_OFFSET                0x4
#define SCTU2_RR_REG                   IOA(SCTU2_BASE_ADDR + SCTU2_RR_OFFSET)

/* SCTU WR Register (16 bits) */
#define SCTU2_WR_OFFSET                0x8
#define SCTU2_WR_REG                   IOA(SCTU2_BASE_ADDR + SCTU2_WR_OFFSET)

/* SCTU C0 Register (16 bits) */
#define SCTU2_C0_OFFSET                0xC
#define SCTU2_C0_REG                   IOA(SCTU2_BASE_ADDR + SCTU2_C0_OFFSET)

/* SCTU C1 Register (16 bits) */
#define SCTU2_C1_OFFSET                0x10
#define SCTU2_C1_REG                   IOA(SCTU2_BASE_ADDR + SCTU2_C1_OFFSET)

/* SCTU C2 Register (16 bits) */
#define SCTU2_C2_OFFSET                0x14
#define SCTU2_C2_REG                   IOA(SCTU2_BASE_ADDR + SCTU2_C2_OFFSET)

/* SCTU C3 Register (16 bits) */
#define SCTU2_C3_OFFSET                0x18
#define SCTU2_C3_REG                   IOA(SCTU2_BASE_ADDR + SCTU2_C3_OFFSET)

/* SCTU SR Register (8 bits) */
#define SCTU2_SR_OFFSET                0x1C
#define SCTU2_SR_REG                   IOA(SCTU2_BASE_ADDR + SCTU2_SR_OFFSET)

/* SCTU PR Register (8 bits) */
#define SCTU2_PR_OFFSET                0x20
#define SCTU2_PR_REG                   IOA(SCTU2_BASE_ADDR + SCTU2_PR_OFFSET)

/* Register description for CR */

/* Reset value of register SCTU[2:1]_CR */
#define SCTU1_CR_VALUE                 0x0
#define SCTU2_CR_VALUE                 0x0

/* Bits definition for register SCTU[2:1]_CR */
#define SCTU_IE3_SHIFT                 9
#define SCTU_IE3_FIELD                 (0xFFFFFFFF - (0x1UL<<SCTU_IE3_SHIFT))
#define SCTU_IE3_0                     (0x0UL<<SCTU_IE3_SHIFT)
#define SCTU_IE3_1                     (0x1UL<<SCTU_IE3_SHIFT)
#define SCTU_IE3                       (0x1UL<<SCTU_IE3_SHIFT)
#define SCTU_CM3_SHIFT                 8
#define SCTU_CM3_FIELD                 (0xFFFFFFFF - (0x1UL<<SCTU_CM3_SHIFT))
#define SCTU_CM3_0                     (0x0UL<<SCTU_CM3_SHIFT)
#define SCTU_CM3_1                     (0x1UL<<SCTU_CM3_SHIFT)
#define SCTU_CM3                       (0x1UL<<SCTU_CM3_SHIFT)
#define SCTU_IE2_SHIFT                 7
#define SCTU_IE2_FIELD                 (0xFFFFFFFF - (0x1UL<<SCTU_IE2_SHIFT))
#define SCTU_IE2_0                     (0x0UL<<SCTU_IE2_SHIFT)
#define SCTU_IE2_1                     (0x1UL<<SCTU_IE2_SHIFT)
#define SCTU_IE2                       (0x1UL<<SCTU_IE2_SHIFT)
#define SCTU_CM2_SHIFT                 6
#define SCTU_CM2_FIELD                 (0xFFFFFFFF - (0x1UL<<SCTU_CM2_SHIFT))
#define SCTU_CM2_0                     (0x0UL<<SCTU_CM2_SHIFT)
#define SCTU_CM2_1                     (0x1UL<<SCTU_CM2_SHIFT)
#define SCTU_CM2                       (0x1UL<<SCTU_CM2_SHIFT)
#define SCTU_IE1_SHIFT                 5
#define SCTU_IE1_FIELD                 (0xFFFFFFFF - (0x1UL<<SCTU_IE1_SHIFT))
#define SCTU_IE1_0                     (0x0UL<<SCTU_IE1_SHIFT)
#define SCTU_IE1_1                     (0x1UL<<SCTU_IE1_SHIFT)
#define SCTU_IE1                       (0x1UL<<SCTU_IE1_SHIFT)
#define SCTU_CM1_SHIFT                 4
#define SCTU_CM1_FIELD                 (0xFFFFFFFF - (0x1UL<<SCTU_CM1_SHIFT))
#define SCTU_CM1_0                     (0x0UL<<SCTU_CM1_SHIFT)
#define SCTU_CM1_1                     (0x1UL<<SCTU_CM1_SHIFT)
#define SCTU_CM1                       (0x1UL<<SCTU_CM1_SHIFT)
#define SCTU_IE0_SHIFT                 3
#define SCTU_IE0_FIELD                 (0xFFFFFFFF - (0x1UL<<SCTU_IE0_SHIFT))
#define SCTU_IE0_0                     (0x0UL<<SCTU_IE0_SHIFT)
#define SCTU_IE0_1                     (0x1UL<<SCTU_IE0_SHIFT)
#define SCTU_IE0                       (0x1UL<<SCTU_IE0_SHIFT)
#define SCTU_CM0_SHIFT                 2
#define SCTU_CM0_FIELD                 (0xFFFFFFFF - (0x1UL<<SCTU_CM0_SHIFT))
#define SCTU_CM0_0                     (0x0UL<<SCTU_CM0_SHIFT)
#define SCTU_CM0_1                     (0x1UL<<SCTU_CM0_SHIFT)
#define SCTU_CM0                       (0x1UL<<SCTU_CM0_SHIFT)
#define SCTU_ETOV_SHIFT                1
#define SCTU_ETOV_FIELD                (0xFFFFFFFF - (0x1UL<<SCTU_ETOV_SHIFT))
#define SCTU_ETOV_0                    (0x0UL<<SCTU_ETOV_SHIFT)
#define SCTU_ETOV_1                    (0x1UL<<SCTU_ETOV_SHIFT)
#define SCTU_ETOV                      (0x1UL<<SCTU_ETOV_SHIFT)
#define SCTU_RUN_SHIFT                 0
#define SCTU_RUN_FIELD                 (0xFFFFFFFF - (0x1UL<<SCTU_RUN_SHIFT))
#define SCTU_RUN_0                     (0x0UL<<SCTU_RUN_SHIFT)
#define SCTU_RUN_1                     (0x1UL<<SCTU_RUN_SHIFT)
#define SCTU_RUN                       (0x1UL<<SCTU_RUN_SHIFT)

/*****************************************************************************/
/* Register description for SR */

/* Reset value of register SCTU[2:1]_SR */
#define SCTU1_SR_VALUE                 0x0
#define SCTU2_SR_VALUE                 0x0

/* Bits definition for register SCTU[2:1]_SR */
#define SCTU_C3_SHIFT                  4
#define SCTU_C3_FIELD                  (0xFFFFFFFF - (0x1UL<<SCTU_C3_SHIFT))
#define SCTU_C3_0                      (0x0UL<<SCTU_C3_SHIFT)
#define SCTU_C3_1                      (0x1UL<<SCTU_C3_SHIFT)
#define SCTU_C3                        (0x1UL<<SCTU_C3_SHIFT)
#define SCTU_C2_SHIFT                  3
#define SCTU_C2_FIELD                  (0xFFFFFFFF - (0x1UL<<SCTU_C2_SHIFT))
#define SCTU_C2_0                      (0x0UL<<SCTU_C2_SHIFT)
#define SCTU_C2_1                      (0x1UL<<SCTU_C2_SHIFT)
#define SCTU_C2                        (0x1UL<<SCTU_C2_SHIFT)
#define SCTU_C1_SHIFT                  2
#define SCTU_C1_FIELD                  (0xFFFFFFFF - (0x1UL<<SCTU_C1_SHIFT))
#define SCTU_C1_0                      (0x0UL<<SCTU_C1_SHIFT)
#define SCTU_C1_1                      (0x1UL<<SCTU_C1_SHIFT)
#define SCTU_C1                        (0x1UL<<SCTU_C1_SHIFT)
#define SCTU_C0_SHIFT                  1
#define SCTU_C0_FIELD                  (0xFFFFFFFF - (0x1UL<<SCTU_C0_SHIFT))
#define SCTU_C0_0                      (0x0UL<<SCTU_C0_SHIFT)
#define SCTU_C0_1                      (0x1UL<<SCTU_C0_SHIFT)
#define SCTU_C0                        (0x1UL<<SCTU_C0_SHIFT)
#define SCTU_TOV_SHIFT                 0
#define SCTU_TOV_FIELD                 (0xFFFFFFFF - (0x1UL<<SCTU_TOV_SHIFT))
#define SCTU_TOV_0                     (0x0UL<<SCTU_TOV_SHIFT)
#define SCTU_TOV_1                     (0x1UL<<SCTU_TOV_SHIFT)
#define SCTU_TOV                       (0x1UL<<SCTU_TOV_SHIFT)

/*****************************************************************************/
/* Register description for RR */

/* Reset value of register SCTU[2:1]_RR */
#define SCTU1_RR_VALUE                 0x0
#define SCTU2_RR_VALUE                 0x0

/* Bits definition for register SCTU[2:1]_RR */
#define SCTU_TIMRR_SHIFT               0
#define SCTU_TIMRR_FIELD               (0xFFFFFFFF - (0xFFFFUL<<SCTU_TIMRR_SHIFT))
#define SCTU_TIMRR_0                   (0x0UL<<SCTU_TIMRR_SHIFT)

/*****************************************************************************/
/* Register description for WR */

/* Reset value of register SCTU[2:1]_WR */
#define SCTU1_WR_VALUE                 0x0
#define SCTU2_WR_VALUE                 0x0

/* Bits definition for register SCTU[2:1]_WR */
#define SCTU_TIMWR_SHIFT               0
#define SCTU_TIMWR_FIELD               (0xFFFFFFFF - (0xFFFFUL<<SCTU_TIMWR_SHIFT))

/*****************************************************************************/
/* Register description for PR */

/* Reset value of register SCTU[2:1]_PR */
#define SCTU1_PR_VALUE                 0x0
#define SCTU2_PR_VALUE                 0x0

/* Bits definition for register SCTU[2:1]_PR */
#define SCTU_TIMPR_SHIFT               0
#define SCTU_TIMPR_FIELD               (0xFFFFFFFF - (0xFFUL<<SCTU_TIMPR_SHIFT))
#define SCTU_TIMPR_0                   (0x0UL<<SCTU_TIMPR_SHIFT)

/*****************************************************************************/
/* Register description for C[3:0] */

/* Reset value of register SCTU[2:1]_C[3:0] */
#define SCTU1_C0_VALUE                 0x0
#define SCTU1_C1_VALUE                 0x0
#define SCTU1_C2_VALUE                 0x0
#define SCTU1_C3_VALUE                 0x0
#define SCTU2_C0_VALUE                 0x0
#define SCTU2_C1_VALUE                 0x0
#define SCTU2_C2_VALUE                 0x0
#define SCTU2_C3_VALUE                 0x0

/* Bits definition for register SCTU[2:1]_C[3:0] */
#define SCTU_TIMC_SHIFT                0
#define SCTU_TIMC_FIELD                (0xFFFFFFFF - (0xFFFFUL<<SCTU_TIMC_SHIFT))
#define SCTU_TIMC_0                    (0x0UL<<SCTU_TIMC_SHIFT)

/*****************************************************************************/

/*****************************************************************************
* Definitions for: SDI
*****************************************************************************/

/* Pointer on base address */
#define SDI_BASE                       IOA(SDI_BASE_ADDR)

/* SDI CTL Register (32 bits) */
#define SDI_CTL_OFFSET                 0x0
#define SDI_CTL_REG                    IOA(SDI_BASE_ADDR + SDI_CTL_OFFSET)

/* SDI MODE_SET Register (32 bits) */
#define SDI_MODE_SET_OFFSET            0x10
#define SDI_MODE_SET_REG               IOA(SDI_BASE_ADDR + SDI_MODE_SET_OFFSET)

/* SDI MODE_GET Register (32 bits) */
#define SDI_MODE_GET_OFFSET            0x14
#define SDI_MODE_GET_REG               IOA(SDI_BASE_ADDR + SDI_MODE_GET_OFFSET)

/* SDI COMMAND2 Register (32 bits) */
#define SDI_COMMAND2_OFFSET            0x24
#define SDI_COMMAND2_REG               IOA(SDI_BASE_ADDR + SDI_COMMAND2_OFFSET)

/* SDI MR Register (32 bits) */
#define SDI_MR_OFFSET                  0x80
#define SDI_MR_REG                     IOA(SDI_BASE_ADDR + SDI_MR_OFFSET)

/* SDI EMR Register (32 bits) */
#define SDI_EMR_OFFSET                 0x84
#define SDI_EMR_REG                    IOA(SDI_BASE_ADDR + SDI_EMR_OFFSET)

/* SDI RANK0_CFG Register (32 bits) */
#define SDI_RANK0_CFG_OFFSET           0xC0
#define SDI_RANK0_CFG_REG              IOA(SDI_BASE_ADDR + SDI_RANK0_CFG_OFFSET)

/* SDI RANK1_CFG Register (32 bits) */
#define SDI_RANK1_CFG_OFFSET           0xC4
#define SDI_RANK1_CFG_REG              IOA(SDI_BASE_ADDR + SDI_RANK1_CFG_OFFSET)

/* SDI POWER_DOWN Register (32 bits) */
#define SDI_POWER_DOWN_OFFSET          0xFF4
#define SDI_POWER_DOWN_REG             IOA(SDI_BASE_ADDR + SDI_POWER_DOWN_OFFSET)

/* SDI MODULE_ID Register (32 bits) */
#define SDI_MODULE_ID_OFFSET           0xFFC
#define SDI_MODULE_ID_REG              IOA(SDI_BASE_ADDR + SDI_MODULE_ID_OFFSET)

/* SDI REGION1_BASE Register (32 bits) */
#define SDI_REGION1_BASE_OFFSET        0x40
#define SDI_REGION1_BASE_REG           IOA(SDI_BASE_ADDR + SDI_REGION1_BASE_OFFSET)

/* SDI REGION1_MASK Register (32 bits) */
#define SDI_REGION1_MASK_OFFSET        0x44
#define SDI_REGION1_MASK_REG           IOA(SDI_BASE_ADDR + SDI_REGION1_MASK_OFFSET)

/* SDI REGION0_MAPPING Register (32 bits) */
#define SDI_REGION0_MAPPING_OFFSET     0x48
#define SDI_REGION0_MAPPING_REG        IOA(SDI_BASE_ADDR + SDI_REGION0_MAPPING_OFFSET)

/* SDI REGION1_MAPPING Register (32 bits) */
#define SDI_REGION1_MAPPING_OFFSET     0x4C
#define SDI_REGION1_MAPPING_REG        IOA(SDI_BASE_ADDR + SDI_REGION1_MAPPING_OFFSET)

/* SDI TIMING_TRCD Register (32 bits) */
#define SDI_TIMING_TRCD_OFFSET         0x100
#define SDI_TIMING_TRCD_REG            IOA(SDI_BASE_ADDR + SDI_TIMING_TRCD_OFFSET)

/* SDI TIMING_TRC Register (32 bits) */
#define SDI_TIMING_TRC_OFFSET          0x104
#define SDI_TIMING_TRC_REG             IOA(SDI_BASE_ADDR + SDI_TIMING_TRC_OFFSET)

/* SDI TIMING_TWTR Register (32 bits) */
#define SDI_TIMING_TWTR_OFFSET         0x108
#define SDI_TIMING_TWTR_REG            IOA(SDI_BASE_ADDR + SDI_TIMING_TWTR_OFFSET)

/* SDI TIMING_TWR Register (32 bits) */
#define SDI_TIMING_TWR_OFFSET          0x10C
#define SDI_TIMING_TWR_REG             IOA(SDI_BASE_ADDR + SDI_TIMING_TWR_OFFSET)

/* SDI TIMING_TRP Register (32 bits) */
#define SDI_TIMING_TRP_OFFSET          0x110
#define SDI_TIMING_TRP_REG             IOA(SDI_BASE_ADDR + SDI_TIMING_TRP_OFFSET)

/* SDI TIMING_TRAS Register (32 bits) */
#define SDI_TIMING_TRAS_OFFSET         0x114
#define SDI_TIMING_TRAS_REG            IOA(SDI_BASE_ADDR + SDI_TIMING_TRAS_OFFSET)

/* SDI TIMING_TRRD Register (32 bits) */
#define SDI_TIMING_TRRD_OFFSET         0x11C
#define SDI_TIMING_TRRD_REG            IOA(SDI_BASE_ADDR + SDI_TIMING_TRRD_OFFSET)

/* SDI TIMING_TRFC Register (32 bits) */
#define SDI_TIMING_TRFC_OFFSET         0x120
#define SDI_TIMING_TRFC_REG            IOA(SDI_BASE_ADDR + SDI_TIMING_TRFC_OFFSET)

/* SDI TIMING_TMRD Register (32 bits) */
#define SDI_TIMING_TMRD_OFFSET         0x124
#define SDI_TIMING_TMRD_REG            IOA(SDI_BASE_ADDR + SDI_TIMING_TMRD_OFFSET)

/* SDI TIMING_LTCY Register (32 bits) */
#define SDI_TIMING_LTCY_OFFSET         0x128
#define SDI_TIMING_LTCY_REG            IOA(SDI_BASE_ADDR + SDI_TIMING_LTCY_OFFSET)

/* SDI REFRESH Register (32 bits) */
#define SDI_REFRESH_OFFSET             0x12C
#define SDI_REFRESH_REG                IOA(SDI_BASE_ADDR + SDI_REFRESH_OFFSET)

/* SDI TIMING_TRTW Register (32 bits) */
#define SDI_TIMING_TRTW_OFFSET         0x130
#define SDI_TIMING_TRTW_REG            IOA(SDI_BASE_ADDR + SDI_TIMING_TRTW_OFFSET)

/* SDI TIMING_TXSR Register (32 bits) */
#define SDI_TIMING_TXSR_OFFSET         0x14C
#define SDI_TIMING_TXSR_REG            IOA(SDI_BASE_ADDR + SDI_TIMING_TXSR_OFFSET)

/* SDI TIMING_TCKE Register (32 bits) */
#define SDI_TIMING_TCKE_OFFSET         0x150
#define SDI_TIMING_TCKE_REG            IOA(SDI_BASE_ADDR + SDI_TIMING_TCKE_OFFSET)

/* SDI ARB_DP0_BUDGET Register (32 bits) */
#define SDI_ARB_DP0_BUDGET_OFFSET      0x200
#define SDI_ARB_DP0_BUDGET_REG         IOA(SDI_BASE_ADDR + SDI_ARB_DP0_BUDGET_OFFSET)

/* SDI ARB_DP0_CLIP Register (32 bits) */
#define SDI_ARB_DP0_CLIP_OFFSET        0x204
#define SDI_ARB_DP0_CLIP_REG           IOA(SDI_BASE_ADDR + SDI_ARB_DP0_CLIP_OFFSET)

/* SDI ARB_DP0_LIMIT Register (32 bits) */
#define SDI_ARB_DP0_LIMIT_OFFSET       0x208
#define SDI_ARB_DP0_LIMIT_REG          IOA(SDI_BASE_ADDR + SDI_ARB_DP0_LIMIT_OFFSET)

/* SDI ARB_DP0_BOOST Register (32 bits) */
#define SDI_ARB_DP0_BOOST_OFFSET       0x20C
#define SDI_ARB_DP0_BOOST_REG          IOA(SDI_BASE_ADDR + SDI_ARB_DP0_BOOST_OFFSET)

/* SDI ARB_DP0_PRIO Register (32 bits) */
#define SDI_ARB_DP0_PRIO_OFFSET        0x210
#define SDI_ARB_DP0_PRIO_REG           IOA(SDI_BASE_ADDR + SDI_ARB_DP0_PRIO_OFFSET)

/* SDI ARB_DP0_ACCOUNT Register (32 bits) */
#define SDI_ARB_DP0_ACCOUNT_OFFSET     0x214
#define SDI_ARB_DP0_ACCOUNT_REG        IOA(SDI_BASE_ADDR + SDI_ARB_DP0_ACCOUNT_OFFSET)

/* SDI ARB_DP1_BUDGET Register (32 bits) */
#define SDI_ARB_DP1_BUDGET_OFFSET      0x220
#define SDI_ARB_DP1_BUDGET_REG         IOA(SDI_BASE_ADDR + SDI_ARB_DP1_BUDGET_OFFSET)

/* SDI ARB_DP1_CLIP Register (32 bits) */
#define SDI_ARB_DP1_CLIP_OFFSET        0x224
#define SDI_ARB_DP1_CLIP_REG           IOA(SDI_BASE_ADDR + SDI_ARB_DP1_CLIP_OFFSET)

/* SDI ARB_DP1_LIMIT Register (32 bits) */
#define SDI_ARB_DP1_LIMIT_OFFSET       0x228
#define SDI_ARB_DP1_LIMIT_REG          IOA(SDI_BASE_ADDR + SDI_ARB_DP1_LIMIT_OFFSET)

/* SDI ARB_DP1_BOOST Register (32 bits) */
#define SDI_ARB_DP1_BOOST_OFFSET       0x22C
#define SDI_ARB_DP1_BOOST_REG          IOA(SDI_BASE_ADDR + SDI_ARB_DP1_BOOST_OFFSET)

/* SDI ARB_DP1_PRIO Register (32 bits) */
#define SDI_ARB_DP1_PRIO_OFFSET        0x230
#define SDI_ARB_DP1_PRIO_REG           IOA(SDI_BASE_ADDR + SDI_ARB_DP1_PRIO_OFFSET)

/* SDI ARB_DP1_ACCOUNT Register (32 bits) */
#define SDI_ARB_DP1_ACCOUNT_OFFSET     0x234
#define SDI_ARB_DP1_ACCOUNT_REG        IOA(SDI_BASE_ADDR + SDI_ARB_DP1_ACCOUNT_OFFSET)

/* SDI ARB_DP2_BUDGET Register (32 bits) */
#define SDI_ARB_DP2_BUDGET_OFFSET      0x240
#define SDI_ARB_DP2_BUDGET_REG         IOA(SDI_BASE_ADDR + SDI_ARB_DP2_BUDGET_OFFSET)

/* SDI ARB_DP2_CLIP Register (32 bits) */
#define SDI_ARB_DP2_CLIP_OFFSET        0x244
#define SDI_ARB_DP2_CLIP_REG           IOA(SDI_BASE_ADDR + SDI_ARB_DP2_CLIP_OFFSET)

/* SDI ARB_DP2_LIMIT Register (32 bits) */
#define SDI_ARB_DP2_LIMIT_OFFSET       0x248
#define SDI_ARB_DP2_LIMIT_REG          IOA(SDI_BASE_ADDR + SDI_ARB_DP2_LIMIT_OFFSET)

/* SDI ARB_DP2_BOOST Register (32 bits) */
#define SDI_ARB_DP2_BOOST_OFFSET       0x24C
#define SDI_ARB_DP2_BOOST_REG          IOA(SDI_BASE_ADDR + SDI_ARB_DP2_BOOST_OFFSET)

/* SDI ARB_DP2_PRIO Register (32 bits) */
#define SDI_ARB_DP2_PRIO_OFFSET        0x250
#define SDI_ARB_DP2_PRIO_REG           IOA(SDI_BASE_ADDR + SDI_ARB_DP2_PRIO_OFFSET)

/* SDI ARB_DP2_ACCOUNT Register (32 bits) */
#define SDI_ARB_DP2_ACCOUNT_OFFSET     0x254
#define SDI_ARB_DP2_ACCOUNT_REG        IOA(SDI_BASE_ADDR + SDI_ARB_DP2_ACCOUNT_OFFSET)

/* SDI ARB_DP3_BUDGET Register (32 bits) */
#define SDI_ARB_DP3_BUDGET_OFFSET      0x260
#define SDI_ARB_DP3_BUDGET_REG         IOA(SDI_BASE_ADDR + SDI_ARB_DP3_BUDGET_OFFSET)

/* SDI ARB_DP3_CLIP Register (32 bits) */
#define SDI_ARB_DP3_CLIP_OFFSET        0x264
#define SDI_ARB_DP3_CLIP_REG           IOA(SDI_BASE_ADDR + SDI_ARB_DP3_CLIP_OFFSET)

/* SDI ARB_DP3_LIMIT Register (32 bits) */
#define SDI_ARB_DP3_LIMIT_OFFSET       0x268
#define SDI_ARB_DP3_LIMIT_REG          IOA(SDI_BASE_ADDR + SDI_ARB_DP3_LIMIT_OFFSET)

/* SDI ARB_DP3_BOOST Register (32 bits) */
#define SDI_ARB_DP3_BOOST_OFFSET       0x26C
#define SDI_ARB_DP3_BOOST_REG          IOA(SDI_BASE_ADDR + SDI_ARB_DP3_BOOST_OFFSET)

/* SDI ARB_DP3_PRIO Register (32 bits) */
#define SDI_ARB_DP3_PRIO_OFFSET        0x270
#define SDI_ARB_DP3_PRIO_REG           IOA(SDI_BASE_ADDR + SDI_ARB_DP3_PRIO_OFFSET)

/* SDI ARB_DP3_ACCOUNT Register (32 bits) */
#define SDI_ARB_DP3_ACCOUNT_OFFSET     0x274
#define SDI_ARB_DP3_ACCOUNT_REG        IOA(SDI_BASE_ADDR + SDI_ARB_DP3_ACCOUNT_OFFSET)

/* SDI PWR_AUTO_SLEEP Register (32 bits) */
#define SDI_PWR_AUTO_SLEEP_OFFSET      0x300
#define SDI_PWR_AUTO_SLEEP_REG         IOA(SDI_BASE_ADDR + SDI_PWR_AUTO_SLEEP_OFFSET)

/* SDI PWR_AUTO_STANDBY Register (32 bits) */
#define SDI_PWR_AUTO_STANDBY_OFFSET    0x304
#define SDI_PWR_AUTO_STANDBY_REG       IOA(SDI_BASE_ADDR + SDI_PWR_AUTO_STANDBY_OFFSET)

/* SDI PWR_EN_WAKEUP Register (32 bits) */
#define SDI_PWR_EN_WAKEUP_OFFSET       0x308
#define SDI_PWR_EN_WAKEUP_REG          IOA(SDI_BASE_ADDR + SDI_PWR_EN_WAKEUP_OFFSET)

/* SDI POWER_DOWN Register (32 bits) */
#define SDI_POWER_DOWN_OFFSET          0xFF4
#define SDI_POWER_DOWN_REG             IOA(SDI_BASE_ADDR + SDI_POWER_DOWN_OFFSET)

/* SDI PHY_CTL1 Register (32 bits) */
#define SDI_PHY_CTL1_OFFSET            0x400
#define SDI_PHY_CTL1_REG               IOA(SDI_BASE_ADDR + SDI_PHY_CTL1_OFFSET)

/* SDI PHY_CTL2 Register (32 bits) */
#define SDI_PHY_CTL2_OFFSET            0x404
#define SDI_PHY_CTL2_REG               IOA(SDI_BASE_ADDR + SDI_PHY_CTL2_OFFSET)

/* SDI PHY_STATUS1 Register (32 bits) */
#define SDI_PHY_STATUS1_OFFSET         0x408
#define SDI_PHY_STATUS1_REG            IOA(SDI_BASE_ADDR + SDI_PHY_STATUS1_OFFSET)

/* SDI PHY_STATUS2 Register (32 bits) */
#define SDI_PHY_STATUS2_OFFSET         0x40C
#define SDI_PHY_STATUS2_REG            IOA(SDI_BASE_ADDR + SDI_PHY_STATUS2_OFFSET)

/* SDI PHY_DRIVE Register (32 bits) */
#define SDI_PHY_DRIVE_OFFSET           0x418
#define SDI_PHY_DRIVE_REG              IOA(SDI_BASE_ADDR + SDI_PHY_DRIVE_OFFSET)

/* SDI PHY_PULLDOWN Register (32 bits) */
#define SDI_PHY_PULLDOWN_OFFSET        0x41C
#define SDI_PHY_PULLDOWN_REG           IOA(SDI_BASE_ADDR + SDI_PHY_PULLDOWN_OFFSET)

/* SDI PHY_RECEIVERS Register (32 bits) */
#define SDI_PHY_RECEIVERS_OFFSET       0x420
#define SDI_PHY_RECEIVERS_REG          IOA(SDI_BASE_ADDR + SDI_PHY_RECEIVERS_OFFSET)

/* SDI PVT_CTL Register (32 bits) */
#define SDI_PVT_CTL_OFFSET             0x480
#define SDI_PVT_CTL_REG                IOA(SDI_BASE_ADDR + SDI_PVT_CTL_OFFSET)

/* SDI PVT_STATUS Register (32 bits) */
#define SDI_PVT_STATUS_OFFSET          0x484
#define SDI_PVT_STATUS_REG             IOA(SDI_BASE_ADDR + SDI_PVT_STATUS_OFFSET)

/* SDI PVT_DATA Register (32 bits) */
#define SDI_PVT_DATA_OFFSET            0x488
#define SDI_PVT_DATA_REG               IOA(SDI_BASE_ADDR + SDI_PVT_DATA_OFFSET)

/* SDI PVT_ADDR Register (32 bits) */
#define SDI_PVT_ADDR_OFFSET            0x48C
#define SDI_PVT_ADDR_REG               IOA(SDI_BASE_ADDR + SDI_PVT_ADDR_OFFSET)

/* SDI PF_CONTROL Register (32 bits) */
#define SDI_PF_CONTROL_OFFSET          0x600
#define SDI_PF_CONTROL_REG             IOA(SDI_BASE_ADDR + SDI_PF_CONTROL_OFFSET)

/* SDI PF_TIMESTAMP Register (32 bits) */
#define SDI_PF_TIMESTAMP_OFFSET        0x604
#define SDI_PF_TIMESTAMP_REG           IOA(SDI_BASE_ADDR + SDI_PF_TIMESTAMP_OFFSET)

/* SDI PF_CONTROL_PORT Register (32 bits) */
#define SDI_PF_CONTROL_PORT_OFFSET     0x610
#define SDI_PF_CONTROL_PORT_REG        IOA(SDI_BASE_ADDR + SDI_PF_CONTROL_PORT_OFFSET)

/* SDI PF_IDLE Register (32 bits) */
#define SDI_PF_IDLE_OFFSET             0x614
#define SDI_PF_IDLE_REG                IOA(SDI_BASE_ADDR + SDI_PF_IDLE_OFFSET)

/* SDI PF_DP0_READ Register (32 bits) */
#define SDI_PF_DP0_READ_OFFSET         0x700
#define SDI_PF_DP0_READ_REG            IOA(SDI_BASE_ADDR + SDI_PF_DP0_READ_OFFSET)

/* SDI PF_DP0_WRITE Register (32 bits) */
#define SDI_PF_DP0_WRITE_OFFSET        0x704
#define SDI_PF_DP0_WRITE_REG           IOA(SDI_BASE_ADDR + SDI_PF_DP0_WRITE_OFFSET)

/* SDI PF_DP0_GREAD Register (32 bits) */
#define SDI_PF_DP0_GREAD_OFFSET        0x708
#define SDI_PF_DP0_GREAD_REG           IOA(SDI_BASE_ADDR + SDI_PF_DP0_GREAD_OFFSET)

/* SDI PF_DP0_GWRITE Register (32 bits) */
#define SDI_PF_DP0_GWRITE_OFFSET       0x70C
#define SDI_PF_DP0_GWRITE_REG          IOA(SDI_BASE_ADDR + SDI_PF_DP0_GWRITE_OFFSET)

/* SDI PF_DP1_READ Register (32 bits) */
#define SDI_PF_DP1_READ_OFFSET         0x710
#define SDI_PF_DP1_READ_REG            IOA(SDI_BASE_ADDR + SDI_PF_DP1_READ_OFFSET)

/* SDI PF_DP1_WRITE Register (32 bits) */
#define SDI_PF_DP1_WRITE_OFFSET        0x714
#define SDI_PF_DP1_WRITE_REG           IOA(SDI_BASE_ADDR + SDI_PF_DP1_WRITE_OFFSET)

/* SDI PF_DP1_GREAD Register (32 bits) */
#define SDI_PF_DP1_GREAD_OFFSET        0x718
#define SDI_PF_DP1_GREAD_REG           IOA(SDI_BASE_ADDR + SDI_PF_DP1_GREAD_OFFSET)

/* SDI PF_DP1_GWRITE Register (32 bits) */
#define SDI_PF_DP1_GWRITE_OFFSET       0x71C
#define SDI_PF_DP1_GWRITE_REG          IOA(SDI_BASE_ADDR + SDI_PF_DP1_GWRITE_OFFSET)

/* SDI PF_DP2_READ Register (32 bits) */
#define SDI_PF_DP2_READ_OFFSET         0x720
#define SDI_PF_DP2_READ_REG            IOA(SDI_BASE_ADDR + SDI_PF_DP2_READ_OFFSET)

/* SDI PF_DP2_WRITE Register (32 bits) */
#define SDI_PF_DP2_WRITE_OFFSET        0x724
#define SDI_PF_DP2_WRITE_REG           IOA(SDI_BASE_ADDR + SDI_PF_DP2_WRITE_OFFSET)

/* SDI PF_DP2_GREAD Register (32 bits) */
#define SDI_PF_DP2_GREAD_OFFSET        0x728
#define SDI_PF_DP2_GREAD_REG           IOA(SDI_BASE_ADDR + SDI_PF_DP2_GREAD_OFFSET)

/* SDI PF_DP2_GWRITE Register (32 bits) */
#define SDI_PF_DP2_GWRITE_OFFSET       0x72C
#define SDI_PF_DP2_GWRITE_REG          IOA(SDI_BASE_ADDR + SDI_PF_DP2_GWRITE_OFFSET)

/* SDI PF_DP3_READ Register (32 bits) */
#define SDI_PF_DP3_READ_OFFSET         0x730
#define SDI_PF_DP3_READ_REG            IOA(SDI_BASE_ADDR + SDI_PF_DP3_READ_OFFSET)

/* SDI PF_DP3_WRITE Register (32 bits) */
#define SDI_PF_DP3_WRITE_OFFSET        0x734
#define SDI_PF_DP3_WRITE_REG           IOA(SDI_BASE_ADDR + SDI_PF_DP3_WRITE_OFFSET)

/* SDI PF_DP3_GREAD Register (32 bits) */
#define SDI_PF_DP3_GREAD_OFFSET        0x738
#define SDI_PF_DP3_GREAD_REG           IOA(SDI_BASE_ADDR + SDI_PF_DP3_GREAD_OFFSET)

/* SDI PF_DP3_GWRITE Register (32 bits) */
#define SDI_PF_DP3_GWRITE_OFFSET       0x73C
#define SDI_PF_DP3_GWRITE_REG          IOA(SDI_BASE_ADDR + SDI_PF_DP3_GWRITE_OFFSET)

/* Register description for CTL */

/* Reset value of register SDI_CTL */
#define SDI_CTL_VALUE                  0x5B

/* Bits definition for register SDI_CTL */
#define SDI_INITIAL_CKE_SHIFT          6
#define SDI_INITIAL_CKE_FIELD          (0xFFFFFFFF - (0x1UL<<SDI_INITIAL_CKE_SHIFT))
#define SDI_INITIAL_CKE_SELF_REFRESH   (0x0UL<<SDI_INITIAL_CKE_SHIFT)
#define SDI_INITIAL_CKE_1              (0x1UL<<SDI_INITIAL_CKE_SHIFT)
#define SDI_INITIAL_CKE                (0x1UL<<SDI_INITIAL_CKE_SHIFT)
#define SDI_BURST_LENGT_SHIFT          3
#define SDI_BURST_LENGT_FIELD          (0xFFFFFFFF - (0x7UL<<SDI_BURST_LENGT_SHIFT))
#define SDI_BURST_LENGT_8              (0x3UL<<SDI_BURST_LENGT_SHIFT)
#define SDI_MEM_TYPE_SHIFT             0
#define SDI_MEM_TYPE_FIELD             (0xFFFFFFFF - (0x7UL<<SDI_MEM_TYPE_SHIFT))
#define SDI_MEM_TYPE_LPDDR             (0x3UL<<SDI_MEM_TYPE_SHIFT)

/*****************************************************************************/
/* Register description for MODE_SET */

/* Reset value of register SDI_MODE_SET */
#define SDI_MODE_SET_VALUE             0x0

/* Bits definition for register SDI_MODE_SET */
#define SDI_RANK1_NOCHANGE_SHIFT       17
#define SDI_RANK1_NOCHANGE_FIELD       (0xFFFFFFFF - (0x1UL<<SDI_RANK1_NOCHANGE_SHIFT))
#define SDI_RANK1_NOCHANGE_FALSE       (0x0UL<<SDI_RANK1_NOCHANGE_SHIFT)
#define SDI_RANK1_NOCHANGE_TRUE        (0x1UL<<SDI_RANK1_NOCHANGE_SHIFT)
#define SDI_RANK1_NOCHANGE             (0x1UL<<SDI_RANK1_NOCHANGE_SHIFT)
#define SDI_RANK0_NOCHANGE_SHIFT       16
#define SDI_RANK0_NOCHANGE_FIELD       (0xFFFFFFFF - (0x1UL<<SDI_RANK0_NOCHANGE_SHIFT))
#define SDI_RANK0_NOCHANGE_FALSE       (0x0UL<<SDI_RANK0_NOCHANGE_SHIFT)
#define SDI_RANK0_NOCHANGE_TRUE        (0x1UL<<SDI_RANK0_NOCHANGE_SHIFT)
#define SDI_RANK0_NOCHANGE             (0x1UL<<SDI_RANK0_NOCHANGE_SHIFT)
#define SDI_SET_MODE_SHIFT             0
#define SDI_SET_MODE_FIELD             (0xFFFFFFFF - (0x7UL<<SDI_SET_MODE_SHIFT))
#define SDI_SET_MODE_RESET             (0x0UL<<SDI_SET_MODE_SHIFT)
#define SDI_SET_MODE_SLEEP             (0x1UL<<SDI_SET_MODE_SHIFT)
#define SDI_SET_MODE_STANDBY           (0x2UL<<SDI_SET_MODE_SHIFT)
#define SDI_SET_MODE_NORMAL            (0x3UL<<SDI_SET_MODE_SHIFT)
#define SDI_SET_MODE_OFF               (0x4UL<<SDI_SET_MODE_SHIFT)

/*****************************************************************************/
/* Register description for MODE_GET */

/* Reset value of register SDI_MODE_GET */
#define SDI_MODE_GET_VALUE             0x0

/* Bits definition for register SDI_MODE_GET */
#define SDI_GET_MODE1_SHIFT            16
#define SDI_GET_MODE1_FIELD            (0xFFFFFFFF - (0x7UL<<SDI_GET_MODE1_SHIFT))
#define SDI_GET_MODE1_RESET            (0x0UL<<SDI_GET_MODE1_SHIFT)
#define SDI_GET_MODE1_SLEEP            (0x1UL<<SDI_GET_MODE1_SHIFT)
#define SDI_GET_MODE1_STANDBY          (0x2UL<<SDI_GET_MODE1_SHIFT)
#define SDI_GET_MODE1_NORMAL           (0x3UL<<SDI_GET_MODE1_SHIFT)
#define SDI_GET_MODE1_OFF              (0x4UL<<SDI_GET_MODE1_SHIFT)
#define SDI_GET_MODE0_SHIFT            0
#define SDI_GET_MODE0_FIELD            (0xFFFFFFFF - (0x7UL<<SDI_GET_MODE0_SHIFT))
#define SDI_GET_MODE0_RESET            (0x0UL<<SDI_GET_MODE0_SHIFT)
#define SDI_GET_MODE0_SLEEP            (0x1UL<<SDI_GET_MODE0_SHIFT)
#define SDI_GET_MODE0_STANDBY          (0x2UL<<SDI_GET_MODE0_SHIFT)
#define SDI_GET_MODE0_NORMAL           (0x3UL<<SDI_GET_MODE0_SHIFT)
#define SDI_GET_MODE0_OFF              (0x4UL<<SDI_GET_MODE0_SHIFT)

/*****************************************************************************/
/* Register description for COMMAND2 */

/* Reset value of register SDI_COMMAND2 */
#define SDI_COMMAND2_VALUE             0x0

/* Bits definition for register SDI_COMMAND2 */
#define SDI_RANK_SELECT_SHIFT          31
#define SDI_RANK_SELECT_FIELD          (0xFFFFFFFF - (0x1UL<<SDI_RANK_SELECT_SHIFT))
#define SDI_RANK_SELECT_RANK0          (0x0UL<<SDI_RANK_SELECT_SHIFT)
#define SDI_RANK_SELECT_RANK1          (0x1UL<<SDI_RANK_SELECT_SHIFT)
#define SDI_RANK_SELECT                (0x1UL<<SDI_RANK_SELECT_SHIFT)
#define SDI_CKE_SHIFT                  24
#define SDI_CKE_FIELD                  (0xFFFFFFFF - (0x1UL<<SDI_CKE_SHIFT))
#define SDI_CKE                        (0x1UL<<SDI_CKE_SHIFT)
#define SDI_CS_SHIFT                   23
#define SDI_CS_FIELD                   (0xFFFFFFFF - (0x1UL<<SDI_CS_SHIFT))
#define SDI_CS                         (0x1UL<<SDI_CS_SHIFT)
#define SDI_RAS_SHIFT                  22
#define SDI_RAS_FIELD                  (0xFFFFFFFF - (0x1UL<<SDI_RAS_SHIFT))
#define SDI_RAS                        (0x1UL<<SDI_RAS_SHIFT)
#define SDI_CAS_SHIFT                  21
#define SDI_CAS_FIELD                  (0xFFFFFFFF - (0x1UL<<SDI_CAS_SHIFT))
#define SDI_CAS                        (0x1UL<<SDI_CAS_SHIFT)
#define SDI_WE_SHIFT                   20
#define SDI_WE_FIELD                   (0xFFFFFFFF - (0x1UL<<SDI_WE_SHIFT))
#define SDI_WE                         (0x1UL<<SDI_WE_SHIFT)
#define SDI_BA_SHIFT                   16
#define SDI_BA_FIELD                   (0xFFFFFFFF - (0x7UL<<SDI_BA_SHIFT))
#define SDI_A_SHIFT                    0
#define SDI_A_FIELD                    (0xFFFFFFFF - (0x3FFFUL<<SDI_A_SHIFT))

/*****************************************************************************/
/* Register description for MR */

/* Reset value of register SDI_MR */
#define SDI_MR_VALUE                   0x33

/* Bits definition for register SDI_MR */
#define SDI_VALUE_SHIFT                0
#define SDI_VALUE_FIELD                (0xFFFFFFFF - (0xFFFFUL<<SDI_VALUE_SHIFT))
#define SDI_VALUE_33                   (0x33UL<<SDI_VALUE_SHIFT)

/*****************************************************************************/
/* Register description for EMR */

/* Reset value of register SDI_EMR */
#define SDI_EMR_VALUE                  0x0

/* Bits definition for register SDI_EMR */
#define SDI_VALUE_SHIFT                0
#define SDI_VALUE_FIELD                (0xFFFFFFFF - (0xFFFFUL<<SDI_VALUE_SHIFT))
#define SDI_VALUE_0                    (0x0UL<<SDI_VALUE_SHIFT)

/*****************************************************************************/
/* Register description for RANK0_CFG */

/* Reset value of register SDI_RANK0_CFG */
#define SDI_RANK0_CFG_VALUE            0x16DA

/* Bits definition for register SDI_RANK0_CFG */
#define SDI_AP_SHIFT                   12
#define SDI_AP_FIELD                   (0xFFFFFFFF - (0x1UL<<SDI_AP_SHIFT))
#define SDI_AP_A8                      (0x0UL<<SDI_AP_SHIFT)
#define SDI_AP_A10                     (0x1UL<<SDI_AP_SHIFT)
#define SDI_AP                         (0x1UL<<SDI_AP_SHIFT)
#define SDI_DATA_WIDTH_SHIFT           10
#define SDI_DATA_WIDTH_FIELD           (0xFFFFFFFF - (0x3UL<<SDI_DATA_WIDTH_SHIFT))
#define SDI_DATA_WIDTH_8_BITS          (0x0UL<<SDI_DATA_WIDTH_SHIFT)
#define SDI_DATA_WIDTH_16_BITS         (0x1UL<<SDI_DATA_WIDTH_SHIFT)
#define SDI_BANK_WIDTH_SHIFT           8
#define SDI_BANK_WIDTH_FIELD           (0xFFFFFFFF - (0x3UL<<SDI_BANK_WIDTH_SHIFT))
#define SDI_BANK_WIDTH_4_BANKS         (0x2UL<<SDI_BANK_WIDTH_SHIFT)
#define SDI_BANK_WIDTH_8_BANKS         (0x3UL<<SDI_BANK_WIDTH_SHIFT)
#define SDI_ROW_WIDTH_SHIFT            4
#define SDI_ROW_WIDTH_FIELD            (0xFFFFFFFF - (0xFUL<<SDI_ROW_WIDTH_SHIFT))
#define SDI_ROW_WIDTH_D                (0xDUL<<SDI_ROW_WIDTH_SHIFT)
#define SDI_COLUMN_WIDTH_SHIFT         0
#define SDI_COLUMN_WIDTH_FIELD         (0xFFFFFFFF - (0xFUL<<SDI_COLUMN_WIDTH_SHIFT))
#define SDI_COLUMN_WIDTH_A             (0xAUL<<SDI_COLUMN_WIDTH_SHIFT)

/*****************************************************************************/
/* Register description for RANK1_CFG */

/* Reset value of register SDI_RANK1_CFG */
#define SDI_RANK1_CFG_VALUE            0xDA

/* Bits definition for register SDI_RANK1_CFG */
#define SDI_ROW_WIDTH_SHIFT            4
#define SDI_ROW_WIDTH_FIELD            (0xFFFFFFFF - (0xFUL<<SDI_ROW_WIDTH_SHIFT))
#define SDI_ROW_WIDTH_D                (0xDUL<<SDI_ROW_WIDTH_SHIFT)
#define SDI_COLUMN_WIDTH_SHIFT         0
#define SDI_COLUMN_WIDTH_FIELD         (0xFFFFFFFF - (0xFUL<<SDI_COLUMN_WIDTH_SHIFT))
#define SDI_COLUMN_WIDTH_A             (0xAUL<<SDI_COLUMN_WIDTH_SHIFT)

/*****************************************************************************/
/* Register description for POWER_DOWN */

/* Reset value of register SDI_POWER_DOWN */
#define SDI_POWER_DOWN_VALUE           0x0

/* Bits definition for register SDI_POWER_DOWN */
#define SDI_POWER_DOWN_SHIFT           0
#define SDI_POWER_DOWN_FIELD           (0xFFFFFFFF - (0x1UL<<SDI_POWER_DOWN_SHIFT))
#define SDI_POWER_DOWN_DISABLED        (0x0UL<<SDI_POWER_DOWN_SHIFT)
#define SDI_POWER_DOWN_ENABLED         (0x1UL<<SDI_POWER_DOWN_SHIFT)
#define SDI_POWER_DOWN                 (0x1UL<<SDI_POWER_DOWN_SHIFT)

/*****************************************************************************/
/* Register description for MODULE_ID */

/* Reset value of register SDI_MODULE_ID */
#define SDI_MODULE_ID_VALUE            0x20328300

/* Bits definition for register SDI_MODULE_ID */
#define SDI_MODULE_ID_SHIFT            16
#define SDI_MODULE_ID_FIELD            (0xFFFFFFFF - (0xFFFFUL<<SDI_MODULE_ID_SHIFT))
#define SDI_MODULE_ID_2032             (0x2032UL<<SDI_MODULE_ID_SHIFT)
#define SDI_MAJOR_REV_SHIFT            12
#define SDI_MAJOR_REV_FIELD            (0xFFFFFFFF - (0xFUL<<SDI_MAJOR_REV_SHIFT))
#define SDI_MAJOR_REV_8                (0x8UL<<SDI_MAJOR_REV_SHIFT)
#define SDI_MINOR_REV_SHIFT            8
#define SDI_MINOR_REV_FIELD            (0xFFFFFFFF - (0xFUL<<SDI_MINOR_REV_SHIFT))
#define SDI_MINOR_REV_3                (0x3UL<<SDI_MINOR_REV_SHIFT)
#define SDI_APERTURE_SHIFT             0
#define SDI_APERTURE_FIELD             (0xFFFFFFFF - (0xFFUL<<SDI_APERTURE_SHIFT))
#define SDI_APERTURE_0                 (0x0UL<<SDI_APERTURE_SHIFT)

/*****************************************************************************/
/* Register description for REGION1_BASE */

/* Reset value of register SDI_REGION1_BASE */
#define SDI_REGION1_BASE_VALUE         0x0

/* Bits definition for register SDI_REGION1_BASE */
#define SDI_REGION_BASE_SHIFT          16
#define SDI_REGION_BASE_FIELD          (0xFFFFFFFF - (0xFFFFUL<<SDI_REGION_BASE_SHIFT))
#define SDI_REGION_BASE_0              (0x0UL<<SDI_REGION_BASE_SHIFT)

/*****************************************************************************/
/* Register description for REGION1_MASK */

/* Reset value of register SDI_REGION1_MASK */
#define SDI_REGION1_MASK_VALUE         0x0

/* Bits definition for register SDI_REGION1_MASK */
#define SDI_REGION_MASK_SHIFT          16
#define SDI_REGION_MASK_FIELD          (0xFFFFFFFF - (0xFFFFUL<<SDI_REGION_MASK_SHIFT))
#define SDI_REGION_MASK_0              (0x0UL<<SDI_REGION_MASK_SHIFT)

/*****************************************************************************/
/* Register description for REGION0_MAPPING */

/* Reset value of register SDI_REGION0_MAPPING */
#define SDI_REGION0_MAPPING_VALUE      0xF

/* Bits definition for register SDI_REGION0_MAPPING */
#define SDI_STRIDE_SHIFT               7
#define SDI_STRIDE_FIELD               (0xFFFFFFFF - (0xFUL<<SDI_STRIDE_SHIFT))
#define SDI_STRIDE_DISABLED            (0x0UL<<SDI_STRIDE_SHIFT)
#define SDI_STRIDE_1024                (0xAUL<<SDI_STRIDE_SHIFT)
#define SDI_STRIDE_2048                (0xBUL<<SDI_STRIDE_SHIFT)
#define SDI_BANK_ALTERNATE_SHIFT       6
#define SDI_BANK_ALTERNATE_FIELD       (0xFFFFFFFF - (0x1UL<<SDI_BANK_ALTERNATE_SHIFT))
#define SDI_BANK_ALTERNATE_DISABLED    (0x0UL<<SDI_BANK_ALTERNATE_SHIFT)
#define SDI_BANK_ALTERNATE_ENABLED     (0x1UL<<SDI_BANK_ALTERNATE_SHIFT)
#define SDI_BANK_ALTERNATE             (0x1UL<<SDI_BANK_ALTERNATE_SHIFT)
#define SDI_BANKS_INTERLEAVED_SHIFT    4
#define SDI_BANKS_INTERLEAVED_FIELD    (0xFFFFFFFF - (0x3UL<<SDI_BANKS_INTERLEAVED_SHIFT))
#define SDI_BANKS_INTERLEAVED_1_BANK   (0x0UL<<SDI_BANKS_INTERLEAVED_SHIFT)
#define SDI_BANKS_INTERLEAVED_2_BANKS  (0x1UL<<SDI_BANKS_INTERLEAVED_SHIFT)
#define SDI_BANKS_INTERLEAVED_4_BANKS  (0x2UL<<SDI_BANKS_INTERLEAVED_SHIFT)
#define SDI_BANK_INTERLEAVING_SHIFT    0
#define SDI_BANK_INTERLEAVING_FIELD    (0xFFFFFFFF - (0xFUL<<SDI_BANK_INTERLEAVING_SHIFT))
#define SDI_BANK_INTERLEAVING_8        (0x3UL<<SDI_BANK_INTERLEAVING_SHIFT)
#define SDI_BANK_INTERLEAVING_16       (0x4UL<<SDI_BANK_INTERLEAVING_SHIFT)
#define SDI_BANK_INTERLEAVING_FULL_ROW (0xFUL<<SDI_BANK_INTERLEAVING_SHIFT)

/*****************************************************************************/
/* Register description for REGION1_MAPPING */

/* Reset value of register SDI_REGION1_MAPPING */
#define SDI_REGION1_MAPPING_VALUE      0xF

/* Bits definition for register SDI_REGION1_MAPPING */
#define SDI_ENABLE_SHIFT               31
#define SDI_ENABLE_FIELD               (0xFFFFFFFF - (0x1UL<<SDI_ENABLE_SHIFT))
#define SDI_ENABLE_DISABLED            (0x0UL<<SDI_ENABLE_SHIFT)
#define SDI_ENABLE_ENABLED             (0x1UL<<SDI_ENABLE_SHIFT)
#define SDI_ENABLE                     (0x1UL<<SDI_ENABLE_SHIFT)
#define SDI_STRIDE_SHIFT               7
#define SDI_STRIDE_FIELD               (0xFFFFFFFF - (0xFUL<<SDI_STRIDE_SHIFT))
#define SDI_STRIDE_NON_STRIDED         (0x0UL<<SDI_STRIDE_SHIFT)
#define SDI_STRIDE_1024                (0xAUL<<SDI_STRIDE_SHIFT)
#define SDI_STRIDE_2048                (0xBUL<<SDI_STRIDE_SHIFT)
#define SDI_BANK_ALTERNATE_SHIFT       6
#define SDI_BANK_ALTERNATE_FIELD       (0xFFFFFFFF - (0x1UL<<SDI_BANK_ALTERNATE_SHIFT))
#define SDI_BANK_ALTERNATE_DISABLED    (0x0UL<<SDI_BANK_ALTERNATE_SHIFT)
#define SDI_BANK_ALTERNATE_ENABLED     (0x1UL<<SDI_BANK_ALTERNATE_SHIFT)
#define SDI_BANK_ALTERNATE             (0x1UL<<SDI_BANK_ALTERNATE_SHIFT)
#define SDI_BANKS_INTERLEAVED_SHIFT    4
#define SDI_BANKS_INTERLEAVED_FIELD    (0xFFFFFFFF - (0x3UL<<SDI_BANKS_INTERLEAVED_SHIFT))
#define SDI_BANKS_INTERLEAVED_1_BANK   (0x0UL<<SDI_BANKS_INTERLEAVED_SHIFT)
#define SDI_BANKS_INTERLEAVED_2_BANKS  (0x1UL<<SDI_BANKS_INTERLEAVED_SHIFT)
#define SDI_BANKS_INTERLEAVED_4_BANKS  (0x2UL<<SDI_BANKS_INTERLEAVED_SHIFT)
#define SDI_BANK_INTERLEAVING_SHIFT    0
#define SDI_BANK_INTERLEAVING_FIELD    (0xFFFFFFFF - (0xFUL<<SDI_BANK_INTERLEAVING_SHIFT))
#define SDI_BANK_INTERLEAVING_8        (0x3UL<<SDI_BANK_INTERLEAVING_SHIFT)
#define SDI_BANK_INTERLEAVING_16       (0x4UL<<SDI_BANK_INTERLEAVING_SHIFT)
#define SDI_BANK_INTERLEAVING_FULL_ROW (0xFUL<<SDI_BANK_INTERLEAVING_SHIFT)

/*****************************************************************************/
/* Register description for TIMING_TRCD */

/* Reset value of register SDI_TIMING_TRCD */
#define SDI_TIMING_TRCD_VALUE          0x30003

/* Bits definition for register SDI_TIMING_TRCD */
#define SDI_TRCD_WR_SHIFT              16
#define SDI_TRCD_WR_FIELD              (0xFFFFFFFF - (0xFUL<<SDI_TRCD_WR_SHIFT))
#define SDI_TRCD_WR_3                  (0x3UL<<SDI_TRCD_WR_SHIFT)
#define SDI_TRCD_RD_SHIFT              0
#define SDI_TRCD_RD_FIELD              (0xFFFFFFFF - (0xFUL<<SDI_TRCD_RD_SHIFT))
#define SDI_TRCD_RD_3                  (0x3UL<<SDI_TRCD_RD_SHIFT)

/*****************************************************************************/
/* Register description for TIMING_TRC */

/* Reset value of register SDI_TIMING_TRC */
#define SDI_TIMING_TRC_VALUE           0x9

/* Bits definition for register SDI_TIMING_TRC */
#define SDI_TRC_SHIFT                  0
#define SDI_TRC_FIELD                  (0xFFFFFFFF - (0x1FUL<<SDI_TRC_SHIFT))
#define SDI_TRC_9                      (0x9UL<<SDI_TRC_SHIFT)

/*****************************************************************************/
/* Register description for TIMING_TWTR */

/* Reset value of register SDI_TIMING_TWTR */
#define SDI_TIMING_TWTR_VALUE          0x1

/* Bits definition for register SDI_TIMING_TWTR */
#define SDI_TWTR_SHIFT                 0
#define SDI_TWTR_FIELD                 (0xFFFFFFFF - (0xFUL<<SDI_TWTR_SHIFT))
#define SDI_TWTR_1                     (0x1UL<<SDI_TWTR_SHIFT)

/*****************************************************************************/
/* Register description for TIMING_TWR */

/* Reset value of register SDI_TIMING_TWR */
#define SDI_TIMING_TWR_VALUE           0x1

/* Bits definition for register SDI_TIMING_TWR */
#define SDI_TWR_SHIFT                  0
#define SDI_TWR_FIELD                  (0xFFFFFFFF - (0xFUL<<SDI_TWR_SHIFT))
#define SDI_TWR_1                      (0x1UL<<SDI_TWR_SHIFT)

/*****************************************************************************/
/* Register description for TIMING_TRP */

/* Reset value of register SDI_TIMING_TRP */
#define SDI_TIMING_TRP_VALUE           0x20002

/* Bits definition for register SDI_TIMING_TRP */
#define SDI_TRPA_SHIFT                 16
#define SDI_TRPA_FIELD                 (0xFFFFFFFF - (0xFUL<<SDI_TRPA_SHIFT))
#define SDI_TRPA_2                     (0x2UL<<SDI_TRPA_SHIFT)
#define SDI_TRP_SHIFT                  0
#define SDI_TRP_FIELD                  (0xFFFFFFFF - (0xFUL<<SDI_TRP_SHIFT))
#define SDI_TRP_2                      (0x2UL<<SDI_TRP_SHIFT)

/*****************************************************************************/
/* Register description for TIMING_TRAS */

/* Reset value of register SDI_TIMING_TRAS */
#define SDI_TIMING_TRAS_VALUE          0x6

/* Bits definition for register SDI_TIMING_TRAS */
#define SDI_TRAS_SHIFT                 0
#define SDI_TRAS_FIELD                 (0xFFFFFFFF - (0xFUL<<SDI_TRAS_SHIFT))
#define SDI_TRAS_6                     (0x6UL<<SDI_TRAS_SHIFT)

/*****************************************************************************/
/* Register description for TIMING_TRRD */

/* Reset value of register SDI_TIMING_TRRD */
#define SDI_TIMING_TRRD_VALUE          0x20001

/* Bits definition for register SDI_TIMING_TRRD */
#define SDI_TFAW_SHIFT                 16
#define SDI_TFAW_FIELD                 (0xFFFFFFFF - (0x7FUL<<SDI_TFAW_SHIFT))
#define SDI_TFAW_2                     (0x2UL<<SDI_TFAW_SHIFT)
#define SDI_TRRD_SHIFT                 0
#define SDI_TRRD_FIELD                 (0xFFFFFFFF - (0xFUL<<SDI_TRRD_SHIFT))
#define SDI_TRRD_1                     (0x1UL<<SDI_TRRD_SHIFT)

/*****************************************************************************/
/* Register description for TIMING_TRFC */

/* Reset value of register SDI_TIMING_TRFC */
#define SDI_TIMING_TRFC_VALUE          0x10

/* Bits definition for register SDI_TIMING_TRFC */
#define SDI_TRFC_SHIFT                 0
#define SDI_TRFC_FIELD                 (0xFFFFFFFF - (0xFFUL<<SDI_TRFC_SHIFT))
#define SDI_TRFC_10                    (0x10UL<<SDI_TRFC_SHIFT)

/*****************************************************************************/
/* Register description for TIMING_TMRD */

/* Reset value of register SDI_TIMING_TMRD */
#define SDI_TIMING_TMRD_VALUE          0x1

/* Bits definition for register SDI_TIMING_TMRD */
#define SDI_TMRD_SHIFT                 0
#define SDI_TMRD_FIELD                 (0xFFFFFFFF - (0xFUL<<SDI_TMRD_SHIFT))
#define SDI_TMRD_1                     (0x1UL<<SDI_TMRD_SHIFT)

/*****************************************************************************/
/* Register description for TIMING_LTCY */

/* Reset value of register SDI_TIMING_LTCY */
#define SDI_TIMING_LTCY_VALUE          0x10006

/* Bits definition for register SDI_TIMING_LTCY */
#define SDI_TWL_SHIFT                  16
#define SDI_TWL_FIELD                  (0xFFFFFFFF - (0xFUL<<SDI_TWL_SHIFT))
#define SDI_TWL_1                      (0x1UL<<SDI_TWL_SHIFT)
#define SDI_TRL_SHIFT                  0
#define SDI_TRL_FIELD                  (0xFFFFFFFF - (0xFUL<<SDI_TRL_SHIFT))
#define SDI_TRL_6                      (0x6UL<<SDI_TRL_SHIFT)

/*****************************************************************************/
/* Register description for REFRESH */

/* Reset value of register SDI_REFRESH */
#define SDI_REFRESH_VALUE              0x2032D

/* Bits definition for register SDI_REFRESH */
#define SDI_MAX_QUEUED_SHIFT           16
#define SDI_MAX_QUEUED_FIELD           (0xFFFFFFFF - (0xFUL<<SDI_MAX_QUEUED_SHIFT))
#define SDI_MAX_QUEUED_2               (0x2UL<<SDI_MAX_QUEUED_SHIFT)
#define SDI_PERIOD_SHIFT               0
#define SDI_PERIOD_FIELD               (0xFFFFFFFF - (0xFFFFUL<<SDI_PERIOD_SHIFT))
#define SDI_PERIOD_32D                 (0x32DUL<<SDI_PERIOD_SHIFT)

/*****************************************************************************/
/* Register description for TIMING_TXSR */

/* Reset value of register SDI_TIMING_TXSR */
#define SDI_TIMING_TXSR_VALUE          0x140010

/* Bits definition for register SDI_TIMING_TXSR */
#define SDI_TXSRD_SHIFT                16
#define SDI_TXSRD_FIELD                (0xFFFFFFFF - (0x3FFUL<<SDI_TXSRD_SHIFT))
#define SDI_TXSRD_14                   (0x14UL<<SDI_TXSRD_SHIFT)
#define SDI_TXSNR_SHIFT                0
#define SDI_TXSNR_FIELD                (0xFFFFFFFF - (0x3FFUL<<SDI_TXSNR_SHIFT))
#define SDI_TXSNR_10                   (0x10UL<<SDI_TXSNR_SHIFT)

/*****************************************************************************/
/* Register description for TIMING_TRTW */

/* Reset value of register SDI_TIMING_TRTW */
#define SDI_TIMING_TRTW_VALUE          0x7

/* Bits definition for register SDI_TIMING_TRTW */
#define SDI_TRTW_SHIFT                 0
#define SDI_TRTW_FIELD                 (0xFFFFFFFF - (0x1FUL<<SDI_TRTW_SHIFT))
#define SDI_TRTW_7                     (0x7UL<<SDI_TRTW_SHIFT)

/*****************************************************************************/
/* Register description for TIMING_TCKE */

/* Reset value of register SDI_TIMING_TCKE */
#define SDI_TIMING_TCKE_VALUE          0x0

/* Bits definition for register SDI_TIMING_TCKE */
#define SDI_TCKE_SHIFT                 0
#define SDI_TCKE_FIELD                 (0xFFFFFFFF - (0xFFUL<<SDI_TCKE_SHIFT))
#define SDI_TCKE_0                     (0x0UL<<SDI_TCKE_SHIFT)

/*****************************************************************************/
/* Register description for ARB_DP[3:0]_BUDGET */

/* Reset value of register SDI_ARB_DP[3:0]_BUDGET */
#define SDI_ARB_DP0_BUDGET_VALUE       0x104
#define SDI_ARB_DP1_BUDGET_VALUE       0x104
#define SDI_ARB_DP2_BUDGET_VALUE       0x104
#define SDI_ARB_DP3_BUDGET_VALUE       0x104

/* Bits definition for register SDI_ARB_DP[3:0]_BUDGET */
#define SDI_NUMERATOR_SHIFT            8
#define SDI_NUMERATOR_FIELD            (0xFFFFFFFF - (0xFFUL<<SDI_NUMERATOR_SHIFT))
#define SDI_NUMERATOR_0                (0x0UL<<SDI_NUMERATOR_SHIFT)
#define SDI_DENOMINATOR_SHIFT          0
#define SDI_DENOMINATOR_FIELD          (0xFFFFFFFF - (0xFFUL<<SDI_DENOMINATOR_SHIFT))
#define SDI_DENOMINATOR_104            (0x104UL<<SDI_DENOMINATOR_SHIFT)

/*****************************************************************************/
/* Register description for ARB_DP[3:0]_CLIP */

/* Reset value of register SDI_ARB_DP[3:0]_CLIP */
#define SDI_ARB_DP0_CLIP_VALUE         0x40
#define SDI_ARB_DP1_CLIP_VALUE         0x40
#define SDI_ARB_DP2_CLIP_VALUE         0x40
#define SDI_ARB_DP3_CLIP_VALUE         0x40

/* Bits definition for register SDI_ARB_DP[3:0]_CLIP */
#define SDI_CLIP_SHIFT                 0
#define SDI_CLIP_FIELD                 (0xFFFFFFFF - (0xFFFFUL<<SDI_CLIP_SHIFT))
#define SDI_CLIP_40                    (0x40UL<<SDI_CLIP_SHIFT)

/*****************************************************************************/
/* Register description for ARB_DP[3:2]_LIMIT */

/* Reset value of register SDI_ARB_DP[3:2]_LIMIT */
#define SDI_ARB_DP2_LIMIT_VALUE        0x40
#define SDI_ARB_DP3_LIMIT_VALUE        0x40

/* Bits definition for register SDI_ARB_DP[3:2]_LIMIT */
#define SDI_LIMIT_SHIFT                0
#define SDI_LIMIT_FIELD                (0xFFFFFFFF - (0xFFFFUL<<SDI_LIMIT_SHIFT))
#define SDI_LIMIT_40                   (0x40UL<<SDI_LIMIT_SHIFT)

/*****************************************************************************/
/* Register description for ARB_DP[1:0]_LIMIT */

/* Reset value of register SDI_ARB_DP[1:0]_LIMIT */
#define SDI_ARB_DP0_LIMIT_VALUE        0x30
#define SDI_ARB_DP1_LIMIT_VALUE        0x30

/* Bits definition for register SDI_ARB_DP[1:0]_LIMIT */
#define SDI_LIMIT_SHIFT                0
#define SDI_LIMIT_FIELD                (0xFFFFFFFF - (0xFFFFUL<<SDI_LIMIT_SHIFT))
#define SDI_LIMIT_30                   (0x30UL<<SDI_LIMIT_SHIFT)

/*****************************************************************************/
/* Register description for ARB_DP[3:2]_BOOST */

/* Reset value of register SDI_ARB_DP[3:2]_BOOST */
#define SDI_ARB_DP2_BOOST_VALUE        0x10
#define SDI_ARB_DP3_BOOST_VALUE        0x10

/* Bits definition for register SDI_ARB_DP[3:2]_BOOST */
#define SDI_BOOST_SHIFT                0
#define SDI_BOOST_FIELD                (0xFFFFFFFF - (0xFFFFUL<<SDI_BOOST_SHIFT))
#define SDI_BOOST_10                   (0x10UL<<SDI_BOOST_SHIFT)

/*****************************************************************************/
/* Register description for ARB_DP[1:0]_BOOST */

/* Reset value of register SDI_ARB_DP[1:0]_BOOST */
#define SDI_ARB_DP0_BOOST_VALUE        0x0
#define SDI_ARB_DP1_BOOST_VALUE        0x0

/* Bits definition for register SDI_ARB_DP[1:0]_BOOST */
#define SDI_BOOST_SHIFT                0
#define SDI_BOOST_FIELD                (0xFFFFFFFF - (0xFFFFUL<<SDI_BOOST_SHIFT))
#define SDI_BOOST_0                    (0x0UL<<SDI_BOOST_SHIFT)

/*****************************************************************************/
/* Register description for ARB_DP[3:2]_PRIO */

/* Reset value of register SDI_ARB_DP[3:2]_PRIO */
#define SDI_ARB_DP2_PRIO_VALUE         0x112
#define SDI_ARB_DP3_PRIO_VALUE         0x112

/* Bits definition for register SDI_ARB_DP[3:2]_PRIO */
#define SDI_LIMITED_SHIFT              8
#define SDI_LIMITED_FIELD              (0xFFFFFFFF - (0xFUL<<SDI_LIMITED_SHIFT))
#define SDI_LIMITED_1                  (0x1UL<<SDI_LIMITED_SHIFT)
#define SDI_DEFAULT_SHIFT              4
#define SDI_DEFAULT_FIELD              (0xFFFFFFFF - (0xFUL<<SDI_DEFAULT_SHIFT))
#define SDI_DEFAULT_1                  (0x1UL<<SDI_DEFAULT_SHIFT)
#define SDI_BOOSTED_SHIFT              0
#define SDI_BOOSTED_FIELD              (0xFFFFFFFF - (0xFUL<<SDI_BOOSTED_SHIFT))
#define SDI_BOOSTED_2                  (0x2UL<<SDI_BOOSTED_SHIFT)

/*****************************************************************************/
/* Register description for ARB_DP[1:0]_PRIO */

/* Reset value of register SDI_ARB_DP[1:0]_PRIO */
#define SDI_ARB_DP0_PRIO_VALUE         0x122
#define SDI_ARB_DP1_PRIO_VALUE         0x122

/* Bits definition for register SDI_ARB_DP[1:0]_PRIO */
#define SDI_LIMITED_SHIFT              8
#define SDI_LIMITED_FIELD              (0xFFFFFFFF - (0xFUL<<SDI_LIMITED_SHIFT))
#define SDI_LIMITED_1                  (0x1UL<<SDI_LIMITED_SHIFT)
#define SDI_DEFAULT_SHIFT              4
#define SDI_DEFAULT_FIELD              (0xFFFFFFFF - (0xFUL<<SDI_DEFAULT_SHIFT))
#define SDI_DEFAULT_2                  (0x2UL<<SDI_DEFAULT_SHIFT)
#define SDI_BOOSTED_SHIFT              0
#define SDI_BOOSTED_FIELD              (0xFFFFFFFF - (0xFUL<<SDI_BOOSTED_SHIFT))
#define SDI_BOOSTED_2                  (0x2UL<<SDI_BOOSTED_SHIFT)

/*****************************************************************************/
/* Register description for ARB_DP[3:0]_ACCOUNT */

/* Reset value of register SDI_ARB_DP[3:0]_ACCOUNT */
#define SDI_ARB_DP0_ACCOUNT_VALUE      0x0
#define SDI_ARB_DP1_ACCOUNT_VALUE      0x0
#define SDI_ARB_DP2_ACCOUNT_VALUE      0x0
#define SDI_ARB_DP3_ACCOUNT_VALUE      0x0

/* Bits definition for register SDI_ARB_DP[3:0]_ACCOUNT */
#define SDI_ACCOUNT_SHIFT              0
#define SDI_ACCOUNT_FIELD              (0xFFFFFFFF - (0xFFFFUL<<SDI_ACCOUNT_SHIFT))
#define SDI_ACCOUNT_0                  (0x0UL<<SDI_ACCOUNT_SHIFT)

/*****************************************************************************/
/* Register description for PWR_AUTO_STANDBY */

/* Reset value of register SDI_PWR_AUTO_STANDBY */
#define SDI_PWR_AUTO_STANDBY_VALUE     0x0

/* Bits definition for register SDI_PWR_AUTO_STANDBY */
#define SDI_AUTO_STANDBY_SHIFT         0
#define SDI_AUTO_STANDBY_FIELD         (0xFFFFFFFF - (0xFFFFUL<<SDI_AUTO_STANDBY_SHIFT))
#define SDI_AUTO_STANDBY_DISABLED      (0x0UL<<SDI_AUTO_STANDBY_SHIFT)

/*****************************************************************************/
/* Register description for PWR_AUTO_SLEEP */

/* Reset value of register SDI_PWR_AUTO_SLEEP */
#define SDI_PWR_AUTO_SLEEP_VALUE       0x0

/* Bits definition for register SDI_PWR_AUTO_SLEEP */
#define SDI_AUTO_SLEEP_SHIFT           0
#define SDI_AUTO_SLEEP_FIELD           (0xFFFFFFFF - (0xFFFFUL<<SDI_AUTO_SLEEP_SHIFT))
#define SDI_AUTO_SLEEP_DISABLED        (0x0UL<<SDI_AUTO_SLEEP_SHIFT)
#define SDI_AUTO_SLEEP_1               (0x1UL<<SDI_AUTO_SLEEP_SHIFT)

/*****************************************************************************/
/* Register description for PWR_EN_WAKEUP */

/* Reset value of register SDI_PWR_EN_WAKEUP */
#define SDI_PWR_EN_WAKEUP_VALUE        0x2

/* Bits definition for register SDI_PWR_EN_WAKEUP */
#define SDI_PORT3_STALL_SHIFT          5
#define SDI_PORT3_STALL_FIELD          (0xFFFFFFFF - (0x1UL<<SDI_PORT3_STALL_SHIFT))
#define SDI_PORT3_STALL_DISABLED       (0x0UL<<SDI_PORT3_STALL_SHIFT)
#define SDI_PORT3_STALL_ENABLED        (0x1UL<<SDI_PORT3_STALL_SHIFT)
#define SDI_PORT3_STALL                (0x1UL<<SDI_PORT3_STALL_SHIFT)
#define SDI_PORT2_STALL_SHIFT          4
#define SDI_PORT2_STALL_FIELD          (0xFFFFFFFF - (0x1UL<<SDI_PORT2_STALL_SHIFT))
#define SDI_PORT2_STALL_DISABLED       (0x0UL<<SDI_PORT2_STALL_SHIFT)
#define SDI_PORT2_STALL_ENABLED        (0x1UL<<SDI_PORT2_STALL_SHIFT)
#define SDI_PORT2_STALL                (0x1UL<<SDI_PORT2_STALL_SHIFT)
#define SDI_PORT1_STALL_SHIFT          3
#define SDI_PORT1_STALL_FIELD          (0xFFFFFFFF - (0x1UL<<SDI_PORT1_STALL_SHIFT))
#define SDI_PORT1_STALL_DISABLED       (0x0UL<<SDI_PORT1_STALL_SHIFT)
#define SDI_PORT1_STALL_ENABLED        (0x1UL<<SDI_PORT1_STALL_SHIFT)
#define SDI_PORT1_STALL                (0x1UL<<SDI_PORT1_STALL_SHIFT)
#define SDI_PORT0_STALL_SHIFT          2
#define SDI_PORT0_STALL_FIELD          (0xFFFFFFFF - (0x1UL<<SDI_PORT0_STALL_SHIFT))
#define SDI_PORT0_STALL_DISABLED       (0x0UL<<SDI_PORT0_STALL_SHIFT)
#define SDI_PORT0_STALL_ENABLED        (0x1UL<<SDI_PORT0_STALL_SHIFT)
#define SDI_PORT0_STALL                (0x1UL<<SDI_PORT0_STALL_SHIFT)
#define SDI_SW_STANDBY_WAKEUP_SHIFT    0
#define SDI_SW_STANDBY_WAKEUP_FIELD    (0xFFFFFFFF - (0x1UL<<SDI_SW_STANDBY_WAKEUP_SHIFT))
#define SDI_SW_STANDBY_WAKEUP_SWONLY   (0x0UL<<SDI_SW_STANDBY_WAKEUP_SHIFT)
#define SDI_SW_STANDBY_WAKEUP_PORTACTIVITY         (0x1UL<<SDI_SW_STANDBY_WAKEUP_SHIFT)
#define SDI_SW_STANDBY_WAKEUP          (0x1UL<<SDI_SW_STANDBY_WAKEUP_SHIFT)

/*****************************************************************************/
/* Register description for PHY_CTL1 */

/* Reset value of register SDI_PHY_CTL1 */
#define SDI_PHY_CTL1_VALUE             0x17A0040C

/* Bits definition for register SDI_PHY_CTL1 */
#define SDI_DISABLE_CLOCK_STOP_SHIFT   29
#define SDI_DISABLE_CLOCK_STOP_FIELD   (0xFFFFFFFF - (0x1UL<<SDI_DISABLE_CLOCK_STOP_SHIFT))
#define SDI_DISABLE_CLOCK_STOP_ENABLED (0x0UL<<SDI_DISABLE_CLOCK_STOP_SHIFT)
#define SDI_DISABLE_CLOCK_STOP_DISABLED            (0x1UL<<SDI_DISABLE_CLOCK_STOP_SHIFT)
#define SDI_DISABLE_CLOCK_STOP         (0x1UL<<SDI_DISABLE_CLOCK_STOP_SHIFT)
#define SDI_FORCE_ADDIO_EN_SHIFT       28
#define SDI_FORCE_ADDIO_EN_FIELD       (0xFFFFFFFF - (0x1UL<<SDI_FORCE_ADDIO_EN_SHIFT))
#define SDI_FORCE_ADDIO_EN_0           (0x0UL<<SDI_FORCE_ADDIO_EN_SHIFT)
#define SDI_FORCE_ADDIO_EN_1           (0x1UL<<SDI_FORCE_ADDIO_EN_SHIFT)
#define SDI_FORCE_ADDIO_EN             (0x1UL<<SDI_FORCE_ADDIO_EN_SHIFT)
#define SDI_ENABLE_DEGLITCH_SHIFT      27
#define SDI_ENABLE_DEGLITCH_FIELD      (0xFFFFFFFF - (0x1UL<<SDI_ENABLE_DEGLITCH_SHIFT))
#define SDI_ENABLE_DEGLITCH_DISABLED   (0x0UL<<SDI_ENABLE_DEGLITCH_SHIFT)
#define SDI_ENABLE_DEGLITCH_ENABLED    (0x1UL<<SDI_ENABLE_DEGLITCH_SHIFT)
#define SDI_ENABLE_DEGLITCH            (0x1UL<<SDI_ENABLE_DEGLITCH_SHIFT)
#define SDI_DLL_LOCK_TIME_SHIFT        17
#define SDI_DLL_LOCK_TIME_FIELD        (0xFFFFFFFF - (0x3FFUL<<SDI_DLL_LOCK_TIME_SHIFT))
#define SDI_DLL_LOCK_TIME_3D0          (0x3D0UL<<SDI_DLL_LOCK_TIME_SHIFT)
#define SDI_DLL_RESET_DURATION_SHIFT   7
#define SDI_DLL_RESET_DURATION_FIELD   (0xFFFFFFFF - (0x3FFUL<<SDI_DLL_RESET_DURATION_SHIFT))
#define SDI_DLL_RESET_DURATION_8       (0x8UL<<SDI_DLL_RESET_DURATION_SHIFT)
#define SDI_DLL_RESET_SHIFT            6
#define SDI_DLL_RESET_FIELD            (0xFFFFFFFF - (0x1UL<<SDI_DLL_RESET_SHIFT))
#define SDI_DLL_RESET_NORMAL           (0x0UL<<SDI_DLL_RESET_SHIFT)
#define SDI_DLL_RESET_1                (0x1UL<<SDI_DLL_RESET_SHIFT)
#define SDI_DLL_RESET                  (0x1UL<<SDI_DLL_RESET_SHIFT)
#define SDI_READ_PATH_RESET_SHIFT      5
#define SDI_READ_PATH_RESET_FIELD      (0xFFFFFFFF - (0x1UL<<SDI_READ_PATH_RESET_SHIFT))
#define SDI_READ_PATH_RESET_NORMAL     (0x0UL<<SDI_READ_PATH_RESET_SHIFT)
#define SDI_READ_PATH_RESET_RESET      (0x1UL<<SDI_READ_PATH_RESET_SHIFT)
#define SDI_READ_PATH_RESET            (0x1UL<<SDI_READ_PATH_RESET_SHIFT)
#define SDI_CAPTURE_DELAY_SHIFT        1
#define SDI_CAPTURE_DELAY_FIELD        (0xFFFFFFFF - (0xFUL<<SDI_CAPTURE_DELAY_SHIFT))
#define SDI_CAPTURE_DELAY_6            (0x6UL<<SDI_CAPTURE_DELAY_SHIFT)
#define SDI_SE_STROBE_SHIFT            0
#define SDI_SE_STROBE_FIELD            (0xFFFFFFFF - (0x1UL<<SDI_SE_STROBE_SHIFT))
#define SDI_SE_STROBE_DIFFERENTIAL     (0x0UL<<SDI_SE_STROBE_SHIFT)
#define SDI_SE_STROBE_SINGLE_ENDED     (0x1UL<<SDI_SE_STROBE_SHIFT)
#define SDI_SE_STROBE                  (0x1UL<<SDI_SE_STROBE_SHIFT)

/*****************************************************************************/
/* Register description for PHY_CTL2 */

/* Reset value of register SDI_PHY_CTL2 */
#define SDI_PHY_CTL2_VALUE             0x0

/* Bits definition for register SDI_PHY_CTL2 */
#define SDI_THRESHOLD2_SHIFT           24
#define SDI_THRESHOLD2_FIELD           (0xFFFFFFFF - (0xFUL<<SDI_THRESHOLD2_SHIFT))
#define SDI_THRESHOLD2_0               (0x0UL<<SDI_THRESHOLD2_SHIFT)
#define SDI_THRESHOLD1_SHIFT           20
#define SDI_THRESHOLD1_FIELD           (0xFFFFFFFF - (0xFUL<<SDI_THRESHOLD1_SHIFT))
#define SDI_THRESHOLD1_0               (0x0UL<<SDI_THRESHOLD1_SHIFT)
#define SDI_THRESHOLD0_SHIFT           16
#define SDI_THRESHOLD0_FIELD           (0xFFFFFFFF - (0xFUL<<SDI_THRESHOLD0_SHIFT))
#define SDI_THRESHOLD0_0               (0x0UL<<SDI_THRESHOLD0_SHIFT)
#define SDI_SYNC_MODE2_SHIFT           14
#define SDI_SYNC_MODE2_FIELD           (0xFFFFFFFF - (0x3UL<<SDI_SYNC_MODE2_SHIFT))
#define SDI_SYNC_MODE2_ASYNCHRONOUS    (0x0UL<<SDI_SYNC_MODE2_SHIFT)
#define SDI_SYNC_MODE2_SYNCHRONOUS     (0x1UL<<SDI_SYNC_MODE2_SHIFT)
#define SDI_SYNC_MODE2_SYNCHRONOUS_WITH_INTEGER_CLOCK_RATIO (0x2UL<<SDI_SYNC_MODE2_SHIFT)
#define SDI_SYNC_MODE2_3               (0x3UL<<SDI_SYNC_MODE2_SHIFT)
#define SDI_SYNC_MODE1_SHIFT           12
#define SDI_SYNC_MODE1_FIELD           (0xFFFFFFFF - (0x3UL<<SDI_SYNC_MODE1_SHIFT))
#define SDI_SYNC_MODE1_ASYNCHRONOUS    (0x0UL<<SDI_SYNC_MODE1_SHIFT)
#define SDI_SYNC_MODE1_SYNCHRONOUS     (0x1UL<<SDI_SYNC_MODE1_SHIFT)
#define SDI_SYNC_MODE1_SYNCHRONOUS_WITH_INTEGER_CLOCK_RATIO (0x2UL<<SDI_SYNC_MODE1_SHIFT)
#define SDI_SYNC_MODE1_3               (0x3UL<<SDI_SYNC_MODE1_SHIFT)
#define SDI_SYNC_MODE0_SHIFT           10
#define SDI_SYNC_MODE0_FIELD           (0xFFFFFFFF - (0x3UL<<SDI_SYNC_MODE0_SHIFT))
#define SDI_SYNC_MODE0_ASYNCHRONOUS    (0x0UL<<SDI_SYNC_MODE0_SHIFT)
#define SDI_SYNC_MODE0_SYNCHRONOUS     (0x1UL<<SDI_SYNC_MODE0_SHIFT)
#define SDI_SYNC_MODE0_SYNCHRONOUS_WITH_INTEGER_CLOCK_RATIO (0x2UL<<SDI_SYNC_MODE0_SHIFT)
#define SDI_SYNC_MODE0_3               (0x3UL<<SDI_SYNC_MODE0_SHIFT)
#define SDI_IDLE_REQ_SHIFT             7
#define SDI_IDLE_REQ_FIELD             (0xFFFFFFFF - (0x7UL<<SDI_IDLE_REQ_SHIFT))
#define SDI_IDLE_REQ_0                 (0x0UL<<SDI_IDLE_REQ_SHIFT)
#define SDI_RESET2_SHIFT               6
#define SDI_RESET2_FIELD               (0xFFFFFFFF - (0x1UL<<SDI_RESET2_SHIFT))
#define SDI_RESET2_INACTIVE            (0x0UL<<SDI_RESET2_SHIFT)
#define SDI_RESET2_ACTIVE              (0x1UL<<SDI_RESET2_SHIFT)
#define SDI_RESET2                     (0x1UL<<SDI_RESET2_SHIFT)
#define SDI_RESET1_SHIFT               5
#define SDI_RESET1_FIELD               (0xFFFFFFFF - (0x1UL<<SDI_RESET1_SHIFT))
#define SDI_RESET1_INACTIVE            (0x0UL<<SDI_RESET1_SHIFT)
#define SDI_RESET1_ACTIVE              (0x1UL<<SDI_RESET1_SHIFT)
#define SDI_RESET1                     (0x1UL<<SDI_RESET1_SHIFT)
#define SDI_RESET0_SHIFT               4
#define SDI_RESET0_FIELD               (0xFFFFFFFF - (0x1UL<<SDI_RESET0_SHIFT))
#define SDI_RESET0_INACTIVE            (0x0UL<<SDI_RESET0_SHIFT)
#define SDI_RESET0_ACTIVE              (0x1UL<<SDI_RESET0_SHIFT)
#define SDI_RESET0                     (0x1UL<<SDI_RESET0_SHIFT)
#define SDI_INIT_START1_SHIFT          1
#define SDI_INIT_START1_FIELD          (0xFFFFFFFF - (0x1UL<<SDI_INIT_START1_SHIFT))
#define SDI_INIT_START1_0              (0x0UL<<SDI_INIT_START1_SHIFT)
#define SDI_INIT_START1_1              (0x1UL<<SDI_INIT_START1_SHIFT)
#define SDI_INIT_START1                (0x1UL<<SDI_INIT_START1_SHIFT)
#define SDI_INIT_START0_SHIFT          0
#define SDI_INIT_START0_FIELD          (0xFFFFFFFF - (0x1UL<<SDI_INIT_START0_SHIFT))
#define SDI_INIT_START0_0              (0x0UL<<SDI_INIT_START0_SHIFT)
#define SDI_INIT_START0_1              (0x1UL<<SDI_INIT_START0_SHIFT)
#define SDI_INIT_START0                (0x1UL<<SDI_INIT_START0_SHIFT)

/*****************************************************************************/
/* Register description for PHY_STATUS1 */

/* Reset value of register SDI_PHY_STATUS1 */
#define SDI_PHY_STATUS1_VALUE          0x0

/* Bits definition for register SDI_PHY_STATUS1 */
#define SDI_DLL_LOCKED_SHIFT           0
#define SDI_DLL_LOCKED_FIELD           (0xFFFFFFFF - (0x3UL<<SDI_DLL_LOCKED_SHIFT))
#define SDI_DLL_LOCKED_0               (0x0UL<<SDI_DLL_LOCKED_SHIFT)

/*****************************************************************************/
/* Register description for PHY_STATUS2 */

/* Reset value of register SDI_PHY_STATUS2 */
#define SDI_PHY_STATUS2_VALUE          0x0

/* Bits definition for register SDI_PHY_STATUS2 */
#define SDI_IDLE_READY2_SHIFT          9
#define SDI_IDLE_READY2_FIELD          (0xFFFFFFFF - (0x1UL<<SDI_IDLE_READY2_SHIFT))
#define SDI_IDLE_READY2_0              (0x0UL<<SDI_IDLE_READY2_SHIFT)
#define SDI_IDLE_READY2_1              (0x1UL<<SDI_IDLE_READY2_SHIFT)
#define SDI_IDLE_READY2                (0x1UL<<SDI_IDLE_READY2_SHIFT)
#define SDI_IDLE_READY1_SHIFT          8
#define SDI_IDLE_READY1_FIELD          (0xFFFFFFFF - (0x1UL<<SDI_IDLE_READY1_SHIFT))
#define SDI_IDLE_READY1_0              (0x0UL<<SDI_IDLE_READY1_SHIFT)
#define SDI_IDLE_READY1_1              (0x1UL<<SDI_IDLE_READY1_SHIFT)
#define SDI_IDLE_READY1                (0x1UL<<SDI_IDLE_READY1_SHIFT)
#define SDI_IDLE_READY0_SHIFT          7
#define SDI_IDLE_READY0_FIELD          (0xFFFFFFFF - (0x1UL<<SDI_IDLE_READY0_SHIFT))
#define SDI_IDLE_READY0_0              (0x0UL<<SDI_IDLE_READY0_SHIFT)
#define SDI_IDLE_READY0_1              (0x1UL<<SDI_IDLE_READY0_SHIFT)
#define SDI_IDLE_READY0                (0x1UL<<SDI_IDLE_READY0_SHIFT)
#define SDI_PVT_DS0_SHIFT              3
#define SDI_PVT_DS0_FIELD              (0xFFFFFFFF - (0x1UL<<SDI_PVT_DS0_SHIFT))
#define SDI_PVT_DS0_0                  (0x0UL<<SDI_PVT_DS0_SHIFT)
#define SDI_PVT_DS0_1                  (0x1UL<<SDI_PVT_DS0_SHIFT)
#define SDI_PVT_DS0                    (0x1UL<<SDI_PVT_DS0_SHIFT)
#define SDI_PVT_DF0_SHIFT              2
#define SDI_PVT_DF0_FIELD              (0xFFFFFFFF - (0x1UL<<SDI_PVT_DF0_SHIFT))
#define SDI_PVT_DF0_0                  (0x0UL<<SDI_PVT_DF0_SHIFT)
#define SDI_PVT_DF0_1                  (0x1UL<<SDI_PVT_DF0_SHIFT)
#define SDI_PVT_DF0                    (0x1UL<<SDI_PVT_DF0_SHIFT)
#define SDI_INITIALIZED1_SHIFT         1
#define SDI_INITIALIZED1_FIELD         (0xFFFFFFFF - (0x1UL<<SDI_INITIALIZED1_SHIFT))
#define SDI_INITIALIZED1_0             (0x0UL<<SDI_INITIALIZED1_SHIFT)
#define SDI_INITIALIZED1_1             (0x1UL<<SDI_INITIALIZED1_SHIFT)
#define SDI_INITIALIZED1               (0x1UL<<SDI_INITIALIZED1_SHIFT)
#define SDI_INITIALIZED0_SHIFT         0
#define SDI_INITIALIZED0_FIELD         (0xFFFFFFFF - (0x1UL<<SDI_INITIALIZED0_SHIFT))
#define SDI_INITIALIZED0_0             (0x0UL<<SDI_INITIALIZED0_SHIFT)
#define SDI_INITIALIZED0_1             (0x1UL<<SDI_INITIALIZED0_SHIFT)
#define SDI_INITIALIZED0               (0x1UL<<SDI_INITIALIZED0_SHIFT)

/*****************************************************************************/
/* Register description for PHY_DRIVE */

/* Reset value of register SDI_PHY_DRIVE */
#define SDI_PHY_DRIVE_VALUE            0x0

/* Bits definition for register SDI_PHY_DRIVE */
#define SDI_ADDR_SHIFT                 4
#define SDI_ADDR_FIELD                 (0xFFFFFFFF - (0x1UL<<SDI_ADDR_SHIFT))
#define SDI_ADDR_0                     (0x0UL<<SDI_ADDR_SHIFT)
#define SDI_ADDR_1                     (0x1UL<<SDI_ADDR_SHIFT)
#define SDI_ADDR                       (0x1UL<<SDI_ADDR_SHIFT)
#define SDI_DATA_SHIFT                 0
#define SDI_DATA_FIELD                 (0xFFFFFFFF - (0x1UL<<SDI_DATA_SHIFT))
#define SDI_DATA_0                     (0x0UL<<SDI_DATA_SHIFT)
#define SDI_DATA_1                     (0x1UL<<SDI_DATA_SHIFT)
#define SDI_DATA                       (0x1UL<<SDI_DATA_SHIFT)

/*****************************************************************************/
/* Register description for PHY_PULLDOWN */

/* Reset value of register SDI_PHY_PULLDOWN */
#define SDI_PHY_PULLDOWN_VALUE         0x0

/* Bits definition for register SDI_PHY_PULLDOWN */
#define SDI_OTHERS_SHIFT               4
#define SDI_OTHERS_FIELD               (0xFFFFFFFF - (0x1UL<<SDI_OTHERS_SHIFT))
#define SDI_OTHERS_0                   (0x0UL<<SDI_OTHERS_SHIFT)
#define SDI_OTHERS_1                   (0x1UL<<SDI_OTHERS_SHIFT)
#define SDI_OTHERS                     (0x1UL<<SDI_OTHERS_SHIFT)
#define SDI_DQS_SHIFT                  0
#define SDI_DQS_FIELD                  (0xFFFFFFFF - (0x1UL<<SDI_DQS_SHIFT))
#define SDI_DQS_0                      (0x0UL<<SDI_DQS_SHIFT)
#define SDI_DQS_1                      (0x1UL<<SDI_DQS_SHIFT)
#define SDI_DQS                        (0x1UL<<SDI_DQS_SHIFT)

/*****************************************************************************/
/* Register description for PHY_RECEIVERS */

/* Reset value of register SDI_PHY_RECEIVERS */
#define SDI_PHY_RECEIVERS_VALUE        0x0

/* Bits definition for register SDI_PHY_RECEIVERS */
#define SDI_DYNAMIC_CONTROL_SHIFT      0
#define SDI_DYNAMIC_CONTROL_FIELD      (0xFFFFFFFF - (0x1UL<<SDI_DYNAMIC_CONTROL_SHIFT))
#define SDI_DYNAMIC_CONTROL_DISABLED   (0x0UL<<SDI_DYNAMIC_CONTROL_SHIFT)
#define SDI_DYNAMIC_CONTROL_ENABLED    (0x1UL<<SDI_DYNAMIC_CONTROL_SHIFT)
#define SDI_DYNAMIC_CONTROL            (0x1UL<<SDI_DYNAMIC_CONTROL_SHIFT)

/*****************************************************************************/
/* Register description for PVT_CTL */

/* Reset value of register SDI_PVT_CTL */
#define SDI_PVT_CTL_VALUE              0x0

/* Bits definition for register SDI_PVT_CTL */
#define SDI_COMPEN_SHIFT               1
#define SDI_COMPEN_FIELD               (0xFFFFFFFF - (0x1UL<<SDI_COMPEN_SHIFT))
#define SDI_COMPEN_0                   (0x0UL<<SDI_COMPEN_SHIFT)
#define SDI_COMPEN_1                   (0x1UL<<SDI_COMPEN_SHIFT)
#define SDI_COMPEN                     (0x1UL<<SDI_COMPEN_SHIFT)
#define SDI_FREEZE_SHIFT               0
#define SDI_FREEZE_FIELD               (0xFFFFFFFF - (0x1UL<<SDI_FREEZE_SHIFT))
#define SDI_FREEZE_0                   (0x0UL<<SDI_FREEZE_SHIFT)
#define SDI_FREEZE_1                   (0x1UL<<SDI_FREEZE_SHIFT)
#define SDI_FREEZE                     (0x1UL<<SDI_FREEZE_SHIFT)

/*****************************************************************************/
/* Register description for PVT_STATUS */

/* Reset value of register SDI_PVT_STATUS */
#define SDI_PVT_STATUS_VALUE           0x10000

/* Bits definition for register SDI_PVT_STATUS */
#define SDI_PVT_SHIFT                  0
#define SDI_PVT_FIELD                  (0xFFFFFFFF - (0x3UL<<SDI_PVT_SHIFT))
#define SDI_PVT_0                      (0x0UL<<SDI_PVT_SHIFT)

/*****************************************************************************/
/* Register description for PVT_DATA */

/* Reset value of register SDI_PVT_DATA */
#define SDI_PVT_DATA_VALUE             0x830000

/* Bits definition for register SDI_PVT_DATA */
#define SDI_MODE_SHIFT                 31
#define SDI_MODE_FIELD                 (0xFFFFFFFF - (0x1UL<<SDI_MODE_SHIFT))
#define SDI_MODE_AUTO                  (0x0UL<<SDI_MODE_SHIFT)
#define SDI_MODE_MANUAL                (0x1UL<<SDI_MODE_SHIFT)
#define SDI_MODE                       (0x1UL<<SDI_MODE_SHIFT)
#define SDI_UPD_AUTO_REFRESH_SHIFT     23
#define SDI_UPD_AUTO_REFRESH_FIELD     (0xFFFFFFFF - (0x1UL<<SDI_UPD_AUTO_REFRESH_SHIFT))
#define SDI_UPD_AUTO_REFRESH_1         (0x1UL<<SDI_UPD_AUTO_REFRESH_SHIFT)
#define SDI_UPD_AUTO_REFRESH_0         (0x0UL<<SDI_UPD_AUTO_REFRESH_SHIFT)
#define SDI_UPD_AUTO_REFRESH           (0x1UL<<SDI_UPD_AUTO_REFRESH_SHIFT)
#define SDI_UPD_EXIT_STANDBY_SHIFT     20
#define SDI_UPD_EXIT_STANDBY_FIELD     (0xFFFFFFFF - (0x1UL<<SDI_UPD_EXIT_STANDBY_SHIFT))
#define SDI_UPD_EXIT_STANDBY_0         (0x0UL<<SDI_UPD_EXIT_STANDBY_SHIFT)
#define SDI_UPD_EXIT_STANDBY_1         (0x1UL<<SDI_UPD_EXIT_STANDBY_SHIFT)
#define SDI_UPD_EXIT_STANDBY           (0x1UL<<SDI_UPD_EXIT_STANDBY_SHIFT)
#define SDI_UPD_ENTER_STANDBY_SHIFT    19
#define SDI_UPD_ENTER_STANDBY_FIELD    (0xFFFFFFFF - (0x1UL<<SDI_UPD_ENTER_STANDBY_SHIFT))
#define SDI_UPD_ENTER_STANDBY_0        (0x0UL<<SDI_UPD_ENTER_STANDBY_SHIFT)
#define SDI_UPD_ENTER_STANDBY_1        (0x1UL<<SDI_UPD_ENTER_STANDBY_SHIFT)
#define SDI_UPD_ENTER_STANDBY          (0x1UL<<SDI_UPD_ENTER_STANDBY_SHIFT)
#define SDI_UPD_EXIT_SLEEP_SHIFT       18
#define SDI_UPD_EXIT_SLEEP_FIELD       (0xFFFFFFFF - (0x1UL<<SDI_UPD_EXIT_SLEEP_SHIFT))
#define SDI_UPD_EXIT_SLEEP_0           (0x0UL<<SDI_UPD_EXIT_SLEEP_SHIFT)
#define SDI_UPD_EXIT_SLEEP_1           (0x1UL<<SDI_UPD_EXIT_SLEEP_SHIFT)
#define SDI_UPD_EXIT_SLEEP             (0x1UL<<SDI_UPD_EXIT_SLEEP_SHIFT)
#define SDI_UPD_ENTER_SLEEP_SHIFT      17
#define SDI_UPD_ENTER_SLEEP_FIELD      (0xFFFFFFFF - (0x1UL<<SDI_UPD_ENTER_SLEEP_SHIFT))
#define SDI_UPD_ENTER_SLEEP_1          (0x1UL<<SDI_UPD_ENTER_SLEEP_SHIFT)
#define SDI_UPD_ENTER_SLEEP_0          (0x0UL<<SDI_UPD_ENTER_SLEEP_SHIFT)
#define SDI_UPD_ENTER_SLEEP            (0x1UL<<SDI_UPD_ENTER_SLEEP_SHIFT)
#define SDI_UPD_INIT_SHIFT             16
#define SDI_UPD_INIT_FIELD             (0xFFFFFFFF - (0x1UL<<SDI_UPD_INIT_SHIFT))
#define SDI_UPD_INIT_1                 (0x1UL<<SDI_UPD_INIT_SHIFT)
#define SDI_UPD_INIT_0                 (0x0UL<<SDI_UPD_INIT_SHIFT)
#define SDI_UPD_INIT                   (0x1UL<<SDI_UPD_INIT_SHIFT)
#define SDI_PVT_SHIFT                  0
#define SDI_PVT_FIELD                  (0xFFFFFFFF - (0x3UL<<SDI_PVT_SHIFT))
#define SDI_PVT_0                      (0x0UL<<SDI_PVT_SHIFT)

/*****************************************************************************/
/* Register description for PVT_ADDR */

/* Reset value of register SDI_PVT_ADDR */
#define SDI_PVT_ADDR_VALUE             0x30000

/* Bits definition for register SDI_PVT_ADDR */
#define SDI_MODE_SHIFT                 31
#define SDI_MODE_FIELD                 (0xFFFFFFFF - (0x1UL<<SDI_MODE_SHIFT))
#define SDI_MODE_AUTO                  (0x0UL<<SDI_MODE_SHIFT)
#define SDI_MODE_MANUAL                (0x1UL<<SDI_MODE_SHIFT)
#define SDI_MODE                       (0x1UL<<SDI_MODE_SHIFT)
#define SDI_UPD_AUTO_REFRESH_SHIFT     23
#define SDI_UPD_AUTO_REFRESH_FIELD     (0xFFFFFFFF - (0x1UL<<SDI_UPD_AUTO_REFRESH_SHIFT))
#define SDI_UPD_AUTO_REFRESH_0         (0x0UL<<SDI_UPD_AUTO_REFRESH_SHIFT)
#define SDI_UPD_AUTO_REFRESH_1         (0x1UL<<SDI_UPD_AUTO_REFRESH_SHIFT)
#define SDI_UPD_AUTO_REFRESH           (0x1UL<<SDI_UPD_AUTO_REFRESH_SHIFT)
#define SDI_UPD_EXIT_STANDBY_SHIFT     20
#define SDI_UPD_EXIT_STANDBY_FIELD     (0xFFFFFFFF - (0x1UL<<SDI_UPD_EXIT_STANDBY_SHIFT))
#define SDI_UPD_EXIT_STANDBY_0         (0x0UL<<SDI_UPD_EXIT_STANDBY_SHIFT)
#define SDI_UPD_EXIT_STANDBY_1         (0x1UL<<SDI_UPD_EXIT_STANDBY_SHIFT)
#define SDI_UPD_EXIT_STANDBY           (0x1UL<<SDI_UPD_EXIT_STANDBY_SHIFT)
#define SDI_UPD_ENTER_STANDBY_SHIFT    19
#define SDI_UPD_ENTER_STANDBY_FIELD    (0xFFFFFFFF - (0x1UL<<SDI_UPD_ENTER_STANDBY_SHIFT))
#define SDI_UPD_ENTER_STANDBY_0        (0x0UL<<SDI_UPD_ENTER_STANDBY_SHIFT)
#define SDI_UPD_ENTER_STANDBY_1        (0x1UL<<SDI_UPD_ENTER_STANDBY_SHIFT)
#define SDI_UPD_ENTER_STANDBY          (0x1UL<<SDI_UPD_ENTER_STANDBY_SHIFT)
#define SDI_UPD_EXIT_SLEEP_SHIFT       18
#define SDI_UPD_EXIT_SLEEP_FIELD       (0xFFFFFFFF - (0x1UL<<SDI_UPD_EXIT_SLEEP_SHIFT))
#define SDI_UPD_EXIT_SLEEP_0           (0x0UL<<SDI_UPD_EXIT_SLEEP_SHIFT)
#define SDI_UPD_EXIT_SLEEP_1           (0x1UL<<SDI_UPD_EXIT_SLEEP_SHIFT)
#define SDI_UPD_EXIT_SLEEP             (0x1UL<<SDI_UPD_EXIT_SLEEP_SHIFT)
#define SDI_UPD_ENTER_SLEEP_SHIFT      17
#define SDI_UPD_ENTER_SLEEP_FIELD      (0xFFFFFFFF - (0x1UL<<SDI_UPD_ENTER_SLEEP_SHIFT))
#define SDI_UPD_ENTER_SLEEP_1          (0x1UL<<SDI_UPD_ENTER_SLEEP_SHIFT)
#define SDI_UPD_ENTER_SLEEP_0          (0x0UL<<SDI_UPD_ENTER_SLEEP_SHIFT)
#define SDI_UPD_ENTER_SLEEP            (0x1UL<<SDI_UPD_ENTER_SLEEP_SHIFT)
#define SDI_UPD_INIT_SHIFT             16
#define SDI_UPD_INIT_FIELD             (0xFFFFFFFF - (0x1UL<<SDI_UPD_INIT_SHIFT))
#define SDI_UPD_INIT_1                 (0x1UL<<SDI_UPD_INIT_SHIFT)
#define SDI_UPD_INIT_0                 (0x0UL<<SDI_UPD_INIT_SHIFT)
#define SDI_UPD_INIT                   (0x1UL<<SDI_UPD_INIT_SHIFT)
#define SDI_PVT_SHIFT                  0
#define SDI_PVT_FIELD                  (0xFFFFFFFF - (0x3UL<<SDI_PVT_SHIFT))
#define SDI_PVT_0                      (0x0UL<<SDI_PVT_SHIFT)

/*****************************************************************************/
/* Register description for PF_CONTROL */

/* Reset value of register SDI_PF_CONTROL */
#define SDI_PF_CONTROL_VALUE           0x0

/* Bits definition for register SDI_PF_CONTROL */
#define SDI_CAPTURE_SHIFT              0
#define SDI_CAPTURE_FIELD              (0xFFFFFFFF - (0x1UL<<SDI_CAPTURE_SHIFT))
#define SDI_CAPTURE_NO_ACTION          (0x0UL<<SDI_CAPTURE_SHIFT)
#define SDI_CAPTURE_SNAPSHOT           (0x1UL<<SDI_CAPTURE_SHIFT)
#define SDI_CAPTURE                    (0x1UL<<SDI_CAPTURE_SHIFT)

/*****************************************************************************/
/* Register description for PF_TIMESTAMP */

/* Reset value of register SDI_PF_TIMESTAMP */
#define SDI_PF_TIMESTAMP_VALUE         0x0

/* Bits definition for register SDI_PF_TIMESTAMP */
#define SDI_TIMESTAMP_SHIFT            0
#define SDI_TIMESTAMP_FIELD            (0xFFFFFFFF - (0x7FFFFFFFUL<<SDI_TIMESTAMP_SHIFT))
#define SDI_TIMESTAMP_0                (0x0UL<<SDI_TIMESTAMP_SHIFT)

/*****************************************************************************/
/* Register description for PF_CONTROL_PORT */

/* Reset value of register SDI_PF_CONTROL_PORT */
#define SDI_PF_CONTROL_PORT_VALUE      0x0

/* Bits definition for register SDI_PF_CONTROL_PORT */
#define SDI_CONTROL_SHIFT              0
#define SDI_CONTROL_FIELD              (0xFFFFFFFF - (0x7FFFFFFFUL<<SDI_CONTROL_SHIFT))
#define SDI_CONTROL_0                  (0x0UL<<SDI_CONTROL_SHIFT)

/*****************************************************************************/
/* Register description for PF_IDLE */

/* Reset value of register SDI_PF_IDLE */
#define SDI_PF_IDLE_VALUE              0x0

/* Bits definition for register SDI_PF_IDLE */
#define SDI_IDLE_SHIFT                 0
#define SDI_IDLE_FIELD                 (0xFFFFFFFF - (0x7FFFFFFFUL<<SDI_IDLE_SHIFT))
#define SDI_IDLE_0                     (0x0UL<<SDI_IDLE_SHIFT)

/*****************************************************************************/
/* Register description for PF_DP[3:0]_READ */

/* Reset value of register SDI_PF_DP[3:0]_READ */
#define SDI_PF_DP0_READ_VALUE          0x0
#define SDI_PF_DP1_READ_VALUE          0x0
#define SDI_PF_DP2_READ_VALUE          0x0
#define SDI_PF_DP3_READ_VALUE          0x0

/* Bits definition for register SDI_PF_DP[3:0]_READ */
#define SDI_READ_SHIFT                 0
#define SDI_READ_FIELD                 (0xFFFFFFFF - (0x7FFFFFFFUL<<SDI_READ_SHIFT))
#define SDI_READ_0                     (0x0UL<<SDI_READ_SHIFT)

/*****************************************************************************/
/* Register description for PF_DP[3:0]_WRITE */

/* Reset value of register SDI_PF_DP[3:0]_WRITE */
#define SDI_PF_DP0_WRITE_VALUE         0x0
#define SDI_PF_DP1_WRITE_VALUE         0x0
#define SDI_PF_DP2_WRITE_VALUE         0x0
#define SDI_PF_DP3_WRITE_VALUE         0x0

/* Bits definition for register SDI_PF_DP[3:0]_WRITE */
#define SDI_WRITE_SHIFT                0
#define SDI_WRITE_FIELD                (0xFFFFFFFF - (0x7FFFFFFFUL<<SDI_WRITE_SHIFT))
#define SDI_WRITE_0                    (0x0UL<<SDI_WRITE_SHIFT)

/*****************************************************************************/
/* Register description for PF_DP[3:0]_GREAD */

/* Reset value of register SDI_PF_DP[3:0]_GREAD */
#define SDI_PF_DP0_GREAD_VALUE         0x0
#define SDI_PF_DP1_GREAD_VALUE         0x0
#define SDI_PF_DP2_GREAD_VALUE         0x0
#define SDI_PF_DP3_GREAD_VALUE         0x0

/* Bits definition for register SDI_PF_DP[3:0]_GREAD */
#define SDI_READ_SHIFT                 0
#define SDI_READ_FIELD                 (0xFFFFFFFF - (0x7FFFFFFFUL<<SDI_READ_SHIFT))
#define SDI_READ_0                     (0x0UL<<SDI_READ_SHIFT)

/*****************************************************************************/
/* Register description for PF_DP[3:0]_GWRITE */

/* Reset value of register SDI_PF_DP[3:0]_GWRITE */
#define SDI_PF_DP0_GWRITE_VALUE        0x0
#define SDI_PF_DP1_GWRITE_VALUE        0x0
#define SDI_PF_DP2_GWRITE_VALUE        0x0
#define SDI_PF_DP3_GWRITE_VALUE        0x0

/* Bits definition for register SDI_PF_DP[3:0]_GWRITE */
#define SDI_WRITE_SHIFT                0
#define SDI_WRITE_FIELD                (0xFFFFFFFF - (0x7FFFFFFFUL<<SDI_WRITE_SHIFT))
#define SDI_WRITE_0                    (0x0UL<<SDI_WRITE_SHIFT)

/*****************************************************************************/

/*****************************************************************************
* Definitions for: SPI1
*****************************************************************************/

/* Pointer on base address */
#define SPI1_BASE                      IOA(SPI1_BASE_ADDR)

/* SPI GLOBAL Register (16 bits) */
#define SPI1_GLOBAL_OFFSET             0x0
#define SPI1_GLOBAL_REG                IOA(SPI1_BASE_ADDR + SPI1_GLOBAL_OFFSET)

/* SPI CON Register (32 bits) */
#define SPI1_CON_OFFSET                0x4
#define SPI1_CON_REG                   IOA(SPI1_BASE_ADDR + SPI1_CON_OFFSET)

/* SPI FRM Register (16 bits) */
#define SPI1_FRM_OFFSET                0x8
#define SPI1_FRM_REG                   IOA(SPI1_BASE_ADDR + SPI1_FRM_OFFSET)

/* SPI IER Register (16 bits) */
#define SPI1_IER_OFFSET                0xC
#define SPI1_IER_REG                   IOA(SPI1_BASE_ADDR + SPI1_IER_OFFSET)

/* SPI STAT Register (16 bits) */
#define SPI1_STAT_OFFSET               0x10
#define SPI1_STAT_REG                  IOA(SPI1_BASE_ADDR + SPI1_STAT_OFFSET)

/* SPI DAT Register (16 bits) */
#define SPI1_DAT_OFFSET                0x14
#define SPI1_DAT_REG                   IOA(SPI1_BASE_ADDR + SPI1_DAT_OFFSET)

/* SPI DAT_MASK Register (16 bits) */
#define SPI1_DAT_MASK_OFFSET           0x18
#define SPI1_DAT_MASK_REG              IOA(SPI1_BASE_ADDR + SPI1_DAT_MASK_OFFSET)

/* SPI MASK Register (16 bits) */
#define SPI1_MASK_OFFSET               0x1C
#define SPI1_MASK_REG                  IOA(SPI1_BASE_ADDR + SPI1_MASK_OFFSET)

/* SPI ADDR Register (16 bits) */
#define SPI1_ADDR_OFFSET               0x20
#define SPI1_ADDR_REG                  IOA(SPI1_BASE_ADDR + SPI1_ADDR_OFFSET)

/* SPI TIMER_CTRL Register (16 bits) */
#define SPI1_TIMER_CTRL_OFFSET         0x400
#define SPI1_TIMER_CTRL_REG            IOA(SPI1_BASE_ADDR + SPI1_TIMER_CTRL_OFFSET)

/* SPI TIMER_COUNT Register (16 bits) */
#define SPI1_TIMER_COUNT_OFFSET        0x404
#define SPI1_TIMER_COUNT_REG           IOA(SPI1_BASE_ADDR + SPI1_TIMER_COUNT_OFFSET)

/* SPI TIMER_STATUS Register (16 bits) */
#define SPI1_TIMER_STATUS_OFFSET       0x408
#define SPI1_TIMER_STATUS_REG          IOA(SPI1_BASE_ADDR + SPI1_TIMER_STATUS_OFFSET)

/*****************************************************************************
* Definitions for: SPI2
*****************************************************************************/

/* Pointer on base address */
#define SPI2_BASE                      IOA(SPI2_BASE_ADDR)

/* SPI GLOBAL Register (16 bits) */
#define SPI2_GLOBAL_OFFSET             0x0
#define SPI2_GLOBAL_REG                IOA(SPI2_BASE_ADDR + SPI2_GLOBAL_OFFSET)

/* SPI CON Register (32 bits) */
#define SPI2_CON_OFFSET                0x4
#define SPI2_CON_REG                   IOA(SPI2_BASE_ADDR + SPI2_CON_OFFSET)

/* SPI FRM Register (16 bits) */
#define SPI2_FRM_OFFSET                0x8
#define SPI2_FRM_REG                   IOA(SPI2_BASE_ADDR + SPI2_FRM_OFFSET)

/* SPI IER Register (16 bits) */
#define SPI2_IER_OFFSET                0xC
#define SPI2_IER_REG                   IOA(SPI2_BASE_ADDR + SPI2_IER_OFFSET)

/* SPI STAT Register (16 bits) */
#define SPI2_STAT_OFFSET               0x10
#define SPI2_STAT_REG                  IOA(SPI2_BASE_ADDR + SPI2_STAT_OFFSET)

/* SPI DAT Register (16 bits) */
#define SPI2_DAT_OFFSET                0x14
#define SPI2_DAT_REG                   IOA(SPI2_BASE_ADDR + SPI2_DAT_OFFSET)

/* SPI DAT_MASK Register (16 bits) */
#define SPI2_DAT_MASK_OFFSET           0x18
#define SPI2_DAT_MASK_REG              IOA(SPI2_BASE_ADDR + SPI2_DAT_MASK_OFFSET)

/* SPI MASK Register (16 bits) */
#define SPI2_MASK_OFFSET               0x1C
#define SPI2_MASK_REG                  IOA(SPI2_BASE_ADDR + SPI2_MASK_OFFSET)

/* SPI ADDR Register (16 bits) */
#define SPI2_ADDR_OFFSET               0x20
#define SPI2_ADDR_REG                  IOA(SPI2_BASE_ADDR + SPI2_ADDR_OFFSET)

/* SPI TIMER_CTRL Register (16 bits) */
#define SPI2_TIMER_CTRL_OFFSET         0x400
#define SPI2_TIMER_CTRL_REG            IOA(SPI2_BASE_ADDR + SPI2_TIMER_CTRL_OFFSET)

/* SPI TIMER_COUNT Register (16 bits) */
#define SPI2_TIMER_COUNT_OFFSET        0x404
#define SPI2_TIMER_COUNT_REG           IOA(SPI2_BASE_ADDR + SPI2_TIMER_COUNT_OFFSET)

/* SPI TIMER_STATUS Register (16 bits) */
#define SPI2_TIMER_STATUS_OFFSET       0x408
#define SPI2_TIMER_STATUS_REG          IOA(SPI2_BASE_ADDR + SPI2_TIMER_STATUS_OFFSET)

/* Register description for GLOBAL */

/* Reset value of register SPI[2:1]_GLOBAL */
#define SPI1_GLOBAL_VALUE              0x0
#define SPI2_GLOBAL_VALUE              0x0

/* Bits definition for register SPI[2:1]_GLOBAL */
#define SPI_RST_SHIFT                  1
#define SPI_RST_FIELD                  (0xFFFFFFFF - (0x1UL<<SPI_RST_SHIFT))
#define SPI_RST_0                      (0x0UL<<SPI_RST_SHIFT)
#define SPI_RST_1                      (0x1UL<<SPI_RST_SHIFT)
#define SPI_RST                        (0x1UL<<SPI_RST_SHIFT)
#define SPI_ENABLE_SHIFT               0
#define SPI_ENABLE_FIELD               (0xFFFFFFFF - (0x1UL<<SPI_ENABLE_SHIFT))
#define SPI_ENABLE_0                   (0x0UL<<SPI_ENABLE_SHIFT)
#define SPI_ENABLE_1                   (0x1UL<<SPI_ENABLE_SHIFT)
#define SPI_ENABLE                     (0x1UL<<SPI_ENABLE_SHIFT)

/*****************************************************************************/
/* Register description for CON */

/* Reset value of register SPI[2:1]_CON */
#define SPI1_CON_VALUE                 0xE08
#define SPI2_CON_VALUE                 0xE08

/* Bits definition for register SPI[2:1]_CON */
#define SPI_UNIDIR_SHIFT               23
#define SPI_UNIDIR_FIELD               (0xFFFFFFFF - (0x1UL<<SPI_UNIDIR_SHIFT))
#define SPI_UNIDIR_0                   (0x0UL<<SPI_UNIDIR_SHIFT)
#define SPI_UNIDIR_1                   (0x1UL<<SPI_UNIDIR_SHIFT)
#define SPI_UNIDIR                     (0x1UL<<SPI_UNIDIR_SHIFT)
#define SPI_BHALT_SHIFT                22
#define SPI_BHALT_FIELD                (0xFFFFFFFF - (0x1UL<<SPI_BHALT_SHIFT))
#define SPI_BHALT_0                    (0x0UL<<SPI_BHALT_SHIFT)
#define SPI_BHALT_1                    (0x1UL<<SPI_BHALT_SHIFT)
#define SPI_BHALT                      (0x1UL<<SPI_BHALT_SHIFT)
#define SPI_BPOL_SHIFT                 21
#define SPI_BPOL_FIELD                 (0xFFFFFFFF - (0x1UL<<SPI_BPOL_SHIFT))
#define SPI_BPOL_0                     (0x0UL<<SPI_BPOL_SHIFT)
#define SPI_BPOL_1                     (0x1UL<<SPI_BPOL_SHIFT)
#define SPI_BPOL                       (0x1UL<<SPI_BPOL_SHIFT)
#define SPI_SHFT_SHIFT                 20
#define SPI_SHFT_FIELD                 (0xFFFFFFFF - (0x1UL<<SPI_SHFT_SHIFT))
#define SPI_SHFT_0                     (0x0UL<<SPI_SHFT_SHIFT)
#define SPI_SHFT_1                     (0x1UL<<SPI_SHFT_SHIFT)
#define SPI_SHFT                       (0x1UL<<SPI_SHFT_SHIFT)
#define SPI_MSB_SHIFT                  19
#define SPI_MSB_FIELD                  (0xFFFFFFFF - (0x1UL<<SPI_MSB_SHIFT))
#define SPI_MSB_0                      (0x0UL<<SPI_MSB_SHIFT)
#define SPI_MSB_1                      (0x1UL<<SPI_MSB_SHIFT)
#define SPI_MSB                        (0x1UL<<SPI_MSB_SHIFT)
#define SPI_LDINS_SHIFT                18
#define SPI_LDINS_FIELD                (0xFFFFFFFF - (0x1UL<<SPI_LDINS_SHIFT))
#define SPI_LDINS_0                    (0x0UL<<SPI_LDINS_SHIFT)
#define SPI_LDINS_1                    (0x1UL<<SPI_LDINS_SHIFT)
#define SPI_LDINS                      (0x1UL<<SPI_LDINS_SHIFT)
#define SPI_MODE_SHIFT                 16
#define SPI_MODE_FIELD                 (0xFFFFFFFF - (0x3UL<<SPI_MODE_SHIFT))
#define SPI_MODE0                      (0x0UL<<SPI_MODE_SHIFT)
#define SPI_MODE1                      (0x1UL<<SPI_MODE_SHIFT)
#define SPI_MODE2                      (0x2UL<<SPI_MODE_SHIFT)
#define SPI_MODE3                      (0x3UL<<SPI_MODE_SHIFT)
#define SPI_RXTX_SHIFT                 15
#define SPI_RXTX_FIELD                 (0xFFFFFFFF - (0x1UL<<SPI_RXTX_SHIFT))
#define SPI_RXTX_0                     (0x0UL<<SPI_RXTX_SHIFT)
#define SPI_RXTX_1                     (0x1UL<<SPI_RXTX_SHIFT)
#define SPI_RXTX                       (0x1UL<<SPI_RXTX_SHIFT)
#define SPI_THREN_SHIFT                14
#define SPI_THREN_FIELD                (0xFFFFFFFF - (0x1UL<<SPI_THREN_SHIFT))
#define SPI_THREN_0                    (0x0UL<<SPI_THREN_SHIFT)
#define SPI_THREN_1                    (0x1UL<<SPI_THREN_SHIFT)
#define SPI_THREN_0                    (0x0UL<<SPI_THREN_SHIFT)
#define SPI_THREN_1                    (0x1UL<<SPI_THREN_SHIFT)
#define SPI_THREN                      (0x1UL<<SPI_THREN_SHIFT)
#define SPI_SHIFT_OFF_SHIFT            13
#define SPI_SHIFT_OFF_FIELD            (0xFFFFFFFF - (0x1UL<<SPI_SHIFT_OFF_SHIFT))
#define SPI_SHIFT_OFF_0                (0x0UL<<SPI_SHIFT_OFF_SHIFT)
#define SPI_SHIFT_OFF_1                (0x1UL<<SPI_SHIFT_OFF_SHIFT)
#define SPI_SHIFT_OFF                  (0x1UL<<SPI_SHIFT_OFF_SHIFT)
#define SPI_BITNUM_SHIFT               9
#define SPI_BITNUM_FIELD               (0xFFFFFFFF - (0xFUL<<SPI_BITNUM_SHIFT))
#define SPI_BITNUM_7                   (0x7UL<<SPI_BITNUM_SHIFT)
#define SPI_CS_EN_SHIFT                8
#define SPI_CS_EN_FIELD                (0xFFFFFFFF - (0x1UL<<SPI_CS_EN_SHIFT))
#define SPI_CS_EN_0                    (0x0UL<<SPI_CS_EN_SHIFT)
#define SPI_CS_EN_1                    (0x1UL<<SPI_CS_EN_SHIFT)
#define SPI_CS_EN                      (0x1UL<<SPI_CS_EN_SHIFT)
#define SPI_MS_SHIFT                   7
#define SPI_MS_FIELD                   (0xFFFFFFFF - (0x1UL<<SPI_MS_SHIFT))
#define SPI_MS_0                       (0x0UL<<SPI_MS_SHIFT)
#define SPI_MS_1                       (0x1UL<<SPI_MS_SHIFT)
#define SPI_MS                         (0x1UL<<SPI_MS_SHIFT)
#define SPI_RATE_SHIFT                 0
#define SPI_RATE_FIELD                 (0xFFFFFFFF - (0x7FUL<<SPI_RATE_SHIFT))
#define SPI_RATE_8                     (0x8UL<<SPI_RATE_SHIFT)

/*****************************************************************************/
/* Register description for FRM */

/* Reset value of register SPI[2:1]_FRM */
#define SPI1_FRM_VALUE                 0x0
#define SPI2_FRM_VALUE                 0x0

/* Bits definition for register SPI[2:1]_FRM */
#define SPI_SPIF_SHIFT                 0
#define SPI_SPIF_FIELD                 (0xFFFFFFFF - (0xFFFFUL<<SPI_SPIF_SHIFT))
#define SPI_SPIF_SPI_FRAME_COUNT       (0x0UL<<SPI_SPIF_SHIFT)

/*****************************************************************************/
/* Register description for IER */

/* Reset value of register SPI[2:1]_IER */
#define SPI1_IER_VALUE                 0x0
#define SPI2_IER_VALUE                 0x0

/* Bits definition for register SPI[2:1]_IER */
#define SPI_INTCS_SHIFT                2
#define SPI_INTCS_FIELD                (0xFFFFFFFF - (0x1UL<<SPI_INTCS_SHIFT))
#define SPI_INTCS_0                    (0x0UL<<SPI_INTCS_SHIFT)
#define SPI_INTCS_1                    (0x1UL<<SPI_INTCS_SHIFT)
#define SPI_INTCS                      (0x1UL<<SPI_INTCS_SHIFT)
#define SPI_INTEOT_SHIFT               1
#define SPI_INTEOT_FIELD               (0xFFFFFFFF - (0x1UL<<SPI_INTEOT_SHIFT))
#define SPI_INTEOT_0                   (0x0UL<<SPI_INTEOT_SHIFT)
#define SPI_INTEOT_1                   (0x1UL<<SPI_INTEOT_SHIFT)
#define SPI_INTEOT                     (0x1UL<<SPI_INTEOT_SHIFT)
#define SPI_INTTHR_SHIFT               0
#define SPI_INTTHR_FIELD               (0xFFFFFFFF - (0x1UL<<SPI_INTTHR_SHIFT))
#define SPI_INTTHR_0                   (0x0UL<<SPI_INTTHR_SHIFT)
#define SPI_INTTHR_1                   (0x1UL<<SPI_INTTHR_SHIFT)
#define SPI_INTTHR                     (0x1UL<<SPI_INTTHR_SHIFT)

/*****************************************************************************/
/* Register description for STAT */

/* Reset value of register SPI[2:1]_STAT */
#define SPI1_STAT_VALUE                0x1
#define SPI2_STAT_VALUE                0x1

/* Bits definition for register SPI[2:1]_STAT */
#define SPI_INTCLR_SHIFT               8
#define SPI_INTCLR_FIELD               (0xFFFFFFFF - (0x1UL<<SPI_INTCLR_SHIFT))
#define SPI_INTCLR_0                   (0x0UL<<SPI_INTCLR_SHIFT)
#define SPI_INTCLR_1                   (0x1UL<<SPI_INTCLR_SHIFT)
#define SPI_INTCLR                     (0x1UL<<SPI_INTCLR_SHIFT)
#define SPI_EOT_SHIFT                  7
#define SPI_EOT_FIELD                  (0xFFFFFFFF - (0x1UL<<SPI_EOT_SHIFT))
#define SPI_EOT_0                      (0x0UL<<SPI_EOT_SHIFT)
#define SPI_EOT_1                      (0x1UL<<SPI_EOT_SHIFT)
#define SPI_EOT                        (0x1UL<<SPI_EOT_SHIFT)
#define SPI_BUSYLEV_SHIFT              6
#define SPI_BUSYLEV_FIELD              (0xFFFFFFFF - (0x1UL<<SPI_BUSYLEV_SHIFT))
#define SPI_BUSYLEV                    (0x1UL<<SPI_BUSYLEV_SHIFT)
#define SPI_CSL_SHIFT                  5
#define SPI_CSL_FIELD                  (0xFFFFFFFF - (0x1UL<<SPI_CSL_SHIFT))
#define SPI_CSL_0                      (0x0UL<<SPI_CSL_SHIFT)
#define SPI_CSL_1                      (0x1UL<<SPI_CSL_SHIFT)
#define SPI_CSL                        (0x1UL<<SPI_CSL_SHIFT)
#define SPI_CSS_SHIFT                  4
#define SPI_CSS_FIELD                  (0xFFFFFFFF - (0x1UL<<SPI_CSS_SHIFT))
#define SPI_CSS_0                      (0x0UL<<SPI_CSS_SHIFT)
#define SPI_CSS_1                      (0x1UL<<SPI_CSS_SHIFT)
#define SPI_CSS                        (0x1UL<<SPI_CSS_SHIFT)
#define SPI_SHIFTACT_SHIFT             3
#define SPI_SHIFTACT_FIELD             (0xFFFFFFFF - (0x1UL<<SPI_SHIFTACT_SHIFT))
#define SPI_SHIFTACT_0                 (0x0UL<<SPI_SHIFTACT_SHIFT)
#define SPI_SHIFTACT_1                 (0x1UL<<SPI_SHIFTACT_SHIFT)
#define SPI_SHIFTACT                   (0x1UL<<SPI_SHIFTACT_SHIFT)
#define SPI_BF_SHIFT                   2
#define SPI_BF_FIELD                   (0xFFFFFFFF - (0x1UL<<SPI_BF_SHIFT))
#define SPI_BF_0                       (0x0UL<<SPI_BF_SHIFT)
#define SPI_BF_1                       (0x1UL<<SPI_BF_SHIFT)
#define SPI_BF                         (0x1UL<<SPI_BF_SHIFT)
#define SPI_THR_SHIFT                  1
#define SPI_THR_FIELD                  (0xFFFFFFFF - (0x1UL<<SPI_THR_SHIFT))
#define SPI_THR_0                      (0x0UL<<SPI_THR_SHIFT)
#define SPI_THR_1                      (0x1UL<<SPI_THR_SHIFT)
#define SPI_THR_0                      (0x0UL<<SPI_THR_SHIFT)
#define SPI_THR_1                      (0x1UL<<SPI_THR_SHIFT)
#define SPI_THR                        (0x1UL<<SPI_THR_SHIFT)
#define SPI_BE_SHIFT                   0
#define SPI_BE_FIELD                   (0xFFFFFFFF - (0x1UL<<SPI_BE_SHIFT))
#define SPI_BE_0                       (0x0UL<<SPI_BE_SHIFT)
#define SPI_BE_1                       (0x1UL<<SPI_BE_SHIFT)
#define SPI_BE                         (0x1UL<<SPI_BE_SHIFT)

/*****************************************************************************/
/* Register description for DAT */

/* Reset value of register SPI[2:1]_DAT */
#define SPI1_DAT_VALUE                 0x0
#define SPI2_DAT_VALUE                 0x0

/* Bits definition for register SPI[2:1]_DAT */
#define SPI_SPID_SHIFT                 0
#define SPI_SPID_FIELD                 (0xFFFFFFFF - (0xFFFFUL<<SPI_SPID_SHIFT))
#define SPI_SPID_SPI_DATA_BITS         (0x0UL<<SPI_SPID_SHIFT)

/*****************************************************************************/
/* Register description for DAT_MASK */

/* Reset value of register SPI[2:1]_DAT_MASK */
#define SPI1_DAT_MASK_VALUE            0x0
#define SPI2_DAT_MASK_VALUE            0x0

/* Bits definition for register SPI[2:1]_DAT_MASK */
#define SPI_SPID_SHIFT                 0
#define SPI_SPID_FIELD                 (0xFFFFFFFF - (0xFFFFUL<<SPI_SPID_SHIFT))
#define SPI_SPID_SPI_DATA_BITS_WITH_MASKING_FEATURE (0x0UL<<SPI_SPID_SHIFT)

/*****************************************************************************/
/* Register description for MASK */

/* Reset value of register SPI[2:1]_MASK */
#define SPI1_MASK_VALUE                0x0
#define SPI2_MASK_VALUE                0x0

/* Bits definition for register SPI[2:1]_MASK */
#define SPI_MASK_SHIFT                 0
#define SPI_MASK_FIELD                 (0xFFFFFFFF - (0xFFFFUL<<SPI_MASK_SHIFT))
#define SPI_MASK_0                     (0x0UL<<SPI_MASK_SHIFT)
#define SPI_MASK_1                     (0x1UL<<SPI_MASK_SHIFT)

/*****************************************************************************/
/* Register description for ADDR */

/* Reset value of register SPI[2:1]_ADDR */
#define SPI1_ADDR_VALUE                0x0
#define SPI2_ADDR_VALUE                0x0

/* Bits definition for register SPI[2:1]_ADDR */
#define SPI_ADDR_SHIFT                 0
#define SPI_ADDR_FIELD                 (0xFFFFFFFF - (0xFFFFUL<<SPI_ADDR_SHIFT))
#define SPI_ADDR_ADDRESS_BIT_TO_BE_ADDED_TO_DATA_BITS (0x0UL<<SPI_ADDR_SHIFT)

/*****************************************************************************/
/* Register description for TIMER_CTRL */

/* Reset value of register SPI[2:1]_TIMER_CTRL */
#define SPI1_TIMER_CTRL_VALUE          0x2
#define SPI2_TIMER_CTRL_VALUE          0x2

/* Bits definition for register SPI[2:1]_TIMER_CTRL */
#define SPI_TIRQE_SHIFT                2
#define SPI_TIRQE_FIELD                (0xFFFFFFFF - (0x1UL<<SPI_TIRQE_SHIFT))
#define SPI_TIRQE_0                    (0x0UL<<SPI_TIRQE_SHIFT)
#define SPI_TIRQE_1                    (0x1UL<<SPI_TIRQE_SHIFT)
#define SPI_TIRQE                      (0x1UL<<SPI_TIRQE_SHIFT)
#define SPI_PIRQE_SHIFT                1
#define SPI_PIRQE_FIELD                (0xFFFFFFFF - (0x1UL<<SPI_PIRQE_SHIFT))
#define SPI_PIRQE_0                    (0x0UL<<SPI_PIRQE_SHIFT)
#define SPI_PIRQE_1                    (0x1UL<<SPI_PIRQE_SHIFT)
#define SPI_PIRQE                      (0x1UL<<SPI_PIRQE_SHIFT)
#define SPI_TIMER_MODE_SHIFT           0
#define SPI_TIMER_MODE_FIELD           (0xFFFFFFFF - (0x1UL<<SPI_TIMER_MODE_SHIFT))
#define SPI_TIMER_MODE_TIMED_IRQ       (0x0UL<<SPI_TIMER_MODE_SHIFT)
#define SPI_TIMER_MODE_DMA_TIMEOUT     (0x1UL<<SPI_TIMER_MODE_SHIFT)
#define SPI_TIMER_MODE                 (0x1UL<<SPI_TIMER_MODE_SHIFT)

/*****************************************************************************/
/* Register description for TIMER_COUNT */

/* Reset value of register SPI[2:1]_TIMER_COUNT */
#define SPI1_TIMER_COUNT_VALUE         0x0
#define SPI2_TIMER_COUNT_VALUE         0x0

/* Bits definition for register SPI[2:1]_TIMER_COUNT */
#define SPI_COUNT_SHIFT                0
#define SPI_COUNT_FIELD                (0xFFFFFFFF - (0xFFFFUL<<SPI_COUNT_SHIFT))
#define SPI_COUNT_TIMED_INTERRUPT_PERIOD           (0x0UL<<SPI_COUNT_SHIFT)

/*****************************************************************************/
/* Register description for TIMER_STATUS */

/* Reset value of register SPI[2:1]_TIMER_STATUS */
#define SPI1_TIMER_STATUS_VALUE        0x0
#define SPI2_TIMER_STATUS_VALUE        0x0

/* Bits definition for register SPI[2:1]_TIMER_STATUS */
#define SPI_TIMER_INT_SHIFT            15
#define SPI_TIMER_INT_FIELD            (0xFFFFFFFF - (0x1UL<<SPI_TIMER_INT_SHIFT))
#define SPI_TIMER_INT_INACTIVE         (0x0UL<<SPI_TIMER_INT_SHIFT)
#define SPI_TIMER_INT_PENDING          (0x1UL<<SPI_TIMER_INT_SHIFT)
#define SPI_TIMER_INT                  (0x1UL<<SPI_TIMER_INT_SHIFT)
#define SPI_RXDEPTH_SHIFT              0
#define SPI_RXDEPTH_FIELD              (0xFFFFFFFF - (0x7FUL<<SPI_RXDEPTH_SHIFT))
#define SPI_RXDEPTH_0                  (0x0UL<<SPI_RXDEPTH_SHIFT)

/*****************************************************************************/

/*****************************************************************************
* Definitions for: TBU
*****************************************************************************/

/* Pointer on base address */
#define TBU_BASE                       IOA(TBU_BASE_ADDR)

/* TBU QBC Register (16 bits) */
#define TBU_QBC_OFFSET                 0x0
#define TBU_QBC_REG                    IOA(TBU_BASE_ADDR + TBU_QBC_OFFSET)

/* TBU SQBCINC Register (32 bits) */
#define TBU_SQBCINC_OFFSET             0x4
#define TBU_SQBCINC_REG                IOA(TBU_BASE_ADDR + TBU_SQBCINC_OFFSET)

/* TBU CON Register (16 bits) */
#define TBU_CON_OFFSET                 0x8
#define TBU_CON_REG                    IOA(TBU_BASE_ADDR + TBU_CON_OFFSET)

/* TBU FLR Register (16 bits) */
#define TBU_FLR_OFFSET                 0xC
#define TBU_FLR_REG                    IOA(TBU_BASE_ADDR + TBU_FLR_OFFSET)

/* TBU F1SC Register (16 bits) */
#define TBU_F1SC_OFFSET                0x10
#define TBU_F1SC_REG                   IOA(TBU_BASE_ADDR + TBU_F1SC_OFFSET)

/* TBU F1DSP Register (16 bits) */
#define TBU_F1DSP_OFFSET               0x14
#define TBU_F1DSP_REG                  IOA(TBU_BASE_ADDR + TBU_F1DSP_OFFSET)

/* Register description for QBC */

/* Reset value of register TBU_QBC */
#define TBU_QBC_VALUE                  0x0

/* Bits definition for register TBU_QBC */
#define TBU_QBCNT_SHIFT                2
#define TBU_QBCNT_FIELD                (0xFFFFFFFF - (0x3FFFUL<<TBU_QBCNT_SHIFT))
#define TBU_QBCNT_0                    (0x0UL<<TBU_QBCNT_SHIFT)
#define TBU_QBLOW_SHIFT                0
#define TBU_QBLOW_FIELD                (0xFFFFFFFF - (0x3UL<<TBU_QBLOW_SHIFT))
#define TBU_QBLOW_0                    (0x0UL<<TBU_QBLOW_SHIFT)

/*****************************************************************************/
/* Register description for CON */

/* Reset value of register TBU_CON */
#define TBU_CON_VALUE                  0x0

/* Bits definition for register TBU_CON */
#define TBU_FINT1DSP2EN_SHIFT          14
#define TBU_FINT1DSP2EN_FIELD          (0xFFFFFFFF - (0x1UL<<TBU_FINT1DSP2EN_SHIFT))
#define TBU_FINT1DSP2EN_DISABLED       (0x0UL<<TBU_FINT1DSP2EN_SHIFT)
#define TBU_FINT1DSP2EN_ENABLED        (0x1UL<<TBU_FINT1DSP2EN_SHIFT)
#define TBU_FINT1DSP2EN                (0x1UL<<TBU_FINT1DSP2EN_SHIFT)
#define TBU_FINT0DSP2EN_SHIFT          13
#define TBU_FINT0DSP2EN_FIELD          (0xFFFFFFFF - (0x1UL<<TBU_FINT0DSP2EN_SHIFT))
#define TBU_FINT0DSP2EN_DISABLED       (0x0UL<<TBU_FINT0DSP2EN_SHIFT)
#define TBU_FINT0DSP2EN_ENABLED        (0x1UL<<TBU_FINT0DSP2EN_SHIFT)
#define TBU_FINT0DSP2EN                (0x1UL<<TBU_FINT0DSP2EN_SHIFT)
#define TBU_RESTBU_SHIFT               12
#define TBU_RESTBU_FIELD               (0xFFFFFFFF - (0x1UL<<TBU_RESTBU_SHIFT))
#define TBU_RESTBU_INACTIVE            (0x0UL<<TBU_RESTBU_SHIFT)
#define TBU_RESTBU_ACTIVE              (0x1UL<<TBU_RESTBU_SHIFT)
#define TBU_RESTBU                     (0x1UL<<TBU_RESTBU_SHIFT)
#define TBU_FINTDSPSRC_SHIFT           11
#define TBU_FINTDSPSRC_FIELD           (0xFFFFFFFF - (0x1UL<<TBU_FINTDSPSRC_SHIFT))
#define TBU_FINTDSPSRC_FINT0_DSP1      (0x0UL<<TBU_FINTDSPSRC_SHIFT)
#define TBU_FINTDSPSRC_FINT1_DSP1      (0x1UL<<TBU_FINTDSPSRC_SHIFT)
#define TBU_FINTDSPSRC                 (0x1UL<<TBU_FINTDSPSRC_SHIFT)
#define TBU_FINT1DSP1EN_SHIFT          10
#define TBU_FINT1DSP1EN_FIELD          (0xFFFFFFFF - (0x1UL<<TBU_FINT1DSP1EN_SHIFT))
#define TBU_FINT1DSP1EN_DISABLED       (0x0UL<<TBU_FINT1DSP1EN_SHIFT)
#define TBU_FINT1DSP1EN_ENABLED        (0x1UL<<TBU_FINT1DSP1EN_SHIFT)
#define TBU_FINT1DSP1EN                (0x1UL<<TBU_FINT1DSP1EN_SHIFT)
#define TBU_FINT0DSP1EN_SHIFT          9
#define TBU_FINT0DSP1EN_FIELD          (0xFFFFFFFF - (0x1UL<<TBU_FINT0DSP1EN_SHIFT))
#define TBU_FINT0DSP1EN_DISABLED       (0x0UL<<TBU_FINT0DSP1EN_SHIFT)
#define TBU_FINT0DSP1EN_ENABLED        (0x1UL<<TBU_FINT0DSP1EN_SHIFT)
#define TBU_FINT0DSP1EN                (0x1UL<<TBU_FINT0DSP1EN_SHIFT)
#define TBU_FINT1SC_SHIFT              8
#define TBU_FINT1SC_FIELD              (0xFFFFFFFF - (0x1UL<<TBU_FINT1SC_SHIFT))
#define TBU_FINT1SC_INACTIVE           (0x0UL<<TBU_FINT1SC_SHIFT)
#define TBU_FINT1SC_ACTIVE             (0x1UL<<TBU_FINT1SC_SHIFT)
#define TBU_FINT1SC                    (0x1UL<<TBU_FINT1SC_SHIFT)
#define TBU_FINT0SC_SHIFT              7
#define TBU_FINT0SC_FIELD              (0xFFFFFFFF - (0x1UL<<TBU_FINT0SC_SHIFT))
#define TBU_FINT0SC_INACTIVE           (0x0UL<<TBU_FINT0SC_SHIFT)
#define TBU_FINT0SC_ACTIVE             (0x1UL<<TBU_FINT0SC_SHIFT)
#define TBU_FINT0SC                    (0x1UL<<TBU_FINT0SC_SHIFT)
#define TBU_FINT1SCEN_SHIFT            6
#define TBU_FINT1SCEN_FIELD            (0xFFFFFFFF - (0x1UL<<TBU_FINT1SCEN_SHIFT))
#define TBU_FINT1SCEN_DISABLED         (0x0UL<<TBU_FINT1SCEN_SHIFT)
#define TBU_FINT1SCEN_ENABLED          (0x1UL<<TBU_FINT1SCEN_SHIFT)
#define TBU_FINT1SCEN                  (0x1UL<<TBU_FINT1SCEN_SHIFT)
#define TBU_FINT0SCEN_SHIFT            5
#define TBU_FINT0SCEN_FIELD            (0xFFFFFFFF - (0x1UL<<TBU_FINT0SCEN_SHIFT))
#define TBU_FINT0SCEN_DISABLED         (0x0UL<<TBU_FINT0SCEN_SHIFT)
#define TBU_FINT0SCEN_ENABLED          (0x1UL<<TBU_FINT0SCEN_SHIFT)
#define TBU_FINT0SCEN                  (0x1UL<<TBU_FINT0SCEN_SHIFT)
#define TBU_EXTRACT_SHIFT              4
#define TBU_EXTRACT_FIELD              (0xFFFFFFFF - (0x1UL<<TBU_EXTRACT_SHIFT))
#define TBU_EXTRACT_NONE               (0x0UL<<TBU_EXTRACT_SHIFT)
#define TBU_EXTRACT_A_QUARTERBIT       (0x1UL<<TBU_EXTRACT_SHIFT)
#define TBU_EXTRACT                    (0x1UL<<TBU_EXTRACT_SHIFT)
#define TBU_INSERT_SHIFT               3
#define TBU_INSERT_FIELD               (0xFFFFFFFF - (0x1UL<<TBU_INSERT_SHIFT))
#define TBU_INSERT_NONE                (0x0UL<<TBU_INSERT_SHIFT)
#define TBU_INSERT_A_QUARTERBIT        (0x1UL<<TBU_INSERT_SHIFT)
#define TBU_INSERT                     (0x1UL<<TBU_INSERT_SHIFT)
#define TBU_CALSET_SHIFT               2
#define TBU_CALSET_FIELD               (0xFFFFFFFF - (0x1UL<<TBU_CALSET_SHIFT))
#define TBU_CALSET_AUTO                (0x0UL<<TBU_CALSET_SHIFT)
#define TBU_CALSET_FORCED              (0x1UL<<TBU_CALSET_SHIFT)
#define TBU_CALSET                     (0x1UL<<TBU_CALSET_SHIFT)
#define TBU_CALACT_SHIFT               1
#define TBU_CALACT_FIELD               (0xFFFFFFFF - (0x1UL<<TBU_CALACT_SHIFT))
#define TBU_CALACT_INACTIVE            (0x0UL<<TBU_CALACT_SHIFT)
#define TBU_CALACT_ACTIVE              (0x1UL<<TBU_CALACT_SHIFT)
#define TBU_CALACT                     (0x1UL<<TBU_CALACT_SHIFT)
#define TBU_CALSTART_SHIFT             0
#define TBU_CALSTART_FIELD             (0xFFFFFFFF - (0x1UL<<TBU_CALSTART_SHIFT))
#define TBU_CALSTART_STOPPED           (0x0UL<<TBU_CALSTART_SHIFT)
#define TBU_CALSTART_START             (0x1UL<<TBU_CALSTART_SHIFT)
#define TBU_CALSTART                   (0x1UL<<TBU_CALSTART_SHIFT)

/*****************************************************************************/
/* Register description for FLR */

/* Reset value of register TBU_FLR */
#define TBU_FLR_VALUE                  0x1388

/* Bits definition for register TBU_FLR */
#define TBU_FLR_SHIFT                  0
#define TBU_FLR_FIELD                  (0xFFFFFFFF - (0x3FFFUL<<TBU_FLR_SHIFT))
#define TBU_FLR_1388                   (0x1388UL<<TBU_FLR_SHIFT)

/*****************************************************************************/
/* Register description for F1SC */

/* Reset value of register TBU_F1SC */
#define TBU_F1SC_VALUE                 0x3FFF

/* Bits definition for register TBU_F1SC */
#define TBU_F1SCVAL_SHIFT              0
#define TBU_F1SCVAL_FIELD              (0xFFFFFFFF - (0x3FFFUL<<TBU_F1SCVAL_SHIFT))
#define TBU_F1SCVAL_3FFF               (0x3FFFUL<<TBU_F1SCVAL_SHIFT)

/*****************************************************************************/
/* Register description for F1DSP */

/* Reset value of register TBU_F1DSP */
#define TBU_F1DSP_VALUE                0x3FFF

/* Bits definition for register TBU_F1DSP */
#define TBU_F1DSPVAL_SHIFT             0
#define TBU_F1DSPVAL_FIELD             (0xFFFFFFFF - (0x3FFFUL<<TBU_F1DSPVAL_SHIFT))
#define TBU_F1DSPVAL_3FFF              (0x3FFFUL<<TBU_F1DSPVAL_SHIFT)

/*****************************************************************************/
/* Register description for SQBCINC */

/* Reset value of register TBU_SQBCINC */
#define TBU_SQBCINC_VALUE              0x843E2A

/* Bits definition for register TBU_SQBCINC */
#define TBU_INCHIGH_SHIFT              16
#define TBU_INCHIGH_FIELD              (0xFFFFFFFF - (0xFFUL<<TBU_INCHIGH_SHIFT))
#define TBU_INCHIGH_84                 (0x84UL<<TBU_INCHIGH_SHIFT)
#define TBU_INCMED_SHIFT               8
#define TBU_INCMED_FIELD               (0xFFFFFFFF - (0xFFUL<<TBU_INCMED_SHIFT))
#define TBU_INCMED_3E                  (0x3EUL<<TBU_INCMED_SHIFT)
#define TBU_INCLOW_SHIFT               0
#define TBU_INCLOW_FIELD               (0xFFFFFFFF - (0xFFUL<<TBU_INCLOW_SHIFT))
#define TBU_INCLOW_2A                  (0x2AUL<<TBU_INCLOW_SHIFT)

/*****************************************************************************/

/*****************************************************************************
* Definitions for: TC
*****************************************************************************/

/* Pointer on base address */
#define TC_BASE                        IOA(TC_BASE_ADDR)

/* TC START Register (32 bits) */
#define TC_START_OFFSET                0x0
#define TC_START_REG                   IOA(TC_BASE_ADDR + TC_START_OFFSET)

/* TC SOFT_RESET Register (32 bits) */
#define TC_SOFT_RESET_OFFSET           0x8
#define TC_SOFT_RESET_REG              IOA(TC_BASE_ADDR + TC_SOFT_RESET_OFFSET)

/* TC CURR_BASE_LUM_TOP Register (32 bits) */
#define TC_CURR_BASE_LUM_TOP_OFFSET    0x10
#define TC_CURR_BASE_LUM_TOP_REG       IOA(TC_BASE_ADDR + TC_CURR_BASE_LUM_TOP_OFFSET)

/* TC CURR_STRIDE_LUM_FLD Register (32 bits) */
#define TC_CURR_STRIDE_LUM_FLD_OFFSET  0x20
#define TC_CURR_STRIDE_LUM_FLD_REG     IOA(TC_BASE_ADDR + TC_CURR_STRIDE_LUM_FLD_OFFSET)

/* TC CURR_BASE_CHR_TOP_U Register (32 bits) */
#define TC_CURR_BASE_CHR_TOP_U_OFFSET  0x28
#define TC_CURR_BASE_CHR_TOP_U_REG     IOA(TC_BASE_ADDR + TC_CURR_BASE_CHR_TOP_U_OFFSET)

/* TC CURR_BASE_CHR_TOP_V Register (32 bits) */
#define TC_CURR_BASE_CHR_TOP_V_OFFSET  0x38
#define TC_CURR_BASE_CHR_TOP_V_REG     IOA(TC_BASE_ADDR + TC_CURR_BASE_CHR_TOP_V_OFFSET)

/* TC CURR_STRIDE_CHR_FLD Register (32 bits) */
#define TC_CURR_STRIDE_CHR_FLD_OFFSET  0x48
#define TC_CURR_STRIDE_CHR_FLD_REG     IOA(TC_BASE_ADDR + TC_CURR_STRIDE_CHR_FLD_OFFSET)

/* TC CURR_PLANAR Register (32 bits) */
#define TC_CURR_PLANAR_OFFSET          0x50
#define TC_CURR_PLANAR_REG             IOA(TC_BASE_ADDR + TC_CURR_PLANAR_OFFSET)

/* TC MV_PTR Register (32 bits) */
#define TC_MV_PTR_OFFSET               0x60
#define TC_MV_PTR_REG                  IOA(TC_BASE_ADDR + TC_MV_PTR_OFFSET)

/* TC MV_LOAD_PTR Register (32 bits) */
#define TC_MV_LOAD_PTR_OFFSET          0x68
#define TC_MV_LOAD_PTR_REG             IOA(TC_BASE_ADDR + TC_MV_LOAD_PTR_OFFSET)

/* TC MV_BASE Register (32 bits) */
#define TC_MV_BASE_OFFSET              0x70
#define TC_MV_BASE_REG                 IOA(TC_BASE_ADDR + TC_MV_BASE_OFFSET)

/* TC MV_END Register (32 bits) */
#define TC_MV_END_OFFSET               0x78
#define TC_MV_END_REG                  IOA(TC_BASE_ADDR + TC_MV_END_OFFSET)

/* TC BM_PTR Register (32 bits) */
#define TC_BM_PTR_OFFSET               0x80
#define TC_BM_PTR_REG                  IOA(TC_BASE_ADDR + TC_BM_PTR_OFFSET)

/* TC BM_LOAD_PTR Register (32 bits) */
#define TC_BM_LOAD_PTR_OFFSET          0x88
#define TC_BM_LOAD_PTR_REG             IOA(TC_BASE_ADDR + TC_BM_LOAD_PTR_OFFSET)

/* TC BM_BASE Register (32 bits) */
#define TC_BM_BASE_OFFSET              0x90
#define TC_BM_BASE_REG                 IOA(TC_BASE_ADDR + TC_BM_BASE_OFFSET)

/* TC BM_END Register (32 bits) */
#define TC_BM_END_OFFSET               0x98
#define TC_BM_END_REG                  IOA(TC_BASE_ADDR + TC_BM_END_OFFSET)

/* TC WB_BASE_LUM_TOP Register (32 bits) */
#define TC_WB_BASE_LUM_TOP_OFFSET      0xA0
#define TC_WB_BASE_LUM_TOP_REG         IOA(TC_BASE_ADDR + TC_WB_BASE_LUM_TOP_OFFSET)

/* TC WB_STRIDE_LUM_FLD Register (32 bits) */
#define TC_WB_STRIDE_LUM_FLD_OFFSET    0xB0
#define TC_WB_STRIDE_LUM_FLD_REG       IOA(TC_BASE_ADDR + TC_WB_STRIDE_LUM_FLD_OFFSET)

/* TC WB_BASE_CHR_TOP_U Register (32 bits) */
#define TC_WB_BASE_CHR_TOP_U_OFFSET    0xB8
#define TC_WB_BASE_CHR_TOP_U_REG       IOA(TC_BASE_ADDR + TC_WB_BASE_CHR_TOP_U_OFFSET)

/* TC WB_BASE_CHR_TOP_V Register (32 bits) */
#define TC_WB_BASE_CHR_TOP_V_OFFSET    0xD0
#define TC_WB_BASE_CHR_TOP_V_REG       IOA(TC_BASE_ADDR + TC_WB_BASE_CHR_TOP_V_OFFSET)

/* TC WB_STRIDE_CHR_FLD Register (32 bits) */
#define TC_WB_STRIDE_CHR_FLD_OFFSET    0xE0
#define TC_WB_STRIDE_CHR_FLD_REG       IOA(TC_BASE_ADDR + TC_WB_STRIDE_CHR_FLD_OFFSET)

/* TC CURR_SH_RIGHT_LUM Register (32 bits) */
#define TC_CURR_SH_RIGHT_LUM_OFFSET    0xE8
#define TC_CURR_SH_RIGHT_LUM_REG       IOA(TC_BASE_ADDR + TC_CURR_SH_RIGHT_LUM_OFFSET)

/* TC CURR_SH_DOWN_LUM Register (32 bits) */
#define TC_CURR_SH_DOWN_LUM_OFFSET     0xF0
#define TC_CURR_SH_DOWN_LUM_REG        IOA(TC_BASE_ADDR + TC_CURR_SH_DOWN_LUM_OFFSET)

/* TC CURR_SH_RIGHT_CHR Register (32 bits) */
#define TC_CURR_SH_RIGHT_CHR_OFFSET    0xF8
#define TC_CURR_SH_RIGHT_CHR_REG       IOA(TC_BASE_ADDR + TC_CURR_SH_RIGHT_CHR_OFFSET)

/* TC CURR_SH_DOWN_CHR Register (32 bits) */
#define TC_CURR_SH_DOWN_CHR_OFFSET     0x100
#define TC_CURR_SH_DOWN_CHR_REG        IOA(TC_BASE_ADDR + TC_CURR_SH_DOWN_CHR_OFFSET)

/* TC RUNNING Register (32 bits) */
#define TC_RUNNING_OFFSET              0x120
#define TC_RUNNING_REG                 IOA(TC_BASE_ADDR + TC_RUNNING_OFFSET)

/* TC FORCE_SHADOW Register (32 bits) */
#define TC_FORCE_SHADOW_OFFSET         0x128
#define TC_FORCE_SHADOW_REG            IOA(TC_BASE_ADDR + TC_FORCE_SHADOW_OFFSET)

/* TC FRAME_MB_WIDTH Register (32 bits) */
#define TC_FRAME_MB_WIDTH_OFFSET       0x130
#define TC_FRAME_MB_WIDTH_REG          IOA(TC_BASE_ADDR + TC_FRAME_MB_WIDTH_OFFSET)

/* TC PACKET_START_HOR Register (32 bits) */
#define TC_PACKET_START_HOR_OFFSET     0x138
#define TC_PACKET_START_HOR_REG        IOA(TC_BASE_ADDR + TC_PACKET_START_HOR_OFFSET)

/* TC PACKET_START_VER Register (32 bits) */
#define TC_PACKET_START_VER_OFFSET     0x140
#define TC_PACKET_START_VER_REG        IOA(TC_BASE_ADDR + TC_PACKET_START_VER_OFFSET)

/* TC SEGM_MB_SIZE Register (32 bits) */
#define TC_SEGM_MB_SIZE_OFFSET         0x148
#define TC_SEGM_MB_SIZE_REG            IOA(TC_BASE_ADDR + TC_SEGM_MB_SIZE_OFFSET)

/* TC SEGM_POS_START_HOR Register (32 bits) */
#define TC_SEGM_POS_START_HOR_OFFSET   0x150
#define TC_SEGM_POS_START_HOR_REG      IOA(TC_BASE_ADDR + TC_SEGM_POS_START_HOR_OFFSET)

/* TC SEGM_POS_START_VER Register (32 bits) */
#define TC_SEGM_POS_START_VER_OFFSET   0x158
#define TC_SEGM_POS_START_VER_REG      IOA(TC_BASE_ADDR + TC_SEGM_POS_START_VER_OFFSET)

/* TC CODING_TYPE Register (32 bits) */
#define TC_CODING_TYPE_OFFSET          0x160
#define TC_CODING_TYPE_REG             IOA(TC_BASE_ADDR + TC_CODING_TYPE_OFFSET)

/* TC VOP_TYPE Register (32 bits) */
#define TC_VOP_TYPE_OFFSET             0x168
#define TC_VOP_TYPE_REG                IOA(TC_BASE_ADDR + TC_VOP_TYPE_OFFSET)

/* TC MODE_422 Register (32 bits) */
#define TC_MODE_422_OFFSET             0x170
#define TC_MODE_422_REG                IOA(TC_BASE_ADDR + TC_MODE_422_OFFSET)

/* TC NF_DISABLE Register (32 bits) */
#define TC_NF_DISABLE_OFFSET           0x178
#define TC_NF_DISABLE_REG              IOA(TC_BASE_ADDR + TC_NF_DISABLE_OFFSET)

/* TC WB_DISABLE Register (32 bits) */
#define TC_WB_DISABLE_OFFSET           0x180
#define TC_WB_DISABLE_REG              IOA(TC_BASE_ADDR + TC_WB_DISABLE_OFFSET)

/* TC QUANT_SCALE Register (32 bits) */
#define TC_QUANT_SCALE_OFFSET          0x188
#define TC_QUANT_SCALE_REG             IOA(TC_BASE_ADDR + TC_QUANT_SCALE_OFFSET)

/* TC GAIN_SCALE Register (32 bits) */
#define TC_GAIN_SCALE_OFFSET           0x190
#define TC_GAIN_SCALE_REG              IOA(TC_BASE_ADDR + TC_GAIN_SCALE_OFFSET)

/* TC CRIT_SCALE Register (32 bits) */
#define TC_CRIT_SCALE_OFFSET           0x198
#define TC_CRIT_SCALE_REG              IOA(TC_BASE_ADDR + TC_CRIT_SCALE_OFFSET)

/* TC BM_DIRECT Register (32 bits) */
#define TC_BM_DIRECT_OFFSET            0x1A0
#define TC_BM_DIRECT_REG               IOA(TC_BASE_ADDR + TC_BM_DIRECT_OFFSET)

/* TC DCT_MAD Register (32 bits) */
#define TC_DCT_MAD_OFFSET              0x200
#define TC_DCT_MAD_REG                 IOA(TC_BASE_ADDR + TC_DCT_MAD_OFFSET)

/* TC ENABLE_CLR Register (32 bits) */
#define TC_ENABLE_CLR_OFFSET           0xFD8
#define TC_ENABLE_CLR_REG              IOA(TC_BASE_ADDR + TC_ENABLE_CLR_OFFSET)

/* TC ENABLE_SET Register (32 bits) */
#define TC_ENABLE_SET_OFFSET           0xFDC
#define TC_ENABLE_SET_REG              IOA(TC_BASE_ADDR + TC_ENABLE_SET_OFFSET)

/* TC ENABLE Register (32 bits) */
#define TC_ENABLE_OFFSET               0xFE0
#define TC_ENABLE_REG                  IOA(TC_BASE_ADDR + TC_ENABLE_OFFSET)

/* TC STATUS Register (32 bits) */
#define TC_STATUS_OFFSET               0xFE4
#define TC_STATUS_REG                  IOA(TC_BASE_ADDR + TC_STATUS_OFFSET)

/* TC STATUS_CLR Register (32 bits) */
#define TC_STATUS_CLR_OFFSET           0xFE8
#define TC_STATUS_CLR_REG              IOA(TC_BASE_ADDR + TC_STATUS_CLR_OFFSET)

/* TC STATUS_SET Register (32 bits) */
#define TC_STATUS_SET_OFFSET           0xFEC
#define TC_STATUS_SET_REG              IOA(TC_BASE_ADDR + TC_STATUS_SET_OFFSET)

/* TC MODULE_ID Register (32 bits) */
#define TC_MODULE_ID_OFFSET            0xFFC
#define TC_MODULE_ID_REG               IOA(TC_BASE_ADDR + TC_MODULE_ID_OFFSET)

/* Register description for START */

/* Reset value of register TC_START */
#define TC_START_VALUE                 0x0

/* Bits definition for register TC_START */
#define TC_TC_START_SHIFT              0
#define TC_TC_START_FIELD              (0xFFFFFFFF - (0x1UL<<TC_TC_START_SHIFT))
#define TC_TC_START_0                  (0x0UL<<TC_TC_START_SHIFT)
#define TC_TC_START_1                  (0x1UL<<TC_TC_START_SHIFT)
#define TC_TC_START                    (0x1UL<<TC_TC_START_SHIFT)

/*****************************************************************************/
/* Register description for SOFT_RESET */

/* Reset value of register TC_SOFT_RESET */
#define TC_SOFT_RESET_VALUE            0x0

/* Bits definition for register TC_SOFT_RESET */
#define TC_TC_SOFT_RESET_SHIFT         0
#define TC_TC_SOFT_RESET_FIELD         (0xFFFFFFFF - (0x1UL<<TC_TC_SOFT_RESET_SHIFT))
#define TC_TC_SOFT_RESET_0             (0x0UL<<TC_TC_SOFT_RESET_SHIFT)
#define TC_TC_SOFT_RESET_1             (0x1UL<<TC_TC_SOFT_RESET_SHIFT)
#define TC_TC_SOFT_RESET               (0x1UL<<TC_TC_SOFT_RESET_SHIFT)

/*****************************************************************************/
/* Register description for FORCE_SHADOW */

/* Reset value of register TC_FORCE_SHADOW */
#define TC_FORCE_SHADOW_VALUE          0x0

/* Bits definition for register TC_FORCE_SHADOW */
#define TC_TC_FORCE_SHADOW_SHIFT       0
#define TC_TC_FORCE_SHADOW_FIELD       (0xFFFFFFFF - (0x1UL<<TC_TC_FORCE_SHADOW_SHIFT))
#define TC_TC_FORCE_SHADOW_0           (0x0UL<<TC_TC_FORCE_SHADOW_SHIFT)
#define TC_TC_FORCE_SHADOW_1           (0x1UL<<TC_TC_FORCE_SHADOW_SHIFT)
#define TC_TC_FORCE_SHADOW             (0x1UL<<TC_TC_FORCE_SHADOW_SHIFT)

/*****************************************************************************/
/* Register description for RUNNING */

/* Reset value of register TC_RUNNING */
#define TC_RUNNING_VALUE               0x0

/* Bits definition for register TC_RUNNING */
#define TC_TC_RUNNING_SHIFT            0
#define TC_TC_RUNNING_FIELD            (0xFFFFFFFF - (0x1UL<<TC_TC_RUNNING_SHIFT))
#define TC_TC_RUNNING_1                (0x1UL<<TC_TC_RUNNING_SHIFT)
#define TC_TC_RUNNING_0                (0x0UL<<TC_TC_RUNNING_SHIFT)
#define TC_TC_RUNNING                  (0x1UL<<TC_TC_RUNNING_SHIFT)

/*****************************************************************************/
/* Register description for PACKET_START_HOR */

/* Reset value of register TC_PACKET_START_HOR */
#define TC_PACKET_START_HOR_VALUE      0x0

/* Bits definition for register TC_PACKET_START_HOR */
#define TC_TC_PACKET_START_HOR_SHIFT   0
#define TC_TC_PACKET_START_HOR_FIELD   (0xFFFFFFFF - (0x3FUL<<TC_TC_PACKET_START_HOR_SHIFT))

/*****************************************************************************/
/* Register description for PACKET_START_VER */

/* Reset value of register TC_PACKET_START_VER */
#define TC_PACKET_START_VER_VALUE      0x0

/* Bits definition for register TC_PACKET_START_VER */
#define TC_TC_PACKET_START_VER_SHIFT   0
#define TC_TC_PACKET_START_VER_FIELD   (0xFFFFFFFF - (0x3FUL<<TC_TC_PACKET_START_VER_SHIFT))

/*****************************************************************************/
/* Register description for SEGM_POS_START_HOR */

/* Reset value of register TC_SEGM_POS_START_HOR */
#define TC_SEGM_POS_START_HOR_VALUE    0x0

/* Bits definition for register TC_SEGM_POS_START_HOR */
#define TC_TC_SEGM_POS_START_HOR_SHIFT 0
#define TC_TC_SEGM_POS_START_HOR_FIELD (0xFFFFFFFF - (0xFFUL<<TC_TC_SEGM_POS_START_HOR_SHIFT))

/*****************************************************************************/
/* Register description for SEGM_POS_START_VER */

/* Reset value of register TC_SEGM_POS_START_VER */
#define TC_SEGM_POS_START_VER_VALUE    0x0

/* Bits definition for register TC_SEGM_POS_START_VER */
#define TC_TC_SEGM_POS_START_VER_SHIFT 0
#define TC_TC_SEGM_POS_START_VER_FIELD (0xFFFFFFFF - (0xFFUL<<TC_TC_SEGM_POS_START_VER_SHIFT))

/*****************************************************************************/
/* Register description for SEGM_MB_SIZE */

/* Reset value of register TC_SEGM_MB_SIZE */
#define TC_SEGM_MB_SIZE_VALUE          0x0

/* Bits definition for register TC_SEGM_MB_SIZE */
#define TC_TC_SEGM_MB_SIZE_SHIFT       0
#define TC_TC_SEGM_MB_SIZE_FIELD       (0xFFFFFFFF - (0x3FFFUL<<TC_TC_SEGM_MB_SIZE_SHIFT))

/*****************************************************************************/
/* Register description for FRAME_MB_WIDTH */

/* Reset value of register TC_FRAME_MB_WIDTH */
#define TC_FRAME_MB_WIDTH_VALUE        0x0

/* Bits definition for register TC_FRAME_MB_WIDTH */
#define TC_TC_FRAME_MB_WIDTH_SHIFT     0
#define TC_TC_FRAME_MB_WIDTH_FIELD     (0xFFFFFFFF - (0xFFUL<<TC_TC_FRAME_MB_WIDTH_SHIFT))

/*****************************************************************************/
/* Register description for CURR_BASE_LUM_TOP */

/* Reset value of register TC_CURR_BASE_LUM_TOP */
#define TC_CURR_BASE_LUM_TOP_VALUE     0x0

/* Bits definition for register TC_CURR_BASE_LUM_TOP */
#define TC_TC_CURR_BASE_LUM_TOP_SHIFT  2
#define TC_TC_CURR_BASE_LUM_TOP_FIELD  (0xFFFFFFFF - (0x3FFFFFFFUL<<TC_TC_CURR_BASE_LUM_TOP_SHIFT))

/*****************************************************************************/
/* Register description for CURR_STRIDE_LUM_FLD */

/* Reset value of register TC_CURR_STRIDE_LUM_FLD */
#define TC_CURR_STRIDE_LUM_FLD_VALUE   0x0

/* Bits definition for register TC_CURR_STRIDE_LUM_FLD */
#define TC_TC_CURR_STRIDE_LUM_FLD_SHIFT            3
#define TC_TC_CURR_STRIDE_LUM_FLD_FIELD            (0xFFFFFFFF - (0x3FFUL<<TC_TC_CURR_STRIDE_LUM_FLD_SHIFT))

/*****************************************************************************/
/* Register description for CURR_BASE_CHR_TOP_U */

/* Reset value of register TC_CURR_BASE_CHR_TOP_U */
#define TC_CURR_BASE_CHR_TOP_U_VALUE   0x0

/* Bits definition for register TC_CURR_BASE_CHR_TOP_U */
#define TC_TC_CURR_BASE_CHR_TOP_U_SHIFT            2
#define TC_TC_CURR_BASE_CHR_TOP_U_FIELD            (0xFFFFFFFF - (0x3FFFFFFFUL<<TC_TC_CURR_BASE_CHR_TOP_U_SHIFT))

/*****************************************************************************/
/* Register description for CURR_BASE_CHR_TOP_V */

/* Reset value of register TC_CURR_BASE_CHR_TOP_V */
#define TC_CURR_BASE_CHR_TOP_V_VALUE   0x0

/* Bits definition for register TC_CURR_BASE_CHR_TOP_V */
#define TC_TC_CURR_BASE_CHR_TOP_V_SHIFT            2
#define TC_TC_CURR_BASE_CHR_TOP_V_FIELD            (0xFFFFFFFF - (0x3FFFFFFFUL<<TC_TC_CURR_BASE_CHR_TOP_V_SHIFT))

/*****************************************************************************/
/* Register description for CURR_STRIDE_CHR_FLD */

/* Reset value of register TC_CURR_STRIDE_CHR_FLD */
#define TC_CURR_STRIDE_CHR_FLD_VALUE   0x0

/* Bits definition for register TC_CURR_STRIDE_CHR_FLD */
#define TC_TC_CURR_STRIDE_CHR_FLD_SHIFT            3
#define TC_TC_CURR_STRIDE_CHR_FLD_FIELD            (0xFFFFFFFF - (0x3FFUL<<TC_TC_CURR_STRIDE_CHR_FLD_SHIFT))

/*****************************************************************************/
/* Register description for CURR_PLANAR */

/* Reset value of register TC_CURR_PLANAR */
#define TC_CURR_PLANAR_VALUE           0x0

/* Bits definition for register TC_CURR_PLANAR */
#define TC_TC_CURR_PLANAR_SHIFT        0
#define TC_TC_CURR_PLANAR_FIELD        (0xFFFFFFFF - (0x1UL<<TC_TC_CURR_PLANAR_SHIFT))
#define TC_TC_CURR_PLANAR_0            (0x0UL<<TC_TC_CURR_PLANAR_SHIFT)
#define TC_TC_CURR_PLANAR_1            (0x1UL<<TC_TC_CURR_PLANAR_SHIFT)
#define TC_TC_CURR_PLANAR              (0x1UL<<TC_TC_CURR_PLANAR_SHIFT)

/*****************************************************************************/
/* Register description for CURR_SH_RIGHT_LUM */

/* Reset value of register TC_CURR_SH_RIGHT_LUM */
#define TC_CURR_SH_RIGHT_LUM_VALUE     0x0

/* Bits definition for register TC_CURR_SH_RIGHT_LUM */
#define TC_TC_CURR_SH_RIGHT_LUM_SHIFT  0
#define TC_TC_CURR_SH_RIGHT_LUM_FIELD  (0xFFFFFFFF - (0x3FUL<<TC_TC_CURR_SH_RIGHT_LUM_SHIFT))
#define TC_TC_CURR_SH_RIGHT_LUM_0      (0x0UL<<TC_TC_CURR_SH_RIGHT_LUM_SHIFT)

/*****************************************************************************/
/* Register description for CURR_SH_DOWN_LUM */

/* Reset value of register TC_CURR_SH_DOWN_LUM */
#define TC_CURR_SH_DOWN_LUM_VALUE      0x0

/* Bits definition for register TC_CURR_SH_DOWN_LUM */
#define TC_TC_CURR_SH_DOWN_LUM_SHIFT   0
#define TC_TC_CURR_SH_DOWN_LUM_FIELD   (0xFFFFFFFF - (0xFUL<<TC_TC_CURR_SH_DOWN_LUM_SHIFT))
#define TC_TC_CURR_SH_DOWN_LUM_0       (0x0UL<<TC_TC_CURR_SH_DOWN_LUM_SHIFT)

/*****************************************************************************/
/* Register description for CURR_SH_RIGHT_CHR */

/* Reset value of register TC_CURR_SH_RIGHT_CHR */
#define TC_CURR_SH_RIGHT_CHR_VALUE     0x0

/* Bits definition for register TC_CURR_SH_RIGHT_CHR */
#define TC_TC_CURR_SH_RIGHT_CHR_SHIFT  0
#define TC_TC_CURR_SH_RIGHT_CHR_FIELD  (0xFFFFFFFF - (0x3FUL<<TC_TC_CURR_SH_RIGHT_CHR_SHIFT))
#define TC_TC_CURR_SH_RIGHT_CHR_0      (0x0UL<<TC_TC_CURR_SH_RIGHT_CHR_SHIFT)

/*****************************************************************************/
/* Register description for CURR_SH_DOWN_CHR */

/* Reset value of register TC_CURR_SH_DOWN_CHR */
#define TC_CURR_SH_DOWN_CHR_VALUE      0x0

/* Bits definition for register TC_CURR_SH_DOWN_CHR */
#define TC_TC_CURR_SH_DOWN_CHR_SHIFT   0
#define TC_TC_CURR_SH_DOWN_CHR_FIELD   (0xFFFFFFFF - (0xFUL<<TC_TC_CURR_SH_DOWN_CHR_SHIFT))
#define TC_TC_CURR_SH_DOWN_CHR_0       (0x0UL<<TC_TC_CURR_SH_DOWN_CHR_SHIFT)

/*****************************************************************************/
/* Register description for WB_BASE_LUM_TOP */

/* Reset value of register TC_WB_BASE_LUM_TOP */
#define TC_WB_BASE_LUM_TOP_VALUE       0x0

/* Bits definition for register TC_WB_BASE_LUM_TOP */
#define TC_TC_WB_BASE_LUM_TOP_SHIFT    6
#define TC_TC_WB_BASE_LUM_TOP_FIELD    (0xFFFFFFFF - (0x3FFFFFFUL<<TC_TC_WB_BASE_LUM_TOP_SHIFT))

/*****************************************************************************/
/* Register description for WB_STRIDE_LUM_FLD */

/* Reset value of register TC_WB_STRIDE_LUM_FLD */
#define TC_WB_STRIDE_LUM_FLD_VALUE     0x0

/* Bits definition for register TC_WB_STRIDE_LUM_FLD */
#define TC_TC_WB_STRIDE_LUM_FLD_SHIFT  4
#define TC_TC_WB_STRIDE_LUM_FLD_FIELD  (0xFFFFFFFF - (0x1FFUL<<TC_TC_WB_STRIDE_LUM_FLD_SHIFT))

/*****************************************************************************/
/* Register description for WB_BASE_CHR_TOP_U */

/* Reset value of register TC_WB_BASE_CHR_TOP_U */
#define TC_WB_BASE_CHR_TOP_U_VALUE     0x0

/* Bits definition for register TC_WB_BASE_CHR_TOP_U */
#define TC_TC_WB_BASE_CHR_TOP_U_SHIFT  6
#define TC_TC_WB_BASE_CHR_TOP_U_FIELD  (0xFFFFFFFF - (0x3FFFFFFUL<<TC_TC_WB_BASE_CHR_TOP_U_SHIFT))

/*****************************************************************************/
/* Register description for WB_BASE_CHR_TOP_V */

/* Reset value of register TC_WB_BASE_CHR_TOP_V */
#define TC_WB_BASE_CHR_TOP_V_VALUE     0x0

/* Bits definition for register TC_WB_BASE_CHR_TOP_V */
#define TC_TC_WB_BASE_CHR_TOP_V_SHIFT  6
#define TC_TC_WB_BASE_CHR_TOP_V_FIELD  (0xFFFFFFFF - (0x3FFFFFFUL<<TC_TC_WB_BASE_CHR_TOP_V_SHIFT))

/*****************************************************************************/
/* Register description for WB_STRIDE_CHR_FLD */

/* Reset value of register TC_WB_STRIDE_CHR_FLD */
#define TC_WB_STRIDE_CHR_FLD_VALUE     0x0

/* Bits definition for register TC_WB_STRIDE_CHR_FLD */
#define TC_TC_WB_STRIDE_CHR_FLD_SHIFT  4
#define TC_TC_WB_STRIDE_CHR_FLD_FIELD  (0xFFFFFFFF - (0x1FFUL<<TC_TC_WB_STRIDE_CHR_FLD_SHIFT))

/*****************************************************************************/
/* Register description for BM_BASE */

/* Reset value of register TC_BM_BASE */
#define TC_BM_BASE_VALUE               0x0

/* Bits definition for register TC_BM_BASE */
#define TC_TC_BM_BASE_SHIFT            8
#define TC_TC_BM_BASE_FIELD            (0xFFFFFFFF - (0xFFFFFFUL<<TC_TC_BM_BASE_SHIFT))

/*****************************************************************************/
/* Register description for BM_END */

/* Reset value of register TC_BM_END */
#define TC_BM_END_VALUE                0x0

/* Bits definition for register TC_BM_END */
#define TC_TC_BM_END_SHIFT             7
#define TC_TC_BM_END_FIELD             (0xFFFFFFFF - (0x1FFFFFFUL<<TC_TC_BM_END_SHIFT))

/*****************************************************************************/
/* Register description for BM_PTR */

/* Reset value of register TC_BM_PTR */
#define TC_BM_PTR_VALUE                0x0

/* Bits definition for register TC_BM_PTR */
#define TC_TC_BM_PTR_SHIFT             6
#define TC_TC_BM_PTR_FIELD             (0xFFFFFFFF - (0x3FFFFFFUL<<TC_TC_BM_PTR_SHIFT))

/*****************************************************************************/
/* Register description for BM_LOAD_PTR */

/* Reset value of register TC_BM_LOAD_PTR */
#define TC_BM_LOAD_PTR_VALUE           0x0

/* Bits definition for register TC_BM_LOAD_PTR */
#define TC_TC_BM_LOAD_PTR_SHIFT        0
#define TC_TC_BM_LOAD_PTR_FIELD        (0xFFFFFFFF - (0x1UL<<TC_TC_BM_LOAD_PTR_SHIFT))
#define TC_TC_BM_LOAD_PTR_0            (0x0UL<<TC_TC_BM_LOAD_PTR_SHIFT)
#define TC_TC_BM_LOAD_PTR_1            (0x1UL<<TC_TC_BM_LOAD_PTR_SHIFT)
#define TC_TC_BM_LOAD_PTR              (0x1UL<<TC_TC_BM_LOAD_PTR_SHIFT)

/*****************************************************************************/
/* Register description for BM_DIRECT */

/* Reset value of register TC_BM_DIRECT */
#define TC_BM_DIRECT_VALUE             0x0

/* Bits definition for register TC_BM_DIRECT */
#define TC_TC_BM_DIRECT_SHIFT          0
#define TC_TC_BM_DIRECT_FIELD          (0xFFFFFFFF - (0x1UL<<TC_TC_BM_DIRECT_SHIFT))
#define TC_TC_BM_DIRECT_0              (0x0UL<<TC_TC_BM_DIRECT_SHIFT)
#define TC_TC_BM_DIRECT_1              (0x1UL<<TC_TC_BM_DIRECT_SHIFT)
#define TC_TC_BM_DIRECT                (0x1UL<<TC_TC_BM_DIRECT_SHIFT)

/*****************************************************************************/
/* Register description for MV_BASE */

/* Reset value of register TC_MV_BASE */
#define TC_MV_BASE_VALUE               0x0

/* Bits definition for register TC_MV_BASE */
#define TC_TC_MV_BASE_SHIFT            4
#define TC_TC_MV_BASE_FIELD            (0xFFFFFFFF - (0xFFFFFFFUL<<TC_TC_MV_BASE_SHIFT))

/*****************************************************************************/
/* Register description for MV_END */

/* Reset value of register TC_MV_END */
#define TC_MV_END_VALUE                0x0

/* Bits definition for register TC_MV_END */
#define TC_TC_MV_END_SHIFT             4
#define TC_TC_MV_END_FIELD             (0xFFFFFFFF - (0xFFFFFFFUL<<TC_TC_MV_END_SHIFT))

/*****************************************************************************/
/* Register description for MV_PTR */

/* Reset value of register TC_MV_PTR */
#define TC_MV_PTR_VALUE                0x0

/* Bits definition for register TC_MV_PTR */
#define TC_TC_MV_PTR_SHIFT             4
#define TC_TC_MV_PTR_FIELD             (0xFFFFFFFF - (0xFFFFFFFUL<<TC_TC_MV_PTR_SHIFT))

/*****************************************************************************/
/* Register description for MV_LOAD_PTR */

/* Reset value of register TC_MV_LOAD_PTR */
#define TC_MV_LOAD_PTR_VALUE           0x0

/* Bits definition for register TC_MV_LOAD_PTR */
#define TC_TC_MV_LOAD_PTR_SHIFT        0
#define TC_TC_MV_LOAD_PTR_FIELD        (0xFFFFFFFF - (0x1UL<<TC_TC_MV_LOAD_PTR_SHIFT))
#define TC_TC_MV_LOAD_PTR_0            (0x0UL<<TC_TC_MV_LOAD_PTR_SHIFT)
#define TC_TC_MV_LOAD_PTR_1            (0x1UL<<TC_TC_MV_LOAD_PTR_SHIFT)
#define TC_TC_MV_LOAD_PTR              (0x1UL<<TC_TC_MV_LOAD_PTR_SHIFT)

/*****************************************************************************/
/* Register description for CODING_TYPE */

/* Reset value of register TC_CODING_TYPE */
#define TC_CODING_TYPE_VALUE           0x0

/* Bits definition for register TC_CODING_TYPE */
#define TC_TC_CODING_TYPE_SHIFT        0
#define TC_TC_CODING_TYPE_FIELD        (0xFFFFFFFF - (0x3UL<<TC_TC_CODING_TYPE_SHIFT))
#define TC_TC_CODING_TYPE_0            (0x0UL<<TC_TC_CODING_TYPE_SHIFT)
#define TC_TC_CODING_TYPE_1            (0x1UL<<TC_TC_CODING_TYPE_SHIFT)
#define TC_TC_CODING_TYPE_2            (0x2UL<<TC_TC_CODING_TYPE_SHIFT)
#define TC_TC_CODING_TYPE_3            (0x3UL<<TC_TC_CODING_TYPE_SHIFT)

/*****************************************************************************/
/* Register description for VOP_TYPE */

/* Reset value of register TC_VOP_TYPE */
#define TC_VOP_TYPE_VALUE              0x0

/* Bits definition for register TC_VOP_TYPE */
#define TC_TC_VOP_TYPE_SHIFT           0
#define TC_TC_VOP_TYPE_FIELD           (0xFFFFFFFF - (0x1UL<<TC_TC_VOP_TYPE_SHIFT))
#define TC_TC_VOP_TYPE_0               (0x0UL<<TC_TC_VOP_TYPE_SHIFT)
#define TC_TC_VOP_TYPE_1               (0x1UL<<TC_TC_VOP_TYPE_SHIFT)
#define TC_TC_VOP_TYPE                 (0x1UL<<TC_TC_VOP_TYPE_SHIFT)

/*****************************************************************************/
/* Register description for WB_DISABLE */

/* Reset value of register TC_WB_DISABLE */
#define TC_WB_DISABLE_VALUE            0x0

/* Bits definition for register TC_WB_DISABLE */
#define TC_TC_WB_DISABLE_SHIFT         0
#define TC_TC_WB_DISABLE_FIELD         (0xFFFFFFFF - (0x1UL<<TC_TC_WB_DISABLE_SHIFT))
#define TC_TC_WB_DISABLE_0             (0x0UL<<TC_TC_WB_DISABLE_SHIFT)
#define TC_TC_WB_DISABLE_1             (0x1UL<<TC_TC_WB_DISABLE_SHIFT)
#define TC_TC_WB_DISABLE               (0x1UL<<TC_TC_WB_DISABLE_SHIFT)

/*****************************************************************************/
/* Register description for QUANT_SCALE */

/* Reset value of register TC_QUANT_SCALE */
#define TC_QUANT_SCALE_VALUE           0x0

/* Bits definition for register TC_QUANT_SCALE */
#define TC_TC_QUANT_SCALE_SHIFT        0
#define TC_TC_QUANT_SCALE_FIELD        (0xFFFFFFFF - (0x1FUL<<TC_TC_QUANT_SCALE_SHIFT))

/*****************************************************************************/
/* Register description for NF_DISABLE */

/* Reset value of register TC_NF_DISABLE */
#define TC_NF_DISABLE_VALUE            0x0

/* Bits definition for register TC_NF_DISABLE */
#define TC_TC_NF_DISABLE_SHIFT         0
#define TC_TC_NF_DISABLE_FIELD         (0xFFFFFFFF - (0x1UL<<TC_TC_NF_DISABLE_SHIFT))
#define TC_TC_NF_DISABLE_0             (0x0UL<<TC_TC_NF_DISABLE_SHIFT)
#define TC_TC_NF_DISABLE_1             (0x1UL<<TC_TC_NF_DISABLE_SHIFT)
#define TC_TC_NF_DISABLE               (0x1UL<<TC_TC_NF_DISABLE_SHIFT)

/*****************************************************************************/
/* Register description for GAIN_SCALE */

/* Reset value of register TC_GAIN_SCALE */
#define TC_GAIN_SCALE_VALUE            0x0

/* Bits definition for register TC_GAIN_SCALE */
#define TC_TC_GAIN_SCALE_SHIFT         0
#define TC_TC_GAIN_SCALE_FIELD         (0xFFFFFFFF - (0xFUL<<TC_TC_GAIN_SCALE_SHIFT))

/*****************************************************************************/
/* Register description for CRIT_SCALE */

/* Reset value of register TC_CRIT_SCALE */
#define TC_CRIT_SCALE_VALUE            0x0

/* Bits definition for register TC_CRIT_SCALE */
#define TC_TC_CRIT_SCALE_SHIFT         0
#define TC_TC_CRIT_SCALE_FIELD         (0xFFFFFFFF - (0xFUL<<TC_TC_CRIT_SCALE_SHIFT))

/*****************************************************************************/
/* Register description for DCT_MAD */

/* Reset value of register TC_DCT_MAD */
#define TC_DCT_MAD_VALUE               0x0

/* Bits definition for register TC_DCT_MAD */
#define TC_TC_DCT_MAD_SHIFT            0
#define TC_TC_DCT_MAD_FIELD            (0xFFFFFFFF - (0x3FFFFFFUL<<TC_TC_DCT_MAD_SHIFT))

/*****************************************************************************/
/* Register description for MODE_422 */

/* Reset value of register TC_MODE_422 */
#define TC_MODE_422_VALUE              0x0

/* Bits definition for register TC_MODE_422 */
#define TC_TC_MODE_422_SHIFT           0
#define TC_TC_MODE_422_FIELD           (0xFFFFFFFF - (0x1UL<<TC_TC_MODE_422_SHIFT))
#define TC_TC_MODE_422_0               (0x0UL<<TC_TC_MODE_422_SHIFT)
#define TC_TC_MODE_422_1               (0x1UL<<TC_TC_MODE_422_SHIFT)
#define TC_TC_MODE_422                 (0x1UL<<TC_TC_MODE_422_SHIFT)

/*****************************************************************************/
/* Register description for STATUS_SET */

/* Reset value of register TC_STATUS_SET */
#define TC_STATUS_SET_VALUE            0x0

/* Bits definition for register TC_STATUS_SET */
#define TC_TC_STATUS_SET_SHIFT         0
#define TC_TC_STATUS_SET_FIELD         (0xFFFFFFFF - (0xFUL<<TC_TC_STATUS_SET_SHIFT))
#define TC_TC_STATUS_SET_0             (0x0UL<<TC_TC_STATUS_SET_SHIFT)

/*****************************************************************************/
/* Register description for STATUS */

/* Reset value of register TC_STATUS */
#define TC_STATUS_VALUE                0x0

/* Bits definition for register TC_STATUS */
#define TC_TC_STATUS_SHIFT             0
#define TC_TC_STATUS_FIELD             (0xFFFFFFFF - (0xFUL<<TC_TC_STATUS_SHIFT))
#define TC_TC_STATUS_0                 (0x0UL<<TC_TC_STATUS_SHIFT)

/*****************************************************************************/
/* Register description for STATUS_CLR */

/* Reset value of register TC_STATUS_CLR */
#define TC_STATUS_CLR_VALUE            0x0

/* Bits definition for register TC_STATUS_CLR */
#define TC_TC_STATUS_CLR_SHIFT         0
#define TC_TC_STATUS_CLR_FIELD         (0xFFFFFFFF - (0xFUL<<TC_TC_STATUS_CLR_SHIFT))
#define TC_TC_STATUS_CLR_0             (0x0UL<<TC_TC_STATUS_CLR_SHIFT)

/*****************************************************************************/
/* Register description for ENABLE_SET */

/* Reset value of register TC_ENABLE_SET */
#define TC_ENABLE_SET_VALUE            0x0

/* Bits definition for register TC_ENABLE_SET */
#define TC_TC_ENABLE_SET_SHIFT         0
#define TC_TC_ENABLE_SET_FIELD         (0xFFFFFFFF - (0xFUL<<TC_TC_ENABLE_SET_SHIFT))
#define TC_TC_ENABLE_SET_0             (0x0UL<<TC_TC_ENABLE_SET_SHIFT)

/*****************************************************************************/
/* Register description for ENABLE */

/* Reset value of register TC_ENABLE */
#define TC_ENABLE_VALUE                0x0

/* Bits definition for register TC_ENABLE */
#define TC_TC_ENABLE_SHIFT             0
#define TC_TC_ENABLE_FIELD             (0xFFFFFFFF - (0xFUL<<TC_TC_ENABLE_SHIFT))
#define TC_TC_ENABLE_0                 (0x0UL<<TC_TC_ENABLE_SHIFT)

/*****************************************************************************/
/* Register description for ENABLE_CLR */

/* Reset value of register TC_ENABLE_CLR */
#define TC_ENABLE_CLR_VALUE            0x0

/* Bits definition for register TC_ENABLE_CLR */
#define TC_TC_ENABLE_CLR_SHIFT         0
#define TC_TC_ENABLE_CLR_FIELD         (0xFFFFFFFF - (0xFUL<<TC_TC_ENABLE_CLR_SHIFT))
#define TC_TC_ENABLE_CLR_0             (0x0UL<<TC_TC_ENABLE_CLR_SHIFT)

/*****************************************************************************/
/* Register description for MODULE_ID */

/* Reset value of register TC_MODULE_ID */
#define TC_MODULE_ID_VALUE             0xA0711100

/* Bits definition for register TC_MODULE_ID */
#define TC_TC_MODULE_ID_SHIFT          0
#define TC_TC_MODULE_ID_FIELD          (0xFFFFFFFF - (0x7FFFFFFFUL<<TC_TC_MODULE_ID_SHIFT))
#define TC_TC_MODULE_ID_A0711100       (0xA0711100UL<<TC_TC_MODULE_ID_SHIFT)

/*****************************************************************************/

/*****************************************************************************
* Definitions for: TVO
*****************************************************************************/

/* Pointer on base address */
#define TVO_BASE                       IOA(TVO_BASE_ADDR)

/* TVO GENERAL_CTRL Register (32 bits) */
#define TVO_GENERAL_CTRL_OFFSET        0x0
#define TVO_GENERAL_CTRL_REG           IOA(TVO_BASE_ADDR + TVO_GENERAL_CTRL_OFFSET)

/* TVO INPUT_START_ADDRESS_P1_A Register (32 bits) */
#define TVO_INPUT_START_ADDRESS_P1_A_OFFSET        0x10
#define TVO_INPUT_START_ADDRESS_P1_A_REG           IOA(TVO_BASE_ADDR + TVO_INPUT_START_ADDRESS_P1_A_OFFSET)

/* TVO INPUT_START_ADDRESS_P2_A Register (32 bits) */
#define TVO_INPUT_START_ADDRESS_P2_A_OFFSET        0x14
#define TVO_INPUT_START_ADDRESS_P2_A_REG           IOA(TVO_BASE_ADDR + TVO_INPUT_START_ADDRESS_P2_A_OFFSET)

/* TVO INPUT_START_ADDRESS_P3_A Register (32 bits) */
#define TVO_INPUT_START_ADDRESS_P3_A_OFFSET        0x18
#define TVO_INPUT_START_ADDRESS_P3_A_REG           IOA(TVO_BASE_ADDR + TVO_INPUT_START_ADDRESS_P3_A_OFFSET)

/* TVO INPUT_SIZE_A Register (32 bits) */
#define TVO_INPUT_SIZE_A_OFFSET        0x1C
#define TVO_INPUT_SIZE_A_REG           IOA(TVO_BASE_ADDR + TVO_INPUT_SIZE_A_OFFSET)

/* TVO INPUT_STRIDE_P1_A Register (32 bits) */
#define TVO_INPUT_STRIDE_P1_A_OFFSET   0x20
#define TVO_INPUT_STRIDE_P1_A_REG      IOA(TVO_BASE_ADDR + TVO_INPUT_STRIDE_P1_A_OFFSET)

/* TVO INPUT_STRIDE_P2_A Register (32 bits) */
#define TVO_INPUT_STRIDE_P2_A_OFFSET   0x24
#define TVO_INPUT_STRIDE_P2_A_REG      IOA(TVO_BASE_ADDR + TVO_INPUT_STRIDE_P2_A_OFFSET)

/* TVO INPUT_STRIDE_P3_A Register (32 bits) */
#define TVO_INPUT_STRIDE_P3_A_OFFSET   0x28
#define TVO_INPUT_STRIDE_P3_A_REG      IOA(TVO_BASE_ADDR + TVO_INPUT_STRIDE_P3_A_OFFSET)

/* TVO OUTPUT_SIZE_A Register (32 bits) */
#define TVO_OUTPUT_SIZE_A_OFFSET       0x2C
#define TVO_OUTPUT_SIZE_A_REG          IOA(TVO_BASE_ADDR + TVO_OUTPUT_SIZE_A_OFFSET)

/* TVO PIXEL_BLANKING_A Register (32 bits) */
#define TVO_PIXEL_BLANKING_A_OFFSET    0x30
#define TVO_PIXEL_BLANKING_A_REG       IOA(TVO_BASE_ADDR + TVO_PIXEL_BLANKING_A_OFFSET)

/* TVO LINE_BLANKING_A Register (32 bits) */
#define TVO_LINE_BLANKING_A_OFFSET     0x34
#define TVO_LINE_BLANKING_A_REG        IOA(TVO_BASE_ADDR + TVO_LINE_BLANKING_A_OFFSET)

/* TVO INPUT_START_ADDRESS_P1_B Register (32 bits) */
#define TVO_INPUT_START_ADDRESS_P1_B_OFFSET        0x38
#define TVO_INPUT_START_ADDRESS_P1_B_REG           IOA(TVO_BASE_ADDR + TVO_INPUT_START_ADDRESS_P1_B_OFFSET)

/* TVO INPUT_START_ADDRESS_P2_B Register (32 bits) */
#define TVO_INPUT_START_ADDRESS_P2_B_OFFSET        0x3C
#define TVO_INPUT_START_ADDRESS_P2_B_REG           IOA(TVO_BASE_ADDR + TVO_INPUT_START_ADDRESS_P2_B_OFFSET)

/* TVO INPUT_START_ADDRESS_P3_B Register (32 bits) */
#define TVO_INPUT_START_ADDRESS_P3_B_OFFSET        0x40
#define TVO_INPUT_START_ADDRESS_P3_B_REG           IOA(TVO_BASE_ADDR + TVO_INPUT_START_ADDRESS_P3_B_OFFSET)

/* TVO INPUT_SIZE_B Register (32 bits) */
#define TVO_INPUT_SIZE_B_OFFSET        0x44
#define TVO_INPUT_SIZE_B_REG           IOA(TVO_BASE_ADDR + TVO_INPUT_SIZE_B_OFFSET)

/* TVO INPUT_STRIDE_P1_B Register (32 bits) */
#define TVO_INPUT_STRIDE_P1_B_OFFSET   0x48
#define TVO_INPUT_STRIDE_P1_B_REG      IOA(TVO_BASE_ADDR + TVO_INPUT_STRIDE_P1_B_OFFSET)

/* TVO INPUT_STRIDE_P2_B Register (32 bits) */
#define TVO_INPUT_STRIDE_P2_B_OFFSET   0x4C
#define TVO_INPUT_STRIDE_P2_B_REG      IOA(TVO_BASE_ADDR + TVO_INPUT_STRIDE_P2_B_OFFSET)

/* TVO INPUT_STRIDE_P3_B Register (32 bits) */
#define TVO_INPUT_STRIDE_P3_B_OFFSET   0x50
#define TVO_INPUT_STRIDE_P3_B_REG      IOA(TVO_BASE_ADDR + TVO_INPUT_STRIDE_P3_B_OFFSET)

/* TVO OUTPUT_SIZE_B Register (32 bits) */
#define TVO_OUTPUT_SIZE_B_OFFSET       0x54
#define TVO_OUTPUT_SIZE_B_REG          IOA(TVO_BASE_ADDR + TVO_OUTPUT_SIZE_B_OFFSET)

/* TVO PIXEL_BLANKING_B Register (32 bits) */
#define TVO_PIXEL_BLANKING_B_OFFSET    0x58
#define TVO_PIXEL_BLANKING_B_REG       IOA(TVO_BASE_ADDR + TVO_PIXEL_BLANKING_B_OFFSET)

/* TVO LINE_BLANKING_B Register (32 bits) */
#define TVO_LINE_BLANKING_B_OFFSET     0x5C
#define TVO_LINE_BLANKING_B_REG        IOA(TVO_BASE_ADDR + TVO_LINE_BLANKING_B_OFFSET)

/* TVO STRIPE_SIZE Register (32 bits) */
#define TVO_STRIPE_SIZE_OFFSET         0x60
#define TVO_STRIPE_SIZE_REG            IOA(TVO_BASE_ADDR + TVO_STRIPE_SIZE_OFFSET)

/* TVO DTL2DVDO_CONTROL Register (32 bits) */
#define TVO_DTL2DVDO_CONTROL_OFFSET    0x64
#define TVO_DTL2DVDO_CONTROL_REG       IOA(TVO_BASE_ADDR + TVO_DTL2DVDO_CONTROL_OFFSET)

/* TVO INPUT_FORMAT_A Register (32 bits) */
#define TVO_INPUT_FORMAT_A_OFFSET      0x68
#define TVO_INPUT_FORMAT_A_REG         IOA(TVO_BASE_ADDR + TVO_INPUT_FORMAT_A_OFFSET)

/* TVO INPUT_FORMAT_B Register (32 bits) */
#define TVO_INPUT_FORMAT_B_OFFSET      0x6C
#define TVO_INPUT_FORMAT_B_REG         IOA(TVO_BASE_ADDR + TVO_INPUT_FORMAT_B_OFFSET)

/* TVO VERTICAL_BLANKING_A Register (32 bits) */
#define TVO_VERTICAL_BLANKING_A_OFFSET 0x70
#define TVO_VERTICAL_BLANKING_A_REG    IOA(TVO_BASE_ADDR + TVO_VERTICAL_BLANKING_A_OFFSET)

/* TVO VERTICAL_BLANKING_B Register (32 bits) */
#define TVO_VERTICAL_BLANKING_B_OFFSET 0x74
#define TVO_VERTICAL_BLANKING_B_REG    IOA(TVO_BASE_ADDR + TVO_VERTICAL_BLANKING_B_OFFSET)

/* TVO COLOR_MATRIX_COEF_2_1 Register (32 bits) */
#define TVO_COLOR_MATRIX_COEF_2_1_OFFSET           0x78
#define TVO_COLOR_MATRIX_COEF_2_1_REG  IOA(TVO_BASE_ADDR + TVO_COLOR_MATRIX_COEF_2_1_OFFSET)

/* TVO COLOR_MATRIX_COEF_4_3 Register (32 bits) */
#define TVO_COLOR_MATRIX_COEF_4_3_OFFSET           0x7C
#define TVO_COLOR_MATRIX_COEF_4_3_REG  IOA(TVO_BASE_ADDR + TVO_COLOR_MATRIX_COEF_4_3_OFFSET)

/* TVO COLOR_MATRIX_COEF_6_5 Register (32 bits) */
#define TVO_COLOR_MATRIX_COEF_6_5_OFFSET           0x80
#define TVO_COLOR_MATRIX_COEF_6_5_REG  IOA(TVO_BASE_ADDR + TVO_COLOR_MATRIX_COEF_6_5_OFFSET)

/* TVO COLOR_MATRIX_COEF_8_7 Register (32 bits) */
#define TVO_COLOR_MATRIX_COEF_8_7_OFFSET           0x84
#define TVO_COLOR_MATRIX_COEF_8_7_REG  IOA(TVO_BASE_ADDR + TVO_COLOR_MATRIX_COEF_8_7_OFFSET)

/* TVO COLOR_MATRIX_COEF_10_9 Register (32 bits) */
#define TVO_COLOR_MATRIX_COEF_10_9_OFFSET          0x88
#define TVO_COLOR_MATRIX_COEF_10_9_REG IOA(TVO_BASE_ADDR + TVO_COLOR_MATRIX_COEF_10_9_OFFSET)

/* TVO COLOR_MATRIX_COEF_12_11 Register (32 bits) */
#define TVO_COLOR_MATRIX_COEF_12_11_OFFSET         0x8C
#define TVO_COLOR_MATRIX_COEF_12_11_REG            IOA(TVO_BASE_ADDR + TVO_COLOR_MATRIX_COEF_12_11_OFFSET)

/* TVO COLOR_CLIP Register (32 bits) */
#define TVO_COLOR_CLIP_OFFSET          0x90
#define TVO_COLOR_CLIP_REG             IOA(TVO_BASE_ADDR + TVO_COLOR_CLIP_OFFSET)

/* TVO ANTIFLICKER_MODE Register (32 bits) */
#define TVO_ANTIFLICKER_MODE_OFFSET    0x94
#define TVO_ANTIFLICKER_MODE_REG       IOA(TVO_BASE_ADDR + TVO_ANTIFLICKER_MODE_OFFSET)

/* TVO ANTIFLICKER_FILTER Register (32 bits) */
#define TVO_ANTIFLICKER_FILTER_OFFSET  0x98
#define TVO_ANTIFLICKER_FILTER_REG     IOA(TVO_BASE_ADDR + TVO_ANTIFLICKER_FILTER_OFFSET)

/* TVO FIELD_ODD_BEG Register (32 bits) */
#define TVO_FIELD_ODD_BEG_OFFSET       0xA0
#define TVO_FIELD_ODD_BEG_REG          IOA(TVO_BASE_ADDR + TVO_FIELD_ODD_BEG_OFFSET)

/* TVO FIELD_ODD_END Register (32 bits) */
#define TVO_FIELD_ODD_END_OFFSET       0xA4
#define TVO_FIELD_ODD_END_REG          IOA(TVO_BASE_ADDR + TVO_FIELD_ODD_END_OFFSET)

/* TVO FIELD_EVEN_BEG Register (32 bits) */
#define TVO_FIELD_EVEN_BEG_OFFSET      0xA8
#define TVO_FIELD_EVEN_BEG_REG         IOA(TVO_BASE_ADDR + TVO_FIELD_EVEN_BEG_OFFSET)

/* TVO FIELD_EVEN_END Register (32 bits) */
#define TVO_FIELD_EVEN_END_OFFSET      0xAC
#define TVO_FIELD_EVEN_END_REG         IOA(TVO_BASE_ADDR + TVO_FIELD_EVEN_END_OFFSET)

/* TVO FIELD_PIX_COLOR Register (32 bits) */
#define TVO_FIELD_PIX_COLOR_OFFSET     0xB0
#define TVO_FIELD_PIX_COLOR_REG        IOA(TVO_BASE_ADDR + TVO_FIELD_PIX_COLOR_OFFSET)

/* TVO LOAD_ID_H Register (32 bits) */
#define TVO_LOAD_ID_H_OFFSET           0xB4
#define TVO_LOAD_ID_H_REG              IOA(TVO_BASE_ADDR + TVO_LOAD_ID_H_OFFSET)

/* TVO LOAD_ID_V Register (32 bits) */
#define TVO_LOAD_ID_V_OFFSET           0xB8
#define TVO_LOAD_ID_V_REG              IOA(TVO_BASE_ADDR + TVO_LOAD_ID_V_OFFSET)

/* TVO SYNCHRO_H Register (32 bits) */
#define TVO_SYNCHRO_H_OFFSET           0xC0
#define TVO_SYNCHRO_H_REG              IOA(TVO_BASE_ADDR + TVO_SYNCHRO_H_OFFSET)

/* TVO SYNCHRO_V1 Register (32 bits) */
#define TVO_SYNCHRO_V1_OFFSET          0xC4
#define TVO_SYNCHRO_V1_REG             IOA(TVO_BASE_ADDR + TVO_SYNCHRO_V1_OFFSET)

/* TVO SYNCHRO_V2 Register (32 bits) */
#define TVO_SYNCHRO_V2_OFFSET          0xC8
#define TVO_SYNCHRO_V2_REG             IOA(TVO_BASE_ADDR + TVO_SYNCHRO_V2_OFFSET)

/* TVO IRQ_SET_STATUS Register (32 bits) */
#define TVO_IRQ_SET_STATUS_OFFSET      0xCC
#define TVO_IRQ_SET_STATUS_REG         IOA(TVO_BASE_ADDR + TVO_IRQ_SET_STATUS_OFFSET)

/* TVO IRQ_MASK Register (32 bits) */
#define TVO_IRQ_MASK_OFFSET            0xD0
#define TVO_IRQ_MASK_REG               IOA(TVO_BASE_ADDR + TVO_IRQ_MASK_OFFSET)

/* TVO IRQ_CLEAR Register (32 bits) */
#define TVO_IRQ_CLEAR_OFFSET           0xD4
#define TVO_IRQ_CLEAR_REG              IOA(TVO_BASE_ADDR + TVO_IRQ_CLEAR_OFFSET)

/* TVO IRQ_STATUS Register (32 bits) */
#define TVO_IRQ_STATUS_OFFSET          0xD8
#define TVO_IRQ_STATUS_REG             IOA(TVO_BASE_ADDR + TVO_IRQ_STATUS_OFFSET)

/* TVO ID Register (32 bits) */
#define TVO_ID_OFFSET                  0xE0
#define TVO_ID_REG                     IOA(TVO_BASE_ADDR + TVO_ID_OFFSET)

/* TVO IP_ID Register (32 bits) */
#define TVO_IP_ID_OFFSET               0xFFC
#define TVO_IP_ID_REG                  IOA(TVO_BASE_ADDR + TVO_IP_ID_OFFSET)

/* TVO WSS_CTRL_LSB Register (32 bits) */
#define TVO_WSS_CTRL_LSB_OFFSET        0x494
#define TVO_WSS_CTRL_LSB_REG           IOA(TVO_BASE_ADDR + TVO_WSS_CTRL_LSB_OFFSET)

/* TVO WSS_CTRL_MSB Register (32 bits) */
#define TVO_WSS_CTRL_MSB_OFFSET        0x498
#define TVO_WSS_CTRL_MSB_REG           IOA(TVO_BASE_ADDR + TVO_WSS_CTRL_MSB_OFFSET)

/* TVO BURST_START Register (32 bits) */
#define TVO_BURST_START_OFFSET         0x49C
#define TVO_BURST_START_REG            IOA(TVO_BASE_ADDR + TVO_BURST_START_OFFSET)

/* TVO BURST_END Register (32 bits) */
#define TVO_BURST_END_OFFSET           0x4A0
#define TVO_BURST_END_REG              IOA(TVO_BASE_ADDR + TVO_BURST_END_OFFSET)

/* TVO OUTPUT_PORT_CONTROL Register (32 bits) */
#define TVO_OUTPUT_PORT_CONTROL_OFFSET 0x4B0
#define TVO_OUTPUT_PORT_CONTROL_REG    IOA(TVO_BASE_ADDR + TVO_OUTPUT_PORT_CONTROL_OFFSET)

/* TVO DAC_POWERDOWN Register (32 bits) */
#define TVO_DAC_POWERDOWN_OFFSET       0x4B4
#define TVO_DAC_POWERDOWN_REG          IOA(TVO_BASE_ADDR + TVO_DAC_POWERDOWN_OFFSET)

/* TVO GAIN_R Register (32 bits) */
#define TVO_GAIN_R_OFFSET              0x4D8
#define TVO_GAIN_R_REG                 IOA(TVO_BASE_ADDR + TVO_GAIN_R_OFFSET)

/* TVO GAIN_G Register (32 bits) */
#define TVO_GAIN_G_OFFSET              0x4DC
#define TVO_GAIN_G_REG                 IOA(TVO_BASE_ADDR + TVO_GAIN_G_OFFSET)

/* TVO GAIN_B Register (32 bits) */
#define TVO_GAIN_B_OFFSET              0x4E0
#define TVO_GAIN_B_REG                 IOA(TVO_BASE_ADDR + TVO_GAIN_B_OFFSET)

/* TVO INPUT_PORT_CONTROL Register (32 bits) */
#define TVO_INPUT_PORT_CONTROL_OFFSET  0x4E4
#define TVO_INPUT_PORT_CONTROL_REG     IOA(TVO_BASE_ADDR + TVO_INPUT_PORT_CONTROL_OFFSET)

/* TVO DACS_CONTROL0 Register (32 bits) */
#define TVO_DACS_CONTROL0_OFFSET       0x4E8
#define TVO_DACS_CONTROL0_REG          IOA(TVO_BASE_ADDR + TVO_DACS_CONTROL0_OFFSET)

/* TVO DACS_CONTROL3 Register (32 bits) */
#define TVO_DACS_CONTROL3_OFFSET       0x4F4
#define TVO_DACS_CONTROL3_REG          IOA(TVO_BASE_ADDR + TVO_DACS_CONTROL3_OFFSET)

/* TVO VPS_ENABLE Register (32 bits) */
#define TVO_VPS_ENABLE_OFFSET          0x54C
#define TVO_VPS_ENABLE_REG             IOA(TVO_BASE_ADDR + TVO_VPS_ENABLE_OFFSET)

/* TVO VPS_BYTE_5 Register (32 bits) */
#define TVO_VPS_BYTE_5_OFFSET          0x550
#define TVO_VPS_BYTE_5_REG             IOA(TVO_BASE_ADDR + TVO_VPS_BYTE_5_OFFSET)

/* TVO VPS_BYTE_11 Register (32 bits) */
#define TVO_VPS_BYTE_11_OFFSET         0x554
#define TVO_VPS_BYTE_11_REG            IOA(TVO_BASE_ADDR + TVO_VPS_BYTE_11_OFFSET)

/* TVO VPS_BYTE_12 Register (32 bits) */
#define TVO_VPS_BYTE_12_OFFSET         0x558
#define TVO_VPS_BYTE_12_REG            IOA(TVO_BASE_ADDR + TVO_VPS_BYTE_12_OFFSET)

/* TVO VPS_BYTE_13 Register (32 bits) */
#define TVO_VPS_BYTE_13_OFFSET         0x55C
#define TVO_VPS_BYTE_13_REG            IOA(TVO_BASE_ADDR + TVO_VPS_BYTE_13_OFFSET)

/* TVO VPS_BYTE_14 Register (32 bits) */
#define TVO_VPS_BYTE_14_OFFSET         0x560
#define TVO_VPS_BYTE_14_REG            IOA(TVO_BASE_ADDR + TVO_VPS_BYTE_14_OFFSET)

/* TVO CHROMA_PHASE Register (32 bits) */
#define TVO_CHROMA_PHASE_OFFSET        0x564
#define TVO_CHROMA_PHASE_REG           IOA(TVO_BASE_ADDR + TVO_CHROMA_PHASE_OFFSET)

/* TVO GAIN_U_LSB Register (32 bits) */
#define TVO_GAIN_U_LSB_OFFSET          0x568
#define TVO_GAIN_U_LSB_REG             IOA(TVO_BASE_ADDR + TVO_GAIN_U_LSB_OFFSET)

/* TVO GAIN_V_LSB Register (32 bits) */
#define TVO_GAIN_V_LSB_OFFSET          0x56C
#define TVO_GAIN_V_LSB_REG             IOA(TVO_BASE_ADDR + TVO_GAIN_V_LSB_OFFSET)

/* TVO GAIN_U_BLACKLEV Register (32 bits) */
#define TVO_GAIN_U_BLACKLEV_OFFSET     0x570
#define TVO_GAIN_U_BLACKLEV_REG        IOA(TVO_BASE_ADDR + TVO_GAIN_U_BLACKLEV_OFFSET)

/* TVO GAIN_V_BLANKLEV Register (32 bits) */
#define TVO_GAIN_V_BLANKLEV_OFFSET     0x574
#define TVO_GAIN_V_BLANKLEV_REG        IOA(TVO_BASE_ADDR + TVO_GAIN_V_BLANKLEV_OFFSET)

/* TVO CCR_VERTBLANKLEV Register (32 bits) */
#define TVO_CCR_VERTBLANKLEV_OFFSET    0x578
#define TVO_CCR_VERTBLANKLEV_REG       IOA(TVO_BASE_ADDR + TVO_CCR_VERTBLANKLEV_OFFSET)

/* TVO STANDARD_CONTROL Register (32 bits) */
#define TVO_STANDARD_CONTROL_OFFSET    0x580
#define TVO_STANDARD_CONTROL_REG       IOA(TVO_BASE_ADDR + TVO_STANDARD_CONTROL_OFFSET)

/* TVO BURST_AMPLITUDE Register (32 bits) */
#define TVO_BURST_AMPLITUDE_OFFSET     0x584
#define TVO_BURST_AMPLITUDE_REG        IOA(TVO_BASE_ADDR + TVO_BURST_AMPLITUDE_OFFSET)

/* TVO FSC0 Register (32 bits) */
#define TVO_FSC0_OFFSET                0x588
#define TVO_FSC0_REG                   IOA(TVO_BASE_ADDR + TVO_FSC0_OFFSET)

/* TVO FSC1 Register (32 bits) */
#define TVO_FSC1_OFFSET                0x58C
#define TVO_FSC1_REG                   IOA(TVO_BASE_ADDR + TVO_FSC1_OFFSET)

/* TVO FSC2 Register (32 bits) */
#define TVO_FSC2_OFFSET                0x590
#define TVO_FSC2_REG                   IOA(TVO_BASE_ADDR + TVO_FSC2_OFFSET)

/* TVO FSC3 Register (32 bits) */
#define TVO_FSC3_OFFSET                0x594
#define TVO_FSC3_REG                   IOA(TVO_BASE_ADDR + TVO_FSC3_OFFSET)

/* TVO HTRIG Register (32 bits) */
#define TVO_HTRIG_OFFSET               0x5AC
#define TVO_HTRIG_REG                  IOA(TVO_BASE_ADDR + TVO_HTRIG_OFFSET)

/* TVO VTRIG Register (32 bits) */
#define TVO_VTRIG_OFFSET               0x5B0
#define TVO_VTRIG_REG                  IOA(TVO_BASE_ADDR + TVO_VTRIG_OFFSET)

/* TVO MULTI_CONTROL Register (32 bits) */
#define TVO_MULTI_CONTROL_OFFSET       0x5B4
#define TVO_MULTI_CONTROL_REG          IOA(TVO_BASE_ADDR + TVO_MULTI_CONTROL_OFFSET)

/* TVO FIRST_ACTIVE_LINE_LSB Register (32 bits) */
#define TVO_FIRST_ACTIVE_LINE_LSB_OFFSET           0x5E4
#define TVO_FIRST_ACTIVE_LINE_LSB_REG  IOA(TVO_BASE_ADDR + TVO_FIRST_ACTIVE_LINE_LSB_OFFSET)

/* TVO LAST_ACTIVE_LINE_LSB Register (32 bits) */
#define TVO_LAST_ACTIVE_LINE_LSB_OFFSET            0x5E8
#define TVO_LAST_ACTIVE_LINE_LSB_REG   IOA(TVO_BASE_ADDR + TVO_LAST_ACTIVE_LINE_LSB_OFFSET)

/* Register description for GENERAL_CTRL */

/* Reset value of register TVO_GENERAL_CTRL */
#define TVO_GENERAL_CTRL_VALUE         0x1

/* Bits definition for register TVO_GENERAL_CTRL */
#define TVO_TV_UPDATE_SHIFT            26
#define TVO_TV_UPDATE_FIELD            (0xFFFFFFFF - (0x1UL<<TVO_TV_UPDATE_SHIFT))
#define TVO_TV_UPDATE_0                (0x0UL<<TVO_TV_UPDATE_SHIFT)
#define TVO_TV_UPDATE_1                (0x1UL<<TVO_TV_UPDATE_SHIFT)
#define TVO_TV_UPDATE                  (0x1UL<<TVO_TV_UPDATE_SHIFT)
#define TVO_LOAD_ID_CAL_SHIFT          25
#define TVO_LOAD_ID_CAL_FIELD          (0xFFFFFFFF - (0x1UL<<TVO_LOAD_ID_CAL_SHIFT))
#define TVO_LOAD_ID_CAL_OFF            (0x0UL<<TVO_LOAD_ID_CAL_SHIFT)
#define TVO_LOAD_ID_CAL_ON             (0x1UL<<TVO_LOAD_ID_CAL_SHIFT)
#define TVO_LOAD_ID_CAL                (0x1UL<<TVO_LOAD_ID_CAL_SHIFT)
#define TVO_DAC_EDGE_SHIFT             22
#define TVO_DAC_EDGE_FIELD             (0xFFFFFFFF - (0x1UL<<TVO_DAC_EDGE_SHIFT))
#define TVO_DAC_EDGE_RISING            (0x0UL<<TVO_DAC_EDGE_SHIFT)
#define TVO_DAC_EDGE_FALLING           (0x1UL<<TVO_DAC_EDGE_SHIFT)
#define TVO_DAC_EDGE                   (0x1UL<<TVO_DAC_EDGE_SHIFT)
#define TVO_DAC_MAP_SHIFT              13
#define TVO_DAC_MAP_FIELD              (0xFFFFFFFF - (0x7UL<<TVO_DAC_MAP_SHIFT))
#define TVO_DAC_MAP_CVBS               (0x0UL<<TVO_DAC_MAP_SHIFT)
#define TVO_DAC_MAP_Y                  (0x1UL<<TVO_DAC_MAP_SHIFT)
#define TVO_DAC_MAP_C                  (0x2UL<<TVO_DAC_MAP_SHIFT)
#define TVO_DAC_MAP_R                  (0x3UL<<TVO_DAC_MAP_SHIFT)
#define TVO_DAC_MAP_G                  (0x4UL<<TVO_DAC_MAP_SHIFT)
#define TVO_DAC_MAP_B                  (0x5UL<<TVO_DAC_MAP_SHIFT)
#define TVO_DEBUG_PROBE_C_SHIFT        11
#define TVO_DEBUG_PROBE_C_FIELD        (0xFFFFFFFF - (0x3UL<<TVO_DEBUG_PROBE_C_SHIFT))
#define TVO_DEBUG_PROBE_C_DENC_OUTPUT  (0x0UL<<TVO_DEBUG_PROBE_C_SHIFT)
#define TVO_DEBUG_PROBE_C_FIELD_FORMATTER_OUTPUT   (0x1UL<<TVO_DEBUG_PROBE_C_SHIFT)
#define TVO_DEBUG_PROBE_C_FIFO_THRESHOLD_INDICATOR (0x2UL<<TVO_DEBUG_PROBE_C_SHIFT)
#define TVO_DEBUG_PROBE_C_PROBE_A_OUTPUT           (0x3UL<<TVO_DEBUG_PROBE_C_SHIFT)
#define TVO_DEBUG_PROBE_B_SHIFT        9
#define TVO_DEBUG_PROBE_B_FIELD        (0xFFFFFFFF - (0x3UL<<TVO_DEBUG_PROBE_B_SHIFT))
#define TVO_DEBUG_PROBE_B_YR           (0x0UL<<TVO_DEBUG_PROBE_B_SHIFT)
#define TVO_DEBUG_PROBE_B_UG           (0x1UL<<TVO_DEBUG_PROBE_B_SHIFT)
#define TVO_DEBUG_PROBE_B_VB           (0x2UL<<TVO_DEBUG_PROBE_B_SHIFT)
#define TVO_DEBUG_PROBE_B_3            (0x3UL<<TVO_DEBUG_PROBE_B_SHIFT)
#define TVO_DEBUG_PROBE_A_SHIFT        7
#define TVO_DEBUG_PROBE_A_FIELD        (0xFFFFFFFF - (0x3UL<<TVO_DEBUG_PROBE_A_SHIFT))
#define TVO_DEBUG_PROBE_A_DVDO_OUTPUT  (0x0UL<<TVO_DEBUG_PROBE_A_SHIFT)
#define TVO_DEBUG_PROBE_A_COLOR_MATRIX_OUTPUT      (0x1UL<<TVO_DEBUG_PROBE_A_SHIFT)
#define TVO_DEBUG_PROBE_A_ANTIFLICKER_OUTPUT       (0x2UL<<TVO_DEBUG_PROBE_A_SHIFT)
#define TVO_DEBUG_PROBE_A_3            (0x3UL<<TVO_DEBUG_PROBE_A_SHIFT)
#define TVO_COLOR_MAT_SHIFT            6
#define TVO_COLOR_MAT_FIELD            (0xFFFFFFFF - (0x1UL<<TVO_COLOR_MAT_SHIFT))
#define TVO_COLOR_MAT_BYPASSED         (0x0UL<<TVO_COLOR_MAT_SHIFT)
#define TVO_COLOR_MAT_ENABLED          (0x1UL<<TVO_COLOR_MAT_SHIFT)
#define TVO_COLOR_MAT                  (0x1UL<<TVO_COLOR_MAT_SHIFT)
#define TVO_OUTPUT_MODE_SHIFT          5
#define TVO_OUTPUT_MODE_FIELD          (0xFFFFFFFF - (0x1UL<<TVO_OUTPUT_MODE_SHIFT))
#define TVO_OUTPUT_MODE_NTSC_525_LINES (0x0UL<<TVO_OUTPUT_MODE_SHIFT)
#define TVO_OUTPUT_MODE_PAL_625_LINES  (0x1UL<<TVO_OUTPUT_MODE_SHIFT)
#define TVO_OUTPUT_MODE                (0x1UL<<TVO_OUTPUT_MODE_SHIFT)
#define TVO_STREAM_MODE_SHIFT          4
#define TVO_STREAM_MODE_FIELD          (0xFFFFFFFF - (0x1UL<<TVO_STREAM_MODE_SHIFT))
#define TVO_STREAM_MODE_SINGLE_PICTURE (0x0UL<<TVO_STREAM_MODE_SHIFT)
#define TVO_STREAM_MODE_LOOP           (0x1UL<<TVO_STREAM_MODE_SHIFT)
#define TVO_STREAM_MODE                (0x1UL<<TVO_STREAM_MODE_SHIFT)
#define TVO_STOP_SHIFT                 3
#define TVO_STOP_FIELD                 (0xFFFFFFFF - (0x1UL<<TVO_STOP_SHIFT))
#define TVO_STOP_0                     (0x0UL<<TVO_STOP_SHIFT)
#define TVO_STOP_1                     (0x1UL<<TVO_STOP_SHIFT)
#define TVO_STOP                       (0x1UL<<TVO_STOP_SHIFT)
#define TVO_START_SHIFT                2
#define TVO_START_FIELD                (0xFFFFFFFF - (0x1UL<<TVO_START_SHIFT))
#define TVO_START_0                    (0x0UL<<TVO_START_SHIFT)
#define TVO_START_1                    (0x1UL<<TVO_START_SHIFT)
#define TVO_START                      (0x1UL<<TVO_START_SHIFT)
#define TVO_SW_RESET_SHIFT             1
#define TVO_SW_RESET_FIELD             (0xFFFFFFFF - (0x1UL<<TVO_SW_RESET_SHIFT))
#define TVO_SW_RESET_0                 (0x0UL<<TVO_SW_RESET_SHIFT)
#define TVO_SW_RESET_1                 (0x1UL<<TVO_SW_RESET_SHIFT)
#define TVO_SW_RESET                   (0x1UL<<TVO_SW_RESET_SHIFT)
#define TVO_POWER_DOWN_SHIFT           0
#define TVO_POWER_DOWN_FIELD           (0xFFFFFFFF - (0x1UL<<TVO_POWER_DOWN_SHIFT))
#define TVO_POWER_DOWN_TVO_IN_POWER_DOWN           (0x0UL<<TVO_POWER_DOWN_SHIFT)
#define TVO_POWER_DOWN_TVO_POWERED_UP  (0x1UL<<TVO_POWER_DOWN_SHIFT)
#define TVO_POWER_DOWN                 (0x1UL<<TVO_POWER_DOWN_SHIFT)

/*****************************************************************************/
/* Register description for INPUT_START_ADDRESS_P[1:3]_[A:B] */

/* Reset value of register TVO_INPUT_START_ADDRESS_P[1:3]_[A:B] */
#define TVO_INPUT_START_ADDRESS_P1_A_VALUE         0x0
#define TVO_INPUT_START_ADDRESS_P1_B_VALUE         0x0
#define TVO_INPUT_START_ADDRESS_P2_A_VALUE         0x0
#define TVO_INPUT_START_ADDRESS_P2_B_VALUE         0x0
#define TVO_INPUT_START_ADDRESS_P3_A_VALUE         0x0
#define TVO_INPUT_START_ADDRESS_P3_B_VALUE         0x0

/* Bits definition for register TVO_INPUT_START_ADDRESS_P[1:3]_[A:B] */
#define TVO_ADDR_SHIFT                 0
#define TVO_ADDR_FIELD                 (0xFFFFFFFF - (0x7FFFFFFFUL<<TVO_ADDR_SHIFT))
#define TVO_ADDR_0                     (0x0UL<<TVO_ADDR_SHIFT)

/*****************************************************************************/
/* Register description for INPUT_STRIDE_P[1:3]_[A:B] */

/* Reset value of register TVO_INPUT_STRIDE_P[1:3]_[A:B] */
#define TVO_INPUT_STRIDE_P1_A_VALUE    0x0
#define TVO_INPUT_STRIDE_P1_B_VALUE    0x0
#define TVO_INPUT_STRIDE_P2_A_VALUE    0x0
#define TVO_INPUT_STRIDE_P2_B_VALUE    0x0
#define TVO_INPUT_STRIDE_P3_A_VALUE    0x0
#define TVO_INPUT_STRIDE_P3_B_VALUE    0x0

/* Bits definition for register TVO_INPUT_STRIDE_P[1:3]_[A:B] */
#define TVO_STRIDE_SHIFT               0
#define TVO_STRIDE_FIELD               (0xFFFFFFFF - (0xFFFFUL<<TVO_STRIDE_SHIFT))
#define TVO_STRIDE_0                   (0x0UL<<TVO_STRIDE_SHIFT)

/*****************************************************************************/
/* Register description for INPUT_FORMAT_[A:B] */

/* Reset value of register TVO_INPUT_FORMAT_[A:B] */
#define TVO_INPUT_FORMAT_A_VALUE       0x0
#define TVO_INPUT_FORMAT_B_VALUE       0x0

/* Bits definition for register TVO_INPUT_FORMAT_[A:B] */
#define TVO_TYPE_SHIFT                 0
#define TVO_TYPE_FIELD                 (0xFFFFFFFF - (0x7FFFFFFFUL<<TVO_TYPE_SHIFT))
#define TVO_TYPE_0                     (0x0UL<<TVO_TYPE_SHIFT)

/*****************************************************************************/
/* Register description for INPUT_SIZE_[A:B] */

/* Reset value of register TVO_INPUT_SIZE_[A:B] */
#define TVO_INPUT_SIZE_A_VALUE         0x0
#define TVO_INPUT_SIZE_B_VALUE         0x0

/* Bits definition for register TVO_INPUT_SIZE_[A:B] */
#define TVO_HEIGHT_SHIFT               16
#define TVO_HEIGHT_FIELD               (0xFFFFFFFF - (0x3FFUL<<TVO_HEIGHT_SHIFT))
#define TVO_HEIGHT_0                   (0x0UL<<TVO_HEIGHT_SHIFT)
#define TVO_WIDTH_SHIFT                0
#define TVO_WIDTH_FIELD                (0xFFFFFFFF - (0x3FFUL<<TVO_WIDTH_SHIFT))
#define TVO_WIDTH_0                    (0x0UL<<TVO_WIDTH_SHIFT)

/*****************************************************************************/
/* Register description for OUTPUT_SIZE_[A:B] */

/* Reset value of register TVO_OUTPUT_SIZE_[A:B] */
#define TVO_OUTPUT_SIZE_A_VALUE        0x0
#define TVO_OUTPUT_SIZE_B_VALUE        0x0

/* Bits definition for register TVO_OUTPUT_SIZE_[A:B] */
#define TVO_HEIGHT_SHIFT               16
#define TVO_HEIGHT_FIELD               (0xFFFFFFFF - (0x3FFUL<<TVO_HEIGHT_SHIFT))
#define TVO_HEIGHT_0                   (0x0UL<<TVO_HEIGHT_SHIFT)
#define TVO_WIDTH_SHIFT                0
#define TVO_WIDTH_FIELD                (0xFFFFFFFF - (0x3FFUL<<TVO_WIDTH_SHIFT))
#define TVO_WIDTH_0                    (0x0UL<<TVO_WIDTH_SHIFT)

/*****************************************************************************/
/* Register description for PIXEL_BLANKING_[A:B] */

/* Reset value of register TVO_PIXEL_BLANKING_[A:B] */
#define TVO_PIXEL_BLANKING_A_VALUE     0x0
#define TVO_PIXEL_BLANKING_B_VALUE     0x0

/* Bits definition for register TVO_PIXEL_BLANKING_[A:B] */
#define TVO_PIXELBL_SHIFT              0
#define TVO_PIXELBL_FIELD              (0xFFFFFFFF - (0x7FFFFFFFUL<<TVO_PIXELBL_SHIFT))
#define TVO_PIXELBL_0                  (0x0UL<<TVO_PIXELBL_SHIFT)

/*****************************************************************************/
/* Register description for LINE_BLANKING_[A:B] */

/* Reset value of register TVO_LINE_BLANKING_[A:B] */
#define TVO_LINE_BLANKING_A_VALUE      0x0
#define TVO_LINE_BLANKING_B_VALUE      0x0

/* Bits definition for register TVO_LINE_BLANKING_[A:B] */
#define TVO_LINEBL_SHIFT               0
#define TVO_LINEBL_FIELD               (0xFFFFFFFF - (0x7FFFFFFFUL<<TVO_LINEBL_SHIFT))
#define TVO_LINEBL_0                   (0x0UL<<TVO_LINEBL_SHIFT)

/*****************************************************************************/
/* Register description for VERTICAL_BLANKING_[A:B] */

/* Reset value of register TVO_VERTICAL_BLANKING_[A:B] */
#define TVO_VERTICAL_BLANKING_A_VALUE  0x0
#define TVO_VERTICAL_BLANKING_B_VALUE  0x0

/* Bits definition for register TVO_VERTICAL_BLANKING_[A:B] */
#define TVO_VERTBL_SHIFT               0
#define TVO_VERTBL_FIELD               (0xFFFFFFFF - (0xFFFFUL<<TVO_VERTBL_SHIFT))
#define TVO_VERTBL_0                   (0x0UL<<TVO_VERTBL_SHIFT)

/*****************************************************************************/
/* Register description for STRIPE_SIZE */

/* Reset value of register TVO_STRIPE_SIZE */
#define TVO_STRIPE_SIZE_VALUE          0x0

/* Bits definition for register TVO_STRIPE_SIZE */
#define TVO_STRIPE_SHIFT               0
#define TVO_STRIPE_FIELD               (0xFFFFFFFF - (0x7FFFFFFFUL<<TVO_STRIPE_SHIFT))
#define TVO_STRIPE_0                   (0x0UL<<TVO_STRIPE_SHIFT)

/*****************************************************************************/
/* Register description for DTL2DVDO_CONTROL */

/* Reset value of register TVO_DTL2DVDO_CONTROL */
#define TVO_DTL2DVDO_CONTROL_VALUE     0x0

/* Bits definition for register TVO_DTL2DVDO_CONTROL */
#define TVO_BS_SHIFT                   0
#define TVO_BS_FIELD                   (0xFFFFFFFF - (0x1UL<<TVO_BS_SHIFT))
#define TVO_BS_0                       (0x0UL<<TVO_BS_SHIFT)
#define TVO_BS_1                       (0x1UL<<TVO_BS_SHIFT)
#define TVO_BS                         (0x1UL<<TVO_BS_SHIFT)

/*****************************************************************************/
/* Register description for COLOR_MATRIX_COEF_2_1 */

/* Reset value of register TVO_COLOR_MATRIX_COEF_2_1 */
#define TVO_COLOR_MATRIX_COEF_2_1_VALUE            0x400040

/* Bits definition for register TVO_COLOR_MATRIX_COEF_2_1 */
#define TVO_COEFH_SHIFT                16
#define TVO_COEFH_FIELD                (0xFFFFFFFF - (0x3FFUL<<TVO_COEFH_SHIFT))
#define TVO_COEFH_40                   (0x40UL<<TVO_COEFH_SHIFT)
#define TVO_COEFL_SHIFT                0
#define TVO_COEFL_FIELD                (0xFFFFFFFF - (0x3FFUL<<TVO_COEFL_SHIFT))
#define TVO_COEFL_40                   (0x40UL<<TVO_COEFL_SHIFT)

/*****************************************************************************/
/* Register description for COLOR_MATRIX_COEF_4_3 */

/* Reset value of register TVO_COLOR_MATRIX_COEF_4_3 */
#define TVO_COLOR_MATRIX_COEF_4_3_VALUE            0x40

/* Bits definition for register TVO_COLOR_MATRIX_COEF_4_3 */
#define TVO_COEFM_SHIFT                16
#define TVO_COEFM_FIELD                (0xFFFFFFFF - (0xFFUL<<TVO_COEFM_SHIFT))
#define TVO_COEFM_0                    (0x0UL<<TVO_COEFM_SHIFT)
#define TVO_COEFL_SHIFT                0
#define TVO_COEFL_FIELD                (0xFFFFFFFF - (0x3FFUL<<TVO_COEFL_SHIFT))
#define TVO_COEFL_40                   (0x40UL<<TVO_COEFL_SHIFT)

/*****************************************************************************/
/* Register description for COLOR_MATRIX_COEF_6_5 */

/* Reset value of register TVO_COLOR_MATRIX_COEF_6_5 */
#define TVO_COLOR_MATRIX_COEF_6_5_VALUE            0x400040

/* Bits definition for register TVO_COLOR_MATRIX_COEF_6_5 */
#define TVO_COEFH_SHIFT                16
#define TVO_COEFH_FIELD                (0xFFFFFFFF - (0x3FFUL<<TVO_COEFH_SHIFT))
#define TVO_COEFH_40                   (0x40UL<<TVO_COEFH_SHIFT)
#define TVO_COEFL_SHIFT                0
#define TVO_COEFL_FIELD                (0xFFFFFFFF - (0x3FFUL<<TVO_COEFL_SHIFT))
#define TVO_COEFL_40                   (0x40UL<<TVO_COEFL_SHIFT)

/*****************************************************************************/
/* Register description for COLOR_MATRIX_COEF_8_7 */

/* Reset value of register TVO_COLOR_MATRIX_COEF_8_7 */
#define TVO_COLOR_MATRIX_COEF_8_7_VALUE            0x40

/* Bits definition for register TVO_COLOR_MATRIX_COEF_8_7 */
#define TVO_COEFM_SHIFT                16
#define TVO_COEFM_FIELD                (0xFFFFFFFF - (0xFFUL<<TVO_COEFM_SHIFT))
#define TVO_COEFM_0                    (0x0UL<<TVO_COEFM_SHIFT)
#define TVO_COEFL_SHIFT                0
#define TVO_COEFL_FIELD                (0xFFFFFFFF - (0x3FFUL<<TVO_COEFL_SHIFT))
#define TVO_COEFL_40                   (0x40UL<<TVO_COEFL_SHIFT)

/*****************************************************************************/
/* Register description for COLOR_MATRIX_COEF_10_9 */

/* Reset value of register TVO_COLOR_MATRIX_COEF_10_9 */
#define TVO_COLOR_MATRIX_COEF_10_9_VALUE           0x400040

/* Bits definition for register TVO_COLOR_MATRIX_COEF_10_9 */
#define TVO_COEFH_SHIFT                16
#define TVO_COEFH_FIELD                (0xFFFFFFFF - (0x3FFUL<<TVO_COEFH_SHIFT))
#define TVO_COEFH_40                   (0x40UL<<TVO_COEFH_SHIFT)
#define TVO_COEFL_SHIFT                0
#define TVO_COEFL_FIELD                (0xFFFFFFFF - (0x3FFUL<<TVO_COEFL_SHIFT))
#define TVO_COEFL_40                   (0x40UL<<TVO_COEFL_SHIFT)

/*****************************************************************************/
/* Register description for COLOR_MATRIX_COEF_12_11 */

/* Reset value of register TVO_COLOR_MATRIX_COEF_12_11 */
#define TVO_COLOR_MATRIX_COEF_12_11_VALUE          0x40

/* Bits definition for register TVO_COLOR_MATRIX_COEF_12_11 */
#define TVO_COEFM_SHIFT                16
#define TVO_COEFM_FIELD                (0xFFFFFFFF - (0xFFUL<<TVO_COEFM_SHIFT))
#define TVO_COEFM_0                    (0x0UL<<TVO_COEFM_SHIFT)
#define TVO_COEFL_SHIFT                0
#define TVO_COEFL_FIELD                (0xFFFFFFFF - (0x3FFUL<<TVO_COEFL_SHIFT))
#define TVO_COEFL_40                   (0x40UL<<TVO_COEFL_SHIFT)

/*****************************************************************************/
/* Register description for COLOR_CLIP */

/* Reset value of register TVO_COLOR_CLIP */
#define TVO_COLOR_CLIP_VALUE           0xFF

/* Bits definition for register TVO_COLOR_CLIP */
#define TVO_CLIP_SHIFT                 0
#define TVO_CLIP_FIELD                 (0xFFFFFFFF - (0xFFUL<<TVO_CLIP_SHIFT))
#define TVO_CLIP_FF                    (0xFFUL<<TVO_CLIP_SHIFT)

/*****************************************************************************/
/* Register description for ANTIFLICKER_MODE */

/* Reset value of register TVO_ANTIFLICKER_MODE */
#define TVO_ANTIFLICKER_MODE_VALUE     0x0

/* Bits definition for register TVO_ANTIFLICKER_MODE */
#define TVO_MODE_SHIFT                 0
#define TVO_MODE_FIELD                 (0xFFFFFFFF - (0x3UL<<TVO_MODE_SHIFT))
#define TVO_MODE_NORMAL                (0x0UL<<TVO_MODE_SHIFT)
#define TVO_MODE_INTERLEAVED           (0x1UL<<TVO_MODE_SHIFT)
#define TVO_MODE_PROGRESSIVE           (0x2UL<<TVO_MODE_SHIFT)
#define TVO_MODE_3                     (0x3UL<<TVO_MODE_SHIFT)

/*****************************************************************************/
/* Register description for ANTIFLICKER_FILTER */

/* Reset value of register TVO_ANTIFLICKER_FILTER */
#define TVO_ANTIFLICKER_FILTER_VALUE   0x9249

/* Bits definition for register TVO_ANTIFLICKER_FILTER */
#define TVO_V_EVEN_CBCR_SHIFT          15
#define TVO_V_EVEN_CBCR_FIELD          (0xFFFFFFFF - (0x7UL<<TVO_V_EVEN_CBCR_SHIFT))
#define TVO_V_EVEN_CBCR_1              (0x1UL<<TVO_V_EVEN_CBCR_SHIFT)
#define TVO_V_EVEN_Y_SHIFT             12
#define TVO_V_EVEN_Y_FIELD             (0xFFFFFFFF - (0x7UL<<TVO_V_EVEN_Y_SHIFT))
#define TVO_V_EVEN_Y_1                 (0x1UL<<TVO_V_EVEN_Y_SHIFT)
#define TVO_V_ODD_CBCR_SHIFT           9
#define TVO_V_ODD_CBCR_FIELD           (0xFFFFFFFF - (0x7UL<<TVO_V_ODD_CBCR_SHIFT))
#define TVO_V_ODD_CBCR_1               (0x1UL<<TVO_V_ODD_CBCR_SHIFT)
#define TVO_V_ODD_Y_SHIFT              6
#define TVO_V_ODD_Y_FIELD              (0xFFFFFFFF - (0x7UL<<TVO_V_ODD_Y_SHIFT))
#define TVO_V_ODD_Y_1                  (0x1UL<<TVO_V_ODD_Y_SHIFT)
#define TVO_H_CBCR_SHIFT               3
#define TVO_H_CBCR_FIELD               (0xFFFFFFFF - (0x7UL<<TVO_H_CBCR_SHIFT))
#define TVO_H_CBCR_1                   (0x1UL<<TVO_H_CBCR_SHIFT)
#define TVO_H_Y_SHIFT                  0
#define TVO_H_Y_FIELD                  (0xFFFFFFFF - (0x7UL<<TVO_H_Y_SHIFT))
#define TVO_H_Y_1                      (0x1UL<<TVO_H_Y_SHIFT)

/*****************************************************************************/
/* Register description for FIELD_ODD_BEG */

/* Reset value of register TVO_FIELD_ODD_BEG */
#define TVO_FIELD_ODD_BEG_VALUE        0x10001

/* Bits definition for register TVO_FIELD_ODD_BEG */
#define TVO_VPOS_SHIFT                 16
#define TVO_VPOS_FIELD                 (0xFFFFFFFF - (0x3FFUL<<TVO_VPOS_SHIFT))
#define TVO_VPOS_1                     (0x1UL<<TVO_VPOS_SHIFT)
#define TVO_HPOS_SHIFT                 0
#define TVO_HPOS_FIELD                 (0xFFFFFFFF - (0x3FFUL<<TVO_HPOS_SHIFT))
#define TVO_HPOS_1                     (0x1UL<<TVO_HPOS_SHIFT)

/*****************************************************************************/
/* Register description for FIELD_ODD_END */

/* Reset value of register TVO_FIELD_ODD_END */
#define TVO_FIELD_ODD_END_VALUE        0x10001

/* Bits definition for register TVO_FIELD_ODD_END */
#define TVO_VPOS_SHIFT                 16
#define TVO_VPOS_FIELD                 (0xFFFFFFFF - (0x3FFUL<<TVO_VPOS_SHIFT))
#define TVO_VPOS_1                     (0x1UL<<TVO_VPOS_SHIFT)
#define TVO_HPOS_SHIFT                 0
#define TVO_HPOS_FIELD                 (0xFFFFFFFF - (0x3FFUL<<TVO_HPOS_SHIFT))
#define TVO_HPOS_1                     (0x1UL<<TVO_HPOS_SHIFT)

/*****************************************************************************/
/* Register description for FIELD_EVEN_BEG */

/* Reset value of register TVO_FIELD_EVEN_BEG */
#define TVO_FIELD_EVEN_BEG_VALUE       0x10001

/* Bits definition for register TVO_FIELD_EVEN_BEG */
#define TVO_VPOS_SHIFT                 16
#define TVO_VPOS_FIELD                 (0xFFFFFFFF - (0x3FFUL<<TVO_VPOS_SHIFT))
#define TVO_VPOS_1                     (0x1UL<<TVO_VPOS_SHIFT)
#define TVO_HPOS_SHIFT                 0
#define TVO_HPOS_FIELD                 (0xFFFFFFFF - (0x3FFUL<<TVO_HPOS_SHIFT))
#define TVO_HPOS_1                     (0x1UL<<TVO_HPOS_SHIFT)

/*****************************************************************************/
/* Register description for FIELD_EVEN_END */

/* Reset value of register TVO_FIELD_EVEN_END */
#define TVO_FIELD_EVEN_END_VALUE       0x10001

/* Bits definition for register TVO_FIELD_EVEN_END */
#define TVO_VPOS_SHIFT                 16
#define TVO_VPOS_FIELD                 (0xFFFFFFFF - (0x3FFUL<<TVO_VPOS_SHIFT))
#define TVO_VPOS_1                     (0x1UL<<TVO_VPOS_SHIFT)
#define TVO_HPOS_SHIFT                 0
#define TVO_HPOS_FIELD                 (0xFFFFFFFF - (0x3FFUL<<TVO_HPOS_SHIFT))
#define TVO_HPOS_1                     (0x1UL<<TVO_HPOS_SHIFT)

/*****************************************************************************/
/* Register description for FIELD_PIX_COLOR */

/* Reset value of register TVO_FIELD_PIX_COLOR */
#define TVO_FIELD_PIX_COLOR_VALUE      0x808010

/* Bits definition for register TVO_FIELD_PIX_COLOR */
#define TVO_CR_SHIFT                   16
#define TVO_CR_FIELD                   (0xFFFFFFFF - (0xFFUL<<TVO_CR_SHIFT))
#define TVO_CR_80                      (0x80UL<<TVO_CR_SHIFT)
#define TVO_CB_SHIFT                   8
#define TVO_CB_FIELD                   (0xFFFFFFFF - (0xFFUL<<TVO_CB_SHIFT))
#define TVO_CB_80                      (0x80UL<<TVO_CB_SHIFT)
#define TVO_Y_SHIFT                    0
#define TVO_Y_FIELD                    (0xFFFFFFFF - (0xFFUL<<TVO_Y_SHIFT))
#define TVO_Y_10                       (0x10UL<<TVO_Y_SHIFT)

/*****************************************************************************/
/* Register description for LOAD_ID_H */

/* Reset value of register TVO_LOAD_ID_H */
#define TVO_LOAD_ID_H_VALUE            0x0

/* Bits definition for register TVO_LOAD_ID_H */
#define TVO_H_STOP_SHIFT               16
#define TVO_H_STOP_FIELD               (0xFFFFFFFF - (0x7FFUL<<TVO_H_STOP_SHIFT))
#define TVO_H_STOP_0                   (0x0UL<<TVO_H_STOP_SHIFT)
#define TVO_H_START_SHIFT              0
#define TVO_H_START_FIELD              (0xFFFFFFFF - (0x7FFUL<<TVO_H_START_SHIFT))
#define TVO_H_START_0                  (0x0UL<<TVO_H_START_SHIFT)

/*****************************************************************************/
/* Register description for LOAD_ID_V */

/* Reset value of register TVO_LOAD_ID_V */
#define TVO_LOAD_ID_V_VALUE            0x0

/* Bits definition for register TVO_LOAD_ID_V */
#define TVO_V_STOP_SHIFT               16
#define TVO_V_STOP_FIELD               (0xFFFFFFFF - (0x1FFUL<<TVO_V_STOP_SHIFT))
#define TVO_V_STOP_0                   (0x0UL<<TVO_V_STOP_SHIFT)
#define TVO_V_START_SHIFT              0
#define TVO_V_START_FIELD              (0xFFFFFFFF - (0x3FFUL<<TVO_V_START_SHIFT))
#define TVO_V_START_0                  (0x0UL<<TVO_V_START_SHIFT)

/*****************************************************************************/
/* Register description for SYNCHRO_H */

/* Reset value of register TVO_SYNCHRO_H */
#define TVO_SYNCHRO_H_VALUE            0x1

/* Bits definition for register TVO_SYNCHRO_H */
#define TVO_HSYNC_POS_SHIFT            0
#define TVO_HSYNC_POS_FIELD            (0xFFFFFFFF - (0x7FFUL<<TVO_HSYNC_POS_SHIFT))
#define TVO_HSYNC_POS_1                (0x1UL<<TVO_HSYNC_POS_SHIFT)

/*****************************************************************************/
/* Register description for SYNCHRO_V1 */

/* Reset value of register TVO_SYNCHRO_V1 */
#define TVO_SYNCHRO_V1_VALUE           0x10001

/* Bits definition for register TVO_SYNCHRO_V1 */
#define TVO_SYNC_VPOS_SHIFT            16
#define TVO_SYNC_VPOS_FIELD            (0xFFFFFFFF - (0x3FFUL<<TVO_SYNC_VPOS_SHIFT))
#define TVO_SYNC_VPOS_1                (0x1UL<<TVO_SYNC_VPOS_SHIFT)
#define TVO_SYNC_HPOS_SHIFT            0
#define TVO_SYNC_HPOS_FIELD            (0xFFFFFFFF - (0x7FFUL<<TVO_SYNC_HPOS_SHIFT))
#define TVO_SYNC_HPOS_1                (0x1UL<<TVO_SYNC_HPOS_SHIFT)

/*****************************************************************************/
/* Register description for SYNCHRO_V2 */

/* Reset value of register TVO_SYNCHRO_V2 */
#define TVO_SYNCHRO_V2_VALUE           0x10001

/* Bits definition for register TVO_SYNCHRO_V2 */
#define TVO_SYNC_VPOS_SHIFT            16
#define TVO_SYNC_VPOS_FIELD            (0xFFFFFFFF - (0x3FFUL<<TVO_SYNC_VPOS_SHIFT))
#define TVO_SYNC_VPOS_1                (0x1UL<<TVO_SYNC_VPOS_SHIFT)
#define TVO_SYNC_HPOS_SHIFT            0
#define TVO_SYNC_HPOS_FIELD            (0xFFFFFFFF - (0x7FFUL<<TVO_SYNC_HPOS_SHIFT))
#define TVO_SYNC_HPOS_1                (0x1UL<<TVO_SYNC_HPOS_SHIFT)

/*****************************************************************************/
/* Register description for IRQ_SET_STATUS */

/* Reset value of register TVO_IRQ_SET_STATUS */
#define TVO_IRQ_SET_STATUS_VALUE       0x0

/* Bits definition for register TVO_IRQ_SET_STATUS */
#define TVO_LOAD_ID_DAC_SHIFT          8
#define TVO_LOAD_ID_DAC_FIELD          (0xFFFFFFFF - (0x1UL<<TVO_LOAD_ID_DAC_SHIFT))
#define TVO_LOAD_ID_DAC_0              (0x0UL<<TVO_LOAD_ID_DAC_SHIFT)
#define TVO_LOAD_ID_DAC_1              (0x1UL<<TVO_LOAD_ID_DAC_SHIFT)
#define TVO_LOAD_ID_DAC                (0x1UL<<TVO_LOAD_ID_DAC_SHIFT)
#define TVO_FIFO_UNDERRUN_SHIFT        7
#define TVO_FIFO_UNDERRUN_FIELD        (0xFFFFFFFF - (0x1UL<<TVO_FIFO_UNDERRUN_SHIFT))
#define TVO_FIFO_UNDERRUN_0            (0x0UL<<TVO_FIFO_UNDERRUN_SHIFT)
#define TVO_FIFO_UNDERRUN_1            (0x1UL<<TVO_FIFO_UNDERRUN_SHIFT)
#define TVO_FIFO_UNDERRUN              (0x1UL<<TVO_FIFO_UNDERRUN_SHIFT)
#define TVO_SOF_OUT_SHIFT              4
#define TVO_SOF_OUT_FIELD              (0xFFFFFFFF - (0x1UL<<TVO_SOF_OUT_SHIFT))
#define TVO_SOF_OUT_0                  (0x0UL<<TVO_SOF_OUT_SHIFT)
#define TVO_SOF_OUT_1                  (0x1UL<<TVO_SOF_OUT_SHIFT)
#define TVO_SOF_OUT                    (0x1UL<<TVO_SOF_OUT_SHIFT)
#define TVO_EOF_IN_SHIFT               1
#define TVO_EOF_IN_FIELD               (0xFFFFFFFF - (0x1UL<<TVO_EOF_IN_SHIFT))
#define TVO_EOF_IN_0                   (0x0UL<<TVO_EOF_IN_SHIFT)
#define TVO_EOF_IN_1                   (0x1UL<<TVO_EOF_IN_SHIFT)
#define TVO_EOF_IN                     (0x1UL<<TVO_EOF_IN_SHIFT)
#define TVO_SOF_IN_SHIFT               0
#define TVO_SOF_IN_FIELD               (0xFFFFFFFF - (0x1UL<<TVO_SOF_IN_SHIFT))
#define TVO_SOF_IN_0                   (0x0UL<<TVO_SOF_IN_SHIFT)
#define TVO_SOF_IN_1                   (0x1UL<<TVO_SOF_IN_SHIFT)
#define TVO_SOF_IN                     (0x1UL<<TVO_SOF_IN_SHIFT)

/*****************************************************************************/
/* Register description for IRQ_STATUS */

/* Reset value of register TVO_IRQ_STATUS */
#define TVO_IRQ_STATUS_VALUE           0x0

/* Bits definition for register TVO_IRQ_STATUS */
#define TVO_LOAD_ID_DAC_SHIFT          8
#define TVO_LOAD_ID_DAC_FIELD          (0xFFFFFFFF - (0x1UL<<TVO_LOAD_ID_DAC_SHIFT))
#define TVO_LOAD_ID_DAC_0              (0x0UL<<TVO_LOAD_ID_DAC_SHIFT)
#define TVO_LOAD_ID_DAC_1              (0x1UL<<TVO_LOAD_ID_DAC_SHIFT)
#define TVO_LOAD_ID_DAC                (0x1UL<<TVO_LOAD_ID_DAC_SHIFT)
#define TVO_FIFO_UNDERRUN_SHIFT        7
#define TVO_FIFO_UNDERRUN_FIELD        (0xFFFFFFFF - (0x1UL<<TVO_FIFO_UNDERRUN_SHIFT))
#define TVO_FIFO_UNDERRUN_0            (0x0UL<<TVO_FIFO_UNDERRUN_SHIFT)
#define TVO_FIFO_UNDERRUN_1            (0x1UL<<TVO_FIFO_UNDERRUN_SHIFT)
#define TVO_FIFO_UNDERRUN              (0x1UL<<TVO_FIFO_UNDERRUN_SHIFT)
#define TVO_SOF_OUT_SHIFT              4
#define TVO_SOF_OUT_FIELD              (0xFFFFFFFF - (0x1UL<<TVO_SOF_OUT_SHIFT))
#define TVO_SOF_OUT_0                  (0x0UL<<TVO_SOF_OUT_SHIFT)
#define TVO_SOF_OUT_1                  (0x1UL<<TVO_SOF_OUT_SHIFT)
#define TVO_SOF_OUT                    (0x1UL<<TVO_SOF_OUT_SHIFT)
#define TVO_EOF_IN_SHIFT               1
#define TVO_EOF_IN_FIELD               (0xFFFFFFFF - (0x1UL<<TVO_EOF_IN_SHIFT))
#define TVO_EOF_IN_0                   (0x0UL<<TVO_EOF_IN_SHIFT)
#define TVO_EOF_IN_1                   (0x1UL<<TVO_EOF_IN_SHIFT)
#define TVO_EOF_IN                     (0x1UL<<TVO_EOF_IN_SHIFT)
#define TVO_SOF_IN_SHIFT               0
#define TVO_SOF_IN_FIELD               (0xFFFFFFFF - (0x1UL<<TVO_SOF_IN_SHIFT))
#define TVO_SOF_IN_0                   (0x0UL<<TVO_SOF_IN_SHIFT)
#define TVO_SOF_IN_1                   (0x1UL<<TVO_SOF_IN_SHIFT)
#define TVO_SOF_IN                     (0x1UL<<TVO_SOF_IN_SHIFT)

/*****************************************************************************/
/* Register description for IRQ_MASK */

/* Reset value of register TVO_IRQ_MASK */
#define TVO_IRQ_MASK_VALUE             0x0

/* Bits definition for register TVO_IRQ_MASK */
#define TVO_LOAD_ID_DAC_SHIFT          8
#define TVO_LOAD_ID_DAC_FIELD          (0xFFFFFFFF - (0x1UL<<TVO_LOAD_ID_DAC_SHIFT))
#define TVO_LOAD_ID_DAC_0              (0x0UL<<TVO_LOAD_ID_DAC_SHIFT)
#define TVO_LOAD_ID_DAC_1              (0x1UL<<TVO_LOAD_ID_DAC_SHIFT)
#define TVO_LOAD_ID_DAC                (0x1UL<<TVO_LOAD_ID_DAC_SHIFT)
#define TVO_FIFO_UNDERRUN_SHIFT        7
#define TVO_FIFO_UNDERRUN_FIELD        (0xFFFFFFFF - (0x1UL<<TVO_FIFO_UNDERRUN_SHIFT))
#define TVO_FIFO_UNDERRUN_0            (0x0UL<<TVO_FIFO_UNDERRUN_SHIFT)
#define TVO_FIFO_UNDERRUN_1            (0x1UL<<TVO_FIFO_UNDERRUN_SHIFT)
#define TVO_FIFO_UNDERRUN              (0x1UL<<TVO_FIFO_UNDERRUN_SHIFT)
#define TVO_SOF_OUT_SHIFT              4
#define TVO_SOF_OUT_FIELD              (0xFFFFFFFF - (0x1UL<<TVO_SOF_OUT_SHIFT))
#define TVO_SOF_OUT_0                  (0x0UL<<TVO_SOF_OUT_SHIFT)
#define TVO_SOF_OUT_1                  (0x1UL<<TVO_SOF_OUT_SHIFT)
#define TVO_SOF_OUT                    (0x1UL<<TVO_SOF_OUT_SHIFT)
#define TVO_EOF_IN_SHIFT               1
#define TVO_EOF_IN_FIELD               (0xFFFFFFFF - (0x1UL<<TVO_EOF_IN_SHIFT))
#define TVO_EOF_IN_0                   (0x0UL<<TVO_EOF_IN_SHIFT)
#define TVO_EOF_IN_1                   (0x1UL<<TVO_EOF_IN_SHIFT)
#define TVO_EOF_IN                     (0x1UL<<TVO_EOF_IN_SHIFT)
#define TVO_SOF_IN_SHIFT               0
#define TVO_SOF_IN_FIELD               (0xFFFFFFFF - (0x1UL<<TVO_SOF_IN_SHIFT))
#define TVO_SOF_IN_0                   (0x0UL<<TVO_SOF_IN_SHIFT)
#define TVO_SOF_IN_1                   (0x1UL<<TVO_SOF_IN_SHIFT)
#define TVO_SOF_IN                     (0x1UL<<TVO_SOF_IN_SHIFT)

/*****************************************************************************/
/* Register description for IRQ_CLEAR */

/* Reset value of register TVO_IRQ_CLEAR */
#define TVO_IRQ_CLEAR_VALUE            0x0

/* Bits definition for register TVO_IRQ_CLEAR */
#define TVO_LOAD_ID_DAC_SHIFT          8
#define TVO_LOAD_ID_DAC_FIELD          (0xFFFFFFFF - (0x1UL<<TVO_LOAD_ID_DAC_SHIFT))
#define TVO_LOAD_ID_DAC_0              (0x0UL<<TVO_LOAD_ID_DAC_SHIFT)
#define TVO_LOAD_ID_DAC_1              (0x1UL<<TVO_LOAD_ID_DAC_SHIFT)
#define TVO_LOAD_ID_DAC                (0x1UL<<TVO_LOAD_ID_DAC_SHIFT)
#define TVO_FIFO_UNDERRUN_SHIFT        7
#define TVO_FIFO_UNDERRUN_FIELD        (0xFFFFFFFF - (0x1UL<<TVO_FIFO_UNDERRUN_SHIFT))
#define TVO_FIFO_UNDERRUN_0            (0x0UL<<TVO_FIFO_UNDERRUN_SHIFT)
#define TVO_FIFO_UNDERRUN_1            (0x1UL<<TVO_FIFO_UNDERRUN_SHIFT)
#define TVO_FIFO_UNDERRUN              (0x1UL<<TVO_FIFO_UNDERRUN_SHIFT)
#define TVO_SOF_OUT_SHIFT              4
#define TVO_SOF_OUT_FIELD              (0xFFFFFFFF - (0x1UL<<TVO_SOF_OUT_SHIFT))
#define TVO_SOF_OUT_0                  (0x0UL<<TVO_SOF_OUT_SHIFT)
#define TVO_SOF_OUT_1                  (0x1UL<<TVO_SOF_OUT_SHIFT)
#define TVO_SOF_OUT                    (0x1UL<<TVO_SOF_OUT_SHIFT)
#define TVO_EOF_IN_SHIFT               1
#define TVO_EOF_IN_FIELD               (0xFFFFFFFF - (0x1UL<<TVO_EOF_IN_SHIFT))
#define TVO_EOF_IN_0                   (0x0UL<<TVO_EOF_IN_SHIFT)
#define TVO_EOF_IN_1                   (0x1UL<<TVO_EOF_IN_SHIFT)
#define TVO_EOF_IN                     (0x1UL<<TVO_EOF_IN_SHIFT)
#define TVO_SOF_IN_SHIFT               0
#define TVO_SOF_IN_FIELD               (0xFFFFFFFF - (0x1UL<<TVO_SOF_IN_SHIFT))
#define TVO_SOF_IN_0                   (0x0UL<<TVO_SOF_IN_SHIFT)
#define TVO_SOF_IN_1                   (0x1UL<<TVO_SOF_IN_SHIFT)
#define TVO_SOF_IN                     (0x1UL<<TVO_SOF_IN_SHIFT)

/*****************************************************************************/
/* Register description for ID */

/* Reset value of register TVO_ID */
#define TVO_ID_VALUE                   0x54564F55

/* Bits definition for register TVO_ID */
#define TVO_ID_SHIFT                   0
#define TVO_ID_FIELD                   (0xFFFFFFFF - (0x7FFFFFFFUL<<TVO_ID_SHIFT))
#define TVO_ID_54564F55                (0x54564F55UL<<TVO_ID_SHIFT)

/*****************************************************************************/
/* Register description for IP_ID */

/* Reset value of register TVO_IP_ID */
#define TVO_IP_ID_VALUE                0x56492300

/* Bits definition for register TVO_IP_ID */
#define TVO_MODULE_ID_SHIFT            16
#define TVO_MODULE_ID_FIELD            (0xFFFFFFFF - (0xFFFFUL<<TVO_MODULE_ID_SHIFT))
#define TVO_MODULE_ID_5649             (0x5649UL<<TVO_MODULE_ID_SHIFT)
#define TVO_MAJOR_REV_SHIFT            12
#define TVO_MAJOR_REV_FIELD            (0xFFFFFFFF - (0xFUL<<TVO_MAJOR_REV_SHIFT))
#define TVO_MAJOR_REV_2                (0x2UL<<TVO_MAJOR_REV_SHIFT)
#define TVO_MINOR_REV_SHIFT            8
#define TVO_MINOR_REV_FIELD            (0xFFFFFFFF - (0xFUL<<TVO_MINOR_REV_SHIFT))
#define TVO_MINOR_REV_3                (0x3UL<<TVO_MINOR_REV_SHIFT)
#define TVO_APERTURE_SHIFT             0
#define TVO_APERTURE_FIELD             (0xFFFFFFFF - (0xFFUL<<TVO_APERTURE_SHIFT))
#define TVO_APERTURE_0                 (0x0UL<<TVO_APERTURE_SHIFT)

/*****************************************************************************/

/*****************************************************************************
* Definitions for: UART1
*****************************************************************************/

/* Pointer on base address */
#define UART1_BASE                     IOA(UART1_BASE_ADDR)

/* UART RBR Register (8 bits) */
#define UART1_RBR_OFFSET               0x0
#define UART1_RBR_REG                  IOA(UART1_BASE_ADDR + UART1_RBR_OFFSET)

/* UART THR Register (8 bits) */
#define UART1_THR_OFFSET               0x0
#define UART1_THR_REG                  IOA(UART1_BASE_ADDR + UART1_THR_OFFSET)

/* UART IER Register (8 bits) */
#define UART1_IER_OFFSET               0x4
#define UART1_IER_REG                  IOA(UART1_BASE_ADDR + UART1_IER_OFFSET)

/* UART IIR Register (8 bits) */
#define UART1_IIR_OFFSET               0x8
#define UART1_IIR_REG                  IOA(UART1_BASE_ADDR + UART1_IIR_OFFSET)

/* UART FCR Register (8 bits) */
#define UART1_FCR_OFFSET               0x8
#define UART1_FCR_REG                  IOA(UART1_BASE_ADDR + UART1_FCR_OFFSET)

/* UART LCR Register (8 bits) */
#define UART1_LCR_OFFSET               0xC
#define UART1_LCR_REG                  IOA(UART1_BASE_ADDR + UART1_LCR_OFFSET)

/* UART MCR Register (8 bits) */
#define UART1_MCR_OFFSET               0x10
#define UART1_MCR_REG                  IOA(UART1_BASE_ADDR + UART1_MCR_OFFSET)

/* UART LSR Register (8 bits) */
#define UART1_LSR_OFFSET               0x14
#define UART1_LSR_REG                  IOA(UART1_BASE_ADDR + UART1_LSR_OFFSET)

/* UART MSR Register (8 bits) */
#define UART1_MSR_OFFSET               0x18
#define UART1_MSR_REG                  IOA(UART1_BASE_ADDR + UART1_MSR_OFFSET)

/* UART SCR Register (8 bits) */
#define UART1_SCR_OFFSET               0x1C
#define UART1_SCR_REG                  IOA(UART1_BASE_ADDR + UART1_SCR_OFFSET)

/* UART DLL Register (8 bits) */
#define UART1_DLL_OFFSET               0x0
#define UART1_DLL_REG                  IOA(UART1_BASE_ADDR + UART1_DLL_OFFSET)

/* UART DLM Register (8 bits) */
#define UART1_DLM_OFFSET               0x4
#define UART1_DLM_REG                  IOA(UART1_BASE_ADDR + UART1_DLM_OFFSET)

/* UART ACR Register (8 bits) */
#define UART1_ACR_OFFSET               0x1C
#define UART1_ACR_REG                  IOA(UART1_BASE_ADDR + UART1_ACR_OFFSET)

/* UART TIMER_CTRL Register (16 bits) */
#define UART1_TIMER_CTRL_OFFSET        0x400
#define UART1_TIMER_CTRL_REG           IOA(UART1_BASE_ADDR + UART1_TIMER_CTRL_OFFSET)

/* UART TIMER_COUNT Register (16 bits) */
#define UART1_TIMER_COUNT_OFFSET       0x404
#define UART1_TIMER_COUNT_REG          IOA(UART1_BASE_ADDR + UART1_TIMER_COUNT_OFFSET)

/* UART TIMER_STATUS Register (16 bits) */
#define UART1_TIMER_STATUS_OFFSET      0x408
#define UART1_TIMER_STATUS_REG         IOA(UART1_BASE_ADDR + UART1_TIMER_STATUS_OFFSET)

/* UART CARKIT_CTRL Register (16 bits) */
#define UART1_CARKIT_CTRL_OFFSET       0x40C
#define UART1_CARKIT_CTRL_REG          IOA(UART1_BASE_ADDR + UART1_CARKIT_CTRL_OFFSET)

/* UART CARKIT_TXCTRL1 Register (16 bits) */
#define UART1_CARKIT_TXCTRL1_OFFSET    0x410
#define UART1_CARKIT_TXCTRL1_REG       IOA(UART1_BASE_ADDR + UART1_CARKIT_TXCTRL1_OFFSET)

/* UART CARKIT_TXCTRL2 Register (16 bits) */
#define UART1_CARKIT_TXCTRL2_OFFSET    0x414
#define UART1_CARKIT_TXCTRL2_REG       IOA(UART1_BASE_ADDR + UART1_CARKIT_TXCTRL2_OFFSET)

/* UART CARKIT_RXCTRL1 Register (16 bits) */
#define UART1_CARKIT_RXCTRL1_OFFSET    0x418
#define UART1_CARKIT_RXCTRL1_REG       IOA(UART1_BASE_ADDR + UART1_CARKIT_RXCTRL1_OFFSET)

/* UART CARKIT_RXCTRL2 Register (16 bits) */
#define UART1_CARKIT_RXCTRL2_OFFSET    0x41C
#define UART1_CARKIT_RXCTRL2_REG       IOA(UART1_BASE_ADDR + UART1_CARKIT_RXCTRL2_OFFSET)

/* UART IRDA Register (8 bits) */
#define UART1_IRDA_OFFSET              0x800
#define UART1_IRDA_REG                 IOA(UART1_BASE_ADDR + UART1_IRDA_OFFSET)

/* UART FDIV_CTRL Register (8 bits) */
#define UART1_FDIV_CTRL_OFFSET         0xC00
#define UART1_FDIV_CTRL_REG            IOA(UART1_BASE_ADDR + UART1_FDIV_CTRL_OFFSET)

/* UART FDIV_M Register (16 bits) */
#define UART1_FDIV_M_OFFSET            0xC04
#define UART1_FDIV_M_REG               IOA(UART1_BASE_ADDR + UART1_FDIV_M_OFFSET)

/* UART FDIV_N Register (16 bits) */
#define UART1_FDIV_N_OFFSET            0xC08
#define UART1_FDIV_N_REG               IOA(UART1_BASE_ADDR + UART1_FDIV_N_OFFSET)

/*****************************************************************************
* Definitions for: UART2
*****************************************************************************/

/* Pointer on base address */
#define UART2_BASE                     IOA(UART2_BASE_ADDR)

/* UART RBR Register (8 bits) */
#define UART2_RBR_OFFSET               0x0
#define UART2_RBR_REG                  IOA(UART2_BASE_ADDR + UART2_RBR_OFFSET)

/* UART THR Register (8 bits) */
#define UART2_THR_OFFSET               0x0
#define UART2_THR_REG                  IOA(UART2_BASE_ADDR + UART2_THR_OFFSET)

/* UART IER Register (8 bits) */
#define UART2_IER_OFFSET               0x4
#define UART2_IER_REG                  IOA(UART2_BASE_ADDR + UART2_IER_OFFSET)

/* UART IIR Register (8 bits) */
#define UART2_IIR_OFFSET               0x8
#define UART2_IIR_REG                  IOA(UART2_BASE_ADDR + UART2_IIR_OFFSET)

/* UART FCR Register (8 bits) */
#define UART2_FCR_OFFSET               0x8
#define UART2_FCR_REG                  IOA(UART2_BASE_ADDR + UART2_FCR_OFFSET)

/* UART LCR Register (8 bits) */
#define UART2_LCR_OFFSET               0xC
#define UART2_LCR_REG                  IOA(UART2_BASE_ADDR + UART2_LCR_OFFSET)

/* UART MCR Register (8 bits) */
#define UART2_MCR_OFFSET               0x10
#define UART2_MCR_REG                  IOA(UART2_BASE_ADDR + UART2_MCR_OFFSET)

/* UART LSR Register (8 bits) */
#define UART2_LSR_OFFSET               0x14
#define UART2_LSR_REG                  IOA(UART2_BASE_ADDR + UART2_LSR_OFFSET)

/* UART MSR Register (8 bits) */
#define UART2_MSR_OFFSET               0x18
#define UART2_MSR_REG                  IOA(UART2_BASE_ADDR + UART2_MSR_OFFSET)

/* UART SCR Register (8 bits) */
#define UART2_SCR_OFFSET               0x1C
#define UART2_SCR_REG                  IOA(UART2_BASE_ADDR + UART2_SCR_OFFSET)

/* UART DLL Register (8 bits) */
#define UART2_DLL_OFFSET               0x0
#define UART2_DLL_REG                  IOA(UART2_BASE_ADDR + UART2_DLL_OFFSET)

/* UART DLM Register (8 bits) */
#define UART2_DLM_OFFSET               0x4
#define UART2_DLM_REG                  IOA(UART2_BASE_ADDR + UART2_DLM_OFFSET)

/* UART ACR Register (8 bits) */
#define UART2_ACR_OFFSET               0x1C
#define UART2_ACR_REG                  IOA(UART2_BASE_ADDR + UART2_ACR_OFFSET)

/* UART TIMER_CTRL Register (16 bits) */
#define UART2_TIMER_CTRL_OFFSET        0x400
#define UART2_TIMER_CTRL_REG           IOA(UART2_BASE_ADDR + UART2_TIMER_CTRL_OFFSET)

/* UART TIMER_COUNT Register (16 bits) */
#define UART2_TIMER_COUNT_OFFSET       0x404
#define UART2_TIMER_COUNT_REG          IOA(UART2_BASE_ADDR + UART2_TIMER_COUNT_OFFSET)

/* UART TIMER_STATUS Register (16 bits) */
#define UART2_TIMER_STATUS_OFFSET      0x408
#define UART2_TIMER_STATUS_REG         IOA(UART2_BASE_ADDR + UART2_TIMER_STATUS_OFFSET)

/* UART CARKIT_CTRL Register (16 bits) */
#define UART2_CARKIT_CTRL_OFFSET       0x40C
#define UART2_CARKIT_CTRL_REG          IOA(UART2_BASE_ADDR + UART2_CARKIT_CTRL_OFFSET)

/* UART CARKIT_TXCTRL1 Register (16 bits) */
#define UART2_CARKIT_TXCTRL1_OFFSET    0x410
#define UART2_CARKIT_TXCTRL1_REG       IOA(UART2_BASE_ADDR + UART2_CARKIT_TXCTRL1_OFFSET)

/* UART CARKIT_TXCTRL2 Register (16 bits) */
#define UART2_CARKIT_TXCTRL2_OFFSET    0x414
#define UART2_CARKIT_TXCTRL2_REG       IOA(UART2_BASE_ADDR + UART2_CARKIT_TXCTRL2_OFFSET)

/* UART CARKIT_RXCTRL1 Register (16 bits) */
#define UART2_CARKIT_RXCTRL1_OFFSET    0x418
#define UART2_CARKIT_RXCTRL1_REG       IOA(UART2_BASE_ADDR + UART2_CARKIT_RXCTRL1_OFFSET)

/* UART CARKIT_RXCTRL2 Register (16 bits) */
#define UART2_CARKIT_RXCTRL2_OFFSET    0x41C
#define UART2_CARKIT_RXCTRL2_REG       IOA(UART2_BASE_ADDR + UART2_CARKIT_RXCTRL2_OFFSET)

/* UART IRDA Register (8 bits) */
#define UART2_IRDA_OFFSET              0x800
#define UART2_IRDA_REG                 IOA(UART2_BASE_ADDR + UART2_IRDA_OFFSET)

/* UART FDIV_CTRL Register (8 bits) */
#define UART2_FDIV_CTRL_OFFSET         0xC00
#define UART2_FDIV_CTRL_REG            IOA(UART2_BASE_ADDR + UART2_FDIV_CTRL_OFFSET)

/* UART FDIV_M Register (16 bits) */
#define UART2_FDIV_M_OFFSET            0xC04
#define UART2_FDIV_M_REG               IOA(UART2_BASE_ADDR + UART2_FDIV_M_OFFSET)

/* UART FDIV_N Register (16 bits) */
#define UART2_FDIV_N_OFFSET            0xC08
#define UART2_FDIV_N_REG               IOA(UART2_BASE_ADDR + UART2_FDIV_N_OFFSET)

/* Register description for RBR */

/* Reset value of register UART[2:1]_RBR */
#define UART1_RBR_VALUE                0x0
#define UART2_RBR_VALUE                0x0

/* Bits definition for register UART[2:1]_RBR */
#define UARTX_RBR_SHIFT                 0
#define UARTX_RBR_FIELD                 (0xFFFFFFFF - (0xFFUL<<UARTX_RBR_SHIFT))
#define UARTX_RBR_0                     (0x0UL<<UARTX_RBR_SHIFT)

/*****************************************************************************/
/* Register description for THR */

/* Reset value of register UART[2:1]_THR */
#define UART1_THR_VALUE                0x0
#define UART2_THR_VALUE                0x0

/* Bits definition for register UART[2:1]_THR */
#define UARTX_THR_SHIFT                 0
#define UARTX_THR_FIELD                 (0xFFFFFFFF - (0xFFUL<<UARTX_THR_SHIFT))

/*****************************************************************************/
/* Register description for IER */

/* Reset value of register UART[2:1]_IER */
#define UART1_IER_VALUE                0x0
#define UART2_IER_VALUE                0x0

/* Bits definition for register UART[2:1]_IER */
#define UARTX_MODEM_IE_SHIFT            3
#define UARTX_MODEM_IE_FIELD            (0xFFFFFFFF - (0x1UL<<UARTX_MODEM_IE_SHIFT))
#define UARTX_MODEM_IE_DISABLE          (0x0UL<<UARTX_MODEM_IE_SHIFT)
#define UARTX_MODEM_IE_ENABLE           (0x1UL<<UARTX_MODEM_IE_SHIFT)
#define UARTX_MODEM_IE                  (0x1UL<<UARTX_MODEM_IE_SHIFT)
#define UARTX_RLS_IE_SHIFT              2
#define UARTX_RLS_IE_FIELD              (0xFFFFFFFF - (0x1UL<<UARTX_RLS_IE_SHIFT))
#define UARTX_RLS_IE_DISABLE            (0x0UL<<UARTX_RLS_IE_SHIFT)
#define UARTX_RLS_IE_ENABLE             (0x1UL<<UARTX_RLS_IE_SHIFT)
#define UARTX_RLS_IE                    (0x1UL<<UARTX_RLS_IE_SHIFT)
#define UARTX_THRE_IE_SHIFT             1
#define UARTX_THRE_IE_FIELD             (0xFFFFFFFF - (0x1UL<<UARTX_THRE_IE_SHIFT))
#define UARTX_THRE_IE_DISABLE           (0x0UL<<UARTX_THRE_IE_SHIFT)
#define UARTX_THRE_IE_ENABLE            (0x1UL<<UARTX_THRE_IE_SHIFT)
#define UARTX_THRE_IE                   (0x1UL<<UARTX_THRE_IE_SHIFT)
#define UARTX_RDA_IE_SHIFT              0
#define UARTX_RDA_IE_FIELD              (0xFFFFFFFF - (0x1UL<<UARTX_RDA_IE_SHIFT))
#define UARTX_RDA_IE_DISABLE            (0x0UL<<UARTX_RDA_IE_SHIFT)
#define UARTX_RDA_IE_ENABLE             (0x1UL<<UARTX_RDA_IE_SHIFT)
#define UARTX_RDA_IE                    (0x1UL<<UARTX_RDA_IE_SHIFT)

/*****************************************************************************/
/* Register description for IIR */

/* Reset value of register UART[2:1]_IIR */
#define UART1_IIR_VALUE                0x1
#define UART2_IIR_VALUE                0x1

/* Bits definition for register UART[2:1]_IIR */
#define UARTX_FIFOE_SHIFT               6
#define UARTX_FIFOE_FIELD               (0xFFFFFFFF - (0x3UL<<UARTX_FIFOE_SHIFT))
#define UARTX_FIFOE_DISABLED            (0x0UL<<UARTX_FIFOE_SHIFT)
#define UARTX_FIFOE_ENABLED             (0x3UL<<UARTX_FIFOE_SHIFT)
#define UARTX_IID_SHIFT                 1
#define UARTX_IID_FIELD                 (0xFFFFFFFF - (0x7UL<<UARTX_IID_SHIFT))
#define UARTX_IID_MODEM_STATUS          (0x0UL<<UARTX_IID_SHIFT)
#define UARTX_IID_THR_EMPTY             (0x1UL<<UARTX_IID_SHIFT)
#define UARTX_IID_RX_DATA               (0x2UL<<UARTX_IID_SHIFT)
#define UARTX_IID_RX_LINE_STATUS        (0x3UL<<UARTX_IID_SHIFT)
#define UARTX_IID_CHAR_TIMEOUT          (0x6UL<<UARTX_IID_SHIFT)
#define UARTX_IPEND_SHIFT               0
#define UARTX_IPEND_FIELD               (0xFFFFFFFF - (0x1UL<<UARTX_IPEND_SHIFT))
#define UARTX_IPEND_0                   (0x0UL<<UARTX_IPEND_SHIFT)
#define UARTX_IPEND_1                   (0x1UL<<UARTX_IPEND_SHIFT)
#define UARTX_IPEND                     (0x1UL<<UARTX_IPEND_SHIFT)

/*****************************************************************************/
/* Register description for FCR */

/* Reset value of register UART[2:1]_FCR */
#define UART1_FCR_VALUE                0x0
#define UART2_FCR_VALUE                0x0

/* Bits definition for register UART[2:1]_FCR */
#define UARTX_RX_FIFO_TRIG_SHIFT        6
#define UARTX_RX_FIFO_TRIG_FIELD        (0xFFFFFFFF - (0x3UL<<UARTX_RX_FIFO_TRIG_SHIFT))
#define UARTX_RX_FIFO_TRIG_01           (0x0UL<<UARTX_RX_FIFO_TRIG_SHIFT)
#define UARTX_RX_FIFO_TRIG_16           (0x1UL<<UARTX_RX_FIFO_TRIG_SHIFT)
#define UARTX_RX_FIFO_TRIG_32           (0x2UL<<UARTX_RX_FIFO_TRIG_SHIFT)
#define UARTX_RX_FIFO_TRIG_56           (0x3UL<<UARTX_RX_FIFO_TRIG_SHIFT)
#define UARTX_TX_FIFO_RESET_SHIFT       2
#define UARTX_TX_FIFO_RESET_FIELD       (0xFFFFFFFF - (0x1UL<<UARTX_TX_FIFO_RESET_SHIFT))
#define UARTX_TX_FIFO_RESET_0           (0x0UL<<UARTX_TX_FIFO_RESET_SHIFT)
#define UARTX_TX_FIFO_RESET_TX_FIFO_RESET           (0x1UL<<UARTX_TX_FIFO_RESET_SHIFT)
#define UARTX_TX_FIFO_RESET             (0x1UL<<UARTX_TX_FIFO_RESET_SHIFT)
#define UARTX_RX_FIFO_RESET_SHIFT       1
#define UARTX_RX_FIFO_RESET_FIELD       (0xFFFFFFFF - (0x1UL<<UARTX_RX_FIFO_RESET_SHIFT))
#define UARTX_RX_FIFO_RESET_0           (0x0UL<<UARTX_RX_FIFO_RESET_SHIFT)
#define UARTX_RX_FIFO_RESET_RX_FIFO_RESET           (0x1UL<<UARTX_RX_FIFO_RESET_SHIFT)
#define UARTX_RX_FIFO_RESET             (0x1UL<<UARTX_RX_FIFO_RESET_SHIFT)
#define UARTX_FIFO_SHIFT                0
#define UARTX_FIFO_FIELD                (0xFFFFFFFF - (0x1UL<<UARTX_FIFO_SHIFT))
#define UARTX_FIFO_DISABLE              (0x0UL<<UARTX_FIFO_SHIFT)
#define UARTX_FIFO_ENABLE               (0x1UL<<UARTX_FIFO_SHIFT)
#define UARTX_FIFO                      (0x1UL<<UARTX_FIFO_SHIFT)

/*****************************************************************************/
/* Register description for LCR */

/* Reset value of register UART[2:1]_LCR */
#define UART1_LCR_VALUE                0x0
#define UART2_LCR_VALUE                0x0

/* Bits definition for register UART[2:1]_LCR */
#define UARTX_DLAB_SHIFT                7
#define UARTX_DLAB_FIELD                (0xFFFFFFFF - (0x1UL<<UARTX_DLAB_SHIFT))
#define UARTX_DLAB_OFF                  (0x0UL<<UARTX_DLAB_SHIFT)
#define UARTX_DLAB_ON                   (0x1UL<<UARTX_DLAB_SHIFT)
#define UARTX_DLAB                      (0x1UL<<UARTX_DLAB_SHIFT)
#define UARTX_BREAK_SHIFT               6
#define UARTX_BREAK_FIELD               (0xFFFFFFFF - (0x1UL<<UARTX_BREAK_SHIFT))
#define UARTX_BREAK_DISABLE             (0x0UL<<UARTX_BREAK_SHIFT)
#define UARTX_BREAK_ENABLE              (0x1UL<<UARTX_BREAK_SHIFT)
#define UARTX_BREAK                     (0x1UL<<UARTX_BREAK_SHIFT)
#define UARTX_STICK_SHIFT               5
#define UARTX_STICK_FIELD               (0xFFFFFFFF - (0x1UL<<UARTX_STICK_SHIFT))
#define UARTX_STICK_NORMAL              (0x0UL<<UARTX_STICK_SHIFT)
#define UARTX_STICK_FORCED              (0x1UL<<UARTX_STICK_SHIFT)
#define UARTX_STICK                     (0x1UL<<UARTX_STICK_SHIFT)
#define UARTX_EVEN_SHIFT                4
#define UARTX_EVEN_FIELD                (0xFFFFFFFF - (0x1UL<<UARTX_EVEN_SHIFT))
#define UARTX_EVEN_DISABLED             (0x0UL<<UARTX_EVEN_SHIFT)
#define UARTX_EVEN_ENABLED              (0x1UL<<UARTX_EVEN_SHIFT)
#define UARTX_EVEN                      (0x1UL<<UARTX_EVEN_SHIFT)
#define UARTX_PARITY_SHIFT              3
#define UARTX_PARITY_FIELD              (0xFFFFFFFF - (0x1UL<<UARTX_PARITY_SHIFT))
#define UARTX_PARITY_DISABLED           (0x0UL<<UARTX_PARITY_SHIFT)
#define UARTX_PARITY_ENABLED            (0x1UL<<UARTX_PARITY_SHIFT)
#define UARTX_PARITY                    (0x1UL<<UARTX_PARITY_SHIFT)
#define UARTX_STOP_SHIFT                2
#define UARTX_STOP_FIELD                (0xFFFFFFFF - (0x1UL<<UARTX_STOP_SHIFT))
#define UARTX_STOP_ONE_BIT              (0x0UL<<UARTX_STOP_SHIFT)
#define UARTX_STOP_TWO_BIT              (0x1UL<<UARTX_STOP_SHIFT)
#define UARTX_STOP                      (0x1UL<<UARTX_STOP_SHIFT)
#define UARTX_LENGTH_SHIFT              0
#define UARTX_LENGTH_FIELD              (0xFFFFFFFF - (0x3UL<<UARTX_LENGTH_SHIFT))
#define UARTX_LENGTH_FIVE_DATA_BIT      (0x0UL<<UARTX_LENGTH_SHIFT)
#define UARTX_LENGTH_SIX_DATA_BIT       (0x1UL<<UARTX_LENGTH_SHIFT)
#define UARTX_LENGTH_SEVEN_DATA_BIT     (0x2UL<<UARTX_LENGTH_SHIFT)
#define UARTX_LENGTH_EIGHT_DATA_BIT     (0x3UL<<UARTX_LENGTH_SHIFT)

/*****************************************************************************/
/* Register description for MCR */

/* Reset value of register UART[2:1]_MCR */
#define UART1_MCR_VALUE                0x0
#define UART2_MCR_VALUE                0x0

/* Bits definition for register UART[2:1]_MCR */
#define UARTX_AUTO_SHIFT                5
#define UARTX_AUTO_FIELD                (0xFFFFFFFF - (0x1UL<<UARTX_AUTO_SHIFT))
#define UARTX_AUTO_0                    (0x0UL<<UARTX_AUTO_SHIFT)
#define UARTX_AUTO_1                    (0x1UL<<UARTX_AUTO_SHIFT)
#define UARTX_AUTO                      (0x1UL<<UARTX_AUTO_SHIFT)
#define UARTX_LOOPBACK_SHIFT            4
#define UARTX_LOOPBACK_FIELD            (0xFFFFFFFF - (0x1UL<<UARTX_LOOPBACK_SHIFT))
#define UARTX_LOOPBACK_0                (0x0UL<<UARTX_LOOPBACK_SHIFT)
#define UARTX_LOOPBACK_1                (0x1UL<<UARTX_LOOPBACK_SHIFT)
#define UARTX_LOOPBACK                  (0x1UL<<UARTX_LOOPBACK_SHIFT)
#define UARTX_RTS_SHIFT                 1
#define UARTX_RTS_FIELD                 (0xFFFFFFFF - (0x1UL<<UARTX_RTS_SHIFT))
#define UARTX_RTS_0                     (0x0UL<<UARTX_RTS_SHIFT)
#define UARTX_RTS_1                     (0x1UL<<UARTX_RTS_SHIFT)
#define UARTX_RTS                       (0x1UL<<UARTX_RTS_SHIFT)
#define UARTX_DTR_SHIFT                 0
#define UARTX_DTR_FIELD                 (0xFFFFFFFF - (0x1UL<<UARTX_DTR_SHIFT))
#define UARTX_DTR_0                     (0x0UL<<UARTX_DTR_SHIFT)
#define UARTX_DTR_1                     (0x1UL<<UARTX_DTR_SHIFT)
#define UARTX_DTR                       (0x1UL<<UARTX_DTR_SHIFT)

/*****************************************************************************/
/* Register description for LSR */

/* Reset value of register UART[2:1]_LSR */
#define UART1_LSR_VALUE                0x60
#define UART2_LSR_VALUE                0x60

/* Bits definition for register UART[2:1]_LSR */
#define UARTX_RXFE_SHIFT                7
#define UARTX_RXFE_FIELD                (0xFFFFFFFF - (0x1UL<<UARTX_RXFE_SHIFT))
#define UARTX_RXFE_0                    (0x0UL<<UARTX_RXFE_SHIFT)
#define UARTX_RXFE_1                    (0x1UL<<UARTX_RXFE_SHIFT)
#define UARTX_RXFE                      (0x1UL<<UARTX_RXFE_SHIFT)
#define UARTX_TEMT_SHIFT                6
#define UARTX_TEMT_FIELD                (0xFFFFFFFF - (0x1UL<<UARTX_TEMT_SHIFT))
#define UARTX_TEMT_NOT_EMPTY            (0x0UL<<UARTX_TEMT_SHIFT)
#define UARTX_TEMT_EMPTY                (0x1UL<<UARTX_TEMT_SHIFT)
#define UARTX_TEMT                      (0x1UL<<UARTX_TEMT_SHIFT)
#define UARTX_THRE_SHIFT                5
#define UARTX_THRE_FIELD                (0xFFFFFFFF - (0x1UL<<UARTX_THRE_SHIFT))
#define UARTX_THRE_NOT_EMPTY            (0x0UL<<UARTX_THRE_SHIFT)
#define UARTX_THRE_EMPTY                (0x1UL<<UARTX_THRE_SHIFT)
#define UARTX_THRE                      (0x1UL<<UARTX_THRE_SHIFT)
#define UARTX_BI_SHIFT                  4
#define UARTX_BI_FIELD                  (0xFFFFFFFF - (0x1UL<<UARTX_BI_SHIFT))
#define UARTX_BI_INACTIVE               (0x0UL<<UARTX_BI_SHIFT)
#define UARTX_BI_ACTIVE                 (0x1UL<<UARTX_BI_SHIFT)
#define UARTX_BI                        (0x1UL<<UARTX_BI_SHIFT)
#define UARTX_FE_SHIFT                  3
#define UARTX_FE_FIELD                  (0xFFFFFFFF - (0x1UL<<UARTX_FE_SHIFT))
#define UARTX_FE_INACTIVE               (0x0UL<<UARTX_FE_SHIFT)
#define UARTX_FE_ACTIVE                 (0x1UL<<UARTX_FE_SHIFT)
#define UARTX_FE                        (0x1UL<<UARTX_FE_SHIFT)
#define UARTX_PE_SHIFT                  2
#define UARTX_PE_FIELD                  (0xFFFFFFFF - (0x1UL<<UARTX_PE_SHIFT))
#define UARTX_PE_INACTIVE               (0x0UL<<UARTX_PE_SHIFT)
#define UARTX_PE_ACTIVE                 (0x1UL<<UARTX_PE_SHIFT)
#define UARTX_PE                        (0x1UL<<UARTX_PE_SHIFT)
#define UARTX_OE_SHIFT                  1
#define UARTX_OE_FIELD                  (0xFFFFFFFF - (0x1UL<<UARTX_OE_SHIFT))
#define UARTX_OE_INACTIVE               (0x0UL<<UARTX_OE_SHIFT)
#define UARTX_OE_ACTIVE                 (0x1UL<<UARTX_OE_SHIFT)
#define UARTX_OE                        (0x1UL<<UARTX_OE_SHIFT)
#define UARTX_RDR_SHIFT                 0
#define UARTX_RDR_FIELD                 (0xFFFFFFFF - (0x1UL<<UARTX_RDR_SHIFT))
#define UARTX_RDR_EMPTY                 (0x0UL<<UARTX_RDR_SHIFT)
#define UARTX_RDR_NOT_EMPTY             (0x1UL<<UARTX_RDR_SHIFT)
#define UARTX_RDR                       (0x1UL<<UARTX_RDR_SHIFT)

/*****************************************************************************/
/* Register description for MSR */

/* Reset value of register UART[2:1]_MSR */
#define UART1_MSR_VALUE                0x0
#define UART2_MSR_VALUE                0x0

/* Bits definition for register UART[2:1]_MSR */
#define UARTX_DSR_SHIFT                 5
#define UARTX_DSR_FIELD                 (0xFFFFFFFF - (0x1UL<<UARTX_DSR_SHIFT))
#define UARTX_DSR                       (0x1UL<<UARTX_DSR_SHIFT)
#define UARTX_CTS_SHIFT                 4
#define UARTX_CTS_FIELD                 (0xFFFFFFFF - (0x1UL<<UARTX_CTS_SHIFT))
#define UARTX_CTS                       (0x1UL<<UARTX_CTS_SHIFT)
#define UARTX_DDSR_SHIFT                1
#define UARTX_DDSR_FIELD                (0xFFFFFFFF - (0x1UL<<UARTX_DDSR_SHIFT))
#define UARTX_DDSR_0                    (0x0UL<<UARTX_DDSR_SHIFT)
#define UARTX_DDSR_1                    (0x1UL<<UARTX_DDSR_SHIFT)
#define UARTX_DDSR                      (0x1UL<<UARTX_DDSR_SHIFT)
#define UARTX_DCTS_SHIFT                0
#define UARTX_DCTS_FIELD                (0xFFFFFFFF - (0x1UL<<UARTX_DCTS_SHIFT))
#define UARTX_DCTS_0                    (0x0UL<<UARTX_DCTS_SHIFT)
#define UARTX_DCTS_1                    (0x1UL<<UARTX_DCTS_SHIFT)
#define UARTX_DCTS                      (0x1UL<<UARTX_DCTS_SHIFT)

/*****************************************************************************/
/* Register description for SCR */

/* Reset value of register UART[2:1]_SCR */
#define UART1_SCR_VALUE                0x0
#define UART2_SCR_VALUE                0x0

/* Bits definition for register UART[2:1]_SCR */
#define UARTX_SCR_SHIFT                 0
#define UARTX_SCR_FIELD                 (0xFFFFFFFF - (0xFFUL<<UARTX_SCR_SHIFT))
#define UARTX_SCR_0                     (0x0UL<<UARTX_SCR_SHIFT)

/*****************************************************************************/
/* Register description for DLL */

/* Reset value of register UART[2:1]_DLL */
#define UART1_DLL_VALUE                0x1
#define UART2_DLL_VALUE                0x1

/* Bits definition for register UART[2:1]_DLL */
#define UARTX_DLL_SHIFT                 0
#define UARTX_DLL_FIELD                 (0xFFFFFFFF - (0xFFUL<<UARTX_DLL_SHIFT))
#define UARTX_DLL_1                     (0x1UL<<UARTX_DLL_SHIFT)

/*****************************************************************************/
/* Register description for DLM */

/* Reset value of register UART[2:1]_DLM */
#define UART1_DLM_VALUE                0x0
#define UART2_DLM_VALUE                0x0

/* Bits definition for register UART[2:1]_DLM */
#define UARTX_DLM_SHIFT                 0
#define UARTX_DLM_FIELD                 (0xFFFFFFFF - (0xFFUL<<UARTX_DLM_SHIFT))
#define UARTX_DLM_0                     (0x0UL<<UARTX_DLM_SHIFT)

/*****************************************************************************/
/* Register description for ACR */

/* Reset value of register UART[2:1]_ACR */
#define UART1_ACR_VALUE                0x0
#define UART2_ACR_VALUE                0x0

/* Bits definition for register UART[2:1]_ACR */
#define UARTX_AUTO_RESTART_SHIFT        6
#define UARTX_AUTO_RESTART_FIELD        (0xFFFFFFFF - (0x1UL<<UARTX_AUTO_RESTART_SHIFT))
#define UARTX_AUTO_RESTART_0            (0x0UL<<UARTX_AUTO_RESTART_SHIFT)
#define UARTX_AUTO_RESTART_1            (0x1UL<<UARTX_AUTO_RESTART_SHIFT)
#define UARTX_AUTO_RESTART              (0x1UL<<UARTX_AUTO_RESTART_SHIFT)
#define UARTX_UATO_SHIFT                5
#define UARTX_UATO_FIELD                (0xFFFFFFFF - (0x1UL<<UARTX_UATO_SHIFT))
#define UARTX_UATO_0                    (0x0UL<<UARTX_UATO_SHIFT)
#define UARTX_UATO_1                    (0x1UL<<UARTX_UATO_SHIFT)
#define UARTX_UATO                      (0x1UL<<UARTX_UATO_SHIFT)
#define UARTX_UATO_IE_SHIFT             4
#define UARTX_UATO_IE_FIELD             (0xFFFFFFFF - (0x1UL<<UARTX_UATO_IE_SHIFT))
#define UARTX_UATO_IE_0                 (0x0UL<<UARTX_UATO_IE_SHIFT)
#define UARTX_UATO_IE_1                 (0x1UL<<UARTX_UATO_IE_SHIFT)
#define UARTX_UATO_IE                   (0x1UL<<UARTX_UATO_IE_SHIFT)
#define UARTX_UEOA_SHIFT                3
#define UARTX_UEOA_FIELD                (0xFFFFFFFF - (0x1UL<<UARTX_UEOA_SHIFT))
#define UARTX_UEOA_0                    (0x0UL<<UARTX_UEOA_SHIFT)
#define UARTX_UEOA_1                    (0x1UL<<UARTX_UEOA_SHIFT)
#define UARTX_UEOA                      (0x1UL<<UARTX_UEOA_SHIFT)
#define UARTX_UEOA_IE_SHIFT             2
#define UARTX_UEOA_IE_FIELD             (0xFFFFFFFF - (0x1UL<<UARTX_UEOA_IE_SHIFT))
#define UARTX_UEOA_IE_0                 (0x0UL<<UARTX_UEOA_IE_SHIFT)
#define UARTX_UEOA_IE_1                 (0x1UL<<UARTX_UEOA_IE_SHIFT)
#define UARTX_UEOA_IE                   (0x1UL<<UARTX_UEOA_IE_SHIFT)
#define UARTX_AUTOBAUD_MODE_SHIFT       1
#define UARTX_AUTOBAUD_MODE_FIELD       (0xFFFFFFFF - (0x1UL<<UARTX_AUTOBAUD_MODE_SHIFT))
#define UARTX_AUTOBAUD_MODE_0           (0x0UL<<UARTX_AUTOBAUD_MODE_SHIFT)
#define UARTX_AUTOBAUD_MODE_1           (0x1UL<<UARTX_AUTOBAUD_MODE_SHIFT)
#define UARTX_AUTOBAUD_MODE             (0x1UL<<UARTX_AUTOBAUD_MODE_SHIFT)
#define UARTX_ACR_SHIFT                 0
#define UARTX_ACR_FIELD                 (0xFFFFFFFF - (0x1UL<<UARTX_ACR_SHIFT))
#define UARTX_ACR_0                     (0x0UL<<UARTX_ACR_SHIFT)
#define UARTX_ACR_1                     (0x1UL<<UARTX_ACR_SHIFT)
#define UARTX_ACR                       (0x1UL<<UARTX_ACR_SHIFT)

/*****************************************************************************/
/* Register description for FDIV_CTRL */

/* Reset value of register UART[2:1]_FDIV_CTRL */
#define UART1_FDIV_CTRL_VALUE          0x0
#define UART2_FDIV_CTRL_VALUE          0x0

/* Bits definition for register UART[2:1]_FDIV_CTRL */
#define UARTX_FDIV_ENABLE_SHIFT         7
#define UARTX_FDIV_ENABLE_FIELD         (0xFFFFFFFF - (0x1UL<<UARTX_FDIV_ENABLE_SHIFT))
#define UARTX_FDIV_ENABLE_OFF           (0x0UL<<UARTX_FDIV_ENABLE_SHIFT)
#define UARTX_FDIV_ENABLE_ON            (0x1UL<<UARTX_FDIV_ENABLE_SHIFT)
#define UARTX_FDIV_ENABLE               (0x1UL<<UARTX_FDIV_ENABLE_SHIFT)
#define UARTX_CLKSEL_SHIFT              0
#define UARTX_CLKSEL_FIELD              (0xFFFFFFFF - (0x3UL<<UARTX_CLKSEL_SHIFT))
#define UARTX_CLKSEL_PCLK               (0x0UL<<UARTX_CLKSEL_SHIFT)
#define UARTX_CLKSEL_13M                (0x1UL<<UARTX_CLKSEL_SHIFT)
#define UARTX_CLKSEL_26M                (0x2UL<<UARTX_CLKSEL_SHIFT)
#define UARTX_CLKSEL_3                  (0x3UL<<UARTX_CLKSEL_SHIFT)

/*****************************************************************************/
/* Register description for FDIV_M */

/* Reset value of register UART[2:1]_FDIV_M */
#define UART1_FDIV_M_VALUE             0x0
#define UART2_FDIV_M_VALUE             0x0

/* Bits definition for register UART[2:1]_FDIV_M */
#define UARTX_FDIVM_SHIFT               0
#define UARTX_FDIVM_FIELD               (0xFFFFFFFF - (0xFFFFUL<<UARTX_FDIVM_SHIFT))
#define UARTX_FDIVM_0                   (0x0UL<<UARTX_FDIVM_SHIFT)

/*****************************************************************************/
/* Register description for FDIV_N */

/* Reset value of register UART[2:1]_FDIV_N */
#define UART1_FDIV_N_VALUE             0x0
#define UART2_FDIV_N_VALUE             0x0

/* Bits definition for register UART[2:1]_FDIV_N */
#define UARTX_FDIVN_SHIFT               0
#define UARTX_FDIVN_FIELD               (0xFFFFFFFF - (0xFFFFUL<<UARTX_FDIVN_SHIFT))
#define UARTX_FDIVN_0                   (0x0UL<<UARTX_FDIVN_SHIFT)

/*****************************************************************************/
/* Register description for IRDA */

/* Reset value of register UART[2:1]_IRDA */
#define UART1_IRDA_VALUE               0x0
#define UART2_IRDA_VALUE               0x0

/* Bits definition for register UART[2:1]_IRDA */
#define UARTX_IRDA_CLK_DIV_SHIFT        3
#define UARTX_IRDA_CLK_DIV_FIELD        (0xFFFFFFFF - (0x7UL<<UARTX_IRDA_CLK_DIV_SHIFT))
#define UARTX_IRDA_CLK_DIV_1            (0x0UL<<UARTX_IRDA_CLK_DIV_SHIFT)
#define UARTX_IRDA_CLK_DIV_2            (0x1UL<<UARTX_IRDA_CLK_DIV_SHIFT)
#define UARTX_IRDA_CLK_DIV_4            (0x2UL<<UARTX_IRDA_CLK_DIV_SHIFT)
#define UARTX_IRDA_CLK_DIV_8            (0x3UL<<UARTX_IRDA_CLK_DIV_SHIFT)
#define UARTX_IRDA_CLK_DIV_16           (0x4UL<<UARTX_IRDA_CLK_DIV_SHIFT)
#define UARTX_IRDA_INVERT_RX_SHIFT      2
#define UARTX_IRDA_INVERT_RX_FIELD      (0xFFFFFFFF - (0x1UL<<UARTX_IRDA_INVERT_RX_SHIFT))
#define UARTX_IRDA_INVERT_RX_0          (0x0UL<<UARTX_IRDA_INVERT_RX_SHIFT)
#define UARTX_IRDA_INVERT_RX_1          (0x1UL<<UARTX_IRDA_INVERT_RX_SHIFT)
#define UARTX_IRDA_INVERT_RX            (0x1UL<<UARTX_IRDA_INVERT_RX_SHIFT)
#define UARTX_IRDA_PULSE_SHIFT          1
#define UARTX_IRDA_PULSE_FIELD          (0xFFFFFFFF - (0x1UL<<UARTX_IRDA_PULSE_SHIFT))
#define UARTX_IRDA_PULSE_3_16           (0x0UL<<UARTX_IRDA_PULSE_SHIFT)
#define UARTX_IRDA_PULSE_1U6            (0x1UL<<UARTX_IRDA_PULSE_SHIFT)
#define UARTX_IRDA_PULSE                (0x1UL<<UARTX_IRDA_PULSE_SHIFT)
#define UARTX_IRDA_ENABLE_SHIFT         0
#define UARTX_IRDA_ENABLE_FIELD         (0xFFFFFFFF - (0x1UL<<UARTX_IRDA_ENABLE_SHIFT))
#define UARTX_IRDA_ENABLE_0             (0x0UL<<UARTX_IRDA_ENABLE_SHIFT)
#define UARTX_IRDA_ENABLE_1             (0x1UL<<UARTX_IRDA_ENABLE_SHIFT)
#define UARTX_IRDA_ENABLE               (0x1UL<<UARTX_IRDA_ENABLE_SHIFT)

/*****************************************************************************/
/* Register description for TIMER_CTRL */

/* Reset value of register UART[2:1]_TIMER_CTRL */
#define UART1_TIMER_CTRL_VALUE         0x2
#define UART2_TIMER_CTRL_VALUE         0x2

/* Bits definition for register UART[2:1]_TIMER_CTRL */
#define UARTX_CIRQE_SHIFT               3
#define UARTX_CIRQE_FIELD               (0xFFFFFFFF - (0x1UL<<UARTX_CIRQE_SHIFT))
#define UARTX_CIRQE_0                   (0x0UL<<UARTX_CIRQE_SHIFT)
#define UARTX_CIRQE_1                   (0x1UL<<UARTX_CIRQE_SHIFT)
#define UARTX_CIRQE                     (0x1UL<<UARTX_CIRQE_SHIFT)
#define UARTX_TIRQE_SHIFT               2
#define UARTX_TIRQE_FIELD               (0xFFFFFFFF - (0x1UL<<UARTX_TIRQE_SHIFT))
#define UARTX_TIRQE_0                   (0x0UL<<UARTX_TIRQE_SHIFT)
#define UARTX_TIRQE_1                   (0x1UL<<UARTX_TIRQE_SHIFT)
#define UARTX_TIRQE                     (0x1UL<<UARTX_TIRQE_SHIFT)
#define UARTX_PIRQE_SHIFT               1
#define UARTX_PIRQE_FIELD               (0xFFFFFFFF - (0x1UL<<UARTX_PIRQE_SHIFT))
#define UARTX_PIRQE_0                   (0x0UL<<UARTX_PIRQE_SHIFT)
#define UARTX_PIRQE_1                   (0x1UL<<UARTX_PIRQE_SHIFT)
#define UARTX_PIRQE                     (0x1UL<<UARTX_PIRQE_SHIFT)
#define UARTX_TIMER_MODE_SHIFT          0
#define UARTX_TIMER_MODE_FIELD          (0xFFFFFFFF - (0x1UL<<UARTX_TIMER_MODE_SHIFT))
#define UARTX_TIMER_MODE_TIMED_IRQ      (0x0UL<<UARTX_TIMER_MODE_SHIFT)
#define UARTX_TIMER_MODE_DMA_TIMEOUT    (0x1UL<<UARTX_TIMER_MODE_SHIFT)
#define UARTX_TIMER_MODE                (0x1UL<<UARTX_TIMER_MODE_SHIFT)

/*****************************************************************************/
/* Register description for TIMER_COUNT */

/* Reset value of register UART[2:1]_TIMER_COUNT */
#define UART1_TIMER_COUNT_VALUE        0x0
#define UART2_TIMER_COUNT_VALUE        0x0

/* Bits definition for register UART[2:1]_TIMER_COUNT */
#define UARTX_COUNT_SHIFT               0
#define UARTX_COUNT_FIELD               (0xFFFFFFFF - (0xFFFFUL<<UARTX_COUNT_SHIFT))
#define UARTX_COUNT_TIMED_INTERRUPT_PERIOD          (0x0UL<<UARTX_COUNT_SHIFT)

/*****************************************************************************/
/* Register description for TIMER_STATUS */

/* Reset value of register UART[2:1]_TIMER_STATUS */
#define UART1_TIMER_STATUS_VALUE       0x0
#define UART2_TIMER_STATUS_VALUE       0x0

/* Bits definition for register UART[2:1]_TIMER_STATUS */
#define UARTX_TIMER_INT_SHIFT           15
#define UARTX_TIMER_INT_FIELD           (0xFFFFFFFF - (0x1UL<<UARTX_TIMER_INT_SHIFT))
#define UARTX_TIMER_INT_INACTIVE        (0x0UL<<UARTX_TIMER_INT_SHIFT)
#define UARTX_TIMER_INT_PENDING         (0x1UL<<UARTX_TIMER_INT_SHIFT)
#define UARTX_TIMER_INT                 (0x1UL<<UARTX_TIMER_INT_SHIFT)
#define UARTX_RXDEPTH_SHIFT             0
#define UARTX_RXDEPTH_FIELD             (0xFFFFFFFF - (0x7FUL<<UARTX_RXDEPTH_SHIFT))
#define UARTX_RXDEPTH_RECEIVE_FIFO_DEPTH_VALUE      (0x0UL<<UARTX_RXDEPTH_SHIFT)

/*****************************************************************************/
/* Register description for CARKIT_CTRL */

/* Reset value of register UART[2:1]_CARKIT_CTRL */
#define UART1_CARKIT_CTRL_VALUE        0x0
#define UART2_CARKIT_CTRL_VALUE        0x0

/* Bits definition for register UART[2:1]_CARKIT_CTRL */
#define UARTX_CARKIT_RXD_SET_SHIFT      5
#define UARTX_CARKIT_RXD_SET_FIELD      (0xFFFFFFFF - (0x1UL<<UARTX_CARKIT_RXD_SET_SHIFT))
#define UARTX_CARKIT_RXD_SET_0          (0x0UL<<UARTX_CARKIT_RXD_SET_SHIFT)
#define UARTX_CARKIT_RXD_SET_1          (0x1UL<<UARTX_CARKIT_RXD_SET_SHIFT)
#define UARTX_CARKIT_RXD_SET            (0x1UL<<UARTX_CARKIT_RXD_SET_SHIFT)
#define UARTX_CARKIT_TXDEN_ACTIVE_SHIFT 4
#define UARTX_CARKIT_TXDEN_ACTIVE_FIELD (0xFFFFFFFF - (0x1UL<<UARTX_CARKIT_TXDEN_ACTIVE_SHIFT))
#define UARTX_CARKIT_TXDEN_ACTIVE_HIGH  (0x0UL<<UARTX_CARKIT_TXDEN_ACTIVE_SHIFT)
#define UARTX_CARKIT_TXDEN_ACTIVE_LOW   (0x1UL<<UARTX_CARKIT_TXDEN_ACTIVE_SHIFT)
#define UARTX_CARKIT_TXDEN_ACTIVE       (0x1UL<<UARTX_CARKIT_TXDEN_ACTIVE_SHIFT)
#define UARTX_CARKIT_FORCE_TXD_PULSE_SHIFT          3
#define UARTX_CARKIT_FORCE_TXD_PULSE_FIELD          (0xFFFFFFFF - (0x1UL<<UARTX_CARKIT_FORCE_TXD_PULSE_SHIFT))
#define UARTX_CARKIT_FORCE_TXD_PULSE_0  (0x0UL<<UARTX_CARKIT_FORCE_TXD_PULSE_SHIFT)
#define UARTX_CARKIT_FORCE_TXD_PULSE_1  (0x1UL<<UARTX_CARKIT_FORCE_TXD_PULSE_SHIFT)
#define UARTX_CARKIT_FORCE_TXD_PULSE    (0x1UL<<UARTX_CARKIT_FORCE_TXD_PULSE_SHIFT)
#define UARTX_CARKIT_EN_SHIFT           1
#define UARTX_CARKIT_EN_FIELD           (0xFFFFFFFF - (0x3UL<<UARTX_CARKIT_EN_SHIFT))
#define UARTX_CARKIT_EN_UARTX_NORMAL_MODE            (0x0UL<<UARTX_CARKIT_EN_SHIFT)
#define UARTX_CARKIT_EN_CARKIT_UARTX_MODE            (0x1UL<<UARTX_CARKIT_EN_SHIFT)
#define UARTX_CARKIT_EN_CARKIT_INTERRUPT_ONLY_MODE  (0x2UL<<UARTX_CARKIT_EN_SHIFT)
#define UARTX_CARKIT_EN_CARKIT_AUDIO_ONLY_MODE      (0x3UL<<UARTX_CARKIT_EN_SHIFT)
#define UARTX_CARKIT_IRQ_SHIFT          0
#define UARTX_CARKIT_IRQ_FIELD          (0xFFFFFFFF - (0x1UL<<UARTX_CARKIT_IRQ_SHIFT))
#define UARTX_CARKIT_IRQ_INACTIVE       (0x0UL<<UARTX_CARKIT_IRQ_SHIFT)
#define UARTX_CARKIT_IRQ_PENDING        (0x1UL<<UARTX_CARKIT_IRQ_SHIFT)
#define UARTX_CARKIT_IRQ                (0x1UL<<UARTX_CARKIT_IRQ_SHIFT)

/*****************************************************************************/
/* Register description for CARKIT_TXCTRL1 */

/* Reset value of register UART[2:1]_CARKIT_TXCTRL1 */
#define UART1_CARKIT_TXCTRL1_VALUE     0x0
#define UART2_CARKIT_TXCTRL1_VALUE     0x0

/* Bits definition for register UART[2:1]_CARKIT_TXCTRL1 */
#define UARTX_CARKIT_TXD_T1_SHIFT       8
#define UARTX_CARKIT_TXD_T1_FIELD       (0xFFFFFFFF - (0x3FUL<<UARTX_CARKIT_TXD_T1_SHIFT))
#define UARTX_CARKIT_TXD_T1_0           (0x0UL<<UARTX_CARKIT_TXD_T1_SHIFT)
#define UARTX_CARKIT_TXD_T0_SHIFT       0
#define UARTX_CARKIT_TXD_T0_FIELD       (0xFFFFFFFF - (0x3FUL<<UARTX_CARKIT_TXD_T0_SHIFT))
#define UARTX_CARKIT_TXD_T0_0           (0x0UL<<UARTX_CARKIT_TXD_T0_SHIFT)

/*****************************************************************************/
/* Register description for CARKIT_TXCTRL2 */

/* Reset value of register UART[2:1]_CARKIT_TXCTRL2 */
#define UART1_CARKIT_TXCTRL2_VALUE     0x0
#define UART2_CARKIT_TXCTRL2_VALUE     0x0

/* Bits definition for register UART[2:1]_CARKIT_TXCTRL2 */
#define UARTX_CARKIT_TXD_T3_SHIFT       8
#define UARTX_CARKIT_TXD_T3_FIELD       (0xFFFFFFFF - (0x3FUL<<UARTX_CARKIT_TXD_T3_SHIFT))
#define UARTX_CARKIT_TXD_T3_0           (0x0UL<<UARTX_CARKIT_TXD_T3_SHIFT)
#define UARTX_CARKIT_TXD_T2_SHIFT       0
#define UARTX_CARKIT_TXD_T2_FIELD       (0xFFFFFFFF - (0x3FUL<<UARTX_CARKIT_TXD_T2_SHIFT))
#define UARTX_CARKIT_TXD_T2_0           (0x0UL<<UARTX_CARKIT_TXD_T2_SHIFT)

/*****************************************************************************/
/* Register description for CARKIT_RXCTRL1 */

/* Reset value of register UART[2:1]_CARKIT_RXCTRL1 */
#define UART1_CARKIT_RXCTRL1_VALUE     0x0
#define UART2_CARKIT_RXCTRL1_VALUE     0x0

/* Bits definition for register UART[2:1]_CARKIT_RXCTRL1 */
#define UARTX_CARKIT_RXD_LOW_LSB_SHIFT  0
#define UARTX_CARKIT_RXD_LOW_LSB_FIELD  (0xFFFFFFFF - (0xFFFFUL<<UARTX_CARKIT_RXD_LOW_LSB_SHIFT))
#define UARTX_CARKIT_RXD_LOW_LSB_0      (0x0UL<<UARTX_CARKIT_RXD_LOW_LSB_SHIFT)

/*****************************************************************************/
/* Register description for CARKIT_RXCTRL2 */

/* Reset value of register UART[2:1]_CARKIT_RXCTRL2 */
#define UART1_CARKIT_RXCTRL2_VALUE     0x0
#define UART2_CARKIT_RXCTRL2_VALUE     0x0

/* Bits definition for register UART[2:1]_CARKIT_RXCTRL2 */
#define UARTX_CARKIT_RXD_DEB_SHIFT      8
#define UARTX_CARKIT_RXD_DEB_FIELD      (0xFFFFFFFF - (0xFUL<<UARTX_CARKIT_RXD_DEB_SHIFT))
#define UARTX_CARKIT_RXD_DEB_0          (0x0UL<<UARTX_CARKIT_RXD_DEB_SHIFT)
#define UARTX_CARKIT_RXD_LOW_MSB_SHIFT  0
#define UARTX_CARKIT_RXD_LOW_MSB_FIELD  (0xFFFFFFFF - (0xFFUL<<UARTX_CARKIT_RXD_LOW_MSB_SHIFT))
#define UARTX_CARKIT_RXD_LOW_MSB_0      (0x0UL<<UARTX_CARKIT_RXD_LOW_MSB_SHIFT)

/*****************************************************************************/

/*****************************************************************************
* Definitions for: USB
*****************************************************************************/

/* Pointer on base address */
#define USB_BASE                       IOA(USB_BASE_ADDR)

/* USB ID Register (32 bits) */
#define USB_ID_OFFSET                  0x0
#define USB_ID_REG                     IOA(USB_BASE_ADDR + USB_ID_OFFSET)

/* USB HWGENERAL Register (32 bits) */
#define USB_HWGENERAL_OFFSET           0x4
#define USB_HWGENERAL_REG              IOA(USB_BASE_ADDR + USB_HWGENERAL_OFFSET)

/* USB HWHOST Register (32 bits) */
#define USB_HWHOST_OFFSET              0x8
#define USB_HWHOST_REG                 IOA(USB_BASE_ADDR + USB_HWHOST_OFFSET)

/* USB HWDEVICE Register (32 bits) */
#define USB_HWDEVICE_OFFSET            0xC
#define USB_HWDEVICE_REG               IOA(USB_BASE_ADDR + USB_HWDEVICE_OFFSET)

/* USB HWTXBUF Register (32 bits) */
#define USB_HWTXBUF_OFFSET             0x10
#define USB_HWTXBUF_REG                IOA(USB_BASE_ADDR + USB_HWTXBUF_OFFSET)

/* USB HWRXBUF Register (32 bits) */
#define USB_HWRXBUF_OFFSET             0x14
#define USB_HWRXBUF_REG                IOA(USB_BASE_ADDR + USB_HWRXBUF_OFFSET)

/* USB IP_ID Register (32 bits) */
#define USB_IP_ID_OFFSET               0x20
#define USB_IP_ID_REG                  IOA(USB_BASE_ADDR + USB_IP_ID_OFFSET)

/* USB PHYCTRL Register (32 bits) */
#define USB_PHYCTRL_OFFSET             0x24
#define USB_PHYCTRL_REG                IOA(USB_BASE_ADDR + USB_PHYCTRL_OFFSET)

/* USB GPTIMER0LD Register (32 bits) */
#define USB_GPTIMER0LD_OFFSET          0x80
#define USB_GPTIMER0LD_REG             IOA(USB_BASE_ADDR + USB_GPTIMER0LD_OFFSET)

/* USB GPTIMER0CTRL Register (32 bits) */
#define USB_GPTIMER0CTRL_OFFSET        0x84
#define USB_GPTIMER0CTRL_REG           IOA(USB_BASE_ADDR + USB_GPTIMER0CTRL_OFFSET)

/* USB GPTIMER1LD Register (32 bits) */
#define USB_GPTIMER1LD_OFFSET          0x88
#define USB_GPTIMER1LD_REG             IOA(USB_BASE_ADDR + USB_GPTIMER1LD_OFFSET)

/* USB GPTIMER1CTRL Register (32 bits) */
#define USB_GPTIMER1CTRL_OFFSET        0x8C
#define USB_GPTIMER1CTRL_REG           IOA(USB_BASE_ADDR + USB_GPTIMER1CTRL_OFFSET)

/* USB CAPLENGTH Register (8 bits) */
#define USB_CAPLENGTH_OFFSET           0x100
#define USB_CAPLENGTH_REG              IOA(USB_BASE_ADDR + USB_CAPLENGTH_OFFSET)

/* USB HCIVERSION Register (16 bits) */
#define USB_HCIVERSION_OFFSET          0x102
#define USB_HCIVERSION_REG             IOA(USB_BASE_ADDR + USB_HCIVERSION_OFFSET)

/* USB HCSPARAMS Register (32 bits) */
#define USB_HCSPARAMS_OFFSET           0x104
#define USB_HCSPARAMS_REG              IOA(USB_BASE_ADDR + USB_HCSPARAMS_OFFSET)

/* USB HCCPARAMS Register (32 bits) */
#define USB_HCCPARAMS_OFFSET           0x108
#define USB_HCCPARAMS_REG              IOA(USB_BASE_ADDR + USB_HCCPARAMS_OFFSET)

/* USB DCIVERSION Register (32 bits) */
#define USB_DCIVERSION_OFFSET          0x120
#define USB_DCIVERSION_REG             IOA(USB_BASE_ADDR + USB_DCIVERSION_OFFSET)

/* USB DCCPARAMS Register (32 bits) */
#define USB_DCCPARAMS_OFFSET           0x124
#define USB_DCCPARAMS_REG              IOA(USB_BASE_ADDR + USB_DCCPARAMS_OFFSET)

/* USB CMD Register (32 bits) */
#define USB_CMD_OFFSET                 0x140
#define USB_CMD_REG                    IOA(USB_BASE_ADDR + USB_CMD_OFFSET)

/* USB STS Register (32 bits) */
#define USB_STS_OFFSET                 0x144
#define USB_STS_REG                    IOA(USB_BASE_ADDR + USB_STS_OFFSET)

/* USB INTR Register (32 bits) */
#define USB_INTR_OFFSET                0x148
#define USB_INTR_REG                   IOA(USB_BASE_ADDR + USB_INTR_OFFSET)

/* USB FRINDEX Register (32 bits) */
#define USB_FRINDEX_OFFSET             0x14C
#define USB_FRINDEX_REG                IOA(USB_BASE_ADDR + USB_FRINDEX_OFFSET)

/* USB PERIODICLISTBASE Register (32 bits) */
#define USB_PERIODICLISTBASE_OFFSET    0x154
#define USB_PERIODICLISTBASE_REG       IOA(USB_BASE_ADDR + USB_PERIODICLISTBASE_OFFSET)

/* USB DEVICEADDR Register (32 bits) */
#define USB_DEVICEADDR_OFFSET          0x154
#define USB_DEVICEADDR_REG             IOA(USB_BASE_ADDR + USB_DEVICEADDR_OFFSET)

/* USB ASYNCLISTADDR Register (32 bits) */
#define USB_ASYNCLISTADDR_OFFSET       0x158
#define USB_ASYNCLISTADDR_REG          IOA(USB_BASE_ADDR + USB_ASYNCLISTADDR_OFFSET)

/* USB ENDPOINTLISTADDR Register (32 bits) */
#define USB_ENDPOINTLISTADDR_OFFSET    0x158
#define USB_ENDPOINTLISTADDR_REG       IOA(USB_BASE_ADDR + USB_ENDPOINTLISTADDR_OFFSET)

/* USB TTCTRL Register (32 bits) */
#define USB_TTCTRL_OFFSET              0x15C
#define USB_TTCTRL_REG                 IOA(USB_BASE_ADDR + USB_TTCTRL_OFFSET)

/* USB BURSTSIZE Register (32 bits) */
#define USB_BURSTSIZE_OFFSET           0x160
#define USB_BURSTSIZE_REG              IOA(USB_BASE_ADDR + USB_BURSTSIZE_OFFSET)

/* USB TXFILLTUNING Register (32 bits) */
#define USB_TXFILLTUNING_OFFSET        0x164
#define USB_TXFILLTUNING_REG           IOA(USB_BASE_ADDR + USB_TXFILLTUNING_OFFSET)

/* USB BINTERVAL Register (32 bits) */
#define USB_BINTERVAL_OFFSET           0x174
#define USB_BINTERVAL_REG              IOA(USB_BASE_ADDR + USB_BINTERVAL_OFFSET)

/* USB ENDPTNAK Register (32 bits) */
#define USB_ENDPTNAK_OFFSET            0x178
#define USB_ENDPTNAK_REG               IOA(USB_BASE_ADDR + USB_ENDPTNAK_OFFSET)

/* USB ENDPTNAKEN Register (32 bits) */
#define USB_ENDPTNAKEN_OFFSET          0x17C
#define USB_ENDPTNAKEN_REG             IOA(USB_BASE_ADDR + USB_ENDPTNAKEN_OFFSET)

/* USB PORTSC Register (32 bits) */
#define USB_PORTSC_OFFSET              0x184
#define USB_PORTSC_REG                 IOA(USB_BASE_ADDR + USB_PORTSC_OFFSET)

/* USB OTGSC Register (32 bits) */
#define USB_OTGSC_OFFSET               0x1A4
#define USB_OTGSC_REG                  IOA(USB_BASE_ADDR + USB_OTGSC_OFFSET)

/* USB MODE Register (32 bits) */
#define USB_MODE_OFFSET                0x1A8
#define USB_MODE_REG                   IOA(USB_BASE_ADDR + USB_MODE_OFFSET)

/* USB ENDPTSETUPSTAT Register (32 bits) */
#define USB_ENDPTSETUPSTAT_OFFSET      0x1AC
#define USB_ENDPTSETUPSTAT_REG         IOA(USB_BASE_ADDR + USB_ENDPTSETUPSTAT_OFFSET)

/* USB ENDPTPRIME Register (32 bits) */
#define USB_ENDPTPRIME_OFFSET          0x1B0
#define USB_ENDPTPRIME_REG             IOA(USB_BASE_ADDR + USB_ENDPTPRIME_OFFSET)

/* USB ENDPTFLUSH Register (32 bits) */
#define USB_ENDPTFLUSH_OFFSET          0x1B4
#define USB_ENDPTFLUSH_REG             IOA(USB_BASE_ADDR + USB_ENDPTFLUSH_OFFSET)

/* USB ENDPTSTATUS Register (32 bits) */
#define USB_ENDPTSTATUS_OFFSET         0x1B8
#define USB_ENDPTSTATUS_REG            IOA(USB_BASE_ADDR + USB_ENDPTSTATUS_OFFSET)

/* USB ENDPTCOMPLETE Register (32 bits) */
#define USB_ENDPTCOMPLETE_OFFSET       0x1BC
#define USB_ENDPTCOMPLETE_REG          IOA(USB_BASE_ADDR + USB_ENDPTCOMPLETE_OFFSET)

/* USB ENDPTCTRL0 Register (32 bits) */
#define USB_ENDPTCTRL0_OFFSET          0x1C0
#define USB_ENDPTCTRL0_REG             IOA(USB_BASE_ADDR + USB_ENDPTCTRL0_OFFSET)

/* USB ENDPTCTRL1 Register (32 bits) */
#define USB_ENDPTCTRL1_OFFSET          0x1C4
#define USB_ENDPTCTRL1_REG             IOA(USB_BASE_ADDR + USB_ENDPTCTRL1_OFFSET)

/* USB ENDPTCTRL2 Register (32 bits) */
#define USB_ENDPTCTRL2_OFFSET          0x1C8
#define USB_ENDPTCTRL2_REG             IOA(USB_BASE_ADDR + USB_ENDPTCTRL2_OFFSET)

/* USB ENDPTCTRL3 Register (32 bits) */
#define USB_ENDPTCTRL3_OFFSET          0x1CC
#define USB_ENDPTCTRL3_REG             IOA(USB_BASE_ADDR + USB_ENDPTCTRL3_OFFSET)

/* USB ENDPTCTRL4 Register (32 bits) */
#define USB_ENDPTCTRL4_OFFSET          0x1D0
#define USB_ENDPTCTRL4_REG             IOA(USB_BASE_ADDR + USB_ENDPTCTRL4_OFFSET)

/* USB ENDPTCTRL5 Register (32 bits) */
#define USB_ENDPTCTRL5_OFFSET          0x1D4
#define USB_ENDPTCTRL5_REG             IOA(USB_BASE_ADDR + USB_ENDPTCTRL5_OFFSET)

/* Register description for IP_ID */

/* Reset value of register USB_IP_ID */
#define USB_IP_ID_VALUE                0x90284300

/* Bits definition for register USB_IP_ID */
#define USB_MODULE_ID_SHIFT            16
#define USB_MODULE_ID_FIELD            (0xFFFFFFFF - (0xFFFFUL<<USB_MODULE_ID_SHIFT))
#define USB_MODULE_ID_9028             (0x9028UL<<USB_MODULE_ID_SHIFT)
#define USB_VERSION_SHIFT              8
#define USB_VERSION_FIELD              (0xFFFFFFFF - (0xFFUL<<USB_VERSION_SHIFT))
#define USB_VERSION_43                 (0x43UL<<USB_VERSION_SHIFT)
#define USB_REVISION_SHIFT             0
#define USB_REVISION_FIELD             (0xFFFFFFFF - (0xFFUL<<USB_REVISION_SHIFT))
#define USB_REVISION_0                 (0x0UL<<USB_REVISION_SHIFT)

/*****************************************************************************/
/* Register description for ID */

/* Reset value of register USB_ID */
#define USB_ID_VALUE                   0x43FA05

/* Bits definition for register USB_ID */
#define USB_MOD_REV_SHIFT              16
#define USB_MOD_REV_FIELD              (0xFFFFFFFF - (0xFFUL<<USB_MOD_REV_SHIFT))
#define USB_MOD_REV_43                 (0x43UL<<USB_MOD_REV_SHIFT)
#define USB_MOD_NID_SHIFT              8
#define USB_MOD_NID_FIELD              (0xFFFFFFFF - (0x3FUL<<USB_MOD_NID_SHIFT))
#define USB_MOD_NID_3A                 (0x3AUL<<USB_MOD_NID_SHIFT)
#define USB_MOD_ID_SHIFT               0
#define USB_MOD_ID_FIELD               (0xFFFFFFFF - (0x3FUL<<USB_MOD_ID_SHIFT))
#define USB_MOD_ID_5                   (0x5UL<<USB_MOD_ID_SHIFT)

/*****************************************************************************/
/* Register description for HWGENERAL */

/* Reset value of register USB_HWGENERAL */
#define USB_HWGENERAL_VALUE            0x615

/* Bits definition for register USB_HWGENERAL */
#define USB_HWGENERAL_SHIFT            0
#define USB_HWGENERAL_FIELD            (0xFFFFFFFF - (0x7FFFFFFFUL<<USB_HWGENERAL_SHIFT))
#define USB_HWGENERAL_615              (0x615UL<<USB_HWGENERAL_SHIFT)

/*****************************************************************************/
/* Register description for HWHOST */

/* Reset value of register USB_HWHOST */
#define USB_HWHOST_VALUE               0x10020001

/* Bits definition for register USB_HWHOST */
#define USB_HWHOST_SHIFT               0
#define USB_HWHOST_FIELD               (0xFFFFFFFF - (0x7FFFFFFFUL<<USB_HWHOST_SHIFT))
#define USB_HWHOST_10020001            (0x10020001UL<<USB_HWHOST_SHIFT)

/*****************************************************************************/
/* Register description for HWDEVICE */

/* Reset value of register USB_HWDEVICE */
#define USB_HWDEVICE_VALUE             0xD

/* Bits definition for register USB_HWDEVICE */
#define USB_HWDEVICE_SHIFT             0
#define USB_HWDEVICE_FIELD             (0xFFFFFFFF - (0x7FFFFFFFUL<<USB_HWDEVICE_SHIFT))
#define USB_HWDEVICE_D                 (0xDUL<<USB_HWDEVICE_SHIFT)

/*****************************************************************************/
/* Register description for HWTXBUF */

/* Reset value of register USB_HWTXBUF */
#define USB_HWTXBUF_VALUE              0x80070A10

/* Bits definition for register USB_HWTXBUF */
#define USB_HWTXBUF_SHIFT              0
#define USB_HWTXBUF_FIELD              (0xFFFFFFFF - (0x7FFFFFFFUL<<USB_HWTXBUF_SHIFT))
#define USB_HWTXBUF_80070A10           (0x80070A10UL<<USB_HWTXBUF_SHIFT)

/*****************************************************************************/
/* Register description for HWRXBUF */

/* Reset value of register USB_HWRXBUF */
#define USB_HWRXBUF_VALUE              0x810

/* Bits definition for register USB_HWRXBUF */
#define USB_HWRXBUF_SHIFT              0
#define USB_HWRXBUF_FIELD              (0xFFFFFFFF - (0x7FFFFFFFUL<<USB_HWRXBUF_SHIFT))
#define USB_HWRXBUF_810                (0x810UL<<USB_HWRXBUF_SHIFT)

/*****************************************************************************/
/* Register description for CAPLENGTH */

/* Reset value of register USB_CAPLENGTH */
#define USB_CAPLENGTH_VALUE            0x40

/* Bits definition for register USB_CAPLENGTH */
#define USB_CAPLENGTH_SHIFT            0
#define USB_CAPLENGTH_FIELD            (0xFFFFFFFF - (0xFFUL<<USB_CAPLENGTH_SHIFT))
#define USB_CAPLENGTH_40               (0x40UL<<USB_CAPLENGTH_SHIFT)

/*****************************************************************************/
/* Register description for HCIVERSION */

/* Reset value of register USB_HCIVERSION */
#define USB_HCIVERSION_VALUE           0x100

/* Bits definition for register USB_HCIVERSION */
#define USB_HCIVERSION_MAJOR_SHIFT     8
#define USB_HCIVERSION_MAJOR_FIELD     (0xFFFFFFFF - (0xFFUL<<USB_HCIVERSION_MAJOR_SHIFT))
#define USB_HCIVERSION_MAJOR_1         (0x1UL<<USB_HCIVERSION_MAJOR_SHIFT)
#define USB_HCIVERSION_MINOR_SHIFT     0
#define USB_HCIVERSION_MINOR_FIELD     (0xFFFFFFFF - (0xFFUL<<USB_HCIVERSION_MINOR_SHIFT))
#define USB_HCIVERSION_MINOR_0         (0x0UL<<USB_HCIVERSION_MINOR_SHIFT)

/*****************************************************************************/
/* Register description for HCSPARAMS */

/* Reset value of register USB_HCSPARAMS */
#define USB_HCSPARAMS_VALUE            0x10011

/* Bits definition for register USB_HCSPARAMS */
#define USB_HCSPARAMS_SHIFT            0
#define USB_HCSPARAMS_FIELD            (0xFFFFFFFF - (0x7FFFFFFFUL<<USB_HCSPARAMS_SHIFT))
#define USB_HCSPARAMS_10011            (0x10011UL<<USB_HCSPARAMS_SHIFT)

/*****************************************************************************/
/* Register description for HCCPARAMS */

/* Reset value of register USB_HCCPARAMS */
#define USB_HCCPARAMS_VALUE            0x6

/* Bits definition for register USB_HCCPARAMS */
#define USB_HCCPARAMS_SHIFT            0
#define USB_HCCPARAMS_FIELD            (0xFFFFFFFF - (0x7FFFFFFFUL<<USB_HCCPARAMS_SHIFT))
#define USB_HCCPARAMS_6                (0x6UL<<USB_HCCPARAMS_SHIFT)

/*****************************************************************************/
/* Register description for DCIVERSION */

/* Reset value of register USB_DCIVERSION */
#define USB_DCIVERSION_VALUE           0x1

/* Bits definition for register USB_DCIVERSION */
#define USB_DCIVERSION_MAJOR_SHIFT     8
#define USB_DCIVERSION_MAJOR_FIELD     (0xFFFFFFFF - (0xFFUL<<USB_DCIVERSION_MAJOR_SHIFT))
#define USB_DCIVERSION_MAJOR_0         (0x0UL<<USB_DCIVERSION_MAJOR_SHIFT)
#define USB_DCIVERSION_MINOR_SHIFT     0
#define USB_DCIVERSION_MINOR_FIELD     (0xFFFFFFFF - (0xFFUL<<USB_DCIVERSION_MINOR_SHIFT))
#define USB_DCIVERSION_MINOR_1         (0x1UL<<USB_DCIVERSION_MINOR_SHIFT)

/*****************************************************************************/
/* Register description for DCCPARAMS */

/* Reset value of register USB_DCCPARAMS */
#define USB_DCCPARAMS_VALUE            0x186

/* Bits definition for register USB_DCCPARAMS */
#define USB_DCCPARAMS_SHIFT            0
#define USB_DCCPARAMS_FIELD            (0xFFFFFFFF - (0x7FFFFFFFUL<<USB_DCCPARAMS_SHIFT))
#define USB_DCCPARAMS_186              (0x186UL<<USB_DCCPARAMS_SHIFT)

/*****************************************************************************/
/* Register description for GPTIMER[1:0]LD */

/* Reset value of register USB_GPTIMER[1:0]LD */
#define USB_GPTIMER0LD_VALUE           0x0
#define USB_GPTIMER1LD_VALUE           0x0

/* Bits definition for register USB_GPTIMER[1:0]LD */
#define USB_GPTLD_SHIFT                0
#define USB_GPTLD_FIELD                (0xFFFFFFFF - (0xFFFFFFUL<<USB_GPTLD_SHIFT))
#define USB_GPTLD_GENERAL_PURPOSE_TIMER_LOAD_VALUE (0x0UL<<USB_GPTLD_SHIFT)

/*****************************************************************************/
/* Register description for GPTIMER[1:0]CTRL */

/* Reset value of register USB_GPTIMER[1:0]CTRL */
#define USB_GPTIMER0CTRL_VALUE         0x0
#define USB_GPTIMER1CTRL_VALUE         0x0

/* Bits definition for register USB_GPTIMER[1:0]CTRL */
#define USB_GPTRUN_SHIFT               31
#define USB_GPTRUN_FIELD               (0xFFFFFFFF - (0x1UL<<USB_GPTRUN_SHIFT))
#define USB_GPTRUN_TIMER_STOP          (0x0UL<<USB_GPTRUN_SHIFT)
#define USB_GPTRUN_TIMER_RUN           (0x1UL<<USB_GPTRUN_SHIFT)
#define USB_GPTRUN                     (0x1UL<<USB_GPTRUN_SHIFT)
#define USB_GPTRST_SHIFT               30
#define USB_GPTRST_FIELD               (0xFFFFFFFF - (0x1UL<<USB_GPTRST_SHIFT))
#define USB_GPTRST_NO_ACTION           (0x0UL<<USB_GPTRST_SHIFT)
#define USB_GPTRST_LOAD_COUNTER_VALUE  (0x1UL<<USB_GPTRST_SHIFT)
#define USB_GPTRST                     (0x1UL<<USB_GPTRST_SHIFT)
#define USB_GPTMODE_SHIFT              24
#define USB_GPTMODE_FIELD              (0xFFFFFFFF - (0x1UL<<USB_GPTMODE_SHIFT))
#define USB_GPTMODE_ONE_SHOT           (0x0UL<<USB_GPTMODE_SHIFT)
#define USB_GPTMODE_REPEAT             (0x1UL<<USB_GPTMODE_SHIFT)
#define USB_GPTMODE                    (0x1UL<<USB_GPTMODE_SHIFT)
#define USB_GPTCNT_SHIFT               0
#define USB_GPTCNT_FIELD               (0xFFFFFFFF - (0xFFFFFFUL<<USB_GPTCNT_SHIFT))
#define USB_GPTCNT_GENERAL_PURPOSE_TIMER_COUNTER   (0x0UL<<USB_GPTCNT_SHIFT)

/*****************************************************************************/
/* Register description for CMD */

/* Reset value of register USB_CMD */
#define USB_CMD_VALUE                  0x80000

/* Bits definition for register USB_CMD */
#define USB_ITC_SHIFT                  16
#define USB_ITC_FIELD                  (0xFFFFFFFF - (0xFFUL<<USB_ITC_SHIFT))
#define USB_ITC_0                      (0x0UL<<USB_ITC_SHIFT)
#define USB_ITC_1                      (0x1UL<<USB_ITC_SHIFT)
#define USB_ITC_2                      (0x2UL<<USB_ITC_SHIFT)
#define USB_ITC_4                      (0x4UL<<USB_ITC_SHIFT)
#define USB_ITC_8                      (0x8UL<<USB_ITC_SHIFT)
#define USB_ITC_10                     (0x10UL<<USB_ITC_SHIFT)
#define USB_ITC_20                     (0x20UL<<USB_ITC_SHIFT)
#define USB_ITC_40                     (0x40UL<<USB_ITC_SHIFT)
#define USB_FS2_SHIFT                  15
#define USB_FS2_FIELD                  (0xFFFFFFFF - (0x1UL<<USB_FS2_SHIFT))
#define USB_FS2_0                      (0x0UL<<USB_FS2_SHIFT)
#define USB_FS2_1                      (0x1UL<<USB_FS2_SHIFT)
#define USB_FS2                        (0x1UL<<USB_FS2_SHIFT)
#define USB_ATDTW_SHIFT                14
#define USB_ATDTW_FIELD                (0xFFFFFFFF - (0x1UL<<USB_ATDTW_SHIFT))
#define USB_ATDTW_0                    (0x0UL<<USB_ATDTW_SHIFT)
#define USB_ATDTW_ADD_DTD_TRIPWIRE     (0x1UL<<USB_ATDTW_SHIFT)
#define USB_ATDTW                      (0x1UL<<USB_ATDTW_SHIFT)
#define USB_SUTW_SHIFT                 13
#define USB_SUTW_FIELD                 (0xFFFFFFFF - (0x1UL<<USB_SUTW_SHIFT))
#define USB_SUTW_0                     (0x0UL<<USB_SUTW_SHIFT)
#define USB_SUTW_SETUP_TRIPWIRE        (0x1UL<<USB_SUTW_SHIFT)
#define USB_SUTW                       (0x1UL<<USB_SUTW_SHIFT)
#define USB_ASPE_SHIFT                 11
#define USB_ASPE_FIELD                 (0xFFFFFFFF - (0x1UL<<USB_ASPE_SHIFT))
#define USB_ASPE_DISABLED              (0x0UL<<USB_ASPE_SHIFT)
#define USB_ASPE_ENABLED               (0x1UL<<USB_ASPE_SHIFT)
#define USB_ASPE                       (0x1UL<<USB_ASPE_SHIFT)
#define USB_ASP_SHIFT                  8
#define USB_ASP_FIELD                  (0xFFFFFFFF - (0x3UL<<USB_ASP_SHIFT))
#define USB_ASP_0                      (0x0UL<<USB_ASP_SHIFT)
#define USB_ASP_1                      (0x1UL<<USB_ASP_SHIFT)
#define USB_ASP_2                      (0x2UL<<USB_ASP_SHIFT)
#define USB_ASP_3                      (0x3UL<<USB_ASP_SHIFT)
#define USB_IAA_SHIFT                  6
#define USB_IAA_FIELD                  (0xFFFFFFFF - (0x1UL<<USB_IAA_SHIFT))
#define USB_IAA_0                      (0x0UL<<USB_IAA_SHIFT)
#define USB_IAA_INTERRUPT_ON_ASYNC_ADVANCE_DOORBELL (0x1UL<<USB_IAA_SHIFT)
#define USB_IAA                        (0x1UL<<USB_IAA_SHIFT)
#define USB_ASE_SHIFT                  5
#define USB_ASE_FIELD                  (0xFFFFFFFF - (0x1UL<<USB_ASE_SHIFT))
#define USB_ASE_0                      (0x0UL<<USB_ASE_SHIFT)
#define USB_ASE_1                      (0x1UL<<USB_ASE_SHIFT)
#define USB_ASE                        (0x1UL<<USB_ASE_SHIFT)
#define USB_PSE_SHIFT                  4
#define USB_PSE_FIELD                  (0xFFFFFFFF - (0x1UL<<USB_PSE_SHIFT))
#define USB_PSE_0                      (0x0UL<<USB_PSE_SHIFT)
#define USB_PSE_1                      (0x1UL<<USB_PSE_SHIFT)
#define USB_PSE                        (0x1UL<<USB_PSE_SHIFT)
#define USB_FS_SHIFT                   2
#define USB_FS_FIELD                   (0xFFFFFFFF - (0x3UL<<USB_FS_SHIFT))
#define USB_FS_0                       (0x0UL<<USB_FS_SHIFT)
#define USB_FS_1                       (0x1UL<<USB_FS_SHIFT)
#define USB_FS_2                       (0x2UL<<USB_FS_SHIFT)
#define USB_FS_3                       (0x3UL<<USB_FS_SHIFT)
#define USB_RST_SHIFT                  1
#define USB_RST_FIELD                  (0xFFFFFFFF - (0x1UL<<USB_RST_SHIFT))
#define USB_RST_0                      (0x0UL<<USB_RST_SHIFT)
#define USB_RST_1                      (0x1UL<<USB_RST_SHIFT)
#define USB_RST                        (0x1UL<<USB_RST_SHIFT)
#define USB_RS_SHIFT                   0
#define USB_RS_FIELD                   (0xFFFFFFFF - (0x1UL<<USB_RS_SHIFT))
#define USB_RS_0                       (0x0UL<<USB_RS_SHIFT)
#define USB_RS_1                       (0x1UL<<USB_RS_SHIFT)
#define USB_RS                         (0x1UL<<USB_RS_SHIFT)

/*****************************************************************************/
/* Register description for STS */

/* Reset value of register USB_STS */
#define USB_STS_VALUE                  0x0

/* Bits definition for register USB_STS */
#define USB_TI1_SHIFT                  25
#define USB_TI1_FIELD                  (0xFFFFFFFF - (0x1UL<<USB_TI1_SHIFT))
#define USB_TI1_0                      (0x0UL<<USB_TI1_SHIFT)
#define USB_TI1_GENERAL_PURPOSE_TIMER_INTERRUPT_1  (0x1UL<<USB_TI1_SHIFT)
#define USB_TI1                        (0x1UL<<USB_TI1_SHIFT)
#define USB_TI0_SHIFT                  24
#define USB_TI0_FIELD                  (0xFFFFFFFF - (0x1UL<<USB_TI0_SHIFT))
#define USB_TI0_0                      (0x0UL<<USB_TI0_SHIFT)
#define USB_TI0_GENERAL_PURPOSE_TIMER_INTERRUPT_0  (0x1UL<<USB_TI0_SHIFT)
#define USB_TI0                        (0x1UL<<USB_TI0_SHIFT)
#define USB_UPI_SHIFT                  19
#define USB_UPI_FIELD                  (0xFFFFFFFF - (0x1UL<<USB_UPI_SHIFT))
#define USB_UPI_0                      (0x0UL<<USB_UPI_SHIFT)
#define USB_UPI_1                      (0x1UL<<USB_UPI_SHIFT)
#define USB_UPI                        (0x1UL<<USB_UPI_SHIFT)
#define USB_UAI_SHIFT                  18
#define USB_UAI_FIELD                  (0xFFFFFFFF - (0x1UL<<USB_UAI_SHIFT))
#define USB_UAI_0                      (0x0UL<<USB_UAI_SHIFT)
#define USB_UAI_1                      (0x1UL<<USB_UAI_SHIFT)
#define USB_UAI                        (0x1UL<<USB_UAI_SHIFT)
#define USB_NAKI_SHIFT                 16
#define USB_NAKI_FIELD                 (0xFFFFFFFF - (0x1UL<<USB_NAKI_SHIFT))
#define USB_NAKI_0                     (0x0UL<<USB_NAKI_SHIFT)
#define USB_NAKI_NAK_INTERRUPT         (0x1UL<<USB_NAKI_SHIFT)
#define USB_NAKI                       (0x1UL<<USB_NAKI_SHIFT)
#define USB_AS_SHIFT                   15
#define USB_AS_FIELD                   (0xFFFFFFFF - (0x1UL<<USB_AS_SHIFT))
#define USB_AS_0                       (0x0UL<<USB_AS_SHIFT)
#define USB_AS_1                       (0x1UL<<USB_AS_SHIFT)
#define USB_AS                         (0x1UL<<USB_AS_SHIFT)
#define USB_PS_SHIFT                   14
#define USB_PS_FIELD                   (0xFFFFFFFF - (0x1UL<<USB_PS_SHIFT))
#define USB_PS_0                       (0x0UL<<USB_PS_SHIFT)
#define USB_PS_1                       (0x1UL<<USB_PS_SHIFT)
#define USB_PS                         (0x1UL<<USB_PS_SHIFT)
#define USB_RCL_SHIFT                  13
#define USB_RCL_FIELD                  (0xFFFFFFFF - (0x1UL<<USB_RCL_SHIFT))
#define USB_RCL_0                      (0x0UL<<USB_RCL_SHIFT)
#define USB_RCL_RECLAMATION            (0x1UL<<USB_RCL_SHIFT)
#define USB_RCL                        (0x1UL<<USB_RCL_SHIFT)
#define USB_HCH_SHIFT                  12
#define USB_HCH_FIELD                  (0xFFFFFFFF - (0x1UL<<USB_HCH_SHIFT))
#define USB_HCH_0                      (0x0UL<<USB_HCH_SHIFT)
#define USB_HCH_HCHAITED               (0x1UL<<USB_HCH_SHIFT)
#define USB_HCH                        (0x1UL<<USB_HCH_SHIFT)
#define USB_SLI_SHIFT                  8
#define USB_SLI_FIELD                  (0xFFFFFFFF - (0x1UL<<USB_SLI_SHIFT))
#define USB_SLI_0                      (0x0UL<<USB_SLI_SHIFT)
#define USB_SLI_DCSUSPEND              (0x1UL<<USB_SLI_SHIFT)
#define USB_SLI                        (0x1UL<<USB_SLI_SHIFT)
#define USB_SRI_SHIFT                  7
#define USB_SRI_FIELD                  (0xFFFFFFFF - (0x1UL<<USB_SRI_SHIFT))
#define USB_SRI_0                      (0x0UL<<USB_SRI_SHIFT)
#define USB_SRI_SOF_RECEIVED           (0x1UL<<USB_SRI_SHIFT)
#define USB_SRI                        (0x1UL<<USB_SRI_SHIFT)
#define USB_URI_SHIFT                  6
#define USB_URI_FIELD                  (0xFFFFFFFF - (0x1UL<<USB_URI_SHIFT))
#define USB_URI_0                      (0x0UL<<USB_URI_SHIFT)
#define USB_URI_USB_RESET_RECEIVED     (0x1UL<<USB_URI_SHIFT)
#define USB_URI                        (0x1UL<<USB_URI_SHIFT)
#define USB_AAI_SHIFT                  5
#define USB_AAI_FIELD                  (0xFFFFFFFF - (0x1UL<<USB_AAI_SHIFT))
#define USB_AAI_0                      (0x0UL<<USB_AAI_SHIFT)
#define USB_AAI_INTERRUPT_ON_ASYNC_ADVANCE         (0x1UL<<USB_AAI_SHIFT)
#define USB_AAI                        (0x1UL<<USB_AAI_SHIFT)
#define USB_FRI_SHIFT                  3
#define USB_FRI_FIELD                  (0xFFFFFFFF - (0x1UL<<USB_FRI_SHIFT))
#define USB_FRI_0                      (0x0UL<<USB_FRI_SHIFT)
#define USB_FRI_FRAME_LIST_ROLLOVER    (0x1UL<<USB_FRI_SHIFT)
#define USB_FRI                        (0x1UL<<USB_FRI_SHIFT)
#define USB_PCI_SHIFT                  2
#define USB_PCI_FIELD                  (0xFFFFFFFF - (0x1UL<<USB_PCI_SHIFT))
#define USB_PCI_0                      (0x0UL<<USB_PCI_SHIFT)
#define USB_PCI_PORT_CHANGE_DETECT     (0x1UL<<USB_PCI_SHIFT)
#define USB_PCI                        (0x1UL<<USB_PCI_SHIFT)
#define USB_UEI_SHIFT                  1
#define USB_UEI_FIELD                  (0xFFFFFFFF - (0x1UL<<USB_UEI_SHIFT))
#define USB_UEI_0                      (0x0UL<<USB_UEI_SHIFT)
#define USB_UEI_USB_ERROR_INTERRUPT    (0x1UL<<USB_UEI_SHIFT)
#define USB_UEI                        (0x1UL<<USB_UEI_SHIFT)
#define USB_UI_SHIFT                   0
#define USB_UI_FIELD                   (0xFFFFFFFF - (0x1UL<<USB_UI_SHIFT))
#define USB_UI_0                       (0x0UL<<USB_UI_SHIFT)
#define USB_UI_USB_INTERRUPT           (0x1UL<<USB_UI_SHIFT)
#define USB_UI                         (0x1UL<<USB_UI_SHIFT)

/*****************************************************************************/
/* Register description for INTR */

/* Reset value of register USB_INTR */
#define USB_INTR_VALUE                 0x0

/* Bits definition for register USB_INTR */
#define USB_TIE1_SHIFT                 25
#define USB_TIE1_FIELD                 (0xFFFFFFFF - (0x1UL<<USB_TIE1_SHIFT))
#define USB_TIE1_0                     (0x0UL<<USB_TIE1_SHIFT)
#define USB_TIE1_1                     (0x1UL<<USB_TIE1_SHIFT)
#define USB_TIE1                       (0x1UL<<USB_TIE1_SHIFT)
#define USB_TIE0_SHIFT                 24
#define USB_TIE0_FIELD                 (0xFFFFFFFF - (0x1UL<<USB_TIE0_SHIFT))
#define USB_TIE0_0                     (0x0UL<<USB_TIE0_SHIFT)
#define USB_TIE0_1                     (0x1UL<<USB_TIE0_SHIFT)
#define USB_TIE0                       (0x1UL<<USB_TIE0_SHIFT)
#define USB_UPIE_SHIFT                 19
#define USB_UPIE_FIELD                 (0xFFFFFFFF - (0x1UL<<USB_UPIE_SHIFT))
#define USB_UPIE_0                     (0x0UL<<USB_UPIE_SHIFT)
#define USB_UPIE_1                     (0x1UL<<USB_UPIE_SHIFT)
#define USB_UPIE                       (0x1UL<<USB_UPIE_SHIFT)
#define USB_UAIE_SHIFT                 18
#define USB_UAIE_FIELD                 (0xFFFFFFFF - (0x1UL<<USB_UAIE_SHIFT))
#define USB_UAIE_0                     (0x0UL<<USB_UAIE_SHIFT)
#define USB_UAIE_1                     (0x1UL<<USB_UAIE_SHIFT)
#define USB_UAIE                       (0x1UL<<USB_UAIE_SHIFT)
#define USB_NAKE_SHIFT                 16
#define USB_NAKE_FIELD                 (0xFFFFFFFF - (0x1UL<<USB_NAKE_SHIFT))
#define USB_NAKE_0                     (0x0UL<<USB_NAKE_SHIFT)
#define USB_NAKE_1                     (0x1UL<<USB_NAKE_SHIFT)
#define USB_NAKE                       (0x1UL<<USB_NAKE_SHIFT)
#define USB_SLE_SHIFT                  8
#define USB_SLE_FIELD                  (0xFFFFFFFF - (0x1UL<<USB_SLE_SHIFT))
#define USB_SLE_0                      (0x0UL<<USB_SLE_SHIFT)
#define USB_SLE_1                      (0x1UL<<USB_SLE_SHIFT)
#define USB_SLE                        (0x1UL<<USB_SLE_SHIFT)
#define USB_SRE_SHIFT                  7
#define USB_SRE_FIELD                  (0xFFFFFFFF - (0x1UL<<USB_SRE_SHIFT))
#define USB_SRE_0                      (0x0UL<<USB_SRE_SHIFT)
#define USB_SRE_1                      (0x1UL<<USB_SRE_SHIFT)
#define USB_SRE                        (0x1UL<<USB_SRE_SHIFT)
#define USB_URE_SHIFT                  6
#define USB_URE_FIELD                  (0xFFFFFFFF - (0x1UL<<USB_URE_SHIFT))
#define USB_URE_0                      (0x0UL<<USB_URE_SHIFT)
#define USB_URE_1                      (0x1UL<<USB_URE_SHIFT)
#define USB_URE                        (0x1UL<<USB_URE_SHIFT)
#define USB_AAE_SHIFT                  5
#define USB_AAE_FIELD                  (0xFFFFFFFF - (0x1UL<<USB_AAE_SHIFT))
#define USB_AAE_0                      (0x0UL<<USB_AAE_SHIFT)
#define USB_AAE_1                      (0x1UL<<USB_AAE_SHIFT)
#define USB_AAE                        (0x1UL<<USB_AAE_SHIFT)
#define USB_FRE_SHIFT                  3
#define USB_FRE_FIELD                  (0xFFFFFFFF - (0x1UL<<USB_FRE_SHIFT))
#define USB_FRE_0                      (0x0UL<<USB_FRE_SHIFT)
#define USB_FRE_1                      (0x1UL<<USB_FRE_SHIFT)
#define USB_FRE                        (0x1UL<<USB_FRE_SHIFT)
#define USB_PCE_SHIFT                  2
#define USB_PCE_FIELD                  (0xFFFFFFFF - (0x1UL<<USB_PCE_SHIFT))
#define USB_PCE_0                      (0x0UL<<USB_PCE_SHIFT)
#define USB_PCE_1                      (0x1UL<<USB_PCE_SHIFT)
#define USB_PCE                        (0x1UL<<USB_PCE_SHIFT)
#define USB_UEE_SHIFT                  1
#define USB_UEE_FIELD                  (0xFFFFFFFF - (0x1UL<<USB_UEE_SHIFT))
#define USB_UEE_0                      (0x0UL<<USB_UEE_SHIFT)
#define USB_UEE_1                      (0x1UL<<USB_UEE_SHIFT)
#define USB_UEE                        (0x1UL<<USB_UEE_SHIFT)
#define USB_UE_SHIFT                   0
#define USB_UE_FIELD                   (0xFFFFFFFF - (0x1UL<<USB_UE_SHIFT))
#define USB_UE_0                       (0x0UL<<USB_UE_SHIFT)
#define USB_UE_1                       (0x1UL<<USB_UE_SHIFT)
#define USB_UE                         (0x1UL<<USB_UE_SHIFT)

/*****************************************************************************/
/* Register description for FRINDEX */

/* Reset value of register USB_FRINDEX */
#define USB_FRINDEX_VALUE              0x0

/* Bits definition for register USB_FRINDEX */
#define USB_FRINDEX_SHIFT              0
#define USB_FRINDEX_FIELD              (0xFFFFFFFF - (0x3FFFUL<<USB_FRINDEX_SHIFT))

/*****************************************************************************/
/* Register description for PERIODICLISTBASE */

/* Reset value of register USB_PERIODICLISTBASE */
#define USB_PERIODICLISTBASE_VALUE     0x0

/* Bits definition for register USB_PERIODICLISTBASE */
#define USB_PERBASE_SHIFT              0
#define USB_PERBASE_FIELD              (0xFFFFFFFF - (0x7FFFFFFFUL<<USB_PERBASE_SHIFT))

/*****************************************************************************/
/* Register description for DEVICEADDR */

/* Reset value of register USB_DEVICEADDR */
#define USB_DEVICEADDR_VALUE           0x0

/* Bits definition for register USB_DEVICEADDR */
#define USB_USBADR_SHIFT               25
#define USB_USBADR_FIELD               (0xFFFFFFFF - (0x7FUL<<USB_USBADR_SHIFT))
#define USB_USBADR_DEVICE_ADDRESS      (0x0UL<<USB_USBADR_SHIFT)
#define USB_USBADRA_SHIFT              24
#define USB_USBADRA_FIELD              (0xFFFFFFFF - (0x1UL<<USB_USBADRA_SHIFT))
#define USB_USBADRA_0                  (0x0UL<<USB_USBADRA_SHIFT)
#define USB_USBADRA_1                  (0x1UL<<USB_USBADRA_SHIFT)
#define USB_USBADRA                    (0x1UL<<USB_USBADRA_SHIFT)

/*****************************************************************************/
/* Register description for ASYNCLISTADDR */

/* Reset value of register USB_ASYNCLISTADDR */
#define USB_ASYNCLISTADDR_VALUE        0x0

/* Bits definition for register USB_ASYNCLISTADDR */
#define USB_ASYBASE_SHIFT              5
#define USB_ASYBASE_FIELD              (0xFFFFFFFF - (0x7FFFFFFUL<<USB_ASYBASE_SHIFT))
#define USB_ASYBASE_LINK_POINTER_LOW   (0x0UL<<USB_ASYBASE_SHIFT)

/*****************************************************************************/
/* Register description for ENDPOINTLISTADDR */

/* Reset value of register USB_ENDPOINTLISTADDR */
#define USB_ENDPOINTLISTADDR_VALUE     0x0

/* Bits definition for register USB_ENDPOINTLISTADDR */
#define USB_EPBASE_SHIFT               11
#define USB_EPBASE_FIELD               (0xFFFFFFFF - (0x1FFFFFUL<<USB_EPBASE_SHIFT))
#define USB_EPBASE_ENDPOINT_LIST_POINTER           (0x0UL<<USB_EPBASE_SHIFT)

/*****************************************************************************/
/* Register description for TTCTRL */

/* Reset value of register USB_TTCTRL */
#define USB_TTCTRL_VALUE               0x0

/* Bits definition for register USB_TTCTRL */
#define USB_TTHA_SHIFT                 24
#define USB_TTHA_FIELD                 (0xFFFFFFFF - (0x7FUL<<USB_TTHA_SHIFT))
#define USB_TTHA_INTERNAL_TT_HUB_ADDRESS_REPRESENTATION (0x0UL<<USB_TTHA_SHIFT)

/*****************************************************************************/
/* Register description for BURSTSIZE */

/* Reset value of register USB_BURSTSIZE */
#define USB_BURSTSIZE_VALUE            0x1010

/* Bits definition for register USB_BURSTSIZE */
#define USB_TXPBURST_SHIFT             8
#define USB_TXPBURST_FIELD             (0xFFFFFFFF - (0xFFUL<<USB_TXPBURST_SHIFT))
#define USB_TXPBURST_PROGRAMMABLE_TX_BURST_LENGTH  (0x10UL<<USB_TXPBURST_SHIFT)
#define USB_RXPBURST_SHIFT             0
#define USB_RXPBURST_FIELD             (0xFFFFFFFF - (0xFFUL<<USB_RXPBURST_SHIFT))
#define USB_RXPBURST_PROGRAMMABLE_RX_BURST_LENGTH  (0x10UL<<USB_RXPBURST_SHIFT)

/*****************************************************************************/
/* Register description for TXFILLTUNING */

/* Reset value of register USB_TXFILLTUNING */
#define USB_TXFILLTUNING_VALUE         0x0

/* Bits definition for register USB_TXFILLTUNING */
#define USB_TXFIFOTHRES_SHIFT          16
#define USB_TXFIFOTHRES_FIELD          (0xFFFFFFFF - (0x3FUL<<USB_TXFIFOTHRES_SHIFT))
#define USB_TXFIFOTHRES_FIFO_BURST_THRESHOLD       (0x0UL<<USB_TXFIFOTHRES_SHIFT)
#define USB_TXSCHHEALTH_SHIFT          8
#define USB_TXSCHHEALTH_FIELD          (0xFFFFFFFF - (0x1FUL<<USB_TXSCHHEALTH_SHIFT))
#define USB_TXSCHHEALTH_SCHEDULER_HEALTH_COUNTER   (0x0UL<<USB_TXSCHHEALTH_SHIFT)
#define USB_TXSCHOH_SHIFT              0
#define USB_TXSCHOH_FIELD              (0xFFFFFFFF - (0xFFUL<<USB_TXSCHOH_SHIFT))
#define USB_TXSCHOH_SCHEDULER_OVERHEAD (0x0UL<<USB_TXSCHOH_SHIFT)

/*****************************************************************************/
/* Register description for BINTERVAL */

/* Reset value of register USB_BINTERVAL */
#define USB_BINTERVAL_VALUE            0x0

/* Bits definition for register USB_BINTERVAL */
#define USB_BINT_SHIFT                 0
#define USB_BINT_FIELD                 (0xFFFFFFFF - (0xFUL<<USB_BINT_SHIFT))
#define USB_BINT_0                     (0x0UL<<USB_BINT_SHIFT)

/*****************************************************************************/
/* Register description for ENDPTNAK */

/* Reset value of register USB_ENDPTNAK */
#define USB_ENDPTNAK_VALUE             0x0

/* Bits definition for register USB_ENDPTNAK */
#define USB_EPTN_SHIFT                 16
#define USB_EPTN_FIELD                 (0xFFFFFFFF - (0x3FUL<<USB_EPTN_SHIFT))
#define USB_EPTN_TX_ENDPOINT_NAK       (0x0UL<<USB_EPTN_SHIFT)
#define USB_EPRN_SHIFT                 0
#define USB_EPRN_FIELD                 (0xFFFFFFFF - (0x3FUL<<USB_EPRN_SHIFT))
#define USB_EPRN_RX_ENDPOINT_NAK       (0x0UL<<USB_EPRN_SHIFT)

/*****************************************************************************/
/* Register description for ENDPTNAKEN */

/* Reset value of register USB_ENDPTNAKEN */
#define USB_ENDPTNAKEN_VALUE           0x0

/* Bits definition for register USB_ENDPTNAKEN */
#define USB_EPTNE_SHIFT                16
#define USB_EPTNE_FIELD                (0xFFFFFFFF - (0x3FUL<<USB_EPTNE_SHIFT))
#define USB_EPTNE_TX_ENDPOINT_NAK_ENABLE           (0x0UL<<USB_EPTNE_SHIFT)
#define USB_EPRNE_SHIFT                0
#define USB_EPRNE_FIELD                (0xFFFFFFFF - (0x3FUL<<USB_EPRNE_SHIFT))
#define USB_EPRNE_RX_ENDPOINT_NAK_ENABLE           (0x0UL<<USB_EPRNE_SHIFT)

/*****************************************************************************/
/* Register description for PORTSC */

/* Reset value of register USB_PORTSC */
#define USB_PORTSC_VALUE               0x3C000004

/* Bits definition for register USB_PORTSC */
#define USB_PSPD_SHIFT                 26
#define USB_PSPD_FIELD                 (0xFFFFFFFF - (0x3UL<<USB_PSPD_SHIFT))
#define USB_PSPD_0                     (0x0UL<<USB_PSPD_SHIFT)
#define USB_PSPD_1                     (0x1UL<<USB_PSPD_SHIFT)
#define USB_PSPD_2                     (0x2UL<<USB_PSPD_SHIFT)
#define USB_PSPD_3                     (0x3UL<<USB_PSPD_SHIFT)
#define USB_PFSC_SHIFT                 24
#define USB_PFSC_FIELD                 (0xFFFFFFFF - (0x1UL<<USB_PFSC_SHIFT))
#define USB_PFSC_0                     (0x0UL<<USB_PFSC_SHIFT)
#define USB_PFSC_1                     (0x1UL<<USB_PFSC_SHIFT)
#define USB_PFSC                       (0x1UL<<USB_PFSC_SHIFT)
#define USB_PHCD_SHIFT                 23
#define USB_PHCD_FIELD                 (0xFFFFFFFF - (0x1UL<<USB_PHCD_SHIFT))
#define USB_PHCD_0                     (0x0UL<<USB_PHCD_SHIFT)
#define USB_PHCD_1                     (0x1UL<<USB_PHCD_SHIFT)
#define USB_PHCD                       (0x1UL<<USB_PHCD_SHIFT)
#define USB_WKOC_SHIFT                 22
#define USB_WKOC_FIELD                 (0xFFFFFFFF - (0x1UL<<USB_WKOC_SHIFT))
#define USB_WKOC_0                     (0x0UL<<USB_WKOC_SHIFT)
#define USB_WKOC_WAKE_ON_OVER_CURRENT_ENABLE       (0x1UL<<USB_WKOC_SHIFT)
#define USB_WKOC                       (0x1UL<<USB_WKOC_SHIFT)
#define USB_WKDC_SHIFT                 21
#define USB_WKDC_FIELD                 (0xFFFFFFFF - (0x1UL<<USB_WKDC_SHIFT))
#define USB_WKDC_0                     (0x0UL<<USB_WKDC_SHIFT)
#define USB_WKDC_WAKE_ON_DISCONNECT_ENABLE         (0x1UL<<USB_WKDC_SHIFT)
#define USB_WKDC                       (0x1UL<<USB_WKDC_SHIFT)
#define USB_WKCN_SHIFT                 20
#define USB_WKCN_FIELD                 (0xFFFFFFFF - (0x1UL<<USB_WKCN_SHIFT))
#define USB_WKCN_0                     (0x0UL<<USB_WKCN_SHIFT)
#define USB_WKCN_WAKE_ON_CONNECT_ENABLE            (0x1UL<<USB_WKCN_SHIFT)
#define USB_WKCN                       (0x1UL<<USB_WKCN_SHIFT)
#define USB_PTC_SHIFT                  16
#define USB_PTC_FIELD                  (0xFFFFFFFF - (0xFUL<<USB_PTC_SHIFT))
#define USB_PTC_0                      (0x0UL<<USB_PTC_SHIFT)
#define USB_PTC_1                      (0x1UL<<USB_PTC_SHIFT)
#define USB_PTC_2                      (0x2UL<<USB_PTC_SHIFT)
#define USB_PTC_3                      (0x3UL<<USB_PTC_SHIFT)
#define USB_PTC_4                      (0x4UL<<USB_PTC_SHIFT)
#define USB_PTC_5                      (0x5UL<<USB_PTC_SHIFT)
#define USB_PTC_6                      (0x6UL<<USB_PTC_SHIFT)
#define USB_PTC_7                      (0x7UL<<USB_PTC_SHIFT)
#define USB_PP_SHIFT                   12
#define USB_PP_FIELD                   (0xFFFFFFFF - (0x1UL<<USB_PP_SHIFT))
#define USB_PP_0                       (0x0UL<<USB_PP_SHIFT)
#define USB_PP_1                       (0x1UL<<USB_PP_SHIFT)
#define USB_PP                         (0x1UL<<USB_PP_SHIFT)
#define USB_LS_SHIFT                   10
#define USB_LS_FIELD                   (0xFFFFFFFF - (0x3UL<<USB_LS_SHIFT))
#define USB_LS_0                       (0x0UL<<USB_LS_SHIFT)
#define USB_LS_1                       (0x1UL<<USB_LS_SHIFT)
#define USB_LS_2                       (0x2UL<<USB_LS_SHIFT)
#define USB_LS_3                       (0x3UL<<USB_LS_SHIFT)
#define USB_HSP_SHIFT                  9
#define USB_HSP_FIELD                  (0xFFFFFFFF - (0x1UL<<USB_HSP_SHIFT))
#define USB_HSP_0                      (0x0UL<<USB_HSP_SHIFT)
#define USB_HSP_1                      (0x1UL<<USB_HSP_SHIFT)
#define USB_HSP                        (0x1UL<<USB_HSP_SHIFT)
#define USB_PR_SHIFT                   8
#define USB_PR_FIELD                   (0xFFFFFFFF - (0x1UL<<USB_PR_SHIFT))
#define USB_PR_0                       (0x0UL<<USB_PR_SHIFT)
#define USB_PR_1                       (0x1UL<<USB_PR_SHIFT)
#define USB_PR                         (0x1UL<<USB_PR_SHIFT)
#define USB_SUSP_SHIFT                 7
#define USB_SUSP_FIELD                 (0xFFFFFFFF - (0x1UL<<USB_SUSP_SHIFT))
#define USB_SUSP_0                     (0x0UL<<USB_SUSP_SHIFT)
#define USB_SUSP_1                     (0x1UL<<USB_SUSP_SHIFT)
#define USB_SUSP                       (0x1UL<<USB_SUSP_SHIFT)
#define USB_FPR_SHIFT                  6
#define USB_FPR_FIELD                  (0xFFFFFFFF - (0x1UL<<USB_FPR_SHIFT))
#define USB_FPR_0                      (0x0UL<<USB_FPR_SHIFT)
#define USB_FPR_1                      (0x1UL<<USB_FPR_SHIFT)
#define USB_FPR                        (0x1UL<<USB_FPR_SHIFT)
#define USB_OCC_SHIFT                  5
#define USB_OCC_FIELD                  (0xFFFFFFFF - (0x1UL<<USB_OCC_SHIFT))
#define USB_OCC_0                      (0x0UL<<USB_OCC_SHIFT)
#define USB_OCC_OVER_CURRENT_CHANGE    (0x1UL<<USB_OCC_SHIFT)
#define USB_OCC                        (0x1UL<<USB_OCC_SHIFT)
#define USB_OCA_SHIFT                  4
#define USB_OCA_FIELD                  (0xFFFFFFFF - (0x1UL<<USB_OCA_SHIFT))
#define USB_OCA_0                      (0x0UL<<USB_OCA_SHIFT)
#define USB_OCA_1                      (0x1UL<<USB_OCA_SHIFT)
#define USB_OCA                        (0x1UL<<USB_OCA_SHIFT)
#define USB_PEC_SHIFT                  3
#define USB_PEC_FIELD                  (0xFFFFFFFF - (0x1UL<<USB_PEC_SHIFT))
#define USB_PEC_0                      (0x0UL<<USB_PEC_SHIFT)
#define USB_PEC_1                      (0x1UL<<USB_PEC_SHIFT)
#define USB_PEC                        (0x1UL<<USB_PEC_SHIFT)
#define USB_PE_SHIFT                   2
#define USB_PE_FIELD                   (0xFFFFFFFF - (0x1UL<<USB_PE_SHIFT))
#define USB_PE_0                       (0x0UL<<USB_PE_SHIFT)
#define USB_PE_1                       (0x1UL<<USB_PE_SHIFT)
#define USB_PE                         (0x1UL<<USB_PE_SHIFT)
#define USB_CSC_SHIFT                  1
#define USB_CSC_FIELD                  (0xFFFFFFFF - (0x1UL<<USB_CSC_SHIFT))
#define USB_CSC_0                      (0x0UL<<USB_CSC_SHIFT)
#define USB_CSC_CONNECT_STATUS_CHANGE  (0x1UL<<USB_CSC_SHIFT)
#define USB_CSC                        (0x1UL<<USB_CSC_SHIFT)
#define USB_CCS_SHIFT                  0
#define USB_CCS_FIELD                  (0xFFFFFFFF - (0x1UL<<USB_CCS_SHIFT))
#define USB_CCS_0                      (0x0UL<<USB_CCS_SHIFT)
#define USB_CCS_1                      (0x1UL<<USB_CCS_SHIFT)
#define USB_CCS                        (0x1UL<<USB_CCS_SHIFT)

/*****************************************************************************/
/* Register description for OTGSC */

/* Reset value of register USB_OTGSC */
#define USB_OTGSC_VALUE                0x20

/* Bits definition for register USB_OTGSC */
#define USB_DPIE_SHIFT                 30
#define USB_DPIE_FIELD                 (0xFFFFFFFF - (0x1UL<<USB_DPIE_SHIFT))
#define USB_DPIE_0                     (0x0UL<<USB_DPIE_SHIFT)
#define USB_DPIE_DATA_PULSE_INTERRUPT_ENABLE       (0x1UL<<USB_DPIE_SHIFT)
#define USB_DPIE                       (0x1UL<<USB_DPIE_SHIFT)
#define USB_1MSE_SHIFT                 29
#define USB_1MSE_FIELD                 (0xFFFFFFFF - (0x1UL<<USB_1MSE_SHIFT))
#define USB_1MSE_0                     (0x0UL<<USB_1MSE_SHIFT)
#define USB_1MSE_1_MILLISECOND_TIMER_INTERRUPT_ENABLE (0x1UL<<USB_1MSE_SHIFT)
#define USB_1MSE                       (0x1UL<<USB_1MSE_SHIFT)
#define USB_BSEIE_SHIFT                28
#define USB_BSEIE_FIELD                (0xFFFFFFFF - (0x1UL<<USB_BSEIE_SHIFT))
#define USB_BSEIE_0                    (0x0UL<<USB_BSEIE_SHIFT)
#define USB_BSEIE_B_SESSION_END_INTERRUPT_ENABLE   (0x1UL<<USB_BSEIE_SHIFT)
#define USB_BSEIE                      (0x1UL<<USB_BSEIE_SHIFT)
#define USB_BSVIE_SHIFT                27
#define USB_BSVIE_FIELD                (0xFFFFFFFF - (0x1UL<<USB_BSVIE_SHIFT))
#define USB_BSVIE_0                    (0x0UL<<USB_BSVIE_SHIFT)
#define USB_BSVIE_B_SESSION_VALID_INTERRUPT_ENABLE (0x1UL<<USB_BSVIE_SHIFT)
#define USB_BSVIE                      (0x1UL<<USB_BSVIE_SHIFT)
#define USB_ASVIE_SHIFT                26
#define USB_ASVIE_FIELD                (0xFFFFFFFF - (0x1UL<<USB_ASVIE_SHIFT))
#define USB_ASVIE_0                    (0x0UL<<USB_ASVIE_SHIFT)
#define USB_ASVIE_A_SESSION_VALID_INTERRUPT_ENABLE (0x1UL<<USB_ASVIE_SHIFT)
#define USB_ASVIE                      (0x1UL<<USB_ASVIE_SHIFT)
#define USB_AVVIE_SHIFT                25
#define USB_AVVIE_FIELD                (0xFFFFFFFF - (0x1UL<<USB_AVVIE_SHIFT))
#define USB_AVVIE_0                    (0x0UL<<USB_AVVIE_SHIFT)
#define USB_AVVIE_A_VBUS_VALID_INTERRUPT_ENABLE    (0x1UL<<USB_AVVIE_SHIFT)
#define USB_AVVIE                      (0x1UL<<USB_AVVIE_SHIFT)
#define USB_IDIE_SHIFT                 24
#define USB_IDIE_FIELD                 (0xFFFFFFFF - (0x1UL<<USB_IDIE_SHIFT))
#define USB_IDIE_0                     (0x0UL<<USB_IDIE_SHIFT)
#define USB_IDIE_USB_ID_INTERRUPT_ENABLE           (0x1UL<<USB_IDIE_SHIFT)
#define USB_IDIE                       (0x1UL<<USB_IDIE_SHIFT)
#define USB_DPIS_SHIFT                 22
#define USB_DPIS_FIELD                 (0xFFFFFFFF - (0x1UL<<USB_DPIS_SHIFT))
#define USB_DPIS_0                     (0x0UL<<USB_DPIS_SHIFT)
#define USB_DPIS_DATA_PULSE_INTERRUPT_STATUS       (0x1UL<<USB_DPIS_SHIFT)
#define USB_DPIS                       (0x1UL<<USB_DPIS_SHIFT)
#define USB_1MSS_SHIFT                 21
#define USB_1MSS_FIELD                 (0xFFFFFFFF - (0x1UL<<USB_1MSS_SHIFT))
#define USB_1MSS_0                     (0x0UL<<USB_1MSS_SHIFT)
#define USB_1MSS_1_MILLISECOND_TIMER_INTERRUPT_STATUS (0x1UL<<USB_1MSS_SHIFT)
#define USB_1MSS                       (0x1UL<<USB_1MSS_SHIFT)
#define USB_BSEIS_SHIFT                20
#define USB_BSEIS_FIELD                (0xFFFFFFFF - (0x1UL<<USB_BSEIS_SHIFT))
#define USB_BSEIS_0                    (0x0UL<<USB_BSEIS_SHIFT)
#define USB_BSEIS_B_SESSION_END_INTERRUPT_STATUS   (0x1UL<<USB_BSEIS_SHIFT)
#define USB_BSEIS                      (0x1UL<<USB_BSEIS_SHIFT)
#define USB_BSVIS_SHIFT                19
#define USB_BSVIS_FIELD                (0xFFFFFFFF - (0x1UL<<USB_BSVIS_SHIFT))
#define USB_BSVIS_0                    (0x0UL<<USB_BSVIS_SHIFT)
#define USB_BSVIS_B_SESSION_VALID_INTERRUPT_STATUS (0x1UL<<USB_BSVIS_SHIFT)
#define USB_BSVIS                      (0x1UL<<USB_BSVIS_SHIFT)
#define USB_ASVIS_SHIFT                18
#define USB_ASVIS_FIELD                (0xFFFFFFFF - (0x1UL<<USB_ASVIS_SHIFT))
#define USB_ASVIS_0                    (0x0UL<<USB_ASVIS_SHIFT)
#define USB_ASVIS_A_SESSION_VALID_INTERRUPT_STATUS (0x1UL<<USB_ASVIS_SHIFT)
#define USB_ASVIS                      (0x1UL<<USB_ASVIS_SHIFT)
#define USB_AVVIS_SHIFT                17
#define USB_AVVIS_FIELD                (0xFFFFFFFF - (0x1UL<<USB_AVVIS_SHIFT))
#define USB_AVVIS_0                    (0x0UL<<USB_AVVIS_SHIFT)
#define USB_AVVIS_A_VBUS_VALID_INTERRUPT_STATUS    (0x1UL<<USB_AVVIS_SHIFT)
#define USB_AVVIS                      (0x1UL<<USB_AVVIS_SHIFT)
#define USB_IDIS_SHIFT                 16
#define USB_IDIS_FIELD                 (0xFFFFFFFF - (0x1UL<<USB_IDIS_SHIFT))
#define USB_IDIS_0                     (0x0UL<<USB_IDIS_SHIFT)
#define USB_IDIS_USB_ID_INTERRUPT_STATUS           (0x1UL<<USB_IDIS_SHIFT)
#define USB_IDIS                       (0x1UL<<USB_IDIS_SHIFT)
#define USB_DPS_SHIFT                  14
#define USB_DPS_FIELD                  (0xFFFFFFFF - (0x1UL<<USB_DPS_SHIFT))
#define USB_DPS_0                      (0x0UL<<USB_DPS_SHIFT)
#define USB_DPS_DATA_BUS_PULSING_STATUS            (0x1UL<<USB_DPS_SHIFT)
#define USB_DPS                        (0x1UL<<USB_DPS_SHIFT)
#define USB_1MST_SHIFT                 13
#define USB_1MST_FIELD                 (0xFFFFFFFF - (0x1UL<<USB_1MST_SHIFT))
#define USB_1MST_0                     (0x0UL<<USB_1MST_SHIFT)
#define USB_1MST_1_MILLISECOND_TIMER_TOGGLE        (0x1UL<<USB_1MST_SHIFT)
#define USB_1MST                       (0x1UL<<USB_1MST_SHIFT)
#define USB_BSE_SHIFT                  12
#define USB_BSE_FIELD                  (0xFFFFFFFF - (0x1UL<<USB_BSE_SHIFT))
#define USB_BSE                        (0x1UL<<USB_BSE_SHIFT)
#define USB_BSV_SHIFT                  11
#define USB_BSV_FIELD                  (0xFFFFFFFF - (0x1UL<<USB_BSV_SHIFT))
#define USB_BSV                        (0x1UL<<USB_BSV_SHIFT)
#define USB_ASV_SHIFT                  10
#define USB_ASV_FIELD                  (0xFFFFFFFF - (0x1UL<<USB_ASV_SHIFT))
#define USB_ASV                        (0x1UL<<USB_ASV_SHIFT)
#define USB_AVV_SHIFT                  9
#define USB_AVV_FIELD                  (0xFFFFFFFF - (0x1UL<<USB_AVV_SHIFT))
#define USB_AVV                        (0x1UL<<USB_AVV_SHIFT)
#define USB_ID_SHIFT                   8
#define USB_ID_FIELD                   (0xFFFFFFFF - (0x1UL<<USB_ID_SHIFT))
#define USB_ID_0                       (0x0UL<<USB_ID_SHIFT)
#define USB_ID_1                       (0x1UL<<USB_ID_SHIFT)
#define USB_ID                         (0x1UL<<USB_ID_SHIFT)
#define USB_HABA_SHIFT                 7
#define USB_HABA_FIELD                 (0xFFFFFFFF - (0x1UL<<USB_HABA_SHIFT))
#define USB_HABA_0                     (0x0UL<<USB_HABA_SHIFT)
#define USB_HABA_1                     (0x1UL<<USB_HABA_SHIFT)
#define USB_HABA                       (0x1UL<<USB_HABA_SHIFT)
#define USB_HADP_SHIFT                 6
#define USB_HADP_FIELD                 (0xFFFFFFFF - (0x1UL<<USB_HADP_SHIFT))
#define USB_HADP_0                     (0x0UL<<USB_HADP_SHIFT)
#define USB_HADP_1                     (0x1UL<<USB_HADP_SHIFT)
#define USB_HADP                       (0x1UL<<USB_HADP_SHIFT)
#define USB_IDPU_SHIFT                 5
#define USB_IDPU_FIELD                 (0xFFFFFFFF - (0x1UL<<USB_IDPU_SHIFT))
#define USB_IDPU_0                     (0x0UL<<USB_IDPU_SHIFT)
#define USB_IDPU_1                     (0x1UL<<USB_IDPU_SHIFT)
#define USB_IDPU                       (0x1UL<<USB_IDPU_SHIFT)
#define USB_DP_SHIFT                   4
#define USB_DP_FIELD                   (0xFFFFFFFF - (0x1UL<<USB_DP_SHIFT))
#define USB_DP_0                       (0x0UL<<USB_DP_SHIFT)
#define USB_DP_DATA_PULSING            (0x1UL<<USB_DP_SHIFT)
#define USB_DP                         (0x1UL<<USB_DP_SHIFT)
#define USB_OT_SHIFT                   3
#define USB_OT_FIELD                   (0xFFFFFFFF - (0x1UL<<USB_OT_SHIFT))
#define USB_OT_0                       (0x0UL<<USB_OT_SHIFT)
#define USB_OT_OTG_TERMINATION         (0x1UL<<USB_OT_SHIFT)
#define USB_OT                         (0x1UL<<USB_OT_SHIFT)
#define USB_HAAR_SHIFT                 2
#define USB_HAAR_FIELD                 (0xFFFFFFFF - (0x1UL<<USB_HAAR_SHIFT))
#define USB_HAAR_0                     (0x0UL<<USB_HAAR_SHIFT)
#define USB_HAAR_1                     (0x1UL<<USB_HAAR_SHIFT)
#define USB_HAAR                       (0x1UL<<USB_HAAR_SHIFT)
#define USB_VC_SHIFT                   1
#define USB_VC_FIELD                   (0xFFFFFFFF - (0x1UL<<USB_VC_SHIFT))
#define USB_VC_0                       (0x0UL<<USB_VC_SHIFT)
#define USB_VC_VBUS_CHARGE             (0x1UL<<USB_VC_SHIFT)
#define USB_VC                         (0x1UL<<USB_VC_SHIFT)
#define USB_VD_SHIFT                   0
#define USB_VD_FIELD                   (0xFFFFFFFF - (0x1UL<<USB_VD_SHIFT))
#define USB_VD_0                       (0x0UL<<USB_VD_SHIFT)
#define USB_VD_VBUS_DISCHARGE          (0x1UL<<USB_VD_SHIFT)
#define USB_VD                         (0x1UL<<USB_VD_SHIFT)

/*****************************************************************************/
/* Register description for MODE */

/* Reset value of register USB_MODE */
#define USB_MODE_VALUE                 0x0

/* Bits definition for register USB_MODE */
#define USB_SDIS_SHIFT                 4
#define USB_SDIS_FIELD                 (0xFFFFFFFF - (0x1UL<<USB_SDIS_SHIFT))
#define USB_SDIS_0                     (0x0UL<<USB_SDIS_SHIFT)
#define USB_SDIS_1                     (0x1UL<<USB_SDIS_SHIFT)
#define USB_SDIS                       (0x1UL<<USB_SDIS_SHIFT)
#define USB_SLOM_SHIFT                 3
#define USB_SLOM_FIELD                 (0xFFFFFFFF - (0x1UL<<USB_SLOM_SHIFT))
#define USB_SLOM_0                     (0x0UL<<USB_SLOM_SHIFT)
#define USB_SLOM_1                     (0x1UL<<USB_SLOM_SHIFT)
#define USB_SLOM                       (0x1UL<<USB_SLOM_SHIFT)
#define USB_CM_SHIFT                   0
#define USB_CM_FIELD                   (0xFFFFFFFF - (0x3UL<<USB_CM_SHIFT))
#define USB_CM_0                       (0x0UL<<USB_CM_SHIFT)
#define USB_CM_1                       (0x1UL<<USB_CM_SHIFT)
#define USB_CM_2                       (0x2UL<<USB_CM_SHIFT)
#define USB_CM_3                       (0x3UL<<USB_CM_SHIFT)

/*****************************************************************************/
/* Register description for ENDPTSETUPSTAT */

/* Reset value of register USB_ENDPTSETUPSTAT */
#define USB_ENDPTSETUPSTAT_VALUE       0x0

/* Bits definition for register USB_ENDPTSETUPSTAT */
#define USB_ENDPTSETUPSTAT_SHIFT       0
#define USB_ENDPTSETUPSTAT_FIELD       (0xFFFFFFFF - (0x3FUL<<USB_ENDPTSETUPSTAT_SHIFT))
#define USB_ENDPTSETUPSTAT_SETUP_ENDPOINT_STATUS   (0x0UL<<USB_ENDPTSETUPSTAT_SHIFT)

/*****************************************************************************/
/* Register description for ENDPTPRIME */

/* Reset value of register USB_ENDPTPRIME */
#define USB_ENDPTPRIME_VALUE           0x0

/* Bits definition for register USB_ENDPTPRIME */
#define USB_PETB_SHIFT                 16
#define USB_PETB_FIELD                 (0xFFFFFFFF - (0x3FUL<<USB_PETB_SHIFT))
#define USB_PETB_PRIME_ENDPOINT_TRANSMIT_BUFFER    (0x0UL<<USB_PETB_SHIFT)
#define USB_PERB_SHIFT                 0
#define USB_PERB_FIELD                 (0xFFFFFFFF - (0x3FUL<<USB_PERB_SHIFT))
#define USB_PERB_PRIME_ENDPOINT_RECEIVE_BUFFER     (0x0UL<<USB_PERB_SHIFT)

/*****************************************************************************/
/* Register description for ENDPTFLUSH */

/* Reset value of register USB_ENDPTFLUSH */
#define USB_ENDPTFLUSH_VALUE           0x0

/* Bits definition for register USB_ENDPTFLUSH */
#define USB_FETB_SHIFT                 16
#define USB_FETB_FIELD                 (0xFFFFFFFF - (0x3FUL<<USB_FETB_SHIFT))
#define USB_FETB_FLUSH_ENDPOINT_TRANSMIT_BUFFER    (0x0UL<<USB_FETB_SHIFT)
#define USB_FERB_SHIFT                 0
#define USB_FERB_FIELD                 (0xFFFFFFFF - (0x3FUL<<USB_FERB_SHIFT))
#define USB_FERB_FLUSH_ENDPOINT_RECEIVE_BUFFER     (0x0UL<<USB_FERB_SHIFT)

/*****************************************************************************/
/* Register description for ENDPTSTATUS */

/* Reset value of register USB_ENDPTSTATUS */
#define USB_ENDPTSTATUS_VALUE          0x0

/* Bits definition for register USB_ENDPTSTATUS */
#define USB_ETBR_SHIFT                 16
#define USB_ETBR_FIELD                 (0xFFFFFFFF - (0x3FUL<<USB_ETBR_SHIFT))
#define USB_ETBR_ENDPOINT_TRANSMIT_BUFFER_READY    (0x0UL<<USB_ETBR_SHIFT)
#define USB_ERBR_SHIFT                 0
#define USB_ERBR_FIELD                 (0xFFFFFFFF - (0x3FUL<<USB_ERBR_SHIFT))
#define USB_ERBR_ENDPOINT_RECEIVE_BUFFER_READY     (0x0UL<<USB_ERBR_SHIFT)

/*****************************************************************************/
/* Register description for ENDPTCOMPLETE */

/* Reset value of register USB_ENDPTCOMPLETE */
#define USB_ENDPTCOMPLETE_VALUE        0x0

/* Bits definition for register USB_ENDPTCOMPLETE */
#define USB_ETCE_SHIFT                 16
#define USB_ETCE_FIELD                 (0xFFFFFFFF - (0x3FUL<<USB_ETCE_SHIFT))
#define USB_ETCE_ENDPOINT_TRANSMIT_COMPLETE_EVENT  (0x0UL<<USB_ETCE_SHIFT)
#define USB_ERCE_SHIFT                 0
#define USB_ERCE_FIELD                 (0xFFFFFFFF - (0x3FUL<<USB_ERCE_SHIFT))
#define USB_ERCE_ENDPOINT_RECEIVE_COMPLETE_EVENT   (0x0UL<<USB_ERCE_SHIFT)

/*****************************************************************************/
/* Register description for ENDPTCTRL0 */

/* Reset value of register USB_ENDPTCTRL0 */
#define USB_ENDPTCTRL0_VALUE           0x800080

/* Bits definition for register USB_ENDPTCTRL0 */
#define USB_TXE_SHIFT                  23
#define USB_TXE_FIELD                  (0xFFFFFFFF - (0x1UL<<USB_TXE_SHIFT))
#define USB_TXE_TX_ENDPOINT_ENABLE     (0x1UL<<USB_TXE_SHIFT)
#define USB_TXE_0                      (0x0UL<<USB_TXE_SHIFT)
#define USB_TXE                        (0x1UL<<USB_TXE_SHIFT)
#define USB_TXT_SHIFT                  18
#define USB_TXT_FIELD                  (0xFFFFFFFF - (0x3UL<<USB_TXT_SHIFT))
#define USB_TXT_TX_ENDPOINT_TYPE       (0x0UL<<USB_TXT_SHIFT)
#define USB_TXS_SHIFT                  16
#define USB_TXS_FIELD                  (0xFFFFFFFF - (0x1UL<<USB_TXS_SHIFT))
#define USB_TXS_0                      (0x0UL<<USB_TXS_SHIFT)
#define USB_TXS_1                      (0x1UL<<USB_TXS_SHIFT)
#define USB_TXS                        (0x1UL<<USB_TXS_SHIFT)
#define USB_RXE_SHIFT                  7
#define USB_RXE_FIELD                  (0xFFFFFFFF - (0x1UL<<USB_RXE_SHIFT))
#define USB_RXE_RX_ENDPOINT_ENABLE     (0x1UL<<USB_RXE_SHIFT)
#define USB_RXE_0                      (0x0UL<<USB_RXE_SHIFT)
#define USB_RXE                        (0x1UL<<USB_RXE_SHIFT)
#define USB_RXT_SHIFT                  2
#define USB_RXT_FIELD                  (0xFFFFFFFF - (0x3UL<<USB_RXT_SHIFT))
#define USB_RXT_RX_ENDPOINT_TYPE       (0x0UL<<USB_RXT_SHIFT)
#define USB_RXS_SHIFT                  0
#define USB_RXS_FIELD                  (0xFFFFFFFF - (0x1UL<<USB_RXS_SHIFT))
#define USB_RXS_0                      (0x0UL<<USB_RXS_SHIFT)
#define USB_RXS_1                      (0x1UL<<USB_RXS_SHIFT)
#define USB_RXS                        (0x1UL<<USB_RXS_SHIFT)

/*****************************************************************************/
/* Register description for ENDPTCTRL[1:5] */

/* Reset value of register USB_ENDPTCTRL[1:5] */
#define USB_ENDPTCTRL1_VALUE           0x0
#define USB_ENDPTCTRL2_VALUE           0x0
#define USB_ENDPTCTRL3_VALUE           0x0
#define USB_ENDPTCTRL4_VALUE           0x0
#define USB_ENDPTCTRL5_VALUE           0x0

/* Bits definition for register USB_ENDPTCTRL[1:5] */
#define USB_TXE_SHIFT                  23
#define USB_TXE_FIELD                  (0xFFFFFFFF - (0x1UL<<USB_TXE_SHIFT))
#define USB_TXE_0                      (0x0UL<<USB_TXE_SHIFT)
#define USB_TXE_1                      (0x1UL<<USB_TXE_SHIFT)
#define USB_TXE                        (0x1UL<<USB_TXE_SHIFT)
#define USB_TXR_SHIFT                  22
#define USB_TXR_FIELD                  (0xFFFFFFFF - (0x1UL<<USB_TXR_SHIFT))
#define USB_TXR_0                      (0x0UL<<USB_TXR_SHIFT)
#define USB_TXR_TX_DATA_TOGGLE_RESET   (0x1UL<<USB_TXR_SHIFT)
#define USB_TXR                        (0x1UL<<USB_TXR_SHIFT)
#define USB_TXI_SHIFT                  21
#define USB_TXI_FIELD                  (0xFFFFFFFF - (0x1UL<<USB_TXI_SHIFT))
#define USB_TXI_0                      (0x0UL<<USB_TXI_SHIFT)
#define USB_TXI_1                      (0x1UL<<USB_TXI_SHIFT)
#define USB_TXI                        (0x1UL<<USB_TXI_SHIFT)
#define USB_TXT_SHIFT                  18
#define USB_TXT_FIELD                  (0xFFFFFFFF - (0x3UL<<USB_TXT_SHIFT))
#define USB_TXT_CONTROL                (0x0UL<<USB_TXT_SHIFT)
#define USB_TXT_ISOCHRONOUS            (0x1UL<<USB_TXT_SHIFT)
#define USB_TXT_BULK                   (0x2UL<<USB_TXT_SHIFT)
#define USB_TXT_INTERRUPT              (0x3UL<<USB_TXT_SHIFT)
#define USB_TXS_SHIFT                  16
#define USB_TXS_FIELD                  (0xFFFFFFFF - (0x1UL<<USB_TXS_SHIFT))
#define USB_TXS_0                      (0x0UL<<USB_TXS_SHIFT)
#define USB_TXS_1                      (0x1UL<<USB_TXS_SHIFT)
#define USB_TXS                        (0x1UL<<USB_TXS_SHIFT)
#define USB_RXE_SHIFT                  7
#define USB_RXE_FIELD                  (0xFFFFFFFF - (0x1UL<<USB_RXE_SHIFT))
#define USB_RXE_0                      (0x0UL<<USB_RXE_SHIFT)
#define USB_RXE_1                      (0x1UL<<USB_RXE_SHIFT)
#define USB_RXE                        (0x1UL<<USB_RXE_SHIFT)
#define USB_RXR_SHIFT                  6
#define USB_RXR_FIELD                  (0xFFFFFFFF - (0x1UL<<USB_RXR_SHIFT))
#define USB_RXR_0                      (0x0UL<<USB_RXR_SHIFT)
#define USB_RXR_RX_DATA_TOGGLE_RESET   (0x1UL<<USB_RXR_SHIFT)
#define USB_RXR                        (0x1UL<<USB_RXR_SHIFT)
#define USB_RXI_SHIFT                  5
#define USB_RXI_FIELD                  (0xFFFFFFFF - (0x1UL<<USB_RXI_SHIFT))
#define USB_RXI_0                      (0x0UL<<USB_RXI_SHIFT)
#define USB_RXI_1                      (0x1UL<<USB_RXI_SHIFT)
#define USB_RXI                        (0x1UL<<USB_RXI_SHIFT)
#define USB_RXT_SHIFT                  2
#define USB_RXT_FIELD                  (0xFFFFFFFF - (0x3UL<<USB_RXT_SHIFT))
#define USB_RXT_CONTROL                (0x0UL<<USB_RXT_SHIFT)
#define USB_RXT_ISOCHRONOUS            (0x1UL<<USB_RXT_SHIFT)
#define USB_RXT_BULK                   (0x2UL<<USB_RXT_SHIFT)
#define USB_RXT_INTERRUPT              (0x3UL<<USB_RXT_SHIFT)
#define USB_RXS_SHIFT                  0
#define USB_RXS_FIELD                  (0xFFFFFFFF - (0x1UL<<USB_RXS_SHIFT))
#define USB_RXS_0                      (0x0UL<<USB_RXS_SHIFT)
#define USB_RXS_1                      (0x1UL<<USB_RXS_SHIFT)
#define USB_RXS                        (0x1UL<<USB_RXS_SHIFT)

/*****************************************************************************/
/* Register description for PHYCTRL */

/* Reset value of register USB_PHYCTRL */
#define USB_PHYCTRL_VALUE              0x5214

/* Bits definition for register USB_PHYCTRL */
#define USB_HSDRVTIMINGP_SHIFT         23
#define USB_HSDRVTIMINGP_FIELD         (0xFFFFFFFF - (0x1UL<<USB_HSDRVTIMINGP_SHIFT))
#define USB_HSDRVTIMINGP_2X            (0x0UL<<USB_HSDRVTIMINGP_SHIFT)
#define USB_HSDRVTIMINGP_8X            (0x1UL<<USB_HSDRVTIMINGP_SHIFT)
#define USB_HSDRVTIMINGP               (0x1UL<<USB_HSDRVTIMINGP_SHIFT)
#define USB_HSDRVTIMINGN_SHIFT         21
#define USB_HSDRVTIMINGN_FIELD         (0xFFFFFFFF - (0x3UL<<USB_HSDRVTIMINGN_SHIFT))
#define USB_HSDRVTIMINGN_2X            (0x0UL<<USB_HSDRVTIMINGN_SHIFT)
#define USB_HSDRVTIMINGN_4X            (0x1UL<<USB_HSDRVTIMINGN_SHIFT)
#define USB_HSDRVTIMINGN_6X            (0x2UL<<USB_HSDRVTIMINGN_SHIFT)
#define USB_HSDRVTIMINGN_8X            (0x3UL<<USB_HSDRVTIMINGN_SHIFT)
#define USB_HSDRVAMPLITUDE_SHIFT       19
#define USB_HSDRVAMPLITUDE_FIELD       (0xFFFFFFFF - (0x3UL<<USB_HSDRVAMPLITUDE_SHIFT))
#define USB_HSDRVAMPLITUDE_I           (0x0UL<<USB_HSDRVAMPLITUDE_SHIFT)
#define USB_HSDRVAMPLITUDE_IP2PC       (0x1UL<<USB_HSDRVAMPLITUDE_SHIFT)
#define USB_HSDRVAMPLITUDE_IP5PC       (0x2UL<<USB_HSDRVAMPLITUDE_SHIFT)
#define USB_HSDRVAMPLITUDE_IP7PC       (0x3UL<<USB_HSDRVAMPLITUDE_SHIFT)
#define USB_HSDRVSLOPE_SHIFT           15
#define USB_HSDRVSLOPE_FIELD           (0xFFFFFFFF - (0xFUL<<USB_HSDRVSLOPE_SHIFT))
#define USB_HSDRVSLOPE_0               (0x0UL<<USB_HSDRVSLOPE_SHIFT)
#define USB_HSDEDVSEL_SHIFT            13
#define USB_HSDEDVSEL_FIELD            (0xFFFFFFFF - (0x3UL<<USB_HSDEDVSEL_SHIFT))
#define USB_HSDEDVSEL_557MV            (0x0UL<<USB_HSDEDVSEL_SHIFT)
#define USB_HSDEDVSEL_568MV            (0x1UL<<USB_HSDEDVSEL_SHIFT)
#define USB_HSDEDVSEL_580MV            (0x2UL<<USB_HSDEDVSEL_SHIFT)
#define USB_HSDEDVSEL_592MV            (0x3UL<<USB_HSDEDVSEL_SHIFT)
#define USB_FSTUNEVSEL_SHIFT           10
#define USB_FSTUNEVSEL_FIELD           (0xFFFFFFFF - (0x7UL<<USB_FSTUNEVSEL_SHIFT))
#define USB_FSTUNEVSEL_534MV           (0x0UL<<USB_FSTUNEVSEL_SHIFT)
#define USB_FSTUNEVSEL_545MV           (0x1UL<<USB_FSTUNEVSEL_SHIFT)
#define USB_FSTUNEVSEL_557MV           (0x2UL<<USB_FSTUNEVSEL_SHIFT)
#define USB_FSTUNEVSEL_568MV           (0x3UL<<USB_FSTUNEVSEL_SHIFT)
#define USB_FSTUNEVSEL_580MV           (0x4UL<<USB_FSTUNEVSEL_SHIFT)
#define USB_FSTUNEVSEL_592MV           (0x5UL<<USB_FSTUNEVSEL_SHIFT)
#define USB_FSTUNEVSEL_603MV           (0x6UL<<USB_FSTUNEVSEL_SHIFT)
#define USB_FSTUNEVSEL_615MV           (0x7UL<<USB_FSTUNEVSEL_SHIFT)
#define USB_HSTEDVSEL_SHIFT            8
#define USB_HSTEDVSEL_FIELD            (0xFFFFFFFF - (0x3UL<<USB_HSTEDVSEL_SHIFT))
#define USB_HSTEDVSEL_104MV            (0x0UL<<USB_HSTEDVSEL_SHIFT)
#define USB_HSTEDVSEL_116MV            (0x1UL<<USB_HSTEDVSEL_SHIFT)
#define USB_HSTEDVSEL_128MV            (0x2UL<<USB_HSTEDVSEL_SHIFT)
#define USB_HSTEDVSEL_139MV            (0x3UL<<USB_HSTEDVSEL_SHIFT)
#define USB_IPCTRL_SHIFT               6
#define USB_IPCTRL_FIELD               (0xFFFFFFFF - (0x3UL<<USB_IPCTRL_SHIFT))
#define USB_IPCTRL_I                   (0x0UL<<USB_IPCTRL_SHIFT)
#define USB_IPCTRL_IM50PC              (0x1UL<<USB_IPCTRL_SHIFT)
#define USB_IPCTRL_IP50PC              (0x2UL<<USB_IPCTRL_SHIFT)
#define USB_IPCTRL_IP100PC             (0x3UL<<USB_IPCTRL_SHIFT)
#define USB_LSRFTSEL_SHIFT             4
#define USB_LSRFTSEL_FIELD             (0xFFFFFFFF - (0x3UL<<USB_LSRFTSEL_SHIFT))
#define USB_LSRFTSEL_M30PC             (0x0UL<<USB_LSRFTSEL_SHIFT)
#define USB_LSRFTSEL_NOMINAL           (0x1UL<<USB_LSRFTSEL_SHIFT)
#define USB_LSRFTSEL_2                 (0x2UL<<USB_LSRFTSEL_SHIFT)
#define USB_LSRFTSEL_P30PC             (0x3UL<<USB_LSRFTSEL_SHIFT)
#define USB_FSRFTSEL_SHIFT             2
#define USB_FSRFTSEL_FIELD             (0xFFFFFFFF - (0x3UL<<USB_FSRFTSEL_SHIFT))
#define USB_FSRFTSEL_M30PC             (0x0UL<<USB_FSRFTSEL_SHIFT)
#define USB_FSRFTSEL_NOMINAL           (0x1UL<<USB_FSRFTSEL_SHIFT)
#define USB_FSRFTSEL_2                 (0x2UL<<USB_FSRFTSEL_SHIFT)
#define USB_FSRFTSEL_P30PC             (0x3UL<<USB_FSRFTSEL_SHIFT)
#define USB_ENPRE_SHIFT                1
#define USB_ENPRE_FIELD                (0xFFFFFFFF - (0x1UL<<USB_ENPRE_SHIFT))
#define USB_ENPRE_DISABLE              (0x0UL<<USB_ENPRE_SHIFT)
#define USB_ENPRE_ENABLE               (0x1UL<<USB_ENPRE_SHIFT)
#define USB_ENPRE                      (0x1UL<<USB_ENPRE_SHIFT)
#define USB_PREEMDEPTH_SHIFT           0
#define USB_PREEMDEPTH_FIELD           (0xFFFFFFFF - (0x1UL<<USB_PREEMDEPTH_SHIFT))
#define USB_PREEMDEPTH_P10PC           (0x0UL<<USB_PREEMDEPTH_SHIFT)
#define USB_PREEMDEPTH_P20PC           (0x1UL<<USB_PREEMDEPTH_SHIFT)
#define USB_PREEMDEPTH                 (0x1UL<<USB_PREEMDEPTH_SHIFT)

/*****************************************************************************/

/*****************************************************************************
* Definitions for: VDC
*****************************************************************************/

/* Pointer on base address */
#define VDC_BASE                       IOA(VDC_BASE_ADDR)

/* VDC CONTROL Register (32 bits) */
#define VDC_CONTROL_OFFSET             0x0
#define VDC_CONTROL_REG                IOA(VDC_BASE_ADDR + VDC_CONTROL_OFFSET)

/* VDC CONFIG Register (32 bits) */
#define VDC_CONFIG_OFFSET              0x4
#define VDC_CONFIG_REG                 IOA(VDC_BASE_ADDR + VDC_CONFIG_OFFSET)

/* VDC INSTR_START_PTR Register (32 bits) */
#define VDC_INSTR_START_PTR_OFFSET     0x8
#define VDC_INSTR_START_PTR_REG        IOA(VDC_BASE_ADDR + VDC_INSTR_START_PTR_OFFSET)

/* VDC RLC_START_PTR Register (32 bits) */
#define VDC_RLC_START_PTR_OFFSET       0xC
#define VDC_RLC_START_PTR_REG          IOA(VDC_BASE_ADDR + VDC_RLC_START_PTR_OFFSET)

/* VDC INSTR_CUR_PTR Register (32 bits) */
#define VDC_INSTR_CUR_PTR_OFFSET       0x10
#define VDC_INSTR_CUR_PTR_REG          IOA(VDC_BASE_ADDR + VDC_INSTR_CUR_PTR_OFFSET)

/* VDC RLC_CUR_PTR Register (32 bits) */
#define VDC_RLC_CUR_PTR_OFFSET         0x14
#define VDC_RLC_CUR_PTR_REG            IOA(VDC_BASE_ADDR + VDC_RLC_CUR_PTR_OFFSET)

/* VDC STATUS Register (32 bits) */
#define VDC_STATUS_OFFSET              0x18
#define VDC_STATUS_REG                 IOA(VDC_BASE_ADDR + VDC_STATUS_OFFSET)

/* VDC INT_CLR_ENABLE Register (32 bits) */
#define VDC_INT_CLR_ENABLE_OFFSET      0xFD8
#define VDC_INT_CLR_ENABLE_REG         IOA(VDC_BASE_ADDR + VDC_INT_CLR_ENABLE_OFFSET)

/* VDC INT_SET_ENABLE Register (32 bits) */
#define VDC_INT_SET_ENABLE_OFFSET      0xFDC
#define VDC_INT_SET_ENABLE_REG         IOA(VDC_BASE_ADDR + VDC_INT_SET_ENABLE_OFFSET)

/* VDC INT_STATUS Register (32 bits) */
#define VDC_INT_STATUS_OFFSET          0xFE0
#define VDC_INT_STATUS_REG             IOA(VDC_BASE_ADDR + VDC_INT_STATUS_OFFSET)

/* VDC INT_ENABLE Register (32 bits) */
#define VDC_INT_ENABLE_OFFSET          0xFE4
#define VDC_INT_ENABLE_REG             IOA(VDC_BASE_ADDR + VDC_INT_ENABLE_OFFSET)

/* VDC INT_CLR_STATUS Register (32 bits) */
#define VDC_INT_CLR_STATUS_OFFSET      0xFE8
#define VDC_INT_CLR_STATUS_REG         IOA(VDC_BASE_ADDR + VDC_INT_CLR_STATUS_OFFSET)

/* VDC INT_SET_STATUS Register (32 bits) */
#define VDC_INT_SET_STATUS_OFFSET      0xFEC
#define VDC_INT_SET_STATUS_REG         IOA(VDC_BASE_ADDR + VDC_INT_SET_STATUS_OFFSET)

/* VDC RESET Register (32 bits) */
#define VDC_RESET_OFFSET               0xFF4
#define VDC_RESET_REG                  IOA(VDC_BASE_ADDR + VDC_RESET_OFFSET)

/* VDC MODULE_ID Register (32 bits) */
#define VDC_MODULE_ID_OFFSET           0xFFC
#define VDC_MODULE_ID_REG              IOA(VDC_BASE_ADDR + VDC_MODULE_ID_OFFSET)

/* Register description for CONTROL */

/* Reset value of register VDC_CONTROL */
#define VDC_CONTROL_VALUE              0x0

/* Bits definition for register VDC_CONTROL */
#define VDC_COMMAND_SHIFT              0
#define VDC_COMMAND_FIELD              (0xFFFFFFFF - (0x3UL<<VDC_COMMAND_SHIFT))
#define VDC_COMMAND_STOP               (0x0UL<<VDC_COMMAND_SHIFT)
#define VDC_COMMAND_START              (0x1UL<<VDC_COMMAND_SHIFT)
#define VDC_COMMAND_2                  (0x2UL<<VDC_COMMAND_SHIFT)
#define VDC_COMMAND_RESUME             (0x3UL<<VDC_COMMAND_SHIFT)

/*****************************************************************************/
/* Register description for CONFIG */

/* Reset value of register VDC_CONFIG */
#define VDC_CONFIG_VALUE               0x0

/* Bits definition for register VDC_CONFIG */
#define VDC_DIS_BACK_COMP_SHIFT        31
#define VDC_DIS_BACK_COMP_FIELD        (0xFFFFFFFF - (0x1UL<<VDC_DIS_BACK_COMP_SHIFT))
#define VDC_DIS_BACK_COMP_0            (0x0UL<<VDC_DIS_BACK_COMP_SHIFT)
#define VDC_DIS_BACK_COMP_1            (0x1UL<<VDC_DIS_BACK_COMP_SHIFT)
#define VDC_DIS_BACK_COMP              (0x1UL<<VDC_DIS_BACK_COMP_SHIFT)
#define VDC_VC1_ADVANCED_SHIFT         30
#define VDC_VC1_ADVANCED_FIELD         (0xFFFFFFFF - (0x1UL<<VDC_VC1_ADVANCED_SHIFT))
#define VDC_VC1_ADVANCED_0             (0x0UL<<VDC_VC1_ADVANCED_SHIFT)
#define VDC_VC1_ADVANCED_1             (0x1UL<<VDC_VC1_ADVANCED_SHIFT)
#define VDC_VC1_ADVANCED               (0x1UL<<VDC_VC1_ADVANCED_SHIFT)
#define VDC_VC1_DBLK_SHIFT             29
#define VDC_VC1_DBLK_FIELD             (0xFFFFFFFF - (0x1UL<<VDC_VC1_DBLK_SHIFT))
#define VDC_VC1_DBLK_0                 (0x0UL<<VDC_VC1_DBLK_SHIFT)
#define VDC_VC1_DBLK_1                 (0x1UL<<VDC_VC1_DBLK_SHIFT)
#define VDC_VC1_DBLK                   (0x1UL<<VDC_VC1_DBLK_SHIFT)
#define VDC_VC1_DATA_PATH_SHIFT        28
#define VDC_VC1_DATA_PATH_FIELD        (0xFFFFFFFF - (0x1UL<<VDC_VC1_DATA_PATH_SHIFT))
#define VDC_VC1_DATA_PATH_0            (0x0UL<<VDC_VC1_DATA_PATH_SHIFT)
#define VDC_VC1_DATA_PATH_1            (0x1UL<<VDC_VC1_DATA_PATH_SHIFT)
#define VDC_VC1_DATA_PATH              (0x1UL<<VDC_VC1_DATA_PATH_SHIFT)
#define VDC_AVC_ISIQIT_PATH_SHIFT      27
#define VDC_AVC_ISIQIT_PATH_FIELD      (0xFFFFFFFF - (0x1UL<<VDC_AVC_ISIQIT_PATH_SHIFT))
#define VDC_AVC_ISIQIT_PATH_0          (0x0UL<<VDC_AVC_ISIQIT_PATH_SHIFT)
#define VDC_AVC_ISIQIT_PATH_1          (0x1UL<<VDC_AVC_ISIQIT_PATH_SHIFT)
#define VDC_AVC_ISIQIT_PATH            (0x1UL<<VDC_AVC_ISIQIT_PATH_SHIFT)
#define VDC_IQ_BYPASS_SHIFT            26
#define VDC_IQ_BYPASS_FIELD            (0xFFFFFFFF - (0x1UL<<VDC_IQ_BYPASS_SHIFT))
#define VDC_IQ_BYPASS_0                (0x0UL<<VDC_IQ_BYPASS_SHIFT)
#define VDC_IQ_BYPASS_1                (0x1UL<<VDC_IQ_BYPASS_SHIFT)
#define VDC_IQ_BYPASS                  (0x1UL<<VDC_IQ_BYPASS_SHIFT)
#define VDC_IT_BYPASS_SHIFT            25
#define VDC_IT_BYPASS_FIELD            (0xFFFFFFFF - (0x1UL<<VDC_IT_BYPASS_SHIFT))
#define VDC_IT_BYPASS_0                (0x0UL<<VDC_IT_BYPASS_SHIFT)
#define VDC_IT_BYPASS_1                (0x1UL<<VDC_IT_BYPASS_SHIFT)
#define VDC_IT_BYPASS                  (0x1UL<<VDC_IT_BYPASS_SHIFT)
#define VDC_SHORT_VIDEO_HDR_SHIFT      24
#define VDC_SHORT_VIDEO_HDR_FIELD      (0xFFFFFFFF - (0x1UL<<VDC_SHORT_VIDEO_HDR_SHIFT))
#define VDC_SHORT_VIDEO_HDR_0          (0x0UL<<VDC_SHORT_VIDEO_HDR_SHIFT)
#define VDC_SHORT_VIDEO_HDR_1          (0x1UL<<VDC_SHORT_VIDEO_HDR_SHIFT)
#define VDC_SHORT_VIDEO_HDR            (0x1UL<<VDC_SHORT_VIDEO_HDR_SHIFT)
#define VDC_TABLE_QUANTIZATION_SHIFT   22
#define VDC_TABLE_QUANTIZATION_FIELD   (0xFFFFFFFF - (0x1UL<<VDC_TABLE_QUANTIZATION_SHIFT))
#define VDC_TABLE_QUANTIZATION_0       (0x0UL<<VDC_TABLE_QUANTIZATION_SHIFT)
#define VDC_TABLE_QUANTIZATION_1       (0x1UL<<VDC_TABLE_QUANTIZATION_SHIFT)
#define VDC_TABLE_QUANTIZATION         (0x1UL<<VDC_TABLE_QUANTIZATION_SHIFT)
#define VDC_INTCOMP_ENABLE_SHIFT       15
#define VDC_INTCOMP_ENABLE_FIELD       (0xFFFFFFFF - (0x1UL<<VDC_INTCOMP_ENABLE_SHIFT))
#define VDC_INTCOMP_ENABLE_0           (0x0UL<<VDC_INTCOMP_ENABLE_SHIFT)
#define VDC_INTCOMP_ENABLE_1           (0x1UL<<VDC_INTCOMP_ENABLE_SHIFT)
#define VDC_INTCOMP_ENABLE             (0x1UL<<VDC_INTCOMP_ENABLE_SHIFT)
#define VDC_RC_ENABLE_SHIFT            14
#define VDC_RC_ENABLE_FIELD            (0xFFFFFFFF - (0x1UL<<VDC_RC_ENABLE_SHIFT))
#define VDC_RC_ENABLE_0                (0x0UL<<VDC_RC_ENABLE_SHIFT)
#define VDC_RC_ENABLE_1                (0x1UL<<VDC_RC_ENABLE_SHIFT)
#define VDC_RC_ENABLE                  (0x1UL<<VDC_RC_ENABLE_SHIFT)
#define VDC_HFRT_DISABLE_SHIFT         13
#define VDC_HFRT_DISABLE_FIELD         (0xFFFFFFFF - (0x1UL<<VDC_HFRT_DISABLE_SHIFT))
#define VDC_HFRT_DISABLE_0             (0x0UL<<VDC_HFRT_DISABLE_SHIFT)
#define VDC_HFRT_DISABLE_1             (0x1UL<<VDC_HFRT_DISABLE_SHIFT)
#define VDC_HFRT_DISABLE               (0x1UL<<VDC_HFRT_DISABLE_SHIFT)
#define VDC_LUM2CHR_MV_ENB_SHIFT       12
#define VDC_LUM2CHR_MV_ENB_FIELD       (0xFFFFFFFF - (0x1UL<<VDC_LUM2CHR_MV_ENB_SHIFT))
#define VDC_LUM2CHR_MV_ENB_0           (0x0UL<<VDC_LUM2CHR_MV_ENB_SHIFT)
#define VDC_LUM2CHR_MV_ENB_1           (0x1UL<<VDC_LUM2CHR_MV_ENB_SHIFT)
#define VDC_LUM2CHR_MV_ENB             (0x1UL<<VDC_LUM2CHR_MV_ENB_SHIFT)
#define VDC_CHR_FILTER_MODE_SHIFT      10
#define VDC_CHR_FILTER_MODE_FIELD      (0xFFFFFFFF - (0x3UL<<VDC_CHR_FILTER_MODE_SHIFT))
#define VDC_CHR_FILTER_MODE_0          (0x0UL<<VDC_CHR_FILTER_MODE_SHIFT)
#define VDC_CHR_FILTER_MODE_1          (0x1UL<<VDC_CHR_FILTER_MODE_SHIFT)
#define VDC_CHR_FILTER_MODE_2          (0x2UL<<VDC_CHR_FILTER_MODE_SHIFT)
#define VDC_CHR_FILTER_MODE_3          (0x3UL<<VDC_CHR_FILTER_MODE_SHIFT)
#define VDC_LUM_FILTER_MODE_SHIFT      8
#define VDC_LUM_FILTER_MODE_FIELD      (0xFFFFFFFF - (0x3UL<<VDC_LUM_FILTER_MODE_SHIFT))
#define VDC_LUM_FILTER_MODE_0          (0x0UL<<VDC_LUM_FILTER_MODE_SHIFT)
#define VDC_LUM_FILTER_MODE_1          (0x1UL<<VDC_LUM_FILTER_MODE_SHIFT)
#define VDC_LUM_FILTER_MODE_2          (0x2UL<<VDC_LUM_FILTER_MODE_SHIFT)
#define VDC_LUM_FILTER_MODE_3          (0x3UL<<VDC_LUM_FILTER_MODE_SHIFT)
#define VDC_EN_BUS_SLAVE_RD_ERR_SHIFT  6
#define VDC_EN_BUS_SLAVE_RD_ERR_FIELD  (0xFFFFFFFF - (0x1UL<<VDC_EN_BUS_SLAVE_RD_ERR_SHIFT))
#define VDC_EN_BUS_SLAVE_RD_ERR_0      (0x0UL<<VDC_EN_BUS_SLAVE_RD_ERR_SHIFT)
#define VDC_EN_BUS_SLAVE_RD_ERR_1      (0x1UL<<VDC_EN_BUS_SLAVE_RD_ERR_SHIFT)
#define VDC_EN_BUS_SLAVE_RD_ERR        (0x1UL<<VDC_EN_BUS_SLAVE_RD_ERR_SHIFT)
#define VDC_EN_BUS_SLAVE_WR_ERR_SHIFT  5
#define VDC_EN_BUS_SLAVE_WR_ERR_FIELD  (0xFFFFFFFF - (0x1UL<<VDC_EN_BUS_SLAVE_WR_ERR_SHIFT))
#define VDC_EN_BUS_SLAVE_WR_ERR_0      (0x0UL<<VDC_EN_BUS_SLAVE_WR_ERR_SHIFT)
#define VDC_EN_BUS_SLAVE_WR_ERR_1      (0x1UL<<VDC_EN_BUS_SLAVE_WR_ERR_SHIFT)
#define VDC_EN_BUS_SLAVE_WR_ERR        (0x1UL<<VDC_EN_BUS_SLAVE_WR_ERR_SHIFT)
#define VDC_OUTPUT_COPLANAR_SHIFT      0
#define VDC_OUTPUT_COPLANAR_FIELD      (0xFFFFFFFF - (0x1UL<<VDC_OUTPUT_COPLANAR_SHIFT))
#define VDC_OUTPUT_COPLANAR_0          (0x0UL<<VDC_OUTPUT_COPLANAR_SHIFT)
#define VDC_OUTPUT_COPLANAR_1          (0x1UL<<VDC_OUTPUT_COPLANAR_SHIFT)
#define VDC_OUTPUT_COPLANAR            (0x1UL<<VDC_OUTPUT_COPLANAR_SHIFT)

/*****************************************************************************/
/* Register description for INSTR_START_PTR */

/* Reset value of register VDC_INSTR_START_PTR */
#define VDC_INSTR_START_PTR_VALUE      0x0

/* Bits definition for register VDC_INSTR_START_PTR */
#define VDC_INSTR_START_PTR_SHIFT      2
#define VDC_INSTR_START_PTR_FIELD      (0xFFFFFFFF - (0x3FFFFFFFUL<<VDC_INSTR_START_PTR_SHIFT))
#define VDC_INSTR_START_PTR_0          (0x0UL<<VDC_INSTR_START_PTR_SHIFT)

/*****************************************************************************/
/* Register description for RLC_START_PTR */

/* Reset value of register VDC_RLC_START_PTR */
#define VDC_RLC_START_PTR_VALUE        0x0

/* Bits definition for register VDC_RLC_START_PTR */
#define VDC_RLC_START_PTR_SHIFT        2
#define VDC_RLC_START_PTR_FIELD        (0xFFFFFFFF - (0x3FFFFFFFUL<<VDC_RLC_START_PTR_SHIFT))
#define VDC_RLC_START_PTR_0            (0x0UL<<VDC_RLC_START_PTR_SHIFT)

/*****************************************************************************/
/* Register description for INSTR_CUR_PTR */

/* Reset value of register VDC_INSTR_CUR_PTR */
#define VDC_INSTR_CUR_PTR_VALUE        0x0

/* Bits definition for register VDC_INSTR_CUR_PTR */
#define VDC_INSTR_CUR_PTR_SHIFT        2
#define VDC_INSTR_CUR_PTR_FIELD        (0xFFFFFFFF - (0x3FFFFFFFUL<<VDC_INSTR_CUR_PTR_SHIFT))
#define VDC_INSTR_CUR_PTR_0            (0x0UL<<VDC_INSTR_CUR_PTR_SHIFT)

/*****************************************************************************/
/* Register description for RLC_CUR_PTR */

/* Reset value of register VDC_RLC_CUR_PTR */
#define VDC_RLC_CUR_PTR_VALUE          0x0

/* Bits definition for register VDC_RLC_CUR_PTR */
#define VDC_RLC_CUR_PTR_SHIFT          2
#define VDC_RLC_CUR_PTR_FIELD          (0xFFFFFFFF - (0x3FFFFFFFUL<<VDC_RLC_CUR_PTR_SHIFT))
#define VDC_RLC_CUR_PTR_0              (0x0UL<<VDC_RLC_CUR_PTR_SHIFT)

/*****************************************************************************/
/* Register description for STATUS */

/* Reset value of register VDC_STATUS */
#define VDC_STATUS_VALUE               0x0

/* Bits definition for register VDC_STATUS */
#define VDC_RLC_FLAG_SHIFT             16
#define VDC_RLC_FLAG_FIELD             (0xFFFFFFFF - (0xFFUL<<VDC_RLC_FLAG_SHIFT))
#define VDC_RLC_FLAG_0                 (0x0UL<<VDC_RLC_FLAG_SHIFT)
#define VDC_INSTR_FLAG_SHIFT           8
#define VDC_INSTR_FLAG_FIELD           (0xFFFFFFFF - (0xFFUL<<VDC_INSTR_FLAG_SHIFT))
#define VDC_INSTR_FLAG_0               (0x0UL<<VDC_INSTR_FLAG_SHIFT)
#define VDC_ERROR_STATUS_SHIFT         2
#define VDC_ERROR_STATUS_FIELD         (0xFFFFFFFF - (0x7UL<<VDC_ERROR_STATUS_SHIFT))
#define VDC_ERROR_STATUS_0             (0x0UL<<VDC_ERROR_STATUS_SHIFT)
#define VDC_ERROR_STATUS_1             (0x1UL<<VDC_ERROR_STATUS_SHIFT)
#define VDC_ERROR_STATUS_2             (0x2UL<<VDC_ERROR_STATUS_SHIFT)
#define VDC_ERROR_STATUS_3             (0x3UL<<VDC_ERROR_STATUS_SHIFT)
#define VDC_ERROR_STATUS_4             (0x4UL<<VDC_ERROR_STATUS_SHIFT)
#define VDC_ERROR_STATUS_5             (0x5UL<<VDC_ERROR_STATUS_SHIFT)
#define VDC_PROC_STATUS_SHIFT          0
#define VDC_PROC_STATUS_FIELD          (0xFFFFFFFF - (0x3UL<<VDC_PROC_STATUS_SHIFT))
#define VDC_PROC_STATUS_0              (0x0UL<<VDC_PROC_STATUS_SHIFT)
#define VDC_PROC_STATUS_1              (0x1UL<<VDC_PROC_STATUS_SHIFT)
#define VDC_PROC_STATUS_2              (0x2UL<<VDC_PROC_STATUS_SHIFT)
#define VDC_PROC_STATUS_3              (0x3UL<<VDC_PROC_STATUS_SHIFT)

/*****************************************************************************/
/* Register description for INT_STATUS */

/* Reset value of register VDC_INT_STATUS */
#define VDC_INT_STATUS_VALUE           0x0

/* Bits definition for register VDC_INT_STATUS */
#define VDC_IRQ_INSTR_SHIFT            5
#define VDC_IRQ_INSTR_FIELD            (0xFFFFFFFF - (0x1UL<<VDC_IRQ_INSTR_SHIFT))
#define VDC_IRQ_INSTR_0                (0x0UL<<VDC_IRQ_INSTR_SHIFT)
#define VDC_IRQ_INSTR_1                (0x1UL<<VDC_IRQ_INSTR_SHIFT)
#define VDC_IRQ_INSTR                  (0x1UL<<VDC_IRQ_INSTR_SHIFT)
#define VDC_ERROR_BUS_MASTER_SHIFT     4
#define VDC_ERROR_BUS_MASTER_FIELD     (0xFFFFFFFF - (0x1UL<<VDC_ERROR_BUS_MASTER_SHIFT))
#define VDC_ERROR_BUS_MASTER_0         (0x0UL<<VDC_ERROR_BUS_MASTER_SHIFT)
#define VDC_ERROR_BUS_MASTER_1         (0x1UL<<VDC_ERROR_BUS_MASTER_SHIFT)
#define VDC_ERROR_BUS_MASTER           (0x1UL<<VDC_ERROR_BUS_MASTER_SHIFT)
#define VDC_ERROR_BUS_SLAVE_SHIFT      3
#define VDC_ERROR_BUS_SLAVE_FIELD      (0xFFFFFFFF - (0x1UL<<VDC_ERROR_BUS_SLAVE_SHIFT))
#define VDC_ERROR_BUS_SLAVE_0          (0x0UL<<VDC_ERROR_BUS_SLAVE_SHIFT)
#define VDC_ERROR_BUS_SLAVE_1          (0x1UL<<VDC_ERROR_BUS_SLAVE_SHIFT)
#define VDC_ERROR_BUS_SLAVE            (0x1UL<<VDC_ERROR_BUS_SLAVE_SHIFT)
#define VDC_ERROR_RLC_SHIFT            2
#define VDC_ERROR_RLC_FIELD            (0xFFFFFFFF - (0x1UL<<VDC_ERROR_RLC_SHIFT))
#define VDC_ERROR_RLC_0                (0x0UL<<VDC_ERROR_RLC_SHIFT)
#define VDC_ERROR_RLC_1                (0x1UL<<VDC_ERROR_RLC_SHIFT)
#define VDC_ERROR_RLC                  (0x1UL<<VDC_ERROR_RLC_SHIFT)
#define VDC_ERROR_INSTR_SHIFT          1
#define VDC_ERROR_INSTR_FIELD          (0xFFFFFFFF - (0x1UL<<VDC_ERROR_INSTR_SHIFT))
#define VDC_ERROR_INSTR_0              (0x0UL<<VDC_ERROR_INSTR_SHIFT)
#define VDC_ERROR_INSTR_1              (0x1UL<<VDC_ERROR_INSTR_SHIFT)
#define VDC_ERROR_INSTR                (0x1UL<<VDC_ERROR_INSTR_SHIFT)
#define VDC_END_PROCESS_SHIFT          0
#define VDC_END_PROCESS_FIELD          (0xFFFFFFFF - (0x1UL<<VDC_END_PROCESS_SHIFT))
#define VDC_END_PROCESS_0              (0x0UL<<VDC_END_PROCESS_SHIFT)
#define VDC_END_PROCESS_1              (0x1UL<<VDC_END_PROCESS_SHIFT)
#define VDC_END_PROCESS                (0x1UL<<VDC_END_PROCESS_SHIFT)

/*****************************************************************************/
/* Register description for INT_CLR_STATUS */

/* Reset value of register VDC_INT_CLR_STATUS */
#define VDC_INT_CLR_STATUS_VALUE       0x0

/* Bits definition for register VDC_INT_CLR_STATUS */
#define VDC_IRQ_INSTR_SHIFT            5
#define VDC_IRQ_INSTR_FIELD            (0xFFFFFFFF - (0x1UL<<VDC_IRQ_INSTR_SHIFT))
#define VDC_IRQ_INSTR_0                (0x0UL<<VDC_IRQ_INSTR_SHIFT)
#define VDC_IRQ_INSTR_1                (0x1UL<<VDC_IRQ_INSTR_SHIFT)
#define VDC_IRQ_INSTR                  (0x1UL<<VDC_IRQ_INSTR_SHIFT)
#define VDC_ERROR_BUS_MASTER_SHIFT     4
#define VDC_ERROR_BUS_MASTER_FIELD     (0xFFFFFFFF - (0x1UL<<VDC_ERROR_BUS_MASTER_SHIFT))
#define VDC_ERROR_BUS_MASTER_0         (0x0UL<<VDC_ERROR_BUS_MASTER_SHIFT)
#define VDC_ERROR_BUS_MASTER_1         (0x1UL<<VDC_ERROR_BUS_MASTER_SHIFT)
#define VDC_ERROR_BUS_MASTER           (0x1UL<<VDC_ERROR_BUS_MASTER_SHIFT)
#define VDC_ERROR_BUS_SLAVE_SHIFT      3
#define VDC_ERROR_BUS_SLAVE_FIELD      (0xFFFFFFFF - (0x1UL<<VDC_ERROR_BUS_SLAVE_SHIFT))
#define VDC_ERROR_BUS_SLAVE_0          (0x0UL<<VDC_ERROR_BUS_SLAVE_SHIFT)
#define VDC_ERROR_BUS_SLAVE_1          (0x1UL<<VDC_ERROR_BUS_SLAVE_SHIFT)
#define VDC_ERROR_BUS_SLAVE            (0x1UL<<VDC_ERROR_BUS_SLAVE_SHIFT)
#define VDC_ERROR_RLC_SHIFT            2
#define VDC_ERROR_RLC_FIELD            (0xFFFFFFFF - (0x1UL<<VDC_ERROR_RLC_SHIFT))
#define VDC_ERROR_RLC_0                (0x0UL<<VDC_ERROR_RLC_SHIFT)
#define VDC_ERROR_RLC_1                (0x1UL<<VDC_ERROR_RLC_SHIFT)
#define VDC_ERROR_RLC                  (0x1UL<<VDC_ERROR_RLC_SHIFT)
#define VDC_ERROR_INSTR_SHIFT          1
#define VDC_ERROR_INSTR_FIELD          (0xFFFFFFFF - (0x1UL<<VDC_ERROR_INSTR_SHIFT))
#define VDC_ERROR_INSTR_0              (0x0UL<<VDC_ERROR_INSTR_SHIFT)
#define VDC_ERROR_INSTR_1              (0x1UL<<VDC_ERROR_INSTR_SHIFT)
#define VDC_ERROR_INSTR                (0x1UL<<VDC_ERROR_INSTR_SHIFT)
#define VDC_END_PROCESS_SHIFT          0
#define VDC_END_PROCESS_FIELD          (0xFFFFFFFF - (0x1UL<<VDC_END_PROCESS_SHIFT))
#define VDC_END_PROCESS_0              (0x0UL<<VDC_END_PROCESS_SHIFT)
#define VDC_END_PROCESS_1              (0x1UL<<VDC_END_PROCESS_SHIFT)
#define VDC_END_PROCESS                (0x1UL<<VDC_END_PROCESS_SHIFT)

/*****************************************************************************/
/* Register description for INT_SET_STATUS */

/* Reset value of register VDC_INT_SET_STATUS */
#define VDC_INT_SET_STATUS_VALUE       0x0

/* Bits definition for register VDC_INT_SET_STATUS */
#define VDC_IRQ_INSTR_SHIFT            5
#define VDC_IRQ_INSTR_FIELD            (0xFFFFFFFF - (0x1UL<<VDC_IRQ_INSTR_SHIFT))
#define VDC_IRQ_INSTR_0                (0x0UL<<VDC_IRQ_INSTR_SHIFT)
#define VDC_IRQ_INSTR_1                (0x1UL<<VDC_IRQ_INSTR_SHIFT)
#define VDC_IRQ_INSTR                  (0x1UL<<VDC_IRQ_INSTR_SHIFT)
#define VDC_ERROR_BUS_MASTER_SHIFT     4
#define VDC_ERROR_BUS_MASTER_FIELD     (0xFFFFFFFF - (0x1UL<<VDC_ERROR_BUS_MASTER_SHIFT))
#define VDC_ERROR_BUS_MASTER_0         (0x0UL<<VDC_ERROR_BUS_MASTER_SHIFT)
#define VDC_ERROR_BUS_MASTER_1         (0x1UL<<VDC_ERROR_BUS_MASTER_SHIFT)
#define VDC_ERROR_BUS_MASTER           (0x1UL<<VDC_ERROR_BUS_MASTER_SHIFT)
#define VDC_ERROR_BUS_SLAVE_SHIFT      3
#define VDC_ERROR_BUS_SLAVE_FIELD      (0xFFFFFFFF - (0x1UL<<VDC_ERROR_BUS_SLAVE_SHIFT))
#define VDC_ERROR_BUS_SLAVE_0          (0x0UL<<VDC_ERROR_BUS_SLAVE_SHIFT)
#define VDC_ERROR_BUS_SLAVE_1          (0x1UL<<VDC_ERROR_BUS_SLAVE_SHIFT)
#define VDC_ERROR_BUS_SLAVE            (0x1UL<<VDC_ERROR_BUS_SLAVE_SHIFT)
#define VDC_ERROR_RLC_SHIFT            2
#define VDC_ERROR_RLC_FIELD            (0xFFFFFFFF - (0x1UL<<VDC_ERROR_RLC_SHIFT))
#define VDC_ERROR_RLC_0                (0x0UL<<VDC_ERROR_RLC_SHIFT)
#define VDC_ERROR_RLC_1                (0x1UL<<VDC_ERROR_RLC_SHIFT)
#define VDC_ERROR_RLC                  (0x1UL<<VDC_ERROR_RLC_SHIFT)
#define VDC_ERROR_INSTR_SHIFT          1
#define VDC_ERROR_INSTR_FIELD          (0xFFFFFFFF - (0x1UL<<VDC_ERROR_INSTR_SHIFT))
#define VDC_ERROR_INSTR_0              (0x0UL<<VDC_ERROR_INSTR_SHIFT)
#define VDC_ERROR_INSTR_1              (0x1UL<<VDC_ERROR_INSTR_SHIFT)
#define VDC_ERROR_INSTR                (0x1UL<<VDC_ERROR_INSTR_SHIFT)
#define VDC_END_PROCESS_SHIFT          0
#define VDC_END_PROCESS_FIELD          (0xFFFFFFFF - (0x1UL<<VDC_END_PROCESS_SHIFT))
#define VDC_END_PROCESS_0              (0x0UL<<VDC_END_PROCESS_SHIFT)
#define VDC_END_PROCESS_1              (0x1UL<<VDC_END_PROCESS_SHIFT)
#define VDC_END_PROCESS                (0x1UL<<VDC_END_PROCESS_SHIFT)

/*****************************************************************************/
/* Register description for INT_ENABLE */

/* Reset value of register VDC_INT_ENABLE */
#define VDC_INT_ENABLE_VALUE           0x0

/* Bits definition for register VDC_INT_ENABLE */
#define VDC_IRQ_INSTR_SHIFT            5
#define VDC_IRQ_INSTR_FIELD            (0xFFFFFFFF - (0x1UL<<VDC_IRQ_INSTR_SHIFT))
#define VDC_IRQ_INSTR_0                (0x0UL<<VDC_IRQ_INSTR_SHIFT)
#define VDC_IRQ_INSTR_1                (0x1UL<<VDC_IRQ_INSTR_SHIFT)
#define VDC_IRQ_INSTR                  (0x1UL<<VDC_IRQ_INSTR_SHIFT)
#define VDC_ERROR_BUS_MASTER_SHIFT     4
#define VDC_ERROR_BUS_MASTER_FIELD     (0xFFFFFFFF - (0x1UL<<VDC_ERROR_BUS_MASTER_SHIFT))
#define VDC_ERROR_BUS_MASTER_0         (0x0UL<<VDC_ERROR_BUS_MASTER_SHIFT)
#define VDC_ERROR_BUS_MASTER_1         (0x1UL<<VDC_ERROR_BUS_MASTER_SHIFT)
#define VDC_ERROR_BUS_MASTER           (0x1UL<<VDC_ERROR_BUS_MASTER_SHIFT)
#define VDC_ERROR_BUS_SLAVE_SHIFT      3
#define VDC_ERROR_BUS_SLAVE_FIELD      (0xFFFFFFFF - (0x1UL<<VDC_ERROR_BUS_SLAVE_SHIFT))
#define VDC_ERROR_BUS_SLAVE_0          (0x0UL<<VDC_ERROR_BUS_SLAVE_SHIFT)
#define VDC_ERROR_BUS_SLAVE_1          (0x1UL<<VDC_ERROR_BUS_SLAVE_SHIFT)
#define VDC_ERROR_BUS_SLAVE            (0x1UL<<VDC_ERROR_BUS_SLAVE_SHIFT)
#define VDC_ERROR_RLC_SHIFT            2
#define VDC_ERROR_RLC_FIELD            (0xFFFFFFFF - (0x1UL<<VDC_ERROR_RLC_SHIFT))
#define VDC_ERROR_RLC_0                (0x0UL<<VDC_ERROR_RLC_SHIFT)
#define VDC_ERROR_RLC_1                (0x1UL<<VDC_ERROR_RLC_SHIFT)
#define VDC_ERROR_RLC                  (0x1UL<<VDC_ERROR_RLC_SHIFT)
#define VDC_ERROR_INSTR_SHIFT          1
#define VDC_ERROR_INSTR_FIELD          (0xFFFFFFFF - (0x1UL<<VDC_ERROR_INSTR_SHIFT))
#define VDC_ERROR_INSTR_0              (0x0UL<<VDC_ERROR_INSTR_SHIFT)
#define VDC_ERROR_INSTR_1              (0x1UL<<VDC_ERROR_INSTR_SHIFT)
#define VDC_ERROR_INSTR                (0x1UL<<VDC_ERROR_INSTR_SHIFT)
#define VDC_END_PROCESS_SHIFT          0
#define VDC_END_PROCESS_FIELD          (0xFFFFFFFF - (0x1UL<<VDC_END_PROCESS_SHIFT))
#define VDC_END_PROCESS_0              (0x0UL<<VDC_END_PROCESS_SHIFT)
#define VDC_END_PROCESS_1              (0x1UL<<VDC_END_PROCESS_SHIFT)
#define VDC_END_PROCESS                (0x1UL<<VDC_END_PROCESS_SHIFT)

/*****************************************************************************/
/* Register description for INT_CLR_ENABLE */

/* Reset value of register VDC_INT_CLR_ENABLE */
#define VDC_INT_CLR_ENABLE_VALUE       0x0

/* Bits definition for register VDC_INT_CLR_ENABLE */
#define VDC_IRQ_INSTR_SHIFT            5
#define VDC_IRQ_INSTR_FIELD            (0xFFFFFFFF - (0x1UL<<VDC_IRQ_INSTR_SHIFT))
#define VDC_IRQ_INSTR_0                (0x0UL<<VDC_IRQ_INSTR_SHIFT)
#define VDC_IRQ_INSTR_1                (0x1UL<<VDC_IRQ_INSTR_SHIFT)
#define VDC_IRQ_INSTR                  (0x1UL<<VDC_IRQ_INSTR_SHIFT)
#define VDC_ERROR_BUS_MASTER_SHIFT     4
#define VDC_ERROR_BUS_MASTER_FIELD     (0xFFFFFFFF - (0x1UL<<VDC_ERROR_BUS_MASTER_SHIFT))
#define VDC_ERROR_BUS_MASTER_0         (0x0UL<<VDC_ERROR_BUS_MASTER_SHIFT)
#define VDC_ERROR_BUS_MASTER_1         (0x1UL<<VDC_ERROR_BUS_MASTER_SHIFT)
#define VDC_ERROR_BUS_MASTER           (0x1UL<<VDC_ERROR_BUS_MASTER_SHIFT)
#define VDC_ERROR_BUS_SLAVE_SHIFT      3
#define VDC_ERROR_BUS_SLAVE_FIELD      (0xFFFFFFFF - (0x1UL<<VDC_ERROR_BUS_SLAVE_SHIFT))
#define VDC_ERROR_BUS_SLAVE_0          (0x0UL<<VDC_ERROR_BUS_SLAVE_SHIFT)
#define VDC_ERROR_BUS_SLAVE_1          (0x1UL<<VDC_ERROR_BUS_SLAVE_SHIFT)
#define VDC_ERROR_BUS_SLAVE            (0x1UL<<VDC_ERROR_BUS_SLAVE_SHIFT)
#define VDC_ERROR_RLC_SHIFT            2
#define VDC_ERROR_RLC_FIELD            (0xFFFFFFFF - (0x1UL<<VDC_ERROR_RLC_SHIFT))
#define VDC_ERROR_RLC_0                (0x0UL<<VDC_ERROR_RLC_SHIFT)
#define VDC_ERROR_RLC_1                (0x1UL<<VDC_ERROR_RLC_SHIFT)
#define VDC_ERROR_RLC                  (0x1UL<<VDC_ERROR_RLC_SHIFT)
#define VDC_ERROR_INSTR_SHIFT          1
#define VDC_ERROR_INSTR_FIELD          (0xFFFFFFFF - (0x1UL<<VDC_ERROR_INSTR_SHIFT))
#define VDC_ERROR_INSTR_0              (0x0UL<<VDC_ERROR_INSTR_SHIFT)
#define VDC_ERROR_INSTR_1              (0x1UL<<VDC_ERROR_INSTR_SHIFT)
#define VDC_ERROR_INSTR                (0x1UL<<VDC_ERROR_INSTR_SHIFT)
#define VDC_END_PROCESS_SHIFT          0
#define VDC_END_PROCESS_FIELD          (0xFFFFFFFF - (0x1UL<<VDC_END_PROCESS_SHIFT))
#define VDC_END_PROCESS_0              (0x0UL<<VDC_END_PROCESS_SHIFT)
#define VDC_END_PROCESS_1              (0x1UL<<VDC_END_PROCESS_SHIFT)
#define VDC_END_PROCESS                (0x1UL<<VDC_END_PROCESS_SHIFT)

/*****************************************************************************/
/* Register description for INT_SET_ENABLE */

/* Reset value of register VDC_INT_SET_ENABLE */
#define VDC_INT_SET_ENABLE_VALUE       0x0

/* Bits definition for register VDC_INT_SET_ENABLE */
#define VDC_IRQ_INSTR_SHIFT            5
#define VDC_IRQ_INSTR_FIELD            (0xFFFFFFFF - (0x1UL<<VDC_IRQ_INSTR_SHIFT))
#define VDC_IRQ_INSTR_0                (0x0UL<<VDC_IRQ_INSTR_SHIFT)
#define VDC_IRQ_INSTR_1                (0x1UL<<VDC_IRQ_INSTR_SHIFT)
#define VDC_IRQ_INSTR                  (0x1UL<<VDC_IRQ_INSTR_SHIFT)
#define VDC_ERROR_BUS_MASTER_SHIFT     4
#define VDC_ERROR_BUS_MASTER_FIELD     (0xFFFFFFFF - (0x1UL<<VDC_ERROR_BUS_MASTER_SHIFT))
#define VDC_ERROR_BUS_MASTER_0         (0x0UL<<VDC_ERROR_BUS_MASTER_SHIFT)
#define VDC_ERROR_BUS_MASTER_1         (0x1UL<<VDC_ERROR_BUS_MASTER_SHIFT)
#define VDC_ERROR_BUS_MASTER           (0x1UL<<VDC_ERROR_BUS_MASTER_SHIFT)
#define VDC_ERROR_BUS_SLAVE_SHIFT      3
#define VDC_ERROR_BUS_SLAVE_FIELD      (0xFFFFFFFF - (0x1UL<<VDC_ERROR_BUS_SLAVE_SHIFT))
#define VDC_ERROR_BUS_SLAVE_0          (0x0UL<<VDC_ERROR_BUS_SLAVE_SHIFT)
#define VDC_ERROR_BUS_SLAVE_1          (0x1UL<<VDC_ERROR_BUS_SLAVE_SHIFT)
#define VDC_ERROR_BUS_SLAVE            (0x1UL<<VDC_ERROR_BUS_SLAVE_SHIFT)
#define VDC_ERROR_RLC_SHIFT            2
#define VDC_ERROR_RLC_FIELD            (0xFFFFFFFF - (0x1UL<<VDC_ERROR_RLC_SHIFT))
#define VDC_ERROR_RLC_0                (0x0UL<<VDC_ERROR_RLC_SHIFT)
#define VDC_ERROR_RLC_1                (0x1UL<<VDC_ERROR_RLC_SHIFT)
#define VDC_ERROR_RLC                  (0x1UL<<VDC_ERROR_RLC_SHIFT)
#define VDC_ERROR_INSTR_SHIFT          1
#define VDC_ERROR_INSTR_FIELD          (0xFFFFFFFF - (0x1UL<<VDC_ERROR_INSTR_SHIFT))
#define VDC_ERROR_INSTR_0              (0x0UL<<VDC_ERROR_INSTR_SHIFT)
#define VDC_ERROR_INSTR_1              (0x1UL<<VDC_ERROR_INSTR_SHIFT)
#define VDC_ERROR_INSTR                (0x1UL<<VDC_ERROR_INSTR_SHIFT)
#define VDC_END_PROCESS_SHIFT          0
#define VDC_END_PROCESS_FIELD          (0xFFFFFFFF - (0x1UL<<VDC_END_PROCESS_SHIFT))
#define VDC_END_PROCESS_0              (0x0UL<<VDC_END_PROCESS_SHIFT)
#define VDC_END_PROCESS_1              (0x1UL<<VDC_END_PROCESS_SHIFT)
#define VDC_END_PROCESS                (0x1UL<<VDC_END_PROCESS_SHIFT)

/*****************************************************************************/
/* Register description for RESET */

/* Reset value of register VDC_RESET */
#define VDC_RESET_VALUE                0x1

/* Bits definition for register VDC_RESET */
#define VDC_RESET_SHIFT                0
#define VDC_RESET_FIELD                (0xFFFFFFFF - (0x1UL<<VDC_RESET_SHIFT))
#define VDC_RESET_0                    (0x0UL<<VDC_RESET_SHIFT)
#define VDC_RESET_1                    (0x1UL<<VDC_RESET_SHIFT)
#define VDC_RESET                      (0x1UL<<VDC_RESET_SHIFT)

/*****************************************************************************/
/* Register description for MODULE_ID */

/* Reset value of register VDC_MODULE_ID */
#define VDC_MODULE_ID_VALUE            0xA0E54502

/* Bits definition for register VDC_MODULE_ID */
#define VDC_MODULE_ID_SHIFT            16
#define VDC_MODULE_ID_FIELD            (0xFFFFFFFF - (0xFFFFUL<<VDC_MODULE_ID_SHIFT))
#define VDC_MODULE_ID_A0E5             (0xA0E5UL<<VDC_MODULE_ID_SHIFT)
#define VDC_MAJOR_REV_SHIFT            12
#define VDC_MAJOR_REV_FIELD            (0xFFFFFFFF - (0xFUL<<VDC_MAJOR_REV_SHIFT))
#define VDC_MAJOR_REV_4                (0x4UL<<VDC_MAJOR_REV_SHIFT)
#define VDC_MINOR_REV_SHIFT            8
#define VDC_MINOR_REV_FIELD            (0xFFFFFFFF - (0xFUL<<VDC_MINOR_REV_SHIFT))
#define VDC_MINOR_REV_5                (0x5UL<<VDC_MINOR_REV_SHIFT)
#define VDC_APERTURE_SHIFT             0
#define VDC_APERTURE_FIELD             (0xFFFFFFFF - (0xFFUL<<VDC_APERTURE_SHIFT))
#define VDC_APERTURE_2                 (0x2UL<<VDC_APERTURE_SHIFT)

/*****************************************************************************/

/*****************************************************************************
* Definitions for: VDE
*****************************************************************************/

/* Pointer on base address */
#define VDE_BASE                       IOA(VDE_BASE_ADDR)

/* VDE CTRL Register (32 bits) */
#define VDE_CTRL_OFFSET                0x0
#define VDE_CTRL_REG                   IOA(VDE_BASE_ADDR + VDE_CTRL_OFFSET)

/* VDE CONF Register (32 bits) */
#define VDE_CONF_OFFSET                0x4
#define VDE_CONF_REG                   IOA(VDE_BASE_ADDR + VDE_CONF_OFFSET)

/* VDE CONF1 Register (32 bits) */
#define VDE_CONF1_OFFSET               0x8
#define VDE_CONF1_REG                  IOA(VDE_BASE_ADDR + VDE_CONF1_OFFSET)

/* VDE CONF2 Register (32 bits) */
#define VDE_CONF2_OFFSET               0xC
#define VDE_CONF2_REG                  IOA(VDE_BASE_ADDR + VDE_CONF2_OFFSET)

/* VDE EOFI_CTRL Register (32 bits) */
#define VDE_EOFI_CTRL_OFFSET           0x10
#define VDE_EOFI_CTRL_REG              IOA(VDE_BASE_ADDR + VDE_EOFI_CTRL_OFFSET)

/* VDE DESC_START Register (32 bits) */
#define VDE_DESC_START_OFFSET          0x14
#define VDE_DESC_START_REG             IOA(VDE_BASE_ADDR + VDE_DESC_START_OFFSET)

/* VDE DESC_CUR Register (32 bits) */
#define VDE_DESC_CUR_OFFSET            0x18
#define VDE_DESC_CUR_REG               IOA(VDE_BASE_ADDR + VDE_DESC_CUR_OFFSET)

/* VDE INT_STAT Register (32 bits) */
#define VDE_INT_STAT_OFFSET            0x1C
#define VDE_INT_STAT_REG               IOA(VDE_BASE_ADDR + VDE_INT_STAT_OFFSET)

/* VDE IEN Register (32 bits) */
#define VDE_IEN_OFFSET                 0x20
#define VDE_IEN_REG                    IOA(VDE_BASE_ADDR + VDE_IEN_OFFSET)

/* VDE ISR Register (32 bits) */
#define VDE_ISR_OFFSET                 0x24
#define VDE_ISR_REG                    IOA(VDE_BASE_ADDR + VDE_ISR_OFFSET)

/* VDE ICR Register (32 bits) */
#define VDE_ICR_OFFSET                 0x28
#define VDE_ICR_REG                    IOA(VDE_BASE_ADDR + VDE_ICR_OFFSET)

/* VDE IP_ID Register (32 bits) */
#define VDE_IP_ID_OFFSET               0x2C
#define VDE_IP_ID_REG                  IOA(VDE_BASE_ADDR + VDE_IP_ID_OFFSET)

/* Register description for CTRL */

/* Reset value of register VDE_CTRL */
#define VDE_CTRL_VALUE                 0x0

/* Bits definition for register VDE_CTRL */
#define VDE_RESET_SHIFT                1
#define VDE_RESET_FIELD                (0xFFFFFFFF - (0x1UL<<VDE_RESET_SHIFT))
#define VDE_RESET_0                    (0x0UL<<VDE_RESET_SHIFT)
#define VDE_RESET_1                    (0x1UL<<VDE_RESET_SHIFT)
#define VDE_RESET                      (0x1UL<<VDE_RESET_SHIFT)
#define VDE_ENABLE_SHIFT               0
#define VDE_ENABLE_FIELD               (0xFFFFFFFF - (0x1UL<<VDE_ENABLE_SHIFT))
#define VDE_ENABLE_0                   (0x0UL<<VDE_ENABLE_SHIFT)
#define VDE_ENABLE_1                   (0x1UL<<VDE_ENABLE_SHIFT)
#define VDE_ENABLE                     (0x1UL<<VDE_ENABLE_SHIFT)

/*****************************************************************************/
/* Register description for CONF */

/* Reset value of register VDE_CONF */
#define VDE_CONF_VALUE                 0x2

/* Bits definition for register VDE_CONF */
#define VDE_ALIGN_SHIFT                4
#define VDE_ALIGN_FIELD                (0xFFFFFFFF - (0x1UL<<VDE_ALIGN_SHIFT))
#define VDE_ALIGN_LEFT                 (0x0UL<<VDE_ALIGN_SHIFT)
#define VDE_ALIGN_RIGHT                (0x1UL<<VDE_ALIGN_SHIFT)
#define VDE_ALIGN                      (0x1UL<<VDE_ALIGN_SHIFT)
#define VDE_CD_SHIFT                   2
#define VDE_CD_FIELD                   (0xFFFFFFFF - (0x3UL<<VDE_CD_SHIFT))
#define VDE_CD_0                       (0x0UL<<VDE_CD_SHIFT)
#define VDE_BURST_SHIFT                1
#define VDE_BURST_FIELD                (0xFFFFFFFF - (0x1UL<<VDE_BURST_SHIFT))
#define VDE_BURST_DISABLE              (0x0UL<<VDE_BURST_SHIFT)
#define VDE_BURST_ENABLE               (0x1UL<<VDE_BURST_SHIFT)
#define VDE_BURST                      (0x1UL<<VDE_BURST_SHIFT)
#define VDE_SELECT_DISPLAY_SHIFT       0
#define VDE_SELECT_DISPLAY_FIELD       (0xFFFFFFFF - (0x1UL<<VDE_SELECT_DISPLAY_SHIFT))
#define VDE_SELECT_DISPLAY_1           (0x0UL<<VDE_SELECT_DISPLAY_SHIFT)
#define VDE_SELECT_DISPLAY_2           (0x1UL<<VDE_SELECT_DISPLAY_SHIFT)
#define VDE_SELECT_DISPLAY             (0x1UL<<VDE_SELECT_DISPLAY_SHIFT)

/*****************************************************************************/
/* Register description for CONF[1:2] */

/* Reset value of register VDE_CONF[1:2] */
#define VDE_CONF1_VALUE                0x0
#define VDE_CONF2_VALUE                0x0

/* Bits definition for register VDE_CONF[1:2] */
#define VDE_BSWAP_SHIFT                24
#define VDE_BSWAP_FIELD                (0xFFFFFFFF - (0x1UL<<VDE_BSWAP_SHIFT))
#define VDE_BSWAP_NO_SWAP              (0x0UL<<VDE_BSWAP_SHIFT)
#define VDE_BSWAP_SWAP                 (0x1UL<<VDE_BSWAP_SHIFT)
#define VDE_BSWAP                      (0x1UL<<VDE_BSWAP_SHIFT)
#define VDE_CSKIP_SHIFT                23
#define VDE_CSKIP_FIELD                (0xFFFFFFFF - (0x1UL<<VDE_CSKIP_SHIFT))
#define VDE_CSKIP_NORMAL_MODE          (0x0UL<<VDE_CSKIP_SHIFT)
#define VDE_CSKIP_COMMAND_SKIP_MODE    (0x1UL<<VDE_CSKIP_SHIFT)
#define VDE_CSKIP                      (0x1UL<<VDE_CSKIP_SHIFT)
#define VDE_T_CS_SHIFT                 22
#define VDE_T_CS_FIELD                 (0xFFFFFFFF - (0x1UL<<VDE_T_CS_SHIFT))
#define VDE_T_CS_0                     (0x0UL<<VDE_T_CS_SHIFT)
#define VDE_T_CS_1                     (0x1UL<<VDE_T_CS_SHIFT)
#define VDE_T_CS                       (0x1UL<<VDE_T_CS_SHIFT)
#define VDE_T_CH_SHIFT                 21
#define VDE_T_CH_FIELD                 (0xFFFFFFFF - (0x1UL<<VDE_T_CH_SHIFT))
#define VDE_T_CH_0                     (0x0UL<<VDE_T_CH_SHIFT)
#define VDE_T_CH_1                     (0x1UL<<VDE_T_CH_SHIFT)
#define VDE_T_CH                       (0x1UL<<VDE_T_CH_SHIFT)
#define VDE_T_WS_SHIFT                 19
#define VDE_T_WS_FIELD                 (0xFFFFFFFF - (0x3UL<<VDE_T_WS_SHIFT))
#define VDE_T_WS_0                     (0x0UL<<VDE_T_WS_SHIFT)
#define VDE_T_WC_SHIFT                 16
#define VDE_T_WC_FIELD                 (0xFFFFFFFF - (0x7UL<<VDE_T_WC_SHIFT))
#define VDE_T_WC_0                     (0x0UL<<VDE_T_WC_SHIFT)
#define VDE_T_WH_SHIFT                 13
#define VDE_T_WH_FIELD                 (0xFFFFFFFF - (0x7UL<<VDE_T_WH_SHIFT))
#define VDE_T_WH_0                     (0x0UL<<VDE_T_WH_SHIFT)
#define VDE_T_RS_SHIFT                 11
#define VDE_T_RS_FIELD                 (0xFFFFFFFF - (0x3UL<<VDE_T_RS_SHIFT))
#define VDE_T_RS_0                     (0x0UL<<VDE_T_RS_SHIFT)
#define VDE_T_RC_SHIFT                 8
#define VDE_T_RC_FIELD                 (0xFFFFFFFF - (0x7UL<<VDE_T_RC_SHIFT))
#define VDE_T_RC_0                     (0x0UL<<VDE_T_RC_SHIFT)
#define VDE_T_RH_SHIFT                 5
#define VDE_T_RH_FIELD                 (0xFFFFFFFF - (0x7UL<<VDE_T_RH_SHIFT))
#define VDE_T_RH_0                     (0x0UL<<VDE_T_RH_SHIFT)
#define VDE_HOLD_SHIFT                 4
#define VDE_HOLD_FIELD                 (0xFFFFFFFF - (0x1UL<<VDE_HOLD_SHIFT))
#define VDE_HOLD_0                     (0x0UL<<VDE_HOLD_SHIFT)
#define VDE_HOLD_1                     (0x1UL<<VDE_HOLD_SHIFT)
#define VDE_HOLD                       (0x1UL<<VDE_HOLD_SHIFT)
#define VDE_SER_MODE_SHIFT             2
#define VDE_SER_MODE_FIELD             (0xFFFFFFFF - (0x3UL<<VDE_SER_MODE_SHIFT))
#define VDE_SER_MODE_3_WIRE_WITH_8_BIT (0x0UL<<VDE_SER_MODE_SHIFT)
#define VDE_SER_MODE_3_WIRE_WITH_9_BIT (0x1UL<<VDE_SER_MODE_SHIFT)
#define VDE_SER_MODE_4_WIRE_WITH_8_BIT (0x2UL<<VDE_SER_MODE_SHIFT)
#define VDE_SER_MODE_4_WIRE_WITH_16_BIT            (0x3UL<<VDE_SER_MODE_SHIFT)
#define VDE_MODE_SHIFT                 0
#define VDE_MODE_FIELD                 (0xFFFFFFFF - (0x3UL<<VDE_MODE_SHIFT))
#define VDE_MODE_16_BIT                (0x0UL<<VDE_MODE_SHIFT)
#define VDE_MODE_8_BIT                 (0x1UL<<VDE_MODE_SHIFT)
#define VDE_MODE_9_BIT                 (0x2UL<<VDE_MODE_SHIFT)
#define VDE_MODE_SERIAL                (0x3UL<<VDE_MODE_SHIFT)

/*****************************************************************************/
/* Register description for EOFI_CTRL */

/* Reset value of register VDE_EOFI_CTRL */
#define VDE_EOFI_CTRL_VALUE            0x0

/* Bits definition for register VDE_EOFI_CTRL */
#define VDE_POL_SHIFT                  31
#define VDE_POL_FIELD                  (0xFFFFFFFF - (0x1UL<<VDE_POL_SHIFT))
#define VDE_POL_RISING_EDGE            (0x0UL<<VDE_POL_SHIFT)
#define VDE_POL_FALLING_EDGE           (0x1UL<<VDE_POL_SHIFT)
#define VDE_POL                        (0x1UL<<VDE_POL_SHIFT)
#define VDE_SKIP_SHIFT                 24
#define VDE_SKIP_FIELD                 (0xFFFFFFFF - (0x7FUL<<VDE_SKIP_SHIFT))
#define VDE_SKIP_0                     (0x0UL<<VDE_SKIP_SHIFT)
#define VDE_DEL_SHIFT                  0
#define VDE_DEL_FIELD                  (0xFFFFFFFF - (0xFFFFFFUL<<VDE_DEL_SHIFT))
#define VDE_DEL_0                      (0x0UL<<VDE_DEL_SHIFT)

/*****************************************************************************/
/* Register description for DESC_START */

/* Reset value of register VDE_DESC_START */
#define VDE_DESC_START_VALUE           0x0

/* Bits definition for register VDE_DESC_START */
#define VDE_START_DESC_SHIFT           4
#define VDE_START_DESC_FIELD           (0xFFFFFFFF - (0xFFFFFFFUL<<VDE_START_DESC_SHIFT))
#define VDE_START_DESC_0               (0x0UL<<VDE_START_DESC_SHIFT)

/*****************************************************************************/
/* Register description for DESC_CUR */

/* Reset value of register VDE_DESC_CUR */
#define VDE_DESC_CUR_VALUE             0x0

/* Bits definition for register VDE_DESC_CUR */
#define VDE_CDESC_SHIFT                4
#define VDE_CDESC_FIELD                (0xFFFFFFFF - (0xFFFFFFFUL<<VDE_CDESC_SHIFT))
#define VDE_CDESC_0                    (0x0UL<<VDE_CDESC_SHIFT)

/*****************************************************************************/
/* Register description for INT_STAT */

/* Reset value of register VDE_INT_STAT */
#define VDE_INT_STAT_VALUE             0x0

/* Bits definition for register VDE_INT_STAT */
#define VDE_DESC_ERR_SHIFT             2
#define VDE_DESC_ERR_FIELD             (0xFFFFFFFF - (0x1UL<<VDE_DESC_ERR_SHIFT))
#define VDE_DESC_ERR_0                 (0x0UL<<VDE_DESC_ERR_SHIFT)
#define VDE_DESC_ERR_1                 (0x1UL<<VDE_DESC_ERR_SHIFT)
#define VDE_DESC_ERR                   (0x1UL<<VDE_DESC_ERR_SHIFT)
#define VDE_AHB_ERR_SHIFT              1
#define VDE_AHB_ERR_FIELD              (0xFFFFFFFF - (0x1UL<<VDE_AHB_ERR_SHIFT))
#define VDE_AHB_ERR_0                  (0x0UL<<VDE_AHB_ERR_SHIFT)
#define VDE_AHB_ERR_1                  (0x1UL<<VDE_AHB_ERR_SHIFT)
#define VDE_AHB_ERR                    (0x1UL<<VDE_AHB_ERR_SHIFT)
#define VDE_END_PROCESSING_SHIFT       0
#define VDE_END_PROCESSING_FIELD       (0xFFFFFFFF - (0x1UL<<VDE_END_PROCESSING_SHIFT))
#define VDE_END_PROCESSING_0           (0x0UL<<VDE_END_PROCESSING_SHIFT)
#define VDE_END_PROCESSING_1           (0x1UL<<VDE_END_PROCESSING_SHIFT)
#define VDE_END_PROCESSING             (0x1UL<<VDE_END_PROCESSING_SHIFT)

/*****************************************************************************/
/* Register description for IEN */

/* Reset value of register VDE_IEN */
#define VDE_IEN_VALUE                  0x0

/* Bits definition for register VDE_IEN */
#define VDE_DESC_ERR_SHIFT             2
#define VDE_DESC_ERR_FIELD             (0xFFFFFFFF - (0x1UL<<VDE_DESC_ERR_SHIFT))
#define VDE_DESC_ERR_0                 (0x0UL<<VDE_DESC_ERR_SHIFT)
#define VDE_DESC_ERR_1                 (0x1UL<<VDE_DESC_ERR_SHIFT)
#define VDE_DESC_ERR                   (0x1UL<<VDE_DESC_ERR_SHIFT)
#define VDE_AHB_ERR_SHIFT              1
#define VDE_AHB_ERR_FIELD              (0xFFFFFFFF - (0x1UL<<VDE_AHB_ERR_SHIFT))
#define VDE_AHB_ERR_0                  (0x0UL<<VDE_AHB_ERR_SHIFT)
#define VDE_AHB_ERR_1                  (0x1UL<<VDE_AHB_ERR_SHIFT)
#define VDE_AHB_ERR                    (0x1UL<<VDE_AHB_ERR_SHIFT)
#define VDE_END_PROCESSING_SHIFT       0
#define VDE_END_PROCESSING_FIELD       (0xFFFFFFFF - (0x1UL<<VDE_END_PROCESSING_SHIFT))
#define VDE_END_PROCESSING_0           (0x0UL<<VDE_END_PROCESSING_SHIFT)
#define VDE_END_PROCESSING_1           (0x1UL<<VDE_END_PROCESSING_SHIFT)
#define VDE_END_PROCESSING             (0x1UL<<VDE_END_PROCESSING_SHIFT)

/*****************************************************************************/
/* Register description for ISR */

/* Reset value of register VDE_ISR */
#define VDE_ISR_VALUE                  0x0

/* Bits definition for register VDE_ISR */
#define VDE_DESC_ERR_SHIFT             2
#define VDE_DESC_ERR_FIELD             (0xFFFFFFFF - (0x1UL<<VDE_DESC_ERR_SHIFT))
#define VDE_DESC_ERR_0                 (0x0UL<<VDE_DESC_ERR_SHIFT)
#define VDE_DESC_ERR_1                 (0x1UL<<VDE_DESC_ERR_SHIFT)
#define VDE_DESC_ERR                   (0x1UL<<VDE_DESC_ERR_SHIFT)
#define VDE_AHB_ERR_SHIFT              1
#define VDE_AHB_ERR_FIELD              (0xFFFFFFFF - (0x1UL<<VDE_AHB_ERR_SHIFT))
#define VDE_AHB_ERR_0                  (0x0UL<<VDE_AHB_ERR_SHIFT)
#define VDE_AHB_ERR_1                  (0x1UL<<VDE_AHB_ERR_SHIFT)
#define VDE_AHB_ERR                    (0x1UL<<VDE_AHB_ERR_SHIFT)
#define VDE_END_PROCESSING_SHIFT       0
#define VDE_END_PROCESSING_FIELD       (0xFFFFFFFF - (0x1UL<<VDE_END_PROCESSING_SHIFT))
#define VDE_END_PROCESSING_0           (0x0UL<<VDE_END_PROCESSING_SHIFT)
#define VDE_END_PROCESSING_1           (0x1UL<<VDE_END_PROCESSING_SHIFT)
#define VDE_END_PROCESSING             (0x1UL<<VDE_END_PROCESSING_SHIFT)

/*****************************************************************************/
/* Register description for ICR */

/* Reset value of register VDE_ICR */
#define VDE_ICR_VALUE                  0x0

/* Bits definition for register VDE_ICR */
#define VDE_DESC_ERR_SHIFT             2
#define VDE_DESC_ERR_FIELD             (0xFFFFFFFF - (0x1UL<<VDE_DESC_ERR_SHIFT))
#define VDE_DESC_ERR_0                 (0x0UL<<VDE_DESC_ERR_SHIFT)
#define VDE_DESC_ERR_1                 (0x1UL<<VDE_DESC_ERR_SHIFT)
#define VDE_DESC_ERR                   (0x1UL<<VDE_DESC_ERR_SHIFT)
#define VDE_AHB_ERR_SHIFT              1
#define VDE_AHB_ERR_FIELD              (0xFFFFFFFF - (0x1UL<<VDE_AHB_ERR_SHIFT))
#define VDE_AHB_ERR_0                  (0x0UL<<VDE_AHB_ERR_SHIFT)
#define VDE_AHB_ERR_1                  (0x1UL<<VDE_AHB_ERR_SHIFT)
#define VDE_AHB_ERR                    (0x1UL<<VDE_AHB_ERR_SHIFT)
#define VDE_END_PROCESSING_SHIFT       0
#define VDE_END_PROCESSING_FIELD       (0xFFFFFFFF - (0x1UL<<VDE_END_PROCESSING_SHIFT))
#define VDE_END_PROCESSING_0           (0x0UL<<VDE_END_PROCESSING_SHIFT)
#define VDE_END_PROCESSING_1           (0x1UL<<VDE_END_PROCESSING_SHIFT)
#define VDE_END_PROCESSING             (0x1UL<<VDE_END_PROCESSING_SHIFT)

/*****************************************************************************/
/* Register description for IP_ID */

/* Reset value of register VDE_IP_ID */
#define VDE_IP_ID_VALUE                0xB0302201

/* Bits definition for register VDE_IP_ID */
#define VDE_MODULE_ID_SHIFT            16
#define VDE_MODULE_ID_FIELD            (0xFFFFFFFF - (0xFFFFUL<<VDE_MODULE_ID_SHIFT))
#define VDE_MODULE_ID_B030             (0xB030UL<<VDE_MODULE_ID_SHIFT)
#define VDE_MAJOR_REV_SHIFT            12
#define VDE_MAJOR_REV_FIELD            (0xFFFFFFFF - (0xFUL<<VDE_MAJOR_REV_SHIFT))
#define VDE_MAJOR_REV_2                (0x2UL<<VDE_MAJOR_REV_SHIFT)
#define VDE_MINOR_REV_SHIFT            8
#define VDE_MINOR_REV_FIELD            (0xFFFFFFFF - (0xFUL<<VDE_MINOR_REV_SHIFT))
#define VDE_MINOR_REV_2                (0x2UL<<VDE_MINOR_REV_SHIFT)
#define VDE_APERTURE_SHIFT             0
#define VDE_APERTURE_FIELD             (0xFFFFFFFF - (0xFFUL<<VDE_APERTURE_SHIFT))
#define VDE_APERTURE_1                 (0x1UL<<VDE_APERTURE_SHIFT)

/*****************************************************************************/

/*****************************************************************************
* Definitions for: VEC
*****************************************************************************/

/* Pointer on base address */
#define VEC_BASE                       IOA(VEC_BASE_ADDR)


/*****************************************************************************
* Definitions for: WDRU
*****************************************************************************/

/* Pointer on base address */
#define WDRU_BASE                      IOA(WDRU_BASE_ADDR)

/* WDRU CON Register (16 bits) */
#define WDRU_CON_OFFSET                0x0
#define WDRU_CON_REG                   IOA(WDRU_BASE_ADDR + WDRU_CON_OFFSET)

/* WDRU TIM Register (16 bits) */
#define WDRU_TIM_OFFSET                0x4
#define WDRU_TIM_REG                   IOA(WDRU_BASE_ADDR + WDRU_TIM_OFFSET)

/* WDRU TIMSHADOW Register (16 bits) */
#define WDRU_TIMSHADOW_OFFSET          0x8
#define WDRU_TIMSHADOW_REG             IOA(WDRU_BASE_ADDR + WDRU_TIMSHADOW_OFFSET)

/* Register description for CON */

/* Reset value of register WDRU_CON */
#define WDRU_CON_VALUE                 0x0

/* Bits definition for register WDRU_CON */
#define WDRU_HIVECT_SHIFT              15
#define WDRU_HIVECT_FIELD              (0xFFFFFFFF - (0x1UL<<WDRU_HIVECT_SHIFT))
#define WDRU_HIVECT_0                  (0x0UL<<WDRU_HIVECT_SHIFT)
#define WDRU_HIVECT_1                  (0x1UL<<WDRU_HIVECT_SHIFT)
#define WDRU_HIVECT                    (0x1UL<<WDRU_HIVECT_SHIFT)
#define WDRU_RESTVO_SHIFT              9
#define WDRU_RESTVO_FIELD              (0xFFFFFFFF - (0x1UL<<WDRU_RESTVO_SHIFT))
#define WDRU_RESTVO_0                  (0x0UL<<WDRU_RESTVO_SHIFT)
#define WDRU_RESTVO_1                  (0x1UL<<WDRU_RESTVO_SHIFT)
#define WDRU_RESTVO                    (0x1UL<<WDRU_RESTVO_SHIFT)
#define WDRU_RESAUTRX_SHIFT            8
#define WDRU_RESAUTRX_FIELD            (0xFFFFFFFF - (0x1UL<<WDRU_RESAUTRX_SHIFT))
#define WDRU_RESAUTRX_0                (0x0UL<<WDRU_RESAUTRX_SHIFT)
#define WDRU_RESAUTRX_1                (0x1UL<<WDRU_RESAUTRX_SHIFT)
#define WDRU_RESAUTRX                  (0x1UL<<WDRU_RESAUTRX_SHIFT)
#define WDRU_RESBBI_SHIFT              7
#define WDRU_RESBBI_FIELD              (0xFFFFFFFF - (0x1UL<<WDRU_RESBBI_SHIFT))
#define WDRU_RESBBI_0                  (0x0UL<<WDRU_RESBBI_SHIFT)
#define WDRU_RESBBI_1                  (0x1UL<<WDRU_RESBBI_SHIFT)
#define WDRU_RESBBI                    (0x1UL<<WDRU_RESBBI_SHIFT)
#define WDRU_RESIVS_SHIFT              6
#define WDRU_RESIVS_FIELD              (0xFFFFFFFF - (0x1UL<<WDRU_RESIVS_SHIFT))
#define WDRU_RESIVS_0                  (0x0UL<<WDRU_RESIVS_SHIFT)
#define WDRU_RESIVS_1                  (0x1UL<<WDRU_RESIVS_SHIFT)
#define WDRU_RESIVS                    (0x1UL<<WDRU_RESIVS_SHIFT)
#define WDRU_RES3GM_SHIFT              5
#define WDRU_RES3GM_FIELD              (0xFFFFFFFF - (0x1UL<<WDRU_RES3GM_SHIFT))
#define WDRU_RES3GM_0                  (0x0UL<<WDRU_RES3GM_SHIFT)
#define WDRU_RES3GM_1                  (0x1UL<<WDRU_RES3GM_SHIFT)
#define WDRU_RES3GM                    (0x1UL<<WDRU_RES3GM_SHIFT)
#define WDRU_RES3GMC_SHIFT             4
#define WDRU_RES3GMC_FIELD             (0xFFFFFFFF - (0x1UL<<WDRU_RES3GMC_SHIFT))
#define WDRU_RES3GMC_0                 (0x0UL<<WDRU_RES3GMC_SHIFT)
#define WDRU_RES3GMC_1                 (0x1UL<<WDRU_RES3GMC_SHIFT)
#define WDRU_RES3GMC                   (0x1UL<<WDRU_RES3GMC_SHIFT)
#define WDRU_RESDSP2_SHIFT             3
#define WDRU_RESDSP2_FIELD             (0xFFFFFFFF - (0x1UL<<WDRU_RESDSP2_SHIFT))
#define WDRU_RESDSP2_0                 (0x0UL<<WDRU_RESDSP2_SHIFT)
#define WDRU_RESDSP2_1                 (0x1UL<<WDRU_RESDSP2_SHIFT)
#define WDRU_RESDSP2                   (0x1UL<<WDRU_RESDSP2_SHIFT)
#define WDRU_RESDSP1_SHIFT             2
#define WDRU_RESDSP1_FIELD             (0xFFFFFFFF - (0x1UL<<WDRU_RESDSP1_SHIFT))
#define WDRU_RESDSP1_0                 (0x0UL<<WDRU_RESDSP1_SHIFT)
#define WDRU_RESDSP1_1                 (0x1UL<<WDRU_RESDSP1_SHIFT)
#define WDRU_RESDSP1                   (0x1UL<<WDRU_RESDSP1_SHIFT)
#define WDRU_WDTSTAT_SHIFT             1
#define WDRU_WDTSTAT_FIELD             (0xFFFFFFFF - (0x1UL<<WDRU_WDTSTAT_SHIFT))
#define WDRU_WDTSTAT_0                 (0x0UL<<WDRU_WDTSTAT_SHIFT)
#define WDRU_WDTSTAT_1                 (0x1UL<<WDRU_WDTSTAT_SHIFT)
#define WDRU_WDTSTAT                   (0x1UL<<WDRU_WDTSTAT_SHIFT)
#define WDRU_RESEXT_SHIFT              0
#define WDRU_RESEXT_FIELD              (0xFFFFFFFF - (0x1UL<<WDRU_RESEXT_SHIFT))
#define WDRU_RESEXT_0                  (0x0UL<<WDRU_RESEXT_SHIFT)
#define WDRU_RESEXT_1                  (0x1UL<<WDRU_RESEXT_SHIFT)
#define WDRU_RESEXT                    (0x1UL<<WDRU_RESEXT_SHIFT)

/*****************************************************************************/
/* Register description for TIM */

/* Reset value of register WDRU_TIM */
#define WDRU_TIM_VALUE                 0x0

/* Bits definition for register WDRU_TIM */
#define WDRU_WDTEXP_SHIFT              15
#define WDRU_WDTEXP_FIELD              (0xFFFFFFFF - (0x1UL<<WDRU_WDTEXP_SHIFT))
#define WDRU_WDTEXP_0                  (0x0UL<<WDRU_WDTEXP_SHIFT)
#define WDRU_WDTEXP_1                  (0x1UL<<WDRU_WDTEXP_SHIFT)
#define WDRU_WDTEXP                    (0x1UL<<WDRU_WDTEXP_SHIFT)
#define WDRU_WDTHALF_SHIFT             14
#define WDRU_WDTHALF_FIELD             (0xFFFFFFFF - (0x1UL<<WDRU_WDTHALF_SHIFT))
#define WDRU_WDTHALF_0                 (0x0UL<<WDRU_WDTHALF_SHIFT)
#define WDRU_WDTHALF_1                 (0x1UL<<WDRU_WDTHALF_SHIFT)
#define WDRU_WDTHALF                   (0x1UL<<WDRU_WDTHALF_SHIFT)
#define WDRU_WDTIM_SHIFT               0
#define WDRU_WDTIM_FIELD               (0xFFFFFFFF - (0x3FFFUL<<WDRU_WDTIM_SHIFT))
#define WDRU_WDTIM_0                   (0x0UL<<WDRU_WDTIM_SHIFT)

/*****************************************************************************/
/* Register description for TIMSHADOW */

/* Reset value of register WDRU_TIMSHADOW */
#define WDRU_TIMSHADOW_VALUE           0x0

/* Bits definition for register WDRU_TIMSHADOW */
#define WDRU_WDTIMSHADOW_SHIFT         0
#define WDRU_WDTIMSHADOW_FIELD         (0xFFFFFFFF - (0x3FFFUL<<WDRU_WDTIMSHADOW_SHIFT))
#define WDRU_WDTIMSHADOW_0             (0x0UL<<WDRU_WDTIMSHADOW_SHIFT)


/***************************************************************************
 * Interrupt numbers
 ***************************************************************************/

#define IRQ_GHOST                       0
#define IRQ_EXTINT1                     1
#define IRQ_EXTINT2                     2
#define IRQ_EXTINT3                     3
#define IRQ_RFRD                        4
#define IRQ_MTU                         5
#define IRQ_IIS                         6
#define IRQ_USB                         7
#define IRQ_I2C2                        8
#define IRQ_TVO                         9
#define IRQ_3G_WUP                      10
#define IRQ_3G_CALINT                   11
#define IRQ_3G_FRAME_IT                 12
#define IRQ_GPADCINT                    13
#define IRQ_ARM9_COMMTX                 14
#define IRQ_ARM9_COMMRX                 15
#define IRQ_KBS                         16
#define IRQ_SCTU2                       17
#define IRQ_SCTU1                       18
#define IRQ_PIO1                        19
#define IRQ_PIO2                        20
#define IRQ_FINT0                       21
#define IRQ_FINT1                       22
#define IRQ_UART2                       23
#define IRQ_UART1                       24
#define IRQ_SPI2                        25
#define IRQ_SPI1                        26
#define IRQ_FCI                         27
#define IRQ_I2C1                        28
#define IRQ_DMAU                        29
#define IRQ_USIM                        30
#define IRQ_HSDPA                       31    /* reserved */
#define IRQ_MSI                         32
#define IRQ_JDI                         33
#define IRQ_JDU                         34
#define IRQ_NFI                         35
#define IRQ_IPP                         36
#define IRQ_VDC                         37
#define IRQ_VEC                         38
#define IRQ_VDE                         39
#define IRQ_CAM                         40
#define IRQ_ETB_ACQ                     41
#define IRQ_ETB_FULL                    42
#define IRQ_RESERVED43                  43
#define IRQ_RESERVED44                  44
#define IRQ_RESERVED45                  45    /* reserved */
#define IRQ_RESERVED46                  46
#define IRQ_RESERVED47                  47
#define IRQ_PDCU                        48
#define IRQ_MC2SC0                      49
#define IRQ_MC2SC1                      50
#define IRQ_MC2SC2                      51
#define IRQ_MC2SC3                      52
#define IRQ_MC2SC4                      53
#define IRQ_MC2SC5                      54
#define IRQ_MC2SC6                      55
#define IRQ_MC2SC7                      56

/* Specific addons for Linux */

/* interrupt x [1..64] request configuration */
#define INTC_REQUESTx(x)  IOA(INTC_BASE_ADDR + INTC_REQUEST1_OFFSET + (x-1) * 4)

/* EXTINTx [0..23] configuration register */
#define EXTINT_CFGx(x)    IOA(EXTINT_BASE_ADDR + (x) * 4)

/* Keypad dataX register */
#define KBS_DATAx(x)      IOA(KBS_BASE_ADDR + KBS_DATA0_OFFSET + (x) * 4)

#endif /* __REGS_PNX67XX_H__ */
